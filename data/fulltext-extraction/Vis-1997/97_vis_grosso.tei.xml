<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Multilevel Finite Element Method for Adaptive Mesh Optimization and Visualization of Volume Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roberto</forename><surname>Grosso</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Graphics Group</orgName>
								<orgName type="institution">Universität Erlangen-Nürnberg</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christoph</forename><surname>Lürig</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Graphics Group</orgName>
								<orgName type="institution">Universität Erlangen-Nürnberg</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Graphics Group</orgName>
								<orgName type="institution">Universität Erlangen-Nürnberg</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Multilevel Finite Element Method for Adaptive Mesh Optimization and Visualization of Volume Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Multilevel representations and mesh reduction techniques have been used for accelerating the processing and the rendering of large datasets representing scalar or vector valued functions defined on complex 2 or 3 dimensional meshes. We present a method based on finite element approximations which combines these two approaches in a new and unique way that is conceptually simple and theoretically sound. The main idea is to consider mesh reduction as an approximation problem in appropriate finite element spaces. Starting with a very coarse triangulation of the functional domain a hierarchy of highly non-uniform tetrahedral (or triangular in 2D) meshes is generated adaptively by local refinement. This process is driven by controlling the local error of the piecewise linear finite element approximation of the function on each mesh element. A reliable and efficient computation of the global approximation error combined with a multilevel preconditioned conjugate gradient solver are the key components of the implementation. In order to analyze the properties and advantages of the adaptively generated tetrahedral meshes we implemented two volume visualization algorithms: an iso-surface extractor and a ray-caster. Both algorithms, while conceptually simple, show significant speedups over conventional methods delivering comparable rendering quality from adaptively compressed datasets.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Many applications in computer graphics and visualization deal with increasingly large scalar or vector valued functions defined on complex two or three dimensional meshes. Typical examples range from two dimensional data such as satellite images or laser scans to three dimensional scalar fields on regular grids like medical datasets or even time dependent flow fields on unstructured grids of a complex CFD topology. The generation of geometric primitives by visualization mappings like height fields, iso-surfaces or streamlines and the rendering for such complex meshes is very compute intensive and requires large storage capacities. As the information contained in the data is often redundant, a common strategy for hand-Lehrstuhl für Graphische Datenverarbeitung (IMMD9), Universität Erlangen-Nürnberg, Am Weichselgarten 9, 91058 Erlangen, Germany, Email: grosso@informatik.uni-erlangen.de ling such problems is compression with information loss as small as possible and a multiresolution representation of the dataset for a flexible level-of-detail control.</p><p>In this paper we present a method based on adaptive multilevel finite elements which generates a sequence of nested approximating spaces for a given function. The main idea is to interpret mesh reduction and optimization as an approximation problem in finite element spaces with adaptive mesh refinement and error control. The input data is considered to be a discretized representation of the smooth function to be approximated. In contrast to the techniques based on wavelets and multiresolution analysis <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b9">10]</ref> our algorithm starts at the coarsest level and proceeds to the finer ones (as in <ref type="bibr" target="#b5">[6]</ref>). This corresponds in a natural way to the sequence of steps when performing explorative visualization or progressive data transmission and display. We interpret this process as a data driven mesh generation, since we iteratively generate a hierarchy of tetrahedral (or triangular in 2D) meshes by adaptive refinement based on error analysis. After each iteration step of our algorithm, a complete hierarchy of nested spaces is available, with the best approximation of the underlying function known at the finest level of the hierarchy. Coarser representations of the function are given by a hierarchical basis <ref type="bibr" target="#b32">[32]</ref> decomposition at the lower level of the hierarchy. The error measurement and the approximation itself are based on the standard L2 norm. More general norms, such as the Sobolev norm which allows the integration of a priori knowledge of the smoothness of the function to be approximated can also be implemented, but this is a topic of future work.</p><p>In addition the many advantages of a multiresolution representation of the data, such as level-of-detail control, compression, etc., which are already well analyzed in the computer graphics literature <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b13">14]</ref>, the approach proposed here has the following remarkable features:</p><p>Adaptivity: The resulting algorithms for 2D and 3D data are very simple and efficient due to the high compression potential of adaptively generated meshes.</p><p>Error Control: The global accuracy of the approximation is well defined in the L2 norm and can be controlled by the user.</p><p>Additionally, control over the local contributions to the error is also given, which allows for local mesh refinement.</p><p>Topology Control: Because the refinement operations are well defined, the meshes obtained exhibit very nice properties, i.e. no thin triangles or tetrahedra, and no vertices with many edges are generated.</p><p>Our approach works on irregular grids. Since the mesh is generated during the approximation, no assumptions about the mesh topology of the input data have to be made. Furthermore, the algorithm is formulated independently of the problem dimension and was implemented for 2D and 3D data. The main steps of the algorithm can be summarized as follows: Choose an intentionally coarse triangulation of the domain (e.g. a cube divided into 6 tetrahedra). Compute the best approximation by a direct solver to start the iteration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Australia</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Initial Mesh After 5 Iterations</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>After 15 Iterations After 20 Iterations After 25 Iterations</head><p>Successively refine the mesh elements with the estimated local approximation error above a given threshold. Avoid hanging nodes by adjusting the neighborhood of the refined cells.</p><p>Compute an iterative solution of the improved approximation.</p><p>Stop, if the global error is small enough.</p><p>Since one of the classical applications of mesh optimization is terrain visualization, we demonstrate the hierarchical approach by showing five characteristic meshes of a 2D dataset representing the topography of Australia in <ref type="figure" target="#fig_0">Fig. 1</ref>. In order to investigate, how the mesh hierarchy can be exploited for 3D scalar fields, we have developed an iso-surface extraction and a volume ray-casting algorithm. The drawbacks of standard iso-surface methods for indirect volume visualization are the time spent on the extraction of the polygonal description eventually visiting each cell of a large dataset and the enormous amount of generated triangles, which makes interactive handling difficult even on high-end graphic workstations. A more general approach is based on mesh hierarchies, which are generated adaptively by local refinement operations. The idea is to work on a compact and simplified data representation rather than on the simplification of the resulting geometric primitives. With the help of an implicit adaptive integration technique we show how to use the mesh hierarchy for direct volume rendering.</p><p>The following sections describe the related work, the theoretical background of the finite element approximation, some of the implementation details of the algorithm and elaborate on the iso-surface and volume ray-casting applications. We conclude with the analysis of the experimental results and with some ideas for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>In this section we discuss related approaches for mesh optimization and multiresolution representations and analyze some important aspects and algorithms for the visualization of volume data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Aspects of Mesh Reduction</head><p>A widely used multiresolution analysis technique is the wavelet decomposition The use of multiresolution analysis on nested approximation spaces has successfully been extended to meshes of arbitrary topology by Lounsbery et al. <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b7">8]</ref>. Besides many advantages such as compression, level-of-detail control and the generation of the multiresolution representation some aspects remain open. One problem is, that the wavelet refinement cannot be performed adaptively, resulting in a re-meshing as a post-processing step, after the wavelet decomposition has been performed. Remeshing is necessary to avoid hanging nodes, when adding wavelet coefficients in the reconstruction step for local refinement. The orthogonal wavelet projection guarantees a best least-squares approximation with respect to the L2 norm. Because of the successive adding of orthogonal subspaces, an error estimation of the overall accuracy of the approximation can be given <ref type="bibr" target="#b8">[9]</ref>.</p><p>The methods described above approach the approximation problem from a functional point of view. In contrast, the approaches of Schroeder et al. <ref type="bibr" target="#b21">[22]</ref>, Klein et al. <ref type="bibr" target="#b15">[16]</ref>, Turk <ref type="bibr" target="#b26">[27]</ref> and Hoppe <ref type="bibr" target="#b13">[14]</ref> for 2D-meshes and Cignoni et al. <ref type="bibr" target="#b5">[6]</ref>, Guo <ref type="bibr" target="#b11">[12]</ref> and Lürig et al. <ref type="bibr" target="#b19">[20]</ref> for 3D-meshes can be considered geometric. These approaches analyze every single node with some local criteria in order to decide whether it can be eliminated or not followed by a re-triangulation. A widely used geometric error criterion is the Hausdorff or Frechet distance, which measures the distance between manifolds. This approach also allows the construction of a hierarchy of approximations depending on the distance, but there is no simple recursion relation between objects in the hierarchy, which is one of the strong properties of nested multiresolution spaces. An adaptive polygonalization technique for implicitly defined surfaces was proposed by Hall et al. <ref type="bibr" target="#b12">[13]</ref>. Their main concern is to obtain polygonal representations of algebraic surfaces, which are appropriate for hardware rendering. Their approach is based on an adaptive tetrahedral mesh refinement algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Aspects of Iso-surface Generation and Volume Rendering</head><p>A wide variety of algorithms have been developed for the visualization of scalar volume data. For the main classes of surface fitting <ref type="bibr" target="#b17">[18]</ref> and direct volume rendering <ref type="bibr" target="#b14">[15]</ref> many acceleration techniques were suggested to deal with the huge amount of 3D data. One approach to accelerate the extraction of iso-surfaces is to preselect the cells that may contribute triangles to the iso-surface. The octree spatial subdivision presented by Wilhelm and Van Gelder <ref type="bibr" target="#b29">[29]</ref> annotates each octree node with the span. The sweeping simplices algorithm published by Shen and Johnson <ref type="bibr" target="#b24">[25]</ref> uses a binary tree solely based on the relations of the spans. A more sophisticated algorithm of this approach was presented as the ISSUE algorithm by Shen and Johnson <ref type="bibr" target="#b23">[24]</ref>. These algorithms generate the same triangles as the standard marching cubes does, but they require extra memory to store the interval information.</p><p>Another iso-surface optimization is the reduction of the amount of triangles generated for rendering. This can be done in a postprocessing step as in the Schroeder algorithm <ref type="bibr" target="#b21">[22]</ref> or interleaved with the marching cubes algorithm as in the approach presented in Shekkar et al. <ref type="bibr" target="#b22">[23]</ref>. The reduction decisions are always restricted to a fixed iso-surface, the extraction of which is not optimized in this approach. First steps towards iso-surface generation on reduced tetrahedral grids were made by Cignoni et al. <ref type="bibr" target="#b5">[6]</ref>.</p><p>Traditional ray-casting has been accelerated by adapting the integration step size to the variance in the data <ref type="bibr" target="#b6">[7]</ref> and by efficiently stepping through the volume <ref type="bibr" target="#b31">[31]</ref>. Other approaches again use hierarchical <ref type="bibr" target="#b16">[17]</ref> or compressed <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b10">11]</ref> representations of the volume.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">THE FINITE ELEMENT APPROACH</head><p>Finite element analysis is a numerical method for solving partial differential equations which is widely used in science and engineering. In this section we present a new method which extends the basic underlying ideas with respect to hierarchical approximation, local mesh refinement and error estimates for solving general approximation problems in Hilbert spaces.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Approximation Problem</head><p>In order to measure the quality of an approximation of a function defined over a domain we assume that the function to be approximated is an element of a linear function space equipped with a norm, which is induced by an inner product. The approximation problem in a Hilbert space E with the inner product ; E can be formulated as follows. Suppose S is a linear subspace of E. An element u 2 S is the best approximation to an element f 2 E , if the orthogonality condition</p><formula xml:id="formula_0">f , u; vE = 0for all v 2 S (1)</formula><p>holds. The problem to find the best approximation can of course be reformulated into the well known form of a least squares approximation, where the best approximation u 2 S is given by jjf , ujjE = inf v2S jjf , vjjE :</p><p>More specifically, we work with the Hilbert space L2 consisting of all square integrable functions over . The inner product and the induced norm are given by</p><formula xml:id="formula_1">f;gL 2 = Z f g d xand jjujjL 2 = u; u 1=2 L 2</formula><p>We discretize the problem following the Ritz-Galerkin approach. The domain of definition is assumed to be a polygon for 2D meshes or a polyhedron for 3D meshes. We now consider S L2 to be a N-dimensional finite element subspace consisting of all the piecewise linear functions with respect to a triangulation T of . A basis f ig N i=1 of S consists of the hat functions which are associated with each vertex. Their support is restricted to the elements of the triangulation containing this vertex. Thus, equation <ref type="formula">1</ref>is reduced to the system of linear equations</p><formula xml:id="formula_2">AU = F<label>(2)</label></formula><p>where Aij = j ; i L 2 ; F i = f; i L 2 and u = X Ui i :</p><p>The evaluation of the inner products and the assembling of the corresponding matrices and vectors are carried out using standard finite element techniques. The function f is usually given in discrete form over a grid, e.g. a MRI data set is given on a uniform grid.</p><p>For the evaluation of the inner products f; i we interpolate f bilinear or trilinear on structured grids and linear on triangular or tetrahedral grids.</p><p>Up to now we have just reformulated the problem of the best approximation for a finite element space equipped with the L2 inner product into the solution of a linear system. The method we proposed actually generates a hierarchy of nested approximation spaces by adaptive mesh refinement. It consists of the following three steps</p><p>Mesh Refinement: We need a mesh refinement algorithm which generates a hierarchy of triangulations of the domain by local refinement operations. The algorithms used will be described in Section 3.2.</p><p>Error Measurement: The key ingredient of an adaptive approximation method is an efficient and robust measurement of the approximation error. This method should provides a bound for the overall accuracy of the approximation and give information about the distribution of the error among the individual mesh elements, thus forming the basis of the adaptive local mesh refinement. The error measurement step will be described in Section 3.3.</p><p>Multilevel Preconditioning: An efficient iterative method for solving the potentially large linear system (2) will be addressed at the end of Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Local Mesh Refinement</head><p>A partition T of a polygonal or polyhedral domain into triangles or tetrahedra is called a triangulation. The mesh refinement process we use is considered a standard method in the adaptive finite element literature <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5]</ref>. We start with a coarse triangulation T0, and generate a sequence T0; ; T j of increasingly fine triangulations by successive local mesh refinement. Each triangulation in the sequence is required to be conforming, i.e. the intersection of two elements consists of a common face or a common edge or a common vertex or it is empty. This condition prevents hanging nodes, which are difficult to treat in finite element computations and problematic for rendering purposes. For the same reasons the triangulation sequence has to be stable with respect to some measure of degeneracy. For example, one requires that all interior angles are bounded away from zero which is essential for the stability of the numerical computations. Finally, in order to build a hierarchy of nested spaces the triangulation sequence has to satisfy the nestedness condition, which means that an element in a triangulation is obtained by subdividing an element in a coarser triangulation of the sequence. We use an algorithm which combines regular (red) and <ref type="figure">Figure 2</ref>: Regular or red refinement of a tetrahedron irregular (green) mesh refinement as introduced for 2D meshes by Bank et al. <ref type="bibr" target="#b1">[2]</ref> and its extension to three dimensional tetrahedral meshes of Bey <ref type="bibr" target="#b3">[4]</ref>. These refinement algorithms are carried out in three steps. First, a refinement rule for a single element has to be defined, such that successive refinements produce stable and consistent triangulations. Such a refinement rule is called red or regular.</p><p>Second, a set of green or irregular refinement rules is defined for the elements which share a common edge with regular refined elements. These refinement rules are local. Green refined tetrahedra are just inserted to satisfy border conditions and to avoid hanging nodes. In order to avoid stability problems green refined tetrahedra must not be refined again. If a subdivision is required, the originally green refined tetrahedron must be re-refined with the red rule. Finally, these local rules are combined and rearranged into a global refinement algorithm which guarantees for stability and conformity.</p><p>For 2D meshes the red (regular) refinement rule divides a triangle into four congruent ones by connecting the midpoints of its edges. The green (irregular) refinement consists of simple bisections connecting one edge midpoint with the opposite vertex. The regular refinement rule for tetrahedra first cuts off four sub-tetrahedra at the vertices as shown in <ref type="figure">Fig. 2</ref>. The subdivision of the remaining octahedron is not unique and depends on the choice of one of the three possible diagonals. The strategy proposed by Bey <ref type="bibr" target="#b3">[4]</ref> is based on affine transformations to a reference tetrahedron and produces stable regular refinements. For tetrahedra there are 2 6 , 2 = 62 possible green refinement patterns, which can be classified into 9 different types using symmetry considerations. In order to make the algorithm practicable, green refinement is restricted to the four different types shown in <ref type="figure">Fig. 3</ref> performing a red refinement on all remaining patterns. <ref type="figure">Figure 3</ref>: Irregular or green refinement of a tetrahedron</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I II-A II-B III</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Error Analysis</head><p>In order to obtain information about the accuracy of the approximation, we are interested in an efficient method to measure the error jjf , ujj. Because we have a priori knowledge of the function to be approximated, we evaluate the error by a direct integration. In order to obtain information on the local contributions to the global error we proceed as follows. Let T be a triangulation of the domain of definition and an element in T . The error can be written in the form</p><formula xml:id="formula_3">jjf , ujjL 2 = Z f , u 2 d (3) = X 2T E</formula><p>where the E are given by</p><formula xml:id="formula_4">E = Z f , u 2 d :<label>(4)</label></formula><p>For the computation of the E coefficients we use a four points third order integration formula for triangles and a five points third order integration formula for tetrahedra <ref type="bibr" target="#b25">[26]</ref>. The function values at the integration points are obtained by interpolation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ALGORITHM</head><p>If we think of mesh reduction and optimization as an abstract approximation problem in Hilbert spaces we can use powerful methods to adaptively generate a sequence of approximations based on local mesh refinement and error computation. In this section we present an iterative algorithm to generate sequences of nested approximating spaces. After each iteration a new sequence of nested spaces which are obtained by local mesh refinement is derived from the previous hierarchy of spaces. The first step is to construct the initial, intentionally coarse triangulation of the domain. Depending on the geometry of the domain this may be a very complex task. Based on the initial triangulation the first approximation is computed by using a direct solver for the linear system (2). Then, we enter a loop where the mesh is iteratively refined depending on the global accuracy of the approximation. At each step of this process, which we call data driven mesh generation, mesh elements</p><p>are marked for refinement, if their local error coefficients E in (4) exceed a certain threshold. After the mesh refinement step, the new approximation is computed by an iterative multilevel solver. The algorithm is summarized by the following pseudo-code segment: The result of an iteration step k is a sequence of triangulations T0; ; T j k satisfying the nestedness condition and being used to construct the hierarchy of nested piecewise linear finite element spaces: S0 S1 S j k <ref type="bibr" target="#b4">(5)</ref> The best approximation uS for the level Sj k is efficiently computed by a multilevel linear solver. At each iteration step a few of the upper level meshes might be modified due to the substitution of irregular refinements by regular ones. Once the solution is known at the finest level of resolution, an approximation to f at the other levels of the hierarchy can be computed by a hierarchical basis decomposition as shown by Yserentant <ref type="bibr" target="#b32">[32]</ref>.</p><p>During the successive refinement steps the number of vertices in the meshes will increase. For a large number of vertices, especially for 3D applications, the linear system (2) will become very large, with the matrix A being sparse but non-diagonal. Standard iterative methods such as Gauss-Seidel or even conjugate gradient iteration, are not appropriate. We solve this linear system (2) with a conjugate gradient method combined with a multilevel BPX preconditioner. The very efficient method makes use of the hierarchy (5) for the solution of the linear system and is successfully applied in many modern finite element computations <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b4">5]</ref>. All our implementation work for the multilevel iterative solver is based on the C++ object oriented finite element package KASKADE from the Konrad-Zuse-Zentrum in Berlin <ref type="bibr" target="#b2">[3]</ref>. We illustrate the algorithm by a closer investigation of the mesh optimization process which generated the hierarchy shown in <ref type="figure" target="#fig_0">Fig.   1</ref>. The initial triangulation T0 consists of just two triangles, the inner products are evaluated using bilinear interpolation of the input height field. In <ref type="table" target="#tab_1">Table 1</ref> we give the results corresponding to the best approximation obtained after a given number of iterations of the algorithm. We used a threshold of 0:3 and the run times were measured on a SGI Onyx with a 194 MHZ MIPS R10000 processor. Important are the number of nodes and triangles, the time required for the solution of the linear system and the ratio between the new number of triangles and the previous one for the finest mesh, which gives an idea of the number of new triangles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ISO-SURFACE EXTRACTION</head><p>While we have seen in section 2 that there are many other approaches to optimize 2D meshes, one important aspect of our method is that it easily extends to 3D datasets. In order to demonstrate this we implemented and analyzed an iso-surface generation algorithm which directly operates on the optimized meshes described above. This algorithm inherits all the advantages of the competing approaches by accelerating the iso-surface extraction compared to the marching cubes algorithm as well as by reducing the number of generated triangles. A standard polygon reduction algorithm has to run a marching cubes type algorithm first, and in a second step it has to spend extra time for the reduction process. In our approach the reduction is made on the volume itself, which saves time and memory during the iso-surface generation. On the other hand, any iso-surface extraction accelerator will need extra memory for its internal data structures and it does not reduce the amount of generated triangles. For huge data sets this may become a problem due to the large storage requirements.</p><p>In our case, the generation of the iso-surface has to be done by a marching tetrahedra algorithm. There are three main cases of tetrahedral triangle generation. Interpolation in each tetrahedron is done using a linear function of the form fx; y; z = a + bx + cy + dz <ref type="bibr" target="#b5">(6)</ref> where the coefficients are precomputed from the vertex values by solving a linear system. In order to compute the shading normals of the triangle vertices, the computation of the gradient at the tetrahedral vertices is required. First, we determine the gradient in every tetrahedron, which is constant due to the affine interpolating function (6) within the tetrahedron. The gradient at the vertices of the iso-surface is then computed by the volume-weighted average of the gradients of the adjacent tetrahedra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">VOLUME RAY-CASTING</head><p>In order to take advantage of the adaptively reduced grid for volume ray-casting, a special algorithm has been developed. The basic idea is to implicitly adapt the integration step size to the size of the tetrahedral elements of the optimized mesh. Therefore, the ray integration is performed from cell face to cell face using the trapezoidal rule. For the two dimensional case this is explained in <ref type="figure">Fig. 4</ref>. One can clearly see, that sample points become denser in regions of smaller tetrahedra, which corresponds to regions of high variance in the data. This sampling technique was also used by Max et al. <ref type="bibr" target="#b20">[21]</ref>. Danskin <ref type="bibr" target="#b6">[7]</ref> introduced the idea of importance sampling based on octrees. The variance of an octree cell is used to determine the next step size. In our case the step size information is extracted from the data structure itself Sample Point <ref type="figure">Figure 4</ref>: Sampling points for ray integration in a 2D mesh Since the connectivity of the tetrahedral mesh is generated by the decomposition algorithm, volume traversal can be done very efficiently. Sorting as in scan-line based algorithms <ref type="bibr" target="#b30">[30]</ref> is not necessary. The first tetrahedron that is traversed by the ray is computed using an iterative search procedure. Exploiting coherence by means of a bidirectional scanning algorithm in image space, the entrance point is always close to the last one, leaving the search process negligible. For interpolation we use the same linear scheme as in the iso-surface case. Additionally, other acceleration techniques can be integrated. As an example we implemented early ray-termination.</p><p>Instabilities during volume-traversal may occur if the ray is exiting a tetrahedron nearby an edge. In this case the wrong neighbor tetrahedron may be chosen. To overcome this problem an extra adaption procedure has been implemented. First, we check if the stability problem is relevant. In this case, the exit point is moved a certain amount towards the geometric center of the next tetrahedron. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS</head><p>The quality of the generated meshes is demonstrated in <ref type="figure" target="#fig_0">Fig. 1</ref> where the effect of the local refinement operations can clearly be seen. The quality of the error analysis can be appreciated from the fact that in the outer parts triangles are not refined between the 15th and the 25th iteration. Furthermore, triangles are very nice in the sense that no thin triangles or vertices with large number of edges are present in the meshes.</p><p>Since it is difficult to depict details from large 3D meshes we demonstrate the quality of the mesh optimization by using a 256 2</p><p>slice of a MRI data set shown in <ref type="figure" target="#fig_1">Fig. 5(a)</ref>. In order to check whether the relevant features are still contained in the compressed data, we compute iso-lines. Comparing the structures found in the original image (see <ref type="figure" target="#fig_1">Fig. 5</ref>(b)) with those computed from the optimized dataset (threshold = 0 : 2 ) containing only 19% of the vertices (see <ref type="figure" target="#fig_1">Fig. 5(c)</ref>), we find only very small details missing. In order to show the strengths of the presented iso-surface algorithm several experiments have been carried out with a MRI headscan with 128 3 voxels of 16 bit precision, and -as a large data set -a CAT abdomen scan with 512 3 181 voxels of 8 bit precision.</p><p>The generated surfaces show a sufficiently complex structure (see Figs. 7(a) and 7(b)) to judge their quality with respect to surfaces resulting from a standard marching cubes algorithm <ref type="figure">(Fig. 7(c)</ref>). In Figs. 7(d), 7(e) and 7(f) an iso-surface extracted from reduced data sets corresponding to the abdomen is shown. Extraction time, generated triangles and image quality will be of interest.  <ref type="table">Table 2</ref>: Iso-surface extraction for the MRI-heads and CATabdomens in <ref type="figure">Fig.7</ref>, threshold = 0 : 2</p><p>Considering the triangle generation speed with respect to the number of tetrahedra shown in <ref type="table">Table 2</ref>, we see that the extraction time is nearly constant. An optimal algorithm would just inspect those tetrahedra, that contribute to the iso-surface. Such an algo-rithm would result in a constant extraction speed for triangles independently of the number of tetrahedra used. Our algorithm does not exhibit constant behavior, but the slope is quite low which means, that the triangulation of the volume implicitly results in an effective processing of the generated tetrahedra.</p><p>As we can see in <ref type="table">Table 2</ref> the time needed to generate the triangles is decreasing significantly compared to the standard marching cubes algorithm. Looking especially at Head 1 we see, that the number of triangles is about one half and the processing time is about 6 times faster. In the case of the Abdomen 3 ( <ref type="figure">Fig. 7(f)</ref>), the number of triangles is reduced to 25% compared with the marching cubes algorithm. Iso-surface extraction has also be done in combination with the sweeping simplices algorithm <ref type="bibr" target="#b24">[25]</ref>. However, a maximal extra acceleration of up to 10% in the best case has been achieved. This is because of the adaptive mesh refinement and a cell search technique are not orthogonal acceleration methods.</p><p>The generation of the grid hierarchy, on which all the algorithms are based, is done in a preprocessing step. For example, the total computation time including mesh refinement, linear solver and error analysis was 166 sec for the Abdomen 1 (level 11) and 857 sec. for the <ref type="bibr">Abdomen 3 (level 14)</ref>.</p><p>In order to analyze the characteristics of the volume ray-caster several experiments have been performed. Our goal was to analyze the relation of computation time and image quality. For this purpose a chromosome data set consisting of 256 3 voxels has been used. All images are rendered at a resolution of 500 500 pixels. <ref type="figure">Fig.   7(i)</ref> shows the chromosome ray-traced on the original uniform grid using a standard algorithm with two samples per voxel. Figs. 7(g) and 7(h) show the same data set with the same transfer functions for different reduction stages. The number of vertices and tetrahedra left for each data set is given besides the rendering time in <ref type="table">Table 3</ref>  <ref type="table">Table 3</ref>: Volume ray-casting for the chromosome data set in <ref type="figure">Fig. 7</ref>,</p><formula xml:id="formula_5">threshold = 0 : 2</formula><p>The differences between the image obtained from the original data set <ref type="figure">(Fig. 7(i)</ref>) and the image obtained from the reduced data  with the most tetrahedra left <ref type="figure">(Fig. 7(h)</ref>) is marginal. The number of vertices has been reduced to 0:2. The ray-tracing time has been reduced down to 23. These numbers show the strength of the combination of the finite element analysis algorithm with the inherently adaptive ray-casting method. The analysis algorithm tends to finer tetrahedrization of regions with high gradient magnitude. This can be clearly seen at the edge of the chromosome in Figs. 7(g),7(h). This slope degenerates at the lower levels of resolution very quickly. On the other hand the orange kernel, which is the nucleus in the upper left corner of the chromosome, remains quite stable even in levels of lower resolution. In 7(g) the amount of vertices has been reduce down to 0:01 of the original data set, and the required computational time has been reduced down to 8:6 of the original data set. The main characteristics as the orientation of the chromosome and the position of the nucleus are still visible. At the first glance, the reduction of computation time seems to be quite low, compared with the reduction of cells. But traversing a simplicial mesh is much more complicated due to clipping operations and traversal instabilities. Additional acceleration techniques such as early ray termination have been implemented. The performance gain remains constant as these techniques are orthogonal to our approach.</p><p>In order to show the versatility of the method a further data set from an engineering application was visualized, which is defined on a non tensor product grid. It represents the solution of the Poisson equation on a cube with a cut corner and was produced with the finite element code KASKADE <ref type="bibr" target="#b2">[3]</ref>. <ref type="figure" target="#fig_3">Fig. 6(a)</ref> shows the iso-surface corresponding to the iso-value of 0.03 which was computed from an optimized mesh with only 8,076 vertices. The mesh of the same iso-surface computed from a refined grid containing 48,140 vertices is shown in <ref type="figure" target="#fig_3">Fig. 6(b)</ref>. The outside of the underlying 3D mesh can be seen in <ref type="figure" target="#fig_3">Fig. 6(c)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS</head><p>We have presented a new method which uses techniques and ideas from the finite element community to solve the problem of mesh optimization for arbitrary unstructured two and three dimensional grids. We have shown, that the algorithm produces adaptively refined grids which are well behaved and suitable for accelerating a broad class of visualization and rendering methods. For the example of iso-surface extraction we have given timing results which demonstrate that the underlying grids allow for a considerable speedup of existing algorithms while maintaining the desired accuracy.</p><p>A major advantage of this approach is that the mesh hierarchy is constructed from coarse to fine with the computational complexity of the approximation of the function on the coarse grids being nearly independent of the actual data size. Intermediate levels can be easily reconstructed from the initial mesh based on the well defined refinement rules and a few integers indicating the simplex-ids to be regularly subdivided. This will make the proposed method very attractive for progressive transmission and display across a network. In future work we will exploit this fact by adapting visualization and rendering algorithms to interactive exploration based on local switching between refinement levels according to a userrequested level-of-detail or a view dependent error threshold. Further on, we will extend this work to other 3D visualization algorithms which we envision to profit from the optimized meshes, e.g. particle tracing and vector field topology.</p><p>The approximation error used in the mesh reduction process can be defined in any linear Hilbert spaces. The function space L2 is not always well suited for approximating smooth functions. Functions rapidly oscillating with small amplitudes are in the L2 sense a good approximation to a given smooth function and reciprocally. However, in order to suppress such oscillating contributions, other norms which include differentiability information can be used. In particular, we are interested in the Sobolev space H 1 equipped with the inner product u; v H 1 = u; vL 2 + r u; rvL 2 :</p><p>Comparison and analysis (theoretical and experimental) of the results produced by the different norms will be the topic of research of future work.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The topography of Australia given by a 409 x 505 height field serves as a 2D example for the mesh optimization by adaptive multilevel finite elements. Dataset contributed by M. Hutchinson of the Australian National University, Canberra</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 5 :</head><label>5</label><figDesc>(a) MRI slice, 256 2 samples (b) Iso-lines in original data (c) Iso-lines in reduced data (19%) Information contents of the reduced 2D grid</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>(a) Heat-flux iso-surface (b) Heat-flux detailed iso-surface mesh (c) Heat-flux mesh after 5 refinements</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6 :</head><label>6</label><figDesc>Poisson equation on a cube with a cut corner</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc></figDesc><table><row><cell cols="4">Iter. vertices triangles time (s) ratio</cell></row><row><cell>5</cell><cell>63</cell><cell>104</cell><cell>0.01 0.68</cell></row><row><cell>15</cell><cell>1,207</cell><cell>2,353</cell><cell>0.12 0.87</cell></row><row><cell>20</cell><cell>5,368</cell><cell>10,651</cell><cell>0.94 0.87</cell></row><row><cell>25</cell><cell>22,275</cell><cell>44,450</cell><cell>4.98 0.82</cell></row></table><note>Processing results for the Australia height fields data set</note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>The CAT scan of the male abdomen is a courtesy of the Visualization Laboratory of the State University of New York at Stony Brook. The chromosome data set is a courtesy of the institute of anatomy, University of Giessen. We would like to thank Dr. Günther Greiner for many fruitful discussions</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Hierarchical Bases and the Finite Element Method. Acta Numerica</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Bank</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Refinement Algorithms and Data Structures for Regular Local Mesh Refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Bank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Weiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Computing</title>
		<editor>R. Stepleman</editor>
		<meeting><address><addrLine>Amsterdam</addrLine></address></meeting>
		<imprint>
			<publisher>IMACS/North Holland</publisher>
			<date type="published" when="1983" />
			<biblScope unit="page" from="3" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Beck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Erdmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roitzsch</forename><forename type="middle">R</forename><surname>User's Guide</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Berlin</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Konrad-Zuse-Zentrum für Informationstechnik</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Tetrahedral Mesh Refinement. Computing</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="355" to="378" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">H</forename><surname>Bramble</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Pitman Research Notes in Mathematical Sciences. Longman Sci. &amp; Techn</title>
		<imprint>
			<biblScope unit="volume">294</biblScope>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
	<note>Multigrid Methods. Number</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Multiresolution Modeling and Visualization of Volume Data based on Simplicial Complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings 1994 Symposium on Volume Visualization</title>
		<meeting>1994 Symposium on Volume Visualization</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fast Algorithms for Volume Ray Tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Danskin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Transactions 1992 workshop on Volume Visualization</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multiresolution Analysis of Arbitrary Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH &apos;95</title>
		<meeting>SIGGRAPH &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="173" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Fast Multiresolution for Surface Meshing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gatti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Stadt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;95</title>
		<meeting>IEEE Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995-10" />
			<biblScope unit="page" from="135" to="142" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A new Method to Approximate the Volume Rendering Equation Using Wavelet Bases and Piecewise Polynomials</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Lippert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Dreger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Koch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. &amp; Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="62" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Efficient data structures for volume rendering of wavelet-compressed data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Grosso</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Th</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ertl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Aschoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">WSCG &apos;96 -The Fourth International Conference in Central Europe on Computer Graphics and Visualization</title>
		<editor>N. M. Tahlmann and V. Skala</editor>
		<meeting><address><addrLine>Plzen, Czech Republic</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Multiscale Model for Structure-Based Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Guo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="291" to="301" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Adaptive Polygonalization of Implicit Defined Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="page" from="33" to="42" />
			<date type="published" when="1990-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Progressive Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH &apos;96</title>
		<meeting>SIGGRAPH &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Introduction to Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Mesh Reduction with Error Control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Liebich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Strasser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;96</title>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="311" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Hierarchical Splatting: A Progressive Refinement Algorithm for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="285" to="288" />
			<date type="published" when="1991-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Multiresolution Analysis for Surfaces of Arbitrary Topological Type</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Warren</surname></persName>
		</author>
		<idno>TR 93-10-05b</idno>
		<imprint>
			<date type="published" when="1994-01" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science and Engineering, University of Washington</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Adaptive Iso-Surface Generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Lürig</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Th</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">3D Image Analysis and Synthesis &apos;96</title>
		<editor>B. Girod, H. Niemann, and H.-P. Seidel</editor>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="183" to="190" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Area and Volume Coherence for Efficient Visualization of 3D Scalar functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Decimation of Triangle Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH &apos;92</title>
		<meeting>SIGGRAPH &apos;92</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Octree-Based Decimation of Marching Cubes Surface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Shekkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Fayyad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fredrick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;96</title>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="335" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Isosurfacing in Span Space with Utmost Efficiency (ISSUE)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;96</title>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="287" to="294" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Sweeping Simplices: A Fast Iso-surface Extraction Algorithm for Unstructured Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Johnson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceeding IEEE Visualization &apos;95</title>
		<meeting>eeding IEEE Visualization &apos;95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="143" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Approximate Calculation of Multiple Integrals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Stroud</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1971" />
			<publisher>Prentice Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Re-tiling Polygonal Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<monogr>
		<title level="m" type="main">A Multiresolution Framework for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Westermann</surname></persName>
		</author>
		<editor>A. Kaufman and W. Krüger</editor>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Octrees for Faster Iso-surface Generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="page" from="201" to="227" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Hierachical and Parallelizable Direct Volume Rendering for Irregular and Multiple Grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Tarantino</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Gibbs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization &apos;96</title>
		<meeting>IEEE Visualization &apos;96</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Accelerating Volume Animation by Space Leaping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization 93</title>
		<editor>G.M. Nielson and Bergeron D.</editor>
		<meeting><address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="62" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Hierarchical Bases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yserentant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICIAM 91</title>
		<editor>R. E. O&apos;Malley</editor>
		<meeting><address><addrLine>SIAM, Philadelphia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
