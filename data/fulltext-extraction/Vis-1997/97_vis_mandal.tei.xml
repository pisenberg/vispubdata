<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Dynamic Smooth Subdivision Surfaces for Data Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chhandomay</forename><surname>Mandal</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer &amp; Information Science and Engineering</orgName>
								<orgName type="institution">University of Florida Gainesville</orgName>
								<address>
									<postCode>32611</postCode>
									<region>FL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename><surname>Qin Baba</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer &amp; Information Science and Engineering</orgName>
								<orgName type="institution">University of Florida Gainesville</orgName>
								<address>
									<postCode>32611</postCode>
									<region>FL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Vemuri</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer &amp; Information Science and Engineering</orgName>
								<orgName type="institution">University of Florida Gainesville</orgName>
								<address>
									<postCode>32611</postCode>
									<region>FL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Dynamic Smooth Subdivision Surfaces for Data Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:36+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling-Physically based modeling; I.3.8 [Computer Graphics]: Miscellaneous Visualization</term>
					<term>Subdivision Surfaces</term>
					<term>Dynamics</term>
					<term>Finite Elements</term>
					<term>Interactive Techniques</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Recursive subdivision schemes have been extensively used in computer graphics and scientific visualization for modeling smooth surfaces of arbitrary topology. Recursive subdivision generates a visually pleasing smooth surface in the limit from an initial userspecified polygonal mesh through the repeated application of a fixed set of subdivision rules. In this paper, we present a new dynamic surface model based on the Catmull-Clark subdivision scheme, which is a very popular method to model complicated objects of arbitrary genus because of many of its nice properties. Our new dynamic surface model inherits the attractive properties of the Catmull-Clark subdivision scheme as well as that of the physicsbased modeling paradigm. This new model provides a direct and intuitive means of manipulating geometric shapes, a fast, robust, and hierarchical approach for recovering complex geometric shapes from range and volume data using very few degrees of freedom (control vertices). We provide an analytic formulation and introduce the physical quantities required to develop the dynamic subdivision surface model which can be interactively deformed by applying synthesized forces in real time. The governing dynamic differential equation is derived using Lagrangian mechanics and a finite element discretization. Our experiments demonstrate that this new dynamic model has a promising future in computer graphics, geometric shape design and scientific visualization.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Generating smooth surfaces of arbitrary topology is a grand challenge in geometric modeling, visualization, and computer graphics. The recursive subdivision scheme which generates a smooth surface as the limit of a sequence of recursively refined polyhedral surfaces based on a user-defined initial control mesh, is well suited for the purpose. At each step of the subdivision, a smoother polyhedral surface with more vertices and faces will be constructed from the previous one via a refinement process (also called "chopping corners"). In general, subdivision schemes can be categorized into two distinct classes namely, (1) approximating subdivision methods, and (2) interpolating subdivision methods.</p><p>Among the approximating schemes, the techniques of Doo and Sabin <ref type="bibr" target="#b5">[6]</ref> and Catmull and Clark <ref type="bibr" target="#b2">[3]</ref> generalize the idea of obtaining biquadratic and bicubic B-spline patches from rectangular control meshes. In <ref type="bibr" target="#b2">[3]</ref>, Catmull and Clark developed a method for recursively generating a smooth surface from a polyhedral mesh of arbitrary topology. The Catmull-Clark subdivision surface, defined by an arbitrary non-rectangular mesh, can be reduced to a set of standard B-spline patches except at a finite number of extraordinary points, where the in-degree of the vertex in the mesh is not equal to four. Doo and Sabin <ref type="bibr" target="#b5">[6]</ref> further analyzed the smoothness behavior of the limit surface near extraordinary points using Fourier transforms and an eigenvalue analysis of the subdivision matrix. Ball and Storry <ref type="bibr" target="#b0">[1]</ref> and Reif <ref type="bibr" target="#b13">[14]</ref> further extended the prior work on continuity properties of subdivision surfaces by deriving various necessary and sufficient conditions on smoothness for different subdivision schemes. In <ref type="bibr" target="#b9">[10]</ref>, Loop presented a similar subdivision scheme based on the generalization of quartic triangular B-splines for triangular meshes. Halstead et al. <ref type="bibr" target="#b10">[11]</ref> proposed an algorithm to construct a Catmull-Clark subdivision surface that interpolates the vertices of a mesh of arbitrary topology. The most well-known interpolation-based subdivision scheme is the "butterfly" algorithm proposed by Dyn et al. <ref type="bibr" target="#b4">[5]</ref>. Butterfly subdivision method makes use of a small number of neighboring vertices for subdivision. It requires simple data structures and is extremely easy to implement. However, it needs a topologically regular setting for the initial polygonal meshes in order to obtain a smooth limit surface. Recently, Zorin et al. <ref type="bibr" target="#b12">[13]</ref> further developed an improved interpolatory subdivision scheme that can retain the simplicity of the butterfly scheme and result in much smoother surfaces from initial polygonal meshes that are irregular.</p><p>Although recursive subdivision surfaces are extremely powerful to represent smooth geometric shapes of arbitrary topology, they constitute a purely geometric representation, and furthermore, conventional geometric modeling with subdivision surfaces may be infeasible for representing highly complicated objects. For example, modelers are faced with the tedium of indirect shape modification and refinement through time-consuming operations on a large number of (most often irregular) control vertices when using typical spline-based modeling schemes. In addition, it may not be enough to obtain the most "fair" surface that interpolates a set of (ordered or unorganized) data points. A certain number of local features such as bulges or inflections ("roughness") may be strongly desired while making geometric objects satisfy global smoothness requirements in scientific visualization and biomedical applications. In contrast, physics-based modeling provides a superior approach to shape modeling that can overcome most of the limitations associated with traditional geometric modeling approaches. Free-form deformable models are of particular interest in this context. The behavior of dynamic deformation is governed by physical laws. De-formable models will respond dynamically to applied forces in a very intuitive manner. The equilibrium state of the model is characterized by a minimum of the potential energy of the model subject to imposed constraints. The potential energy functionals can be formulated to satisfy local and global modeling criteria and impose geometric constraints relevant to shape design.</p><p>Free-form deformable models were first introduced to computer graphics and visualization in Terzopoulos et al. <ref type="bibr" target="#b7">[8]</ref>. Bloor and Wilson <ref type="bibr" target="#b1">[2]</ref>, Celniker and Welch <ref type="bibr" target="#b3">[4]</ref> and Welch and Witkin <ref type="bibr" target="#b16">[17]</ref> proposed deformable B-spline curves and surfaces which can be designed by imposing the shape criteria via the minimization of the energy functionals subject to hard or soft geometric constraints through Lagrange multipliers or penalty methods. Recently, Qin and Terzopoulos <ref type="bibr" target="#b15">[16]</ref> have developed dynamic NURBS (D-NURBS) which are very sophisticated models suitable for representing a wide variety of free-form as well as standard analytic shapes. The D-NURBS have the advantage of interactive direct manipulation of NURBS curves and surfaces, resulting in physically meaningful hence intuitively predictable motion and shape variation.</p><p>A severe limitation of the existing deformable models, including D-NURBS, is that they are defined on a parametric domain. Hence, it is almost impossible to model surfaces of arbitrary genus using these models. In this paper, we develop a dynamic generalization of recursive subdivision schemes based on Catmull-Clark subdivision surfaces. Our new dynamic model combines the benefits of subdivision surfaces for modeling arbitrary topology as well as the dynamic splines for direct interactive manipulation of shapes by applying synthesized forces. Note that, the derivation of our dynamic subdivision surface poses a significant technical challenge because of the fact that no closed-form parametrization of the limit surface exists near the extraordinary points. We present the details of our formulation in a later section. We conduct various experiments that demonstrates the fact that our new dynamic surface model is extremely useful in computer graphics and visualization. The model can recover shapes from large range and volume data sets using very few degrees of freedom for its representation. The initialized model deforms under the influence of synthesized forces to fit the data set by minimizing its energy according to the laws of physics. When the approximate shape is recovered, the model can be further subdivided to achieve a better approximation to the input data set using higher degrees of freedom.</p><p>The rest of the paper is organized as follows: Section 2 presents the detailed formulation of the dynamic Catmull-Clark subdivision surfaces. The implementation details are provided in Section 3. Experimental results are presented in Section 4. Finally, we conclude in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">FORMULATION</head><p>In this section we present a systematic formulation of our new dynamic model based on Catmull-Clark subdivisions. First, we briefly review the Catmull-Clark subdivision scheme. Then, we demonstrate how to assign a bicubic patch in the limit surface to a nonboundary face in a topologically rectangular setting. We further generalize this idea to assign the infinite number of bicubic patches in the limit surface to faces that are in the vicinity of an extraordinary point/vertex. Next, we formulate a closed form analytical representation of the limit smooth surface which can be viewed as a function of its (initial) polyhedral control vertices. Finally, we introduce physical quantities into our dynamic model in order to derive its motion equation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Catmull-Clark subdivision surfaces</head><p>Catmull-Clark subdivision scheme, like any other subdivision scheme, starts with a user-defined mesh of arbitrary topology, refines the initial mesh by adding new vertices, edges and faces with each step of subdivision which follows a fixed set of subdivision rules; in the limit, a sequence of recursively refined polyhedral meshes will converge to a smooth surface. The subdivision rules are as follows:</p><p>For each face, introduce a new face point which is the average of all the old vertices defining the face.</p><p>For each (non-boundary) edge, introduce a new edge point which is the average of the following four points: two old vertices defining the edge and two new face points of the faces adjacent to the edge.</p><p>For each (non-boundary) vertex, introduce a new face point obtained from the average F n + 2E n + n,3V n , where F is the average of the new face points of all faces adjacent to the old vertex point, E is the average of the midpoints of all edges incident on the old vertex and n is the number of the edges incident on the vertex. The most important property of Catmull-Clark subdivision surfaces is that the smooth surface can be generated from control meshes of arbitrary topology. Therefore, this subdivision scheme is extremely valuable for modeling various complicated geometric objects of arbitrary topology. Catmull-Clark subdivision surfaces include standard bicubic B-spline surfaces as their special case (i.e., the limit surface is a tensor-product B-spline surface for a rectangular control point mesh). In addition, the aforementioned subdivision rules generalize the recursive bicubic B-spline patch subdivision algorithm. For non-rectangular meshes, the limit surface converges to a bicubic B-spline surface except at a finite number of extraordinary points. Note that, after the first subdivision, all faces are quadrilaterals, hence all new vertices created subsequently will have four incident edges. The number of extraordinary points on the surfaces remains a constant which is determined by the refined meshes after one subdivision. The limit surface is curvature-continuous everywhere except at extraordinary vertices, where only tangent plane continuity is achieved. In spite of the popularity of Catmull-Clark subdivision surfaces for representing complex geometric shapes of arbitrary topology, these subdivision surfaces are not parametrizable and lack closed-form analytic formulations. These deficiencies preclude their immediate pointwise manipulation and hence may restrain the applicability of these schemes. We develop a new dynamic model based on Catmull-Clark subdivision surfaces which offer modelers a closed-form analytic formulation and allows users to manipulate the model directly and intuitively.</p><p>To develop the dynamic model which treats the limit smooth surface as a function of its control mesh in a hierarchical fashion, we need to update control vertex positions continually at any given level. However, all the vertices introduced through subdivision are obtained as an affine combination of control vertex positions of the initial mesh. Therefore, we can control the dynamic behavior of the limit surface by formulating the dynamic model on the initial mesh itself, the only exception being the case when the initial mesh has non-rectangular faces. The problem can be circumvented by taking the mesh obtained through one step of subdivision as the initial mesh. To define the limit surface using the vertices of the initial mesh, the enumeration of the bicubic patches in the limit surface is necessary. In the next two subsections, we present a scheme of assigning the bicubic patches to various faces of the initial mesh. It may be noted that one additional subdivision step may be needed in some cases to isolate the extraordinary points and treat the obtained mesh as the initial mesh (one typical example is when the initial mesh is a tetrahedron).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Assigning patches to regular faces</head><p>In <ref type="figure" target="#fig_0">Fig.1</ref>, a rectangular control mesh is shown along with the bicubic B-spline surface (4 patches) in the limit after an infinite number of subdivision steps. Note that, each of the bicubic patches in the limit surface is defined by a rectangular face with each vertex of degree four, thereby accounting for 16 control points (from its 8 connected neighborhood) needed to define a bicubic surface patch in the limit. Therefore, for each rectangular face in the initial mesh with a valence of 4 at each vertex, the corresponding bicubic surface patch can be assigned to it in a straight forward way. In <ref type="figure" target="#fig_0">Fig.1</ref>, the surface patches S1; S 2 ; S 3 and S4 are assigned to face F1; F 2 ; F 3 and F4 respectively. The 16 control points for the patch S1, corresponding to face F1, are highlighted in <ref type="figure" target="#fig_0">Fig.1</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Assigning patches to irregular faces</head><p>In <ref type="figure">Fig.2</ref>, a mesh containing an extraordinary point of valence 3 and its limit surface are shown. The faces F0; F 1 ; : : : ; F 8 are assigned to bicubic patches S0; S 1 ; :::S8 respectively (as they all have vertices of valence 4) following the aforementioned scheme. However, the smooth surface enclosed by the patches S0; S 1 ; :::S8 consists of infinite number of bicubic patches converging to a point in the limit. We need to develop a recursive way of enumerating these bicubic patches and assigning them to various faces at different levels in order to develop the dynamic subdivision surface model.</p><p>The idea of enumerating the bicubic patches corresponding to faces having an extraordinary vertex is shown in <ref type="figure">Fig.3</ref> where a local subdivision of the mesh consisting of faces F0; F 1 ; :::; F8; P 0 ; P 1 ; P 2 (and not the other boundary faces) of <ref type="figure">Fig.2</ref> is carried out. Topologically, the resulting local subdivision mesh (shown as dotted mesh) is exactly the same as the mesh in <ref type="figure">Fig.2</ref> and hence exactly the same number of bicubic patches can be assigned to its faces with vertices of valence 4 as is evident from <ref type="figure">Fig.3</ref> (the new faces and the corresponding patches are marked by "p" and "n" respectively). This process of local subdivision and assignment of bicubic patches around an extraordinary point can be carried out recursively and in the limit, the enclosed patch corresponding to faces sharing the extraordinary point will converge to a point. However, there is no need to carry out an infinite number of subdivision steps. This description is for formulation purposes only and the exact implementation will be detailed in a later section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Kinematics of the limit surface</head><p>In this section we develop the mathematics for the kinematics of the limit surface via illustrative examples and then present the generalized formulas. We start the illustration with a single bicubic B-spline patch which is obtained as the limiting process of the Catmull-Clark subdivision algorithm applied to an initial 4 by 4 rectangular control mesh. Let spu;v;u;v 2 0; 1 2 , denote this bicubic B-spline patch which can be expressed analytically as </p><formula xml:id="formula_0">spu;v = xu; v; y u; v; z u; v T = 3 X i=0 3 X j=0 di;jBi;4uBj;4v<label>(1)</label></formula><formula xml:id="formula_1">sp = Jpq (2)</formula><p>where Jp is the standard Jacobian matrix of a bicubic B-spline patch, and is of size is 3; 48. Vector q is the concatenation of all control points defining a B-spline patch in 3D. Note that in the concatenation of the control points, each control point has an x; y; z component. For example, the x; y; z components of the control point i; j correspond to positions 3k;3k+ 1 ; 3 k + 2 -where, k = 4 i + j -respectively in the vector q. We can express the entries of Jp explicitly in the following way: Jp0; k = J p 1; k + 1 = J p 2; k + 2 =B i;4uBj;4v and Jp0; k + 1 =J p 0; k + 2 = J p 1; k = J p 1; k + 2 = J p 2; k = J p 2; k + 1 = 0 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.1">Limit surface with many bicubic patches from a rectangular initial mesh</head><p>Now let's consider a limit surface consisting of many bicubic surface patches obtained after applying an infinite number of subdivision steps to a rectangular initial mesh. For example, let the limit surface of <ref type="figure" target="#fig_0">Fig.1</ref>  </p><formula xml:id="formula_2">sm = J1q1 + J2q2 + J3q3 + J4q4 = 4 X i=1 Jiqi (4)</formula><p>where Jis are the Jacobian matrices of size 3; 48 and qis are the (x,y,z) component concatenation of a subset of the control points of sm defining sm i , i = 1 ; 2 ; 3 and 4. A more general expression for sm is sm = J1A1qm + J2A2qm + J3A3qm + J4A4qm = 4 X i=1 JiAiqm = Jmqm:</p><p>Where, qm is the 75-component vector of 3D positions of the 25 vertex control mesh defining the limit surface sm. Matrices Ai;1 i 4; are of size 48; 75 , each row consisting of a single nonzero entry = 1 and the 3; 75-sized matrix Jm = P 4 i=1 JiAi.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4.2">Limit surface with many bicubic patches from an arbitrary initial mesh</head><p>The stage is now set to define the limit surface s using the vertices of initial mesh M for any arbitrary topology, assuming all faces are rectangular and no face contains more than one extraordinary point as its vertex (i.e., extraordinary points are isolated). As mentioned earlier, if these assumptions are not satisfied, one or two steps of global subdivision may be required and the resulting mesh can be treated as the initial mesh. Let the number of vertices in the initial mesh M be a, and let l of these be extraordinary vertices. Let us assume that the number of faces in the initial mesh are b, and that k of these have vertices with valence 4 (here onwards termed a "normal face") and each of the remaining b,k faces have one of the l extraordinary vertices (here onwards termed a "special face").</p><p>Let p be the 3a = N dimensional vector containing the control vertex positions in 3D. Using the formulations in subsections 2.2 and 2.3, the smooth limit surface can be expressed as</p><formula xml:id="formula_4">s = k X i=1 ni + l X j=1 sj (6)</formula><p>where ni is a single bicubic patch assigned to each of the normal faces and sj is a collection of infinite number of bicubic patches corresponding to each of the extraordinary points. Employing the same approach taken before to derive Eqn. 5, it can be shown that</p><formula xml:id="formula_5">k X i=1 ni = k X i=1 n Ji n pi = k X i =1</formula><p>n Ji n Aip = n J p <ref type="bibr" target="#b6">(7)</ref> where n Ji; n pi and n Ai are the equivalent of Ji;pi in Eqn. <ref type="bibr" target="#b3">4</ref> and Ai in Eqn. 5 respectively. The pre-superscript n is used to indicate that these mathematical quantities describe bicubic patch in the limit surface corresponding to normal faces. We will use the following notational convention for describing various mathematical quantities used in the derivation of the expression for a collection of infinite number of bicubic patches around an extraordinary vertex. The pre-superscript s is used to represent a collection of bicubic patches around an extraordinary vertex, the subscript j is used to indicate the j-th extraordinary point, the postsuperscript represents the exponent of a mathematical quantity and the level indicator (to represent various levels of subdivision in the local control mesh around an extraordinary vertex) is depicted via subscripts on the curly braces.</p><p>The expression for sj is derived using the recursive nature of local subdivision around an extraordinary vertex as shown in subsection 2.3. First, sj can be expressed as sj = f s Jjg 1 f s pjg 1 + fsjg 1 <ref type="bibr" target="#b7">(8)</ref> where the first term of Eqn.8 is the generalized coordinate representation of the bicubic B-spline patches corresponding to the normal faces of the new local subdivision mesh obtained after one subdivision step on the local control mesh (similar to those patches marked n in <ref type="figure">Fig.3</ref>). fsjg 1 represents the rest of the infinite bicubic B-spline patches surrounding the extraordinary point (similar to the patch enclosed by patches marked n in <ref type="figure">Fig.3</ref>). The vertices in the newly obtained local subdivision mesh f s pjg 1 can be expressed as a linear combination of a subset of the vertices of the initial mesh M (which will contribute to the local subdivision) following the subdivision rules. We can name this subset of initial control ver- </p><formula xml:id="formula_6">=f s J j g 1 f s B j g 1 1 X i =0 f s Cjg i 1 f s pjg 0 (11)</formula><p>We can rewrite sj as sj = s J j s pj <ref type="bibr" target="#b11">(12)</ref> where s Jj = f s Jjg 1 f s Bjg 1 P 1 i=0 f s Cjg i 1 and s pj = f s pjg 0 .</p><p>Note that, each vertex position in the subdivided mesh is obtained by an affine combination of some vertices in the previous level and hence any row of f s Cjg 1 sums to 1. The largest eigenvalue of such a matrix is 1 and it can be shown that the corresponding infinite series is convergent following a similar approach as in <ref type="bibr" target="#b10">[11]</ref>. The rest of the derivation leading to an expression for s is relatively straight forward. Using the same approach used to derive the Eqn. 7, it can be shown that</p><formula xml:id="formula_7">l X j=1 sj = l X j=1 s Jj s pj = l X j =1</formula><p>s Jj s Ajp = s J p <ref type="bibr" target="#b12">(13)</ref> From Eqn. 6,7 and 13,</p><formula xml:id="formula_8">s = n J p + s J p<label>(14)</label></formula><p>Let J = n J + s J , hence s = Jp (15)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Dynamics</head><p>We now treat the control point positions (alternatively, the vertex positions in the initial mesh) defining the limit surface s as a function of time in order to develop our new dynamic model. The velocity of the surface model can be expressed as _ su; v; p = J _ p <ref type="bibr" target="#b15">(16)</ref> where an overstruck dot denotes a time derivative. The physics of the dynamic subdivision surface model is based on the workenergy version of Lagrangian dynamics <ref type="bibr" target="#b6">[7]</ref> and is formulated in an analogous way to that in <ref type="bibr" target="#b15">[16]</ref>.</p><p>In an abstract physical system, let pit be a set of generalized coordinates which are functions of time and are assembled into the vector p. Let fit be the generalized applied force acting on pi and these fi's are assembled into the vector fp. where the subscripts on J denote the parametric partial derivatives.</p><p>The ii and ijs are elasticity functions controlling local tension and rigidity in the two parametric coordinate directions.</p><p>The generalized force vector fp can be obtained through the principle of virtual work <ref type="bibr" target="#b6">[7]</ref> done by the applied force distribution fu;v;t and can be expressed as</p><formula xml:id="formula_9">fp = Z Z J T fu; v; tdudv (21)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5.1">Multilevel Dynamics</head><p>Our dynamic Catmull-Clark surface model can be subdivided globally to increase the number of vertices (control points) of the model. Therefore, we need to derive the equation of motion for this subdivided model involving larger number of vertices. We need to recompute the mass, damping and stiffness matrices for this level. However, the equation of motion as given by Eqn. 17 remains valid, only the dimensionality of M;D;K; p and fp changes in the newly obtained subdivided level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">FINITE ELEMENT IMPLEMENTATION</head><p>The evolution of the generalized coordinates for our new dynamic surface model can be determined by the second-order differential equation as given by Eqn. 17. An analytical solution of the governing differential equation can not be obtained in general. However, an efficient numerical implementation can be obtained using finite element analysis techniques <ref type="bibr" target="#b8">[9]</ref>. For the dynamic subdivision surface model, two types of finite elements are considered -normal elements (bicubic patches assigned to the normal faces of the initial mesh) and special elements (collection of infinite number of bicubic patches assigned to each extraordinary vertex of the initial mesh). In the current implementation, the M, D and K matrices for each individual normal and special elements are calculated and they can be assembled into the global M, D and K matrices that appear in the corresponding discrete equation of motion. In practice, we never assemble the global matrices explicitly in the interest of time performance. The detailed implementation is explained in the following subsections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Data Structures</head><p>A subdivision surface defined by a control mesh at any level is designed as a class which has a pointer to its parent mesh, a set of pointers to its offspring meshes (arising out of local subdivision around the extraordinary vertices at that level), a list of faces, edges, vertices and normal elements . Face, edge, vertex and normal elements are, in turn, classes which store all the connectivity and other information needed to either enumerate all the patches or locally subdivide around an extraordinary vertex in that level. The implementation takes the initial mesh as the base subdivision surface object (with its parent pointer set to NULL) and locally subdivides the initial mesh upto a user-defined maximum level around each extraordinary vertex to create offspring objects at different levels. At this point, let's take a closer look at normal and special element data structures and computation of the corresponding local M;D and K matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1">Normal Elements</head><p>Each normal element is a bicubic surface patch and hence defined by 16 vertices (from the 8-connected neighborhood of the corresponding normal face). Each normal element keeps a set of pointers to those vertices of the initial mesh which act as control points for the given element. For a normal element, the mass, damping and stiffness matrices are of size 16; 16 and can be computed exactly by carrying out the necessary integrations analytically. The matrix J in Eqn. 18, 19 and 20 need to be replaced by Jp (of Eqn. 2) for computation of the local M;D and K matrices respectively of the corresponding normal element.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2">Special Elements</head><p>Each special element consists of an infinite number of bicubic patches in the limit. We have already described a recursive enumeration of the bicubic patches of a special element in Section 2.3. Let us now consider some arbitrary bicubic patch of the special element in some level j. The mass matrix Ms of this patch can be written as</p><formula xml:id="formula_10">Ms = T s Mp s (22)</formula><p>where Mp is the normal element mass matrix (scaled by a factor of <ref type="bibr" target="#b0">1</ref> 4 j to take into account of the area shrinkage in bicubic patches at higher level of subdivision) and s is the transformation matrix of the control points of that arbitrary patch from the corresponding control points in the initial mesh.The damping and stiffness matrices for the given bicubic patch can be derived in an exactly similar fashion. Now, these mass, damping and stiffness matrices can be assembled to form the mass, damping and stiffness matrices of the special element. As mentioned earlier, the infinite series summation is convergent. However, it has been found that the contribution from bicubic patches at higher level of subdivision to the mass, damping and stiffness matrices becomes negligible and in the implementation, the local subdivision is carried out until the contribution is small enough to ignore in the formation of the global mass, damping and stiffness matrices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Force Application</head><p>The force fu;v; t in Eqn.21 represents the net effect of all applied forces. The current implementation supports spring, inflation as well as image-based forces. However other types of forces like repulsion forces, gravitational forces etc. can be implemented easily as well.</p><p>To apply spring forces, a spring of stiffness k can be connected from a point d0 to a point u0; v 0 on the limit surface, the net applied spring force being</p><formula xml:id="formula_11">fu; v; t = Z Z k d 0 , s u; v; t u,u0; v , v 0 dudv (23)</formula><p>where is the unit impulse function implying fu0; v 0 ; t = k d 0 , s u 0 ; v 0 ; t and vanishes elsewhere in the surface. However, the function can be replaced with a smooth kernel to spread the force over a greater portion on the surface. The spring forces can be applied interactively using a mouse button or the points from which forces need to be applied can be read in from the disk.</p><p>To recover shapes from 3D image data, we synthesize imagebased forces. A 3D edge detection is performed on a Gaussian smoothed volume data set using the 3D Monga-Deriche(MD) operator <ref type="bibr" target="#b11">[12]</ref> to produce a 3D potential field P x;y; z, which we use as an external potential for the model. The force distribution is then computed as fx;y;z = k 5 P x; y; z k 5 P x; y; z k <ref type="bibr">(24)</ref> where k controls the strength of the force. The applied force on each element is computed using Gaussian quadrature for evaluating Eqn. 21 in Cartesian coordinates. It may be noted that we can apply spring forces in addition with the image-based forces by placing points near the region of interest in the slices of the 3D image data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Discrete Dynamic Equation</head><p>The differential equation given by Eqn. 17 is integrated through time by discretizing the time derivative of p over time steps t. The state of the dynamic subdivision surface at time t + t is integrated using prior states at time t and t , t. This linear system of equations is solved iteratively between each time step using the conjugate gradient method.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Model Subdivision</head><p>The initialized model grows dynamically according to the equation of motion (Eqn. 17) and when an equilibrium is achieved at a given level of subdivision, the model can be subdivided, if necessary, according to the Catmull-Clark subdivision rules to increase the number of vertices (control points) and a better fit to the data can be achieved. Currently the error of fit criteria is based on distance between the data points and the points on the limit surface where the corresponding springs are attached. However, other types of error criterion can also be defined and used in this context. For example, in the context of image-based forces, if the model energy does not change between successive iterations indicating an equilibrium for the given resolution, the model can be subdivided further until the model energy is sufficiently small and the change in energy between successive iterations becomes less than a pre-specified tolerance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>The proposed dynamic subdivision surface can be used to represent a wide variety of shapes with arbitrary genus. In this section we demonstrate the power of our modeling scheme via model fitting examples to a variety of data sets of varying degree of complexity. In all the experiments, normal elements are shaded yellow, while special elements are colored green. In <ref type="figure">Fig.4(a)</ref> an open limit surface defined by an initial mesh of 61 vertices and 45 faces is shown. The mesh has one extraordinary point of valence 5. The limit surface is acted upon by spring forces as shown in <ref type="figure">Fig.4(b)</ref>. An intermediate stage of model evolution is shown in <ref type="figure">Fig.4(c)</ref> and the final fitted model is depicted in <ref type="figure">Fig.4(d)</ref>. It may be noted that the model controlled by the initial mesh reached a local minimum without fitting the points exactly. In order to obtain an exact fit ( <ref type="figure">Fig.4(d)</ref>), the control mesh is subdivided once thereby increasing the degrees of freedom (control vertices) of the underlying model. Thus the dynamics can be applied in a hierarchical fashion. Our model can be used to obtain a very fast approximate fitting with fewer number of vertices and an exact fit after more subdivision steps as needed.</p><p>In the next experiment, we show the fitting process using spring forces with a closed surface of genus two <ref type="figure">(Fig.5)</ref>. The smooth surface is controlled by an initial mesh of 544 faces and 542 vertices, 8 of them being extraordinary points of valence 5. In this experiment, the model has sufficient degrees of freedom and fitted the data points exactly without needing further subdivision of its control mesh.</p><p>In <ref type="figure">Fig.6</ref>, we present shape recovery from range data using our model. The model, with 96 faces and 98 vertices, 8 of them being extraordinary vertices of valence 3, was initialized inside a set of 1,779 range data points. The final fitted model has a control polygon of 384 faces with 386 vertices and thus the shape is recovered using a very few number of control points in comparison with the number of data points in the range data set.</p><p>In the last experiment, we fit the model to a cerebellum (a cortical structure in brain) given an input of 30 sagittal slices from a MR brain scan. <ref type="figure">Fig.7</ref>(a) depicts a slice from this MRI scan and a slice of the 3D model initialized inside the region of interest is shown in <ref type="figure">Fig.7(b)</ref>. Image gradient-based forces are applied to the model and the model deforms under the influence of these forces until maximal conformation to the boundaries of of the desired cerebellum shape. The final fitted model is shown in <ref type="figure">Fig.7(c)</ref>. An arbitrary 3D view of the fitted model is shown in <ref type="figure">Fig.7(d)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUSIONS</head><p>In this paper, a dynamic generalization of the Catmull-Clark subdivision surfaces is presented which has numerous applications in geometric modeling and visualization. Apart from providing a direct intuitive way of manipulating shapes, it provides a fast as well as robust way of visualizing large range and volume data sets using very few degrees of freedom. We have presented an analytic formulation of the subdivision scheme, incorporated the advantages of free-form deformable models in subdivision scheme, introduced hierarchical dynamic control and shown the advantages of our model via experiments. However, the current scheme can not recover very sharp edges. Also, the initialization is interactive; ideally, initialization should be done automatically on the basis of the input data set. Our future efforts will focus on addressing these issues. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">ACKNOWLEDGMENT</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>FormFigure 1 :</head><label>1</label><figDesc>new edges by connecting each new face point to the new edge points of the edges defining the old face and by connecting each new vertex point to the new edge points of all old edges incident on the old vertex point. Define new faces as those enclosed by new edges. A rectangular mesh and its limit surface consisting of 4 bicubic surface patches.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>A mesh with an extraordinary point of valence 3 and its limit surface. Local subdivision around the extraordinary point and the limit surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :Figure 5 :Figure 6 :Figure 7 :</head><label>4567</label><figDesc>Fitting the dynamic open surface model to discrete points in 3D : (a) model initialization depicting the associated control mesh, (b) model and data points, (c) intermediate stage of the fitting and (d) the fitted model. Fitting the dynamic closed surface model to discrete points in 3D : (a) model initialization depicting the associated control mesh, (b) model and data points, (c)intermediate stage of the fitting and (d) the fitted model. (a) Range data of a head, (b) data and initialized model, (c) intermediate stage of evolution and (d) the fitted model polygon. (a) A slice from a brain MRI along with the region of interest (ROI), (b) a slice of the initialized model inside the ROI superimposed on the data slice, (c) a slice of the fitted model superimposed on the corresponding slice of data and (d) a 3D view of the model fitted to the cerebellum in the ROI.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Similarly, sm 2 ; sm 3 and sm 4 are also equal to smu; v for an appropriate range of values of u; v and 0 outside. It may be noted that sm 1 ; sm 2 ; sm 3 ; sm 4 correspond to patches S1; S 2 ; S 3 ; S 4 respectively inFig.1. Rewriting Eqn. 3 in generalized coordinates we have</figDesc><table><row><cell>be sm which can be written as</cell></row><row><cell>smu; v = sm 1 2u; 2v + s m 2 2u; 2v , 1 2</cell></row><row><cell>+sm 3 2u , 1 2 ; 2v + s m 4 2u , 1 2 ; 2v , 1 2 (3) where sm 1 2u; 2v = s m u; v for 0 u; v 1 2 , and 0 otherwise.</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>tices f s pjg 0 . Furthermore, there exists a matrix f s Bjg 1 of size 3c; 3d, such that f s Bjg 1 f s pjg 0 = f s pjg 1 where f s pjg 1 and f s pjg 0 are vectors of dimension 3c and 3d respectively. Applying the idea of recursive local subdivision again on fsjg 1 , sj can be In the above derivation, f sp jg 1 is a vector of dimension 3d, comprising of a subset of the vertices defining the 3c dimensional vector f s pjg 1 . Note that, f sp jg 1 has the same structure as f s pjg 0 , therefore, there exists a 3d; 3d matrix f s Cjg 1 such that f s Cjg 1 f s pjg 0 = f sp jg 1 . Each subdivision of a local mesh with dBecause of the intrinsic property of the local recursive subdivision around the extraordinary point, we have f s Jjg 1 = f s Jjg 2 = : : : = f s J j g n = : : : = f s J j g 1 . In addition, the subdivision rules remain the same throughout the refinement process, we also have f s Bjg 1 = f s Bjg 2 = : : : = f s B j g n = : : : = f s B j g 1 . So, we can further simplify the above equations leading to sj = f s Jjg 1 f s Bjg 1 f s pjg 0 + f s Jjg 1 f s Bjg 1 f s Cjg 1 f s pjg 0 +f</figDesc><table><row><cell>s Jjg 1 f s Bjg 1 f s Cjg 2 1 f s pjg 0 + : : :</cell><cell></cell></row><row><cell>further expanded as</cell><cell></cell></row><row><cell>sj = f s Jjg 1 f s Bjg 1 f s pjg 0 +f s Jjg 2 f s Bjg 2 f sp jg 1 + fsjg 2</cell><cell>(9)</cell></row><row><cell>+f s Jjg 3 f s Bjg 3 f s Cjg 2 1 f s pjg 0 + fsjg 3</cell><cell>s pjg 0 (10)</cell></row></table><note>vertices creates a new local mesh with c vertices which contributes a fixed number of bicubic B-spline patches. So, if we proceed one step further, we obtain sj = f s Jjg 1 f s Bjg 1 f s pjg 0 + f s Jjg 2 f s Bjg 2 f s Cjg 1 f</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>thin-plate-under-tension energy model<ref type="bibr" target="#b14">[15]</ref> is used to compute the elastic potential energy of the dynamic subdivision surface. The corresponding expression for the stiffness matrix K is Ju + 22 J T v Jv + 11 J T uu Juu + 12 J T uv Juv + 22 J T vv Jvvdudv</figDesc><table><row><cell></cell><cell cols="3">where is the damping density.</cell></row><row><cell></cell><cell>A K =</cell><cell>Z Z</cell><cell>11 J T u (20)</cell></row><row><cell cols="2">The Lagrangian</cell><cell></cell></row><row><cell>equation of motion can then be expressed as</cell><cell></cell><cell></cell></row><row><cell>M p + D _p + Kp = fp</cell><cell>(17)</cell><cell></cell></row><row><cell>Let be the mass density function of the surface. Then M = Z Z J T Jdudv</cell><cell>(18)</cell><cell></cell></row><row><cell cols="2">is an N N mass matrix. Similarly the expression for damping matrix is D = Z Z J T Jdudv (19)</cell><cell></cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This research was supported in part by the NSF grant ECS-9210648 to BCV, the NSF career award CCR-9702103 and DMI-9700129 to HQ. We also wish to acknowledge Dr. H. Hoppe and Dr. K. Pulli for the range data and Dr. C.M. Leonard for the brain MRI data.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Conditions for tangent plane continuity over recursively generated B-spline surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Ball</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">J T</forename><surname>Storry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="83" to="102" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Representing PDE surfaces in terms of B-splines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I J</forename><surname>Bloor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="324" to="331" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Recursively generated B-spline surfaces on arbitrary topological meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Catmull</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="350" to="355" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Linear constraints for deformable B-spline surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Celniker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Symposium on Interactive 3D Graphics</title>
		<meeting>the Symposium on Interactive 3D Graphics<address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="165" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A butterfly subdivision scheme for surface interpolation with tension control</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dyn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Gregory</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="160" to="169" />
			<date type="published" when="1990-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Analysis of the behavior of recursive division surfaces near extraordinary points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Doo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sabin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Design</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="356" to="360" />
			<date type="published" when="1978" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Hamilton&apos;s Principle and Physical Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">R</forename><surname>Gossick</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1967" />
			<publisher>Academic Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Elastically deformable models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Platt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Barr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fleischer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1987" />
			<biblScope unit="page" from="205" to="214" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Finite Element Handbook</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Kardestuncer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<publisher>McGraw-Hill</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Smooth subdivision surfaces based on triangles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Loop</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
		</imprint>
		<respStmt>
			<orgName>University of Utah, Department of Mathematics</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Efficient, fair interpolation using Catmull-Clark surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Halstead</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kass</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="35" to="44" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">3D edge detection using recursive filtering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Monga</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Deriche</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Conference on Computer Vision and Pattern Recognition</title>
		<meeting>IEEE Conference on Computer Vision and Pattern Recognition</meeting>
		<imprint>
			<date type="published" when="1989-06" />
			<biblScope unit="page" from="28" to="35" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interpolating subdivision for meshes with arbitrary topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zorin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="189" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A unified approach to subdivision algorithms near extraordinary points</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Reif</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="153" to="174" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Regularization of inverse visual problems involving discontinuities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="413" to="424" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Dynamic NURBS with geometric constraints for interactive sculpting</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Terzopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Qin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="136" />
			<date type="published" when="1994-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Variational surface modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Witkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1992-07" />
			<biblScope unit="page" from="157" to="166" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
