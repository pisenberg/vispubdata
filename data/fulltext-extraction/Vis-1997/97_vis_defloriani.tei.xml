<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Building and Traversing a Surface at Variable Resolution</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leila</forename><surname>De Floriani</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dipartimento di Informatica e Scienze dell&apos;Informazione</orgName>
								<orgName type="institution">Università di Genova Enrico Puppo Istituto per la Matematica Applicata -Consiglio Nazionale delle Ricerche y</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Paola</forename><surname>Magillo</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Dipartimento di Informatica e Scienze dell&apos;Informazione</orgName>
								<orgName type="institution">Università di Genova Enrico Puppo Istituto per la Matematica Applicata -Consiglio Nazionale delle Ricerche y</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Building and Traversing a Surface at Variable Resolution</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:35+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We consider the Multi-Triangulation, a general model for representing surfaces at variable resolution based on triangle meshes. We analyse characteristics of the model that make it effective for supporting basic operations such as extraction of a surface approximation, and point location. An interruptible algorithm for extracting a representation at a resolution variable over the surface is presented. Different heuristics for building the model are considered and compared. Results on both the construction and the extraction algorithm are presented.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Multiresolution geometric models support representation and processing of spatial entities at different levels of detail. Such representations have received recently a lot of attention because of their potential impact on applications, such as terrain modeling in geographic information systems, scientific data visualization, and virtual reality. A major approach to multiresolution modeling is based on a cellular decomposition of the spatial entity involved: the underlying idea is that the accuracy in the representation is somehow proportional to the number of cells in the subdivision. In this paper, we focus on multiresolution representations of surfaces, based on simplicial domain decomposition.</p><p>In the last few years, a number of multiresolution surface models have been proposed in the literature that support compact encoding and fast access to a high number of representations, whose level of detail is possibly variable across the surface domain <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>. Many such models were originally designed to represent terrain surfaces, though all of them, but <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b15">16]</ref>, can be generalized easily to free-form surfaces embedded in the three-dimensional space. In <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b17">18]</ref>, we have shown that existing multiresolution models can be viewed as special cases of the Multi-Triangulation (MT), a general model introduced in <ref type="bibr" target="#b16">[17]</ref>, which will be reviewed, and extended to free-form surfaces in Section 2. Therefore, many general properties of multiresolution surface models can be studied on the MT, and the results can be extended to all other models.</p><p>Here, we consider two basic spatial operations on a multiresolution surface model, namely: extraction of a representation of minimum size at a resolution variable over the domain, according to a predefined threshold function; and point location at variable resolution. It is well understood that the efficiency of such operations depends on the characteristics of the model and, thus, on the underlying construction technique.</p><p>Address: Via Dodecaneso, 35 -16146 Genova, ITALY. Email: fdeflo,magillog@disi.unige.it y Address: Via de Marini, 6 (Torre di Francia) -16149 Genova, ITALY.</p><p>Email: puppo@ima.ge.cnr.it A major contribution of the paper is to propose, analyze and experiment different algorithms to construct an MT. The core of such an algorithm is the technique used to produce polyhedral approximations of the underlying surface based on suitably selected subsets of the data points. The general problem of finding a polyhedral surface of minimum size that approximates a dataset within a given threshold is known to be NP-hard <ref type="bibr" target="#b0">[1]</ref>. In the literature, we can find heuristics, mostly based on an error-driven simplification approach, that are empirically good, i.e., they highly reduce the size of the mesh needed to achieve a given accuracy, while they do not guarantee good theoretical characteristics for the resulting structure, which are necessary to achieve good complexity bounds for the two basic operations. On the other hand, construction techniques that produce a theoretically efficient structure may need considerably more points to achieve a given accuracy.</p><p>Thus, we can see a trade-off between practical performance, as data compression tools, and theoretical efficiency. Here, we analyse some heuristics which try to overcome such a problem by combining an error-driven approach with a criterion that maintains the resulting structure well balanced. We analyze and compare such heuristics with techniques that try to optimize either only on the number of points necessary to achieve a certain accuracy, or only on the theoretical efficiency of the resulting multiresolution structure for extraction and searching.</p><p>We also describe a new algorithm for extracting a representation at variable resolution from an MT, which is interruptible, i.e., it converges towards an optimal solution by finding better and better approximations: this algorithm is especially suited for real time applications, since it allows an application to dinamically set the level of detail used in rendering according to time constraints.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE MULTI-TRIANGULATION</head><p>The Multi-Triangulation (MT), is a triangle-based multiresolution decomposition that has been introduced in <ref type="bibr" target="#b16">[17]</ref>. In its original definition, an MT is based on a collection of local updates of an initial triangulation of a plane domain, arranged according to a partial order. Consistent subsets of the local updates can be combined to obtain triangulations at different resolutions. Here, we extend the model to represent generic meshes of triangles embedded in threedimensional space, and we give an equivalent graph-based definition that is more intuitive and directly reflects the data structure used to encode the model.</p><p>A triangle mesh is a set of triangles embedded in the threedimensional space such that, for each pair of triangles t1; t 22 , either t1 and t2 are disjoint, or their intersection is an edge or a vertex common to t1 and t2, and such that the union of all such triangles form a manifold surface. The size of a mesh is the number of its triangles. : An increasing MT: (a) the DAG representing the model (the thick curve denotes a cut); (b) the minimal mesh corresponding to the source, the maximal mesh corresponding to the drain, and the local updates corresponding to each internal node (triangles belonging to the minimal mesh are shaded, triangles belonging to the maximal mesh are dotted; the dark grey triangle belongs to both the minimal and maximal mesh); (c) an extracted variable-resolution triangulation (the cut defining such triangulation is the one shown in (a), the dashed triangles in (a) do not satisfy the threshold).</p><p>1. there is a unique source node nS 2 N without incoming arcs, and a unique drain node nD 2 N without outgoing arcs; 2. every arc in A is labeled with a set of triangles; 3. for every node n 2 N , the unions of triangle sets which are labels of the arcs entering and emanating from n, respectively, form two connected triangle meshes with the same boundary;</p><p>4. the set of triangles corresponding to any cut of M that separates the source from the drain is a triangle mesh. Property 4 is especially important because it relates triangle meshes at variable resolution to cuts in the directed acyclic graph. The mesh defined by the cut of arcs emanating from the source is called the minimal mesh of M, and denoted by S. The mesh defined by the cut of arcs entering the drain is called the maximal mesh of M, and denoted by D. Each internal node of M can be viewed as a local update operation that replaces triangles labeling its incoming arcs with triangles labeling its outgoing arcs. <ref type="figure">Figure 1</ref> depicts the DAG describing an MT in the plane, the local updates corresponding to each node, a cut and the corresponding mesh. A cut divides the nodes of M into two subsets; for convenience, we call nodes above the cut, and nodes below the cut, the nodes of the set containing the source and the drain of M, respectively.</p><p>An MT M is increasing if, for any internal node of M, the number of triangles labelong its outgoing arcs is larger than the number of triangles labeling its incoming arcs. In an increasing MT, the minimal mesh has the smallest size, and the maximal mesh has the largest size, among all meshes defined by cuts. In practice, the size of a mesh increases as the cut moves from the source to the drain. In the remainder of the paper, we always consider increasing MTs.</p><p>An increasing MT M has a linear growth if for each cut in M, </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">POLYHEDRAL SURFACES AT VARI-ABLE RESOLUTION</head><p>We consider a surface as a compact, connected, orientable 2manifold, possibly with boundary, embedded in IR <ref type="bibr" target="#b2">3</ref> . A triangulated approximation of a given surface S is a triangle mesh , which preserves the topological type of S and is geometrically "close" to S with respect to some criterion for measuring distances.</p><p>The distance between a surface and its triangulated approximation may be measured in different ways, depending on the specific application. We considered meshes representing terrains built from a discrete set of sampled data points by defining a triangulation of their xy projections, and meshes representing free form surfaces acquired through scanner equipments. For terrains, a mesh interpolating all data points is assumed to have zero error, and the error of a generic mesh is evaluated as the maximum vertical distance between the mesh and a data point. For free form surfaces, the acquired mesh is considered to have zero error. The error of a generic mesh is estimated as follows: for each vertex v of the original mesh, its distance dv; from the approximating mesh is evaluated as the distance between v and the nearest point of to v; the error of is defined as maxv dv;. An error value Errt is also associated with each triangle t of a mesh , obtained from a distance estimation restricted to t. For terrains, Errt is computed by considering only those data points whose xy projection lies in t; for free form surfaces, Errtis obtained by taking into account only those original vertices v such that the nearest point of to v belongs to triangle t.</p><p>Given a threshold function : I R 3 ! I R , an approximated mesh for dataset D is said to satisfy if for every triangle t of we have minx2t x Errt. The simplest situation occurs when is constant. Another interesting class of threshold functions, useful in the visualization of large objects (e.g., terrains, buildings, ships, planes, etc...) require an accuracy that decreases according to the distance from a given viewpoint.</p><p>For practical purposes, it is important to be able to find efficiently an approximated model whose accuracy satisfies a given threshold, and which is likely to have a small size. In the remainder of the paper, we only consider triangulated approximations that correspond to cuts of an increasing MT, whose triangles have vertices at points of a dataset D. In practice, the accuracy of a triangulated approximation increases with the number of triangles composing the mesh. Thus, approximations of the surface at increasing accuracies are obtained through cuts of an increasing MT located progressively farther from the source. The possibility of using arbitrary cuts allows us to locally adapt the resolution to an arbitrary threshold .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">SPATIAL OPERATIONS ON AN MT</head><p>The power of a multiresolution model is related to its capability of supporting spatial operations at variable resolution. In <ref type="bibr" target="#b6">[7]</ref> we outlined some of the basic operations that may be important in the applications. Among those, we consider here two fundamental operations on an increasing MT M: variable-resolution point location, i.e., finding the coarsest triangle of M that contains a given query point p, and whose error is smaller than a given threshold p.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Extraction of a triangulation at variable resolution</head><p>The problem of variable-resolution extraction is equivalent to finding a minimum cut of the MT, such that its corresponding triangulation is satisfies a threshold (see <ref type="figure">Figure 1</ref>). An algorithm for such a problem has been proposed in <ref type="bibr" target="#b16">[17]</ref> that achieves optimal time, i.e., linear in its output size, if the MT has linear growth. In the following, we describe an improved version of the algorithm that maintains the same time complexity, and, moreover, is interruptible.</p><p>An algorithm is called interruptible if it converges towards the exact solution by incrementally producing better and better approximations <ref type="bibr" target="#b19">[20]</ref>. This characteristics is especially important in realtime contexts, where accuracy of the result might be traded for time, which is intended as a strict requirement. For instance, let us consider the rendering of a terrain in the context of a dynamic application such as a flight simulator, where the viewpoint is continuously changing. A different triangulation must be extracted and rendered at frame rate. Since the time for rendering is directly proportional to the size of the triangulation, an algorithm that always maintains a consistent (though approximated) solution can monitor at each instant how much time is left for completing extraction. If the time available expires before the optimal solution is found, then the algorithm can return the current solution.</p><p>Our algorithm is based on an breadth-first traversal of the DAG, like that proposed in <ref type="bibr" target="#b16">[17]</ref>: starting from the source, it progressively visits all arcs and nodes above the solution. A queue of nodes that must be visited, and a list of triangles forming the current solution are maintained. The algorithm consists of a main loop that iterates until the queue is empty (or the extraction time expires). A node is added to the queue if either one of the triangles labelling an arc entering it is in the current solution, but it does not satisfy the required accuracy, or one of the nodes below it must be added to the queue. When a node is visited, all triangles labelling its outcoming arcs are added to the list; a triangle is marked as being not part of the solution when the destination node of the arc containing it is visited. On exit from the loop, the list will contain all triangles of the solution, plus some extra (marked) triangles that are purged through a single scan.</p><p>The current solution is initialized with the triangles of the minimal triangulation S. For each such triangle t that does not satisfy the threshold function, the destination node of the arc containing t in its label is added to the queue. At each iteration, the node ni which is the first element of the queue is visited and the current cut is advanced below ni:</p><p>1. for every arc a incident into ni, the triangles labeling a are eliminated from the current solution (i.e., they are marked);</p><p>2. for every arc a emanating from ni, the triangles labeling a are added to the current solution; if some triangle t among those labeling a does not satisfy , then the destination node of a (if not visited) is added to the queue.</p><p>A special policy is used to insert elements into the queue: when a node nj must be inserted into the queue, all unvisited sources of arcs entering nj are recursively added to the queue before adding nj. This policy ensures that a node is visited after its ancestors have been visited, i.e., only when all arcs entering it belong to the current cut. Thus, at each iteration the triangles of the current solution form a triangulation of the whole domain. It is not difficult to prove the correctness of the algorithm by showing the following facts: the set of output triangles corresponds to a cut, and any "smaller" cut defines a triangulation that does not satisfy the threshold. It is also easy to see that the time complexity is linear in the total number of triangles in the labels of arcs incident at nodes contained in the set above the cut. If the MT has linear growth, the time complexity is linear in the output size, hence optimal (see <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b17">18]</ref> for details).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Point location at variable resolution</head><p>Locating a point on a surface is an important operation in all applications that need to evaluate local characteristics of the surface. Making a point location query at variable resolution on an MT means reporting the coarsest triangle of the MT that "contains" a given query point, and that satisfies a given threshold. In general, the query point shall not be given by its coordinates in three-dimensional space, but rather by some means of pointing at the surface. This is possible, for instance, with surfaces that can be projected on a plane, like terrains. The query point is specified by its projection on the xy plane, while its elevation z is unknown: indeed, elevation is part of the output of the point location operation. The same can be done by using either cylindrical or spherical coordinates for surfaces that can be projected on either a cylinder or a sphere, respectively.</p><p>In these cases, the DAG encoding the MT naturally provides a search structure. The query point is located first in the mesh formed by triangles emanating from the root, and the DAG is traversed following a path of arcs labelled by triangles that contain the query point, until the current triangle satisfies the threshold function <ref type="bibr" target="#b4">[5]</ref>. The algorithm involves a search for the triangle containing the query point in each visited node. The time complexity depends on the number of arcs leaving each of the visited nodes, and on the length of the traversed path.</p><p>The cost of answering a point location query is, in the worst case, proportional to the product of height and width of the MT. If the MT has logarithmic height and bounded width, point location is performed in optimal logarithmic time in the worst case. In some situations, where logarithmic height and/or bounded width is not warranted, amortized analysis can be applied to show that logarithmic time can be achieved in the expected case, though the cost in the worst case can be higher. These cases occur for structures built by some of the algorithms described in the following Section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">BUILDING A MULTIRESOLUTION MODEL</head><p>It follows from the arguments presented in the previous section that an MT, in order to be effective, should have the following characteristics, which are to be taken into account in designing a construction algorithm: good compression ratio: the size of the mesh extracted to achieve a given accuracy should be relatively small; small overhead factor: the number of triangles traversed to extract a given mesh should be not much higher than the size of the output; this property is implied by linear growth;</p><p>bounded width: the number of arcs visited at each step to direct a path thorugh the DAG should be small; logarithmic height: a path on the DAG should always be short.</p><p>An MT can be easily built by dynamic algorithms that perform successive local modifications on an initial mesh . A local modification is an operation that replaces a group of triangles of with another group of triangles approximating the same portion of surface. There is a flourishing literature on mesh simplification algorithms which can be used to this purpose (see, e.g., <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b9">10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b18">19]</ref>). Such algorithms rely on bottom-up strategies that start from a mesh at full resolution, and successively reduce resolution, by local modifications that substitute groups of triangles with other groups of smaller size. Opposite strategies that start from a mesh at coarse resolution and progressively refine it are popular in terrain approximation <ref type="bibr" target="#b7">[8]</ref>, but cannot be adapted easily to general surfaces. All such algorithms follow a greedy scheme that can be summarized as: perform local modifications one after the other; each time, select the modification that is likely to give the smallest increase in the approximation error.</p><p>Greedy heuristics give effective solutions in practice: they can produce MTs with good compression ratios. On the other hand, they may have theoretical drawbacks because many of them do not warrant linear growth, logarithmic height, and bounded width. Different construction techniques, like the one proposed in <ref type="bibr" target="#b4">[5]</ref>, produce theoretically efficient structures with linear growth, logarithmic height, and bounded width, but they might result less effective in practice, since they give worse compression ratios.</p><p>In the following, we describe and analyze four variants of a construction strategy based on vertex decimation. The general scheme for the construction of an MT M from a dataset D of n sites is valid for all variants, and it can be described as follows:</p><p>1. start from a mesh S having vertices at all points of D; initialize M by creating its source and its drain, and joining them with one arc for each triangle of S; for each such hole: -create a new node n; -every triangle t inside the hole labels an arc a emanating from the source: remove t from the label of a (removing a if its label becomes empty) and add t to the label of a new node a 0 emanating from n and having the same destination as a; -re-triangulate the hole; -create an arc from the source to n labeled with newly created triangles (see <ref type="figure">Figure 2</ref>).</p><p>For the re-triangulation of holes we adopt the method of <ref type="bibr" target="#b1">[2]</ref> for general surfaces, and the Delaunay triangulation of the plane projection <ref type="bibr" target="#b13">[14]</ref> for terrain surfaces.</p><p>Variants of the bottom-up technique depend on which vertices are selected for deletion at each iteration. The selection mechanism adopted to obtain set V effects not only the internal structure and the time complexity of each specific algorithm, but also the characteristics of the MT produced.</p><p>Variant A1. This algorithm was proposed by de Berg and Dobrindt <ref type="bibr" target="#b4">[5]</ref> to build their hierarchical triangulation, which is a special case of an MT. Set V is selected at each iteration as an arbitrary maximal independent set of vertices of bounded degree (at most b) from the current minimal triangulation S. At each iteration, a new node is created for each vertex of V .</p><p>The resulting MT has linear growth, bounded width, and logarithmic height. The computational complexity of the algorithm (apart from computation of the initial triangulation) is On, but a further On log n time is needed to evaluate the accuracies of all triangles in the MT.</p><p>Variant A2. Same as Variant A1, but V is built with a greedy technique as follows: initialize V with the vertex whose elimination causes the smallest increase in error among those that have a degree smaller than b; add other vertices iteratively, until possible: at each iteration, select the vertex causing the smallest possible error, among those that have a degree smaller than b, and are independent of the vertices already in V .</p><p>Since V is a maximal independent set of vertices with bounded degree, as in Variant A1, the resulting MT has the same characteristics. Moreover, the additional heuristics, which makes the selection depend on the error caused by removing a vertex, helps maintaining "important" vertices close to the source, while less relevant vertices are gradually discarded while moving towards the drain.</p><p>The greedy selection of vertices requires that error caused by removing a vertex of the current minimal triangulation is known at each iteration. The error can be evaluated at each vertex by simulating its deletion each time its surrounding triangles change. In order to achieve efficiency, we use a bucketing technique similar to that used in <ref type="bibr" target="#b11">[12]</ref> for dynamic triangulations, i.e., we associate with each triangle t in the minimal triangulation the list of vertices already deleted that lie inside t. Moreover, we maintain vertices of the minimal triangulation in a priority queue that supports fast selection of the vertex causing the smallest error. It can be shown that, by using such techniques, the computational complexity of building an MT through Variant A2 is On log n, i.e., the same as with Variant A1.</p><p>Technical details of the analysis are omitted for brevity.</p><p>Variant A3. At each iteration, V consists of just one vertex, namely the vertex that causes the smallest error increase, among those having degree smaller than b. In this case, the resulting MT still has linear growth and bounded width, while it might not have logarithmic height. Therefore, point location on this structure can take as much as On time in the worst case. However, following <ref type="bibr" target="#b13">[14]</ref>, it is easy to show through amortized analysis that the expected cost of point location is still Olog n.</p><p>The elimination of important feature points is further delayed, since selection is performed on the basis of a criterion that is only related to error increase caused by each deletion. Indeed, in Variant A2, the need of having a maximal independent set can force the algorithm to delete points that cause a high error increase at early stages of the construction.</p><p>Error evaluation is performed as in Variant A2, hence both bucketing and priority queue are necessary, and the same analysis applies. Thus, the time complexity of Variant A3 is again On log n.</p><p>Variant A4. Same as variant A3, but the vertex causing the minimum error increase is selected, regardless of its degree: this corresponds to the criterion adopted in <ref type="bibr" target="#b1">[2]</ref>. This variant adopts a selection strategy that is completely error-driven, therefore the greedy heuristic approach, i.e., trying to discard less important points at early stages, is stronger than in any other previous variant. However, the resulting MT in the worst case may have none of the desired properties in terms of growth, height, and width.</p><p>The same tools used in the previous two cases (bucketing and priority queue) lead to a time complexity of On 2 log n in the worst case. The increase of an n factor is due to the fact that the growth of the structure might be quadratic. This means that this variant takes longtime to run if and only if it produces an MT that is qualitatively poor. It should be remarked that this worst case behavior is not likely to happen in practical cases.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENTAL RESULTS</head><p>All construction algorithms described in this abstract have been implemented and tested for the case of terrain surfaces; algorithm A4 has been implemented also for general surfaces. The algorithm for extracting a mesh at a given resolution has also been impemented and tested both on terrain surfaces and on generic surfaces. In order to compare the different variants of the construction algorithm, we have run experiments on different terrain datasets. Here, we show some results obtained on two datasets made available from the U.S. Geological Survey: Sen Bernardino is a regular grid of 128 128 elevation data, while dataset Mount Marcy is a regular grid of 160 160 elevation data.  ing a bound b = 1 1 for the maximum degree of vertices that can be eliminated at each step. For each variant, we list (a) the size of the maximal triangulation (obtained by subdividing each pixel square of the data grid into two right triangles), (b) the total size of the resulting MT, (c) its absolute height, (d) the ratio between its height and the logarithm of its size, and (e) its maximum width. Variant A4 gives the best result in terms of space occupancy (size of the MT), though the gain with respect to Variant A1 (the worst one) is only about 7 , 8. Variants A1 and A2 give much better results in terms of the maximum height of the MT, while the width is fixed for variants A1-2-3, and it is slightly larger for variant A4. On the basis of these results, we can expect that a point location algorithm runs about three to four times faster on an MTs built with Variants A1 or A2, than on an MT built with Variants A3 or A4. <ref type="table">Table 2</ref> shows results related to the extraction of a triangulation at thresholds 1, 2, 5, 10, and 20 of the height range in the dataset, respectively, where the threshold is assumed constant over the whole domain: for each variant, we list the ratio between the size of the output and the size of the maximal triangulation (compression factor), and the ratio between the triangles visited by the extraction algorithm and the number of triangles in the output (overhead factor). In terms of compression, Variants A2-3-4 are almost equivalent, and perform better than variant A1, especially at low resolution. Note that, on the other hand, the overhead factor is almost the same for all variants and thresholds (on average, performance is slightly better for cases A2 and A4). On the basis of these experiments, we can conclude that variant A2 gives the best overall performance.</p><p>In <ref type="figure">Figure 3</ref> we show a mesh representing Mount Marcy at variable resolution, extracted through the algorithm described in Section 4.1 from an MT built with algorithm A4. The resolution is linearly decreasing with distance from a viewpoint. In <ref type="figure">Figure 4</ref> we show variable resolution representations of some free-form surfaces: the resolution is exponentially decreasing with distance from a focus point. The numbers of original and extracted triangles, and the extraction times are shown; times are obtained on a SGI Indigo2 10000.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSIONS</head><p>Several multiresolution models of triangle meshes have been developed in the literature because of their wide applicability. The Multi-Triangulation is a comprehensive model that generalizes over all other models based on triangle decompositions. See <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b17">18]</ref> for a discussion of how existing multiresolution models can be interpreted as special cases of the MT. We have considered two basic operations on an MT: the extraction of representations at variable resolutions, and point location; an interruptable algorithm for ex-  <ref type="table">Table 2</ref>: Results for the extraction of a triangulation at various error thresholds.</p><p>tracting representations at variable resolution has been presented. Four variants of a construction technique based on decimation have been considered on terrain modeling. The impact of the technique adopted to build the model on the performance of the algorithms for the two basic operations has been evaluated both from a theoretical and an experimental point of view. The best overall performance is achieved by a method that progressively removes an independent set of vertices of small degree, selected with an error-based criterion. Although decimation is a standard technique in the literature, this variant was never adopted previously.</p><p>We are currently developing a library for building and manipulating a multiresolution surface description in connection with various reconstruction problems: reconstruction from a CAD description of the boundary surface of a solid object, reconstruction from a set of measurements on a free-form surface, when a set of points, or a set of contours, or a dense triangle mesh are given. We have also extended the multiresolution triangulation to arbitrary dimensions, and we are currently developing a prototype for encoding and manipulating volume data at different LODs, based on a 3D extension of the data structures and algorithms described in this paper. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>A Multi-Triangulation (MT) is described by a directed acyclic graph (DAG) M = N ; A such that:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>the ratio between the number of arcs in the set above the cut, and the size of the cut itself is bounded by a constant. An MT M has a logaritmic height if the maximum length of a path from the source to the drain is logarithmic in the number of the arcs of M. An MT M has bounded width if the maximum number of arcs emanating from a single node is bounded by a constant. Linear growth, logaritmic height, and bounded width are important features for the efficiency of traversal algorithms on an MT.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>variable-resolution extraction, i.e., finding the smallest mesh made of triangles of M that satisfies a given threshold function ;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>2 .Figure 2 :</head><label>22</label><figDesc>while vertices can be removed from the current minimal triangulation S of M do the following: select a set V of vertices to be removed; One step in building an MT through mesh simplification: n is the new node corresponding to the removal of the black vertex from the current mesh.find the holes left in S by removing all triangles incident at vertices of V ;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>A triangle mesh at variable resolution extracted from the MT for Mount Marcy: top view, prespective wireframe, and solid; the viewpoint is the red point on the middle of the left edge in the top view. The full resolution mesh contains 50562 triangles, this mesh only 6322; the average extraction times for different viewpoint positions were about 100 milliseconds. 69451 triangles 5781 triangles, extracted in 0.0164 secs 67656 triangles 24361 triangles, extracted in 0.0436 secs 67656 triangles 6074 triangles, extracted in 0.0138 secs Triangle meshes extracted from MTs for free-form surfaces: original mesh at full resolution (left), and mesh at variable resolution (wireframe and solid); the focus point is the red point.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 summarizes</head><label>1</label><figDesc>the results of running the four bottom-up construction algorithms. Variants A1-2-3 have been applied by us-</figDesc><table><row><cell></cell><cell cols="2">San Bernardino</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Variant</cell><cell>(a)</cell><cell>(b)</cell><cell>(c)</cell><cell>(d)</cell><cell>(e)</cell></row><row><cell>A1</cell><cell>32258</cell><cell>91642</cell><cell>29</cell><cell>2.60</cell><cell>11</cell></row><row><cell>A2</cell><cell>32258</cell><cell>86181</cell><cell>27</cell><cell>2.38</cell><cell>11</cell></row><row><cell>A3</cell><cell>32258</cell><cell>89170</cell><cell>90</cell><cell>7.89</cell><cell>11</cell></row><row><cell>A4</cell><cell>32258</cell><cell>84971</cell><cell>89</cell><cell>7.84</cell><cell>13</cell></row><row><cell></cell><cell cols="2">Mount Marcy</cell><cell></cell><cell></cell><cell></cell></row><row><cell>Variant</cell><cell>(a)</cell><cell>(b)</cell><cell>(c)</cell><cell>(d)</cell><cell>(e)</cell></row><row><cell>A1</cell><cell>50562</cell><cell>144082</cell><cell>30</cell><cell>2.68</cell><cell>11</cell></row><row><cell>A2</cell><cell>50562</cell><cell>139523</cell><cell>28</cell><cell>2.36</cell><cell>11</cell></row><row><cell>A3</cell><cell>50562</cell><cell>142017</cell><cell>98</cell><cell>8.26</cell><cell>11</cell></row><row><cell>A4</cell><cell>50562</cell><cell>134565</cell><cell>123</cell><cell>10.42</cell><cell>12</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Parameters of the MT built through the four bottom-up variants.</figDesc><table /><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Surface Approximation and Geometric Partitions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">K</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Suri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings ACM-SIAM Symposium on Discrete Algorithms</title>
		<meeting>ACM-SIAM Symposium on Discrete Algorithms</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="24" to="33" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Multiresolution Decimation Based on Global Error</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ciampalini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<idno>TRC96-021</idno>
	</analytic>
	<monogr>
		<title level="j">CNUCE-CNR</title>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>To appear on The Visual Computer</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Representation and Visualization of Terrain Surfaces at Variable Resolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings International Symposium on Scientific Visualization, R. Scateni</title>
		<meeting>International Symposium on Scientific Visualization, R. Scateni<address><addrLine>Cagliari (Italy</addrLine></address></meeting>
		<imprint>
			<publisher>World Scientific</publisher>
			<date type="published" when="1995-09" />
			<biblScope unit="page" from="50" to="68" />
		</imprint>
	</monogr>
	<note>Extended version to appear on The Visual Computer</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Simplification Envelopes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Brooks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96)</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="119" to="128" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">On the Levels of Detail in Terrains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">T G</forename><surname>Dobrindt</surname></persName>
		</author>
		<idno>UU-CS-1995-12</idno>
		<ptr target="ftp://ftp.cs.ruu.nl/pub/RUU/CS/techreps/CS-1995/1995-12.ps.gz" />
	</analytic>
	<monogr>
		<title level="m">Proceedings 11th ACM Symposium on Computational Geometry</title>
		<meeting>11th ACM Symposium on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="1995-04" />
			<biblScope unit="page" from="26" to="27" />
		</imprint>
		<respStmt>
			<orgName>Utrecht University, Dept. of Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>Also available in long version as</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hierarchical Triangulation for Multiresolution Surface Description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="363" to="411" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">A Formal Approach to Multiresolution Modeling, Theory and Practice of Geometric Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
		<editor>W. Straßer, R. Klein, R. Rau</editor>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Automatic Extraction of Irregular Network Digital Terrain Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Fowler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Little</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH&apos;79)</title>
		<imprint>
			<date type="published" when="1979" />
			<biblScope unit="page" from="199" to="207" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Mesh Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuelzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings (SIGGRAPH &apos;93)</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings (SIGGRAPH &apos;96)</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Superfaces: Polygonal Mesh Simplification with Bounded Error</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Kalvin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Taylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computational Geometry and Applications</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="64" to="77" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Dynamic Maintenance of Delaunay Triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Mount</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Saalfeld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings Auto-Carto</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="219" to="233" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Generation of Multiresolution Models from CAD Data for Real Time Rendering, Theory and Practice of Geometric Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Klein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Straßer</surname></persName>
		</author>
		<editor>W. Straßer, R. Klein, R. Rau</editor>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Randomized Incremental Construction of Delaunay and Voronoi Diagrams</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Knuth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">J</forename><surname>Guibas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sharir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="381" to="413" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Comparison of Existing Methods for Building Triangle Irregular Network Models of Terrain from Grid Digital Elevation Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Geographical Information Systems</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="267" to="285" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Real-time, Continuous Level of Detail Rendering of Height Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">F</forename><surname>Hodges</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Faust</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">A</forename><surname>Turner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings (SIGGRAPH&apos;96)</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="109" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Variable Resolution Terrain Surfaces, Proceedings Eight Canadian Conference on Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="202" to="210" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Istituto per la Matematica Applicata</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<idno>N.12/96</idno>
		<ptr target="http://www.ima.ge.cnr.it/STAFF/puppo-en.html" />
	</analytic>
	<monogr>
		<title level="m">Available as</title>
		<meeting><address><addrLine>Genova, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>Variable Resolution Triangulations. submitted for publication</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Decimation of Triangle Mesh</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH &apos;92)</title>
		<meeting>SIGGRAPH &apos;92)</meeting>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Tamassia</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Strategic Directions in Computational Geometry Working Group Report</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="page">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">A triangle mesh at variable resolution extracted from the MT for Mount Marcy: top view, prespective wireframe</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
	<note>and solid; the viewpoint is the red point on the middle of the left edge in the top view. The full resolution MESH contains 50562 triangles, this mesh only 6322</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Triangle meshes extracted from MTs for free-form surfaces: original mesh at full resolution (left), and mesh at variable resolution (wireframe and solid)</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
