<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">An Anti-Aliasing Technique for Splatting</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Edward</forename><surname>Swan</surname><genName>II</genName></persName>
							<email>swan@acm.org</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department" key="dep1">The Naval Research Laboratory Washington</orgName>
								<orgName type="department" key="dep2">DC †</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Mueller</surname></persName>
							<email>mueller@cis.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Torsten</forename><surname>Möller</surname></persName>
							<email>moeller@cis.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Naeem</forename><surname>Shareef</surname></persName>
							<email>shareef@cis.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
							<email>crawfis@cis.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roni</forename><surname>Yagel</surname></persName>
							<email>yagel@cis.ohio-state.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer and Information Science</orgName>
								<orgName type="institution">The Ohio State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">An Anti-Aliasing Technique for Splatting</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:37+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>volume rendering</term>
					<term>splatting</term>
					<term>direct volume rendering</term>
					<term>resampling</term>
					<term>reconstruction</term>
					<term>anti-aliasing</term>
					<term>perspective projection</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Splatting is a popular direct volume rendering algorithm. However, the algorithm does not correctly render cases where the volume sampling rate is higher than the image sampling rate (e.g. more than one voxel maps into a pixel). This situation arises with orthographic projections of high-resolution volumes, as well as with perspective projections of volumes of any resolution. The result is potentially severe spatial and temporal aliasing artifacts. Some volume ray-casting algorithms avoid these artifacts by employing reconstruction kernels which vary in width as the rays diverge. Unlike ray-casting algorithms, existing splatting algorithms do not have an equivalent mechanism for avoiding these artifacts. In this paper we propose such a mechanism, which delivers high-quality splatted images and has the potential for a very efficient hardware implementation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>In the past several years, direct volume rendering has emerged as an important technology in the fields of computer graphics and scientific visualization, and splatting is one of several popular techniques for direct volume rendering. The majority of images produced through direct volume rendering have used orthographic projections, in part because such projections are useful in many of the application areas (such as biomedical and fluid flow visualization) which have initially motivated work in volume rendering. Perspective projections offer a viewpoint which more naturally correlates to the way we perceive the physical world, and perspective projections are essential when it is desirable to "fly through" the data -flight simulators are one example. A perspective projection of a volume dataset gives another perceptual cue which can be employed when comprehending spatial relationships.</p><p>Any volume rendering algorithm which supports perspective projections has to deal with the problem of non-uniform sampling produced by diverging viewing rays. If not addressed this can result in potentially severe aliasing artifacts. Although other volume rendering approaches have dealt with this problem (e.g. raycasting <ref type="bibr" target="#b14">[15]</ref> and shear-warp <ref type="bibr" target="#b4">[5]</ref> <ref type="bibr" target="#b5">[6]</ref>), to date the problem has not been addressed in the context of splatting. In this paper, we present a modification to the splatting algorithm which prevents the aliasing that arises from this non-uniform sampling. The same type of resampling problems occur with an orthographic projection if the volume resolution is higher than the image resolution (e.g. if many voxels project into each pixel). Our modified splatting algorithm also avoids aliasing in this situation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">PREVIOUS WORK</head><p>The splatting technique has been used to directly render volumes of various grid structures <ref type="bibr" target="#b10">[11]</ref> <ref type="bibr" target="#b20">[21]</ref> and for both scalar <ref type="bibr" target="#b7">[8]</ref>[21] <ref type="bibr" target="#b21">[22]</ref> [23] and vector fields <ref type="bibr" target="#b3">[4]</ref>. The basic algorithm, first described by Westover <ref type="bibr" target="#b20">[21]</ref>, projects each voxel to the screen and composites it into an accumulating image. It solves the hidden surface problem by using a painter's algorithm: it visits the voxels in either a backto-front or front-to-back order, with closer voxels overwriting farther voxels. Splatting is an object-order algorithm: the resulting image is built up voxel-by-voxel. This is in contrast to volume rendering by ray-casting, which is an image-order algorithm that builds up the resulting image pixel by pixel.</p><p>As each voxel is projected onto the image plane, the voxel's energy is spread over the image raster using a reconstruction kernel centered at the voxel's projection point. This reconstruction kernel is called a "splat"; its name comes from the colorful analogy of throwing a snowball against a wall, with the spreading energy analogous to the "splatting" snow. Conceptually, the splat is considered a spherically symmetric 3D reconstruction kernel centered at a voxel. But because the splat is reconstructed into a 2D image raster, it can be implemented as a 2D reconstruction kernel. This 2D kernel, called a "footprint function", contains the integration of the 3D kernel along one dimension. Because the 3D kernel is spherically symmetric, it does not matter along which axis this integration is performed. The integration is usually precomputed, and the footprint function is represented as a finely sampled 2D lookup table. The 2D table is centered at the projection point and sampled by the pixels which lie within its extent. Each pixel composites the value it already contains with the new value from the footprint table. Under certain conditions (regular volume grid spacing, orthographic view projection, radially symmetric splat kernel) the footprint table can be computed once and used unmodified for all voxels. Under different conditions, the footprint function will vary, and consequently must be re-computed for each view (when there is a non-symmetric kernel) and possibly for each voxel (when there is a perspective projection).</p><p>Recent work has extended the original splatting algorithm to achieve higher quality as well as faster rendering. To improve image quality, in later work Westover <ref type="bibr" target="#b21">[22]</ref>[23] first accumulates splats onto a 2D sheet that is aligned with the volume axis most parallel to the view plane, and then composites the sheets in depth order into the image with a matting operation. Image quality is also affected by the size, shape, and type of the reconstruction kernel used. Laur and Hanrahan <ref type="bibr" target="#b7">[8]</ref> change the size of a splat based upon the cell it represents in an octree representation of the volume. Mao <ref type="bibr" target="#b10">[11]</ref> uses spherical and ellipsoidal kernels with varying sizes to splat non-rectilinear grids. Mueller and Yagel <ref type="bibr" target="#b13">[14]</ref> use an image-order splatting approach which improves accuracy when using a perspective projection. And while to date most splatting implementations have used a Gaussian reconstruction kernel, other kernel types can generate higher quality images. Max <ref type="bibr" target="#b11">[12]</ref> and Crawfis and Max <ref type="bibr" target="#b3">[4]</ref> propose quadratic spline functions, optimized for certain conditions, as splat kernels.</p><p>To improve rendering speed, Westover <ref type="bibr" target="#b21">[22]</ref> maps view dependent footprints with a circular or elliptical shape to a generic footprint table which only needs to be computed once. Laur and Hanrahan <ref type="bibr" target="#b7">[8]</ref> approximate splats with a triangle mesh and use graphics hardware to quickly scan convert the footprint. Crawfis and Max <ref type="bibr" target="#b3">[4]</ref> and Yagel et al. <ref type="bibr" target="#b25">[26]</ref> also use texture mapping hardware to quickly render splats represented as textures mapped to polygons. Splatting can also be accelerated by preprocessing the volume and culling voxels which will not contribute to the final image. Laur and Hanrahan <ref type="bibr" target="#b7">[8]</ref> cull with an octree structure, and Yagel et al. <ref type="bibr" target="#b25">[26]</ref> extract and store only the most visually significant voxels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">ADVANTAGES AND DISADVANTAGES OF SPLATTING</head><p>In this section we compare splatting to other rendering algorithms. When listing the disadvantages of splatting, we distinguish between inherent problems and those that are due to inaccuracies in current splatting implementations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Advantages of Splatting</head><p>The main advantage of splatting over ray-casting is that splatting is inherently faster. In ray-casting, reconstruction is performed for each sample point along the ray. At each sample point a convolution filter is applied. Even if, on the average, each of the voxels are sampled only once, ray-casting has a complexity of at least . In splatting, on the other hand, the convolution is precomputed, and every voxel is splatted exactly once. Each splat requires compositing operations. Therefore, one can expect a complexity of at most . This gives splatting an inherent speed advantage. An additional benefit is that one can afford to employ larger reconstruction kernels and improve the accuracy of splatting, incurring an penalty instead of an penalty. Because splatting is an object-order rendering algorithm, it has a simple, static parallel decomposition <ref type="bibr" target="#b8">[9]</ref> <ref type="bibr" target="#b22">[23]</ref>, where the volume raster is evenly divided among the processors. It is more difficult to distribute the data with ray-driven approaches, because each ray might need to access many different parts of the volume raster.</p><p>Splatting is trivially accelerated by ignoring empty voxels. It can be accelerated further by extracting and storing just those voxels which contribute to the final image <ref type="bibr" target="#b25">[26]</ref>, which prevents traversing the entire volume raster. This is equivalent to similar acceleration techniques for volume ray-casting, such as spaceleaping <ref type="bibr" target="#b24">[25]</ref> or fitted extents <ref type="bibr" target="#b18">[19]</ref>, which accelerate ray-casting by quickly traversing empty space.</p><p>Because splatting generates images in a strict front-to-back or back-to-front order, observing the partially created images can give insight into the data which is not available from image-order techniques. In particular, with a back-to-front ordering, partial images reveal interior structures, while with a front-to-back ordering it is possible to terminate the rendering early <ref type="bibr" target="#b13">[14]</ref>.</p><p>Finally, splatting is the preferred volume rendering technique when the desired result is an X-ray projection image instead of the usual composited image <ref type="bibr" target="#b13">[14]</ref>. This is because the summation of pre-integrated reconstruction kernels is both faster and more accurate than ray-casting approaches, which require the summation of many discrete sums. Creating X-ray projection images from volumes is an important step in the reconstruction algorithms employed by tomographic medical imaging devices <ref type="bibr" target="#b13">[14]</ref> <ref type="bibr" target="#b2">[3]</ref>, such as CT and PET.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Inherent Disadvantages of Splatting</head><p>There are some disadvantages inherent to the splatting method. One is that while an ideal volume renderer first performs the process of reconstruction and then the process of integration (or composition) for the entire volume, splatting forces both reconstruction and integration to be performed on a per-splat basis. The result is incorrect where the splats overlap, and the splats must overlap to ensure a smooth image. This problem is particularly noticeable when the traversal order of the volume raster changes during an animation <ref type="bibr" target="#b21">[22]</ref>.</p><p>Another disadvantage of splatting lies in the ordering of the classification, shading, and reconstruction steps. For efficiency reasons, in splatting both (transfer function-based) classification and shading are usually applied to the data prior to reconstruction. This is also commonly done in ray-casting <ref type="bibr" target="#b6">[7]</ref>. However, this produces correct results only if both classification and shading are linear operators. The result of employing a non-linear classification or illumination model may cause the appearance of pseudo-features that do not exist in the original data. For example, if we want to find the color and opacity at the center point between the two data values a and b using linear interpolation, we would compute performing classification first, but the correct value would be performing interpolation first. Clearly, if C is a non-linear operator, these two results will be different. Requiring C to be linear generally means that the shading model can only model diffuse illumination. While methods exist for ray-casting that perform classification and shading after reconstruction <ref type="bibr">[</ref> </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Implementation-Based Disadvantages of Splatting</head><p>With a ray-casting volume rendering algorithm it is easy to terminate the rays early when using a front-to-back compositing scheme, which can substantially accelerate rendering. Although not reported in the literature, early termination could potentially be implemented for splatting by employing the dynamic screen mechanism <ref type="bibr" target="#b17">[18]</ref> (also used by <ref type="bibr" target="#b5">[6]</ref> for shear-warp volume rendering). Also, the ray-driven splatting <ref type="bibr" target="#b13">[14]</ref> implementation can support early ray termination.</p><p>While ray-casting of volumes was originally implemented for both orthographic and perspective viewing, splatting was fully implemented only for orthographic viewing. Although ray-casting has to include some mechanism to deal with the non-uniform reconstruction that is necessary with diverging viewing rays, it seems splatting needs to address several more inaccuracies. For the following discussion, it is useful to adopt the definitions given in <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b13">[14]</ref>, and <ref type="bibr" target="#b25">[26]</ref> which view the footprint table as a polygon in world space centered at the voxel position with the pre-integrated filter kernel function texture-mapped onto it. As is described in <ref type="bibr" target="#b13">[14]</ref>, when mapping the footprint polygon onto the screen an accurate perspective splatting implementation must: (1) align the footprint polygon perpendicularly with the projector (sight ray) that goes through the polygon center; (2) perspectively project it to the screen to get its screen extent, and (3) ensure that the projector (sight ray) for every pixel that falls within this extent traverses the polygon at a perpendicular angle as well. All three conditions are violated in Westover's splatting algorithm <ref type="bibr" target="#b20">[21]</ref>. Mueller and Yagel <ref type="bibr" target="#b13">[14]</ref> give a voxel-driven splatting approach that takes care of con- <ref type="formula">1</ref>and <ref type="formula">2</ref>, and a ray-driven approach that fulfills all three conditions.</p><formula xml:id="formula_0">k 3 n 3 k 3 n 3 k 2 k 2 n 3 O k 2 ( ) O k 3 ( ) C a ( ) C b ( ) + ( )2 ⁄ C a b + ( ) 2 ⁄ ( ) dition</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">AN ANTI-ALIASING TECHNIQUE FOR SPLATTING</head><p>In this section we describe our splatting-based anti-aliasing method and argue for its correctness. In Section 4.1 we describe why anti-aliasing is needed for volume rendering algorithms. In Section 4.2 we develop an expression (Equation 2) which, if satisfied by a given volume rendering algorithm, indicates that the algorithm will not produce the sample-rate aliasing artifacts that arise from the resampling phase of the rendering process. In Section 4.3 we describe our anti-aliasing method, and in Section 4.4 we show that our method satisfies the equation developed in Section 4.2, which argues for the correctness of the method. Section 4.5 describes the anti-aliasing method's frequency domain characteristics and discusses the effects of using a non-ideal reconstruction kernel. Finally, Section 4.6 analyzes the error that results from the way the technique estimates the local sampling rate.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">The Need for Anti-Aliasing in Volume Rendering</head><p>The process of volume rendering is based on the integration (or composition), along an integration grid, of the volume raster. This integration grid is composed of sight projectors (or rays) which pass from the eye point, through the view plane, and into the volume raster. Before this integration can occur, the volume raster has to be reconstructed and then resampled along the integration grid. This is illustrated in <ref type="figure" target="#fig_0">Figure 1</ref> for a perspective view of the volume, where the volume raster is shown as a lattice of dots, and the integration grid is shown as a series of rays, cast through pixels, which traverse the volume raster. <ref type="figure" target="#fig_0">Figure 1a</ref> shows the scene in eye space, where the eye is located at point and is looking down the positive z-axis (denoted ). The perspective transformation means the integration grid diverges as it traverses the volume. <ref type="figure" target="#fig_0">Figure 1b</ref> shows the same scene in perspective space, after perspective transformation and perspective division. Here the volume raster is distorted according to the perspective transformation, and the integration grid lines are parallel. Because of this the eye is no longer located at a point, but can be considered the plane .</p><p>The reconstruction and resampling of the volume raster onto the integration grid has to be done properly to avoid aliasing artifacts. Ideally, aliasing is avoided by (1) sampling above the Nyquist limit, and (2) reconstructing with an ideal filter. The aliasing that results from an insufficient sampling rate (below the Nyquist limit) is called prealiasing -it is caused by energy from the alias spectra spilling over into the primary spectrum. The aliasing that results from a non-ideal reconstruction filter is called postaliasing -it is caused by the non-ideal filter picking up energy from the alias spectra beyond the Nyquist limit (see <ref type="figure" target="#fig_3">Figure 5</ref> and <ref type="bibr" target="#b15">[16]</ref>[10] <ref type="bibr" target="#b23">[24]</ref>). In practice, it is not possible to implement an ideal reconstruction filter, and so criteria (2) cannot be achieved -any realizable filter inevitably results in a tradeoff among aliasing, blurring, and other artifacts <ref type="bibr" target="#b9">[10]</ref>. However, reconstruction filters previously used for splatting, in particular Gaussian filters, contribute very little postaliasing at the cost of substantial blurring <ref type="bibr" target="#b9">[10]</ref>. In current splatting implementations, the great majority of aliasing is prealiasing; it arises from not achieving criteria <ref type="bibr" target="#b0">(1)</ref>. Therefore, in the rest of this paper, when referring to the term 'aliasing' we generally mean prealiasing, or aliasing that results from not sampling above the Nyquist limit.</p><p>It may be possible to sample above the Nyquist limit, but if this is not possible then aliasing can also be avoided by low-pass filtering the volume to reduce its frequency content. For an orthographic view this low-pass filtering must be applied to the entire volume, but for a perspective view low-pass filtering may only be required for a portion of the volume. This can most easily be seen in perspective space <ref type="figure" target="#fig_0">(Figure 1b)</ref>. Note that there is a distance along the axis, denoted , where the sampling rate of the volume raster and the sampling rate of the integration grid are the same. Previous to this distance there is less than one voxel per pixel, and beyond this distance there is more than one voxel per pixel. When there is more than one voxel per pixel, the volume raster can contain frequency information which is higher than the integration grid can represent, and so aliasing is possible. In the next section this concept is developed into an equation.</p><p>Note that same concept holds in eye space ( <ref type="figure" target="#fig_0">Figure 1a</ref>). Here there is an equivalent distance along the axis, denoted k, where the sampling rates of the volume raster and the integration grid are the same (note that in general , but the two distances are related by the perspective transformation). Aliasing artifacts can occur beyond k, when the distance between adjacent rays is greater than one voxel.</p><p>Volume ray-casting algorithms generally perform the reconstruction in eye space. Some avoid aliasing by employing recon- This provides an amount of low-pass filtering which is proportional to the distance between the rays. Splatting algorithms generally perform the reconstruction in perspective space. Unlike raycasting algorithms, existing splatting algorithms do not have an equivalent mechanism to avoid aliasing. In this paper we propose such a mechanism.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Necessary Conditions to Avoid Aliasing</head><p>In this section we give the conditions which are necessary for the volume rendering resampling process to avoid introducing samplerate aliasing artifacts into the integration grid samples. Let s be the volume raster grid spacing <ref type="figure" target="#fig_0">(Figure 1a)</ref>, and be the volume raster sampling rate. The volume raster contains aliasing when either (1) the sampled function is not bandlimited, or (2) the function is bandlimited at frequency w but the sampling rate ρ is below the Nyquist limit:</p><p>If the first condition holds then aliasing will be present no matter how large ρ becomes. However, if the function is bandlimited at w, then as long as <ref type="bibr" target="#b0">(1)</ref> there is no aliasing in the volume raster. Assuming that Equation 1 is true, our job is to resample the volume raster onto the integration grid in a manner that guarantees that no aliasing is introduced.</p><p>Let φ represent the sampling frequency of the integration grid. For a perspective projection the integration grid diverges <ref type="figure" target="#fig_0">(Figure 1a</ref>) and therefore φ is a function of distance along the axis:</p><p>, where d is the distance. For an orthographic projection we can still express as a function, but it will have a constant value. As illustrated in <ref type="figure" target="#fig_0">Figure 1</ref>, at k the sampling rates of the volume raster and the integration grid are the same:</p><p>The distance k means there are two cases to consider:</p><p>•</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Case 1:</head><p>. This is the case for the portion of the grid in <ref type="figure" target="#fig_0">Figure 1a</ref> previous to k. <ref type="bibr">Here</ref> , and if Equation 1 holds then and there is no aliasing.</p><p>•</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Case 2:</head><p>. This is the case for the portion of the grid in <ref type="figure" target="#fig_0">Figure 1a</ref> beyond k. Here , and so it may be that . If this is the case, then the integration grid will contain an aliased signal once d is large enough.</p><p>This argument shows that, given Equation 1, volume rendering algorithms do not have to perform anti-aliasing as long as Case 1 holds (previous to the distance k). However, once Case 2 holds (beyond k), it is necessary to low-pass filter the volume raster to avoid aliasing. Ideally the amount of this filtering is a function of d * , and reduces the highest frequency in the volume raster from w to . To avoid aliasing there must be enough low-pass filtering so that <ref type="bibr" target="#b1">(2)</ref> By showing that this equation holds for a particular volume rendering technique, we can claim that the technique does not introduce sample-rate aliasing artifacts when resampling from the volume raster onto the integration grid.</p><p>* This is because a portion of the volume raster may not require any filtering (Case 1), and for the portion that does require filtering (Case 2), if there is a perspective projection then the amount of filtering required is itself a function of d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">An Anti-Aliasing Method for Splatting</head><p>As mentioned in Section 4.1 above, volume ray-casting algorithms avoid aliasing by using reconstruction kernels which increase in size as the integration grid rays diverge, which satisfies Equation 2. In this section we give a similar anti-aliasing algorithm for splatting.</p><p>As shown in <ref type="figure" target="#fig_0">Figure 1a</ref>, at distance k the ratio of the volume raster sampling frequency ρ and the integration grid sampling frequency is one-to-one. k can be calculated from similar triangles:</p><formula xml:id="formula_1">(3)</formula><p>where s is the sample spacing of the volume raster, p is the extent of a pixel, and D is the distance from the eye point to the screen. <ref type="figure" target="#fig_1">Figure 3</ref> gives a "side view" of splatting as implemented by Westover <ref type="bibr" target="#b20">[21]</ref>[22] <ref type="bibr" target="#b22">[23]</ref>, as well as our anti-aliasing method. In <ref type="figure" target="#fig_1">Figure 3</ref> the y-axis is drawn vertically, the z-axis is drawn horizontally, the x-axis comes out of and goes into the page, and diagrams are shown in both eye space and perspective space . The top row illustrates standard splatting. As in <ref type="figure" target="#fig_0">Figure 1</ref>, D is the distance of the view plane from the eye point, and k is calculated from Equation 3. For this example we are rendering a single row of splats, which are equally spaced along the axis <ref type="figure" target="#fig_1">(Figure 3a)</ref>. Each splat is the same size in eye space. <ref type="figure" target="#fig_1">Figure 3b</ref> shows the same scene in perspective space. Here and are D and k expressed in coordinates. As expected, because of the non-linear perspective transformation, the splat spacing is now non-uniform along the axis, and the size of the splats decreases with increasing distance from the eye.</p><p>The bottom row illustrates our anti-aliasing method. Previous to k we draw splats the same size in eye space <ref type="figure" target="#fig_1">(Figure 3c</ref>). Beginning at k, we scale the splats so they become larger with increasing distance from the view plane. This scaling is proportional to the viewing frustum, and is given in Equation 4 below. <ref type="figure" target="#fig_1">Figure 3d</ref> shows what happens in perspective space. Previous to we draw the splats with decreasing sizes according to the perspective transformation. Beginning at , we draw all splats the same size, so splats with a coordinate greater than are the same size as splats with a coordinate equal to . <ref type="figure">Figure 2</ref> gives the geometry for scaling splats drawn beyond k. If a splat drawn at distance k has the radius , then the radius of a splat drawn at distance is the projection of along the viewing frustum. This is calculated by similar triangles:</p><p>Scaling the splats drawn beyond k is not enough to provide anti-aliasing, however. In addition to scaling, the energy that these splats contribute to the image needs to be the same as it would</p><formula xml:id="formula_3">ρ 1 s ⁄ = ρ 2w. &lt; ρ 2w ≥ z e φ φ d ( ) = φ d ( ) φ k ( ) ρ. = d k &lt; φ d ( ) ρ &gt; φ d ( ) 2w &gt; d k ≥ φ d ( ) ρ ≤ φ d ( ) 2w &lt; w d ( ) φ d ( ) 2w d ( ). ≥ φ d ( ) k s D p ---- = ,</formula><p>x e y e z e , , ( )  <ref type="figure">Figure 2</ref>, both splat 1 and splat 2 project to the same sized area on the view plane. Because they are composited into the view plane in the form of two-dimensional "footprint" filter kernels <ref type="bibr" target="#b21">[22]</ref>, the amount of energy the splats contribute to the view plane is proportional to their areas. We want the amount of energy per unit area contributed by the splats to be the same. We accomplish this by attenuating the energy of splat 2 according to the ratio of the areas of the splats: <ref type="bibr" target="#b4">(5)</ref> where , are the areas of the splats and , are some energy measure for the splats. Examples of energy measures include the volume under the splat kernel or the alpha channel of the polygon defining the 2D splat footprint.</p><formula xml:id="formula_4">x p y p z p ,<label>, ( ) z</label></formula><p>Assume for now that the filter kernel is a circle for both splats. Then the areas of the splats are and . By Equation 4 we can express in terms of :</p><p>Then <ref type="bibr" target="#b6">(7)</ref> which can be simplified to</p><p>Although here we have derived Equation 8 using circular filter kernels, we can also use any other two-dimensional shape for the kernel, such as an ellipse, square, rectangle, parallelogram, etc. and derive the same equation. We use Equation 8 to attenuate the energy of all splats drawn beyond k.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Correctness of the Method</head><p>We now demonstrate that Equation 2 holds for our anti-aliasing technique. We begin by deriving expressions for the two functions in Equation 2 -(the integration grid sampling frequency at d) and</p><p>(the maximum volume raster frequency at d). We derive the integration grid sampling frequency with a similar-triangles argument. Consider <ref type="figure" target="#fig_2">Figure 4</ref>, where q is the integration grid spacing at distance d from the eyepoint. By similar triangles   </p><formula xml:id="formula_7">E 2 A 1 A 2 ------E 1 , = A 1 A 2 E 1 E 2 A 1 πr 1 2 = A 2 πr 2 2 = A 2 r 1 A 2 π r 1 d k ---     2 . = E 2 πr 1 2 π r 1 d k ---     2 -------------------           E 1 = E 2 k d ---     2 E 1 . = φ d ( ) w d ( ) φ d ( )</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Now</head><p>, and is simply , the integration grid sampling frequency at d. Thus we have <ref type="bibr" target="#b10">(11)</ref> The maximum volume raster frequency can be derived from the scaling property of the Fourier transform <ref type="bibr" target="#b0">[1]</ref>: <ref type="bibr" target="#b11">(12)</ref> where "↔" indicates a Fourier transform pair. This shows that widening a function by the factor a in the spatial domain is equivalent to narrowing the function in the frequency domain by the factor . In our anti-aliasing method, the widening for the splat kernels drawn beyond k is given by Equation 4: <ref type="formula">13</ref>Thus we have <ref type="bibr" target="#b13">(14)</ref> which shows that as the splat kernels are widened by , the frequency components of the function they reconstruct are narrowed by . Since all the frequencies of the volume raster are attenuated by , the maximum frequency w is attenuated by the same amount, and we have:</p><formula xml:id="formula_8">(15)</formula><p>Now we are ready to show that our technique satisfies Equation 2. We start with Equation 1: which implies that the volume raster has sampled the function above the Nyquist limit. Multiplying both sides by we have <ref type="bibr" target="#b15">(16)</ref> which we can write as:</p><p>This derivation says that if the volume raster has sampled the function above the Nyquist limit, our anti-aliasing technique provides enough low-pass filtering so that aliasing is not introduced when the volume raster is resampled onto the integration grid. Note that this derivation only deals with the prealiasing that results from an inadequate sampling rate -it does not address the aliasing or blurring effects which result from using a non-ideal reconstruction filter.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Frequency Domain Behavior</head><p>This section describes the frequency-domain behavior of the antialiasing method, and it illustrates the effects of reconstructing with a non-ideal reconstruction kernel. <ref type="figure" target="#fig_3">Figure 5</ref> compares the frequency-domain behavior of the standard splatting technique with the new anti-aliasing technique. For clarity, the diagrams are all drawn in one dimension; the extension to three dimensions is straightforward. <ref type="figure" target="#fig_3">Figure 5a</ref> shows what happens in the frequency domain when resampling from the volume raster onto the integration grid previous to the distance k (e.g.</p><p>). There is a primary spectrum at the origin of frequency space, and alias spectra replicated at regular intervals of , the integration grid frequency for the distance d. Assuming Equation 1 is true, then and the primary and alias spectra do not overlap, and therefore there is no prealiasing <ref type="bibr" target="#b15">[16]</ref> <ref type="bibr" target="#b9">[10]</ref>. As shown, an ideal reconstruction filter would have the value 1 between and , and 0 elsewhere, which would yield the primary spectrum. Of course, an ideal filter cannot be implemented, and a standard, realizable splatting reconstruction kernel is also shown. This filter blurs the primary spectrum, yielding the reconstructed spectrum as shown. A realizable filter also typically picks up some energy beyond the Nyquist limit of , and so it is susceptible to postaliasing as well <ref type="bibr" target="#b15">[16]</ref> <ref type="bibr" target="#b9">[10]</ref>. <ref type="figure" target="#fig_3">Figure 5b</ref> shows what happens in standard splatting beyond the distance k (e.g.</p><p>).</p><p>Here has shrunk, which pulls the alias spectra into the primary spectrum, resulting in prealiasing. </p><formula xml:id="formula_10">1 q --- 1 s --- k d ---. ⋅ = 1 s ⁄ ρ = 1 q ⁄ φ d ( ) φ d ( ) ρ k d ---. ⋅ = w d ( ) f at ( ) 1 a ---F 1 a ---ω     , ↔ 1 a ⁄ a d k ---. = f d k ---t     k d ---F k d ---ω     , ↔ d k ⁄ k d ⁄ k d ⁄ w d ( ) w k d ---. ⋅ = ρ 2w, ≥ k d ⁄ ρ k d --- ⋅ 2 w k d --- ⋅     , ≥ φ d ( ) 2w d ( ). ≥</formula><formula xml:id="formula_11">(c) φ d ( ) 1 2 ---φ d ( ) φ d ( ) - 1 2 ---φ d ( ) - φ d ( ) 1 2 ---φ d ( ) φ d ( ) - 1 2 ---φ d ( ) - φ d ( ) 1 2 ---φ d ( ) φ d ( ) - 1 2 ---φ d ( ) - reconstruction kernel reconstruction kernel reconstruction kernel d k &lt; φ d ( ) φ d ( ) 2w &gt; 1 2 ⁄ ( )φ d ( ) - 1 2 ⁄ ( )φ d ( ) 1 2 ⁄ ( )φ d ( ) d k ≥ φ d ( )</formula><p>An ideal reconstruction kernel would shrink as well -thus getting larger in the spatial domain -which would pick up some prealiasing but reject the postaliasing. A standard splatting reconstruction kernel stays the same size, so it picks up both more of the prealiasing and the postaliasing. <ref type="figure" target="#fig_3">Figure 5c</ref> shows what happens with the anti-aliasing method at the same location -the splatting reconstruction kernel shrinks in the frequency domain according to d. This eliminates almost all of the postaliasing and most of the prealiasing, at the expense of blurring.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Integration Grid Sampling Rate Error</head><p>As calculated from <ref type="figure" target="#fig_0">Figure 1</ref> and Equation 3, the integration grid sampling rate at position k is only exactly correct for splats centered on the axis. In this section we analyze the amount of error incurred for splats that do not lie along this axis.</p><p>The geometry of the calculation is given in <ref type="figure" target="#fig_4">Figure 6</ref>. For the two rays shown, let r be the length, calculated from Equation 4, of the radius of the splat. A more accurate way to approximate the integration grid sampling rate is to measure the "perpendicular" distance between the two rays, given by (as shown is only perpendicular to the bottom ray; it is not quite perpendicular to the top ray). As calculated from the angle α, the error is given by , where we say "approximately equal" because the angle β is not exactly a right angle. This means that Equation 4 underestimates by a small amount, and thus voxels which do not lie on the axis receive a greater amount of low-pass filtering than they actually require. For example, at the view cone boundary with Equation 4 chooses a kernel that is about times larger than it needs to be. It is important to note, however, that because this error results in more low-pass filtering than is actually required, Equation 2 is still satisfied and so this error does not result in aliasing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">RESULTS</head><p>In our implementation of this algorithm we make use of rendering hardware to quickly draw the splats, in a manner similar to <ref type="bibr" target="#b3">[4]</ref>, <ref type="bibr" target="#b13">[14]</ref>, and <ref type="bibr" target="#b25">[26]</ref>. For each splat we draw a polygon in world space centered at the voxel position. The polygon is rotated so it is perpendicular to the ray passing from the eye point through the voxel position. The splat kernel is pre-computed and stored in a table which is texture mapped onto the polygon by the rendering hardware. We use the optimal cubic spline splat kernel reported in <ref type="bibr" target="#b3">[4]</ref>. We attenuate the alpha channel of the polygon as a measure of splat energy when evaluating Equation 8, and then composite the semi-transparent splat polygon into the screen buffer.</p><p>Our renderer is a modified version of the "splat renderer" reported in <ref type="bibr" target="#b25">[26]</ref>. For a given volume we extract and store a subset of the voxels. For each voxel we evaluate a transfer function , where ∇ and ρ are the gradient and density of the voxel, respectively; we include the voxel in the subset if t exceeds a user-defined threshold. We store this volume subset as a 2D array of splat rows, where each row contains only the extracted voxels. Each row is implemented as an array of voxels, but the voxels are not necessarily contiguous, and so we must store each voxel's location and normal vector. In general each row may contain a different numbers of voxels. Despite not storing the empty voxels, we can still traverse this data structure in either a back-to-front or front-to-back order. <ref type="figure" target="#fig_5">Figure 7</ref> (see color plates) shows a collection of images obtained from both a standard splatting algorithm and the antialiased algorithm reported in this paper. The images in the left column are rendered without anti-aliasing, while the images in the right column are rendered with anti-aliasing. <ref type="figure" target="#fig_5">Figures 7 (a)</ref> and (b) show a volume consisting of a single sheet, where alternate squares are colored either red or white to create a checkerboard effect. The resulting dataset contains 198K splats which are rendered into a image. In <ref type="figure" target="#fig_5">Figure 7</ref> (a) a black line is drawn at the distance k; beyond this line there is more than one voxel per pixel. As expected, the left-hand image shows strong aliasing effects, but these are smoothed out in the right-hand image.</p><p>Figures 7 (c) and (d) show a volume containing a terrain dataset acquired from a satellite photograph and a corresponding height field. The resulting dataset contains 386K splats (this is more than the expected splats because extra splats are required to fill in the "holes" formed where adjacent splats differ in height). Each column of splats is given the color of the corresponding pixel from the satellite photograph. The dataset is rendered into a image. In <ref type="figure" target="#fig_5">Figure 7</ref> (c) a black line is drawn at the distance k. The left-hand image shows strong aliasing in the upper half of the image (containing about 90% of the data); when animated, these regions show prominent flickering and strobing effects. In the right-hand image these regions have been smoothed out; and although this technique does not address temporal aliasing effects, when animated these regions are free of flickering and strobing effects.</p><p>Figures 7 (e) and (f) show a volume containing a microtubule study acquired from confocal microscopy. The resulting dataset contains 103K splats which are rendered into a image. Unlike the previous images, where the viewpoint is set so that the datasets disappear into the horizon and thus the splats have a great range of sizes (covering several pixels to much less than a single pixel), in this image the entire dataset is visible, and the range of splat sizes is much smaller. However, because the volume has a higher resolution than the image it is still liable to aliasing effects (all of the splats are drawn beyond the distance k). This is shown in the left-hand image, which contains jagged artifacts that shimmer when animated. In the right-hand image these effects have been smoothed out; when animated this shimmering effect disappears.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">FUTURE WORK</head><p>An area of future work is modifying our implementation to take better advantage of the rendering hardware. As reported in <ref type="bibr" target="#b25">[26]</ref>, depending on the machine and the number of extracted voxels, our renderer can give real-time performance. However, our current implementation does not take full advantage of the rendering speeds offered by the graphics hardware. Since the anti-aliased splats defined by Equation 4 project to the same size on the screen, it would be more efficient to draw the splats directly on the screen +z e  instead of drawing the scaled splats in eye space. We are currently looking into hardware-supported bitblt operations to provide optimal rendering speeds. Another area of future work is an effort in the opposite direction. In this project there is a mismatch between the type of rendering algorithm we have written and the available programming tools: the Silicon Graphics rendering hardware we used is designed to accelerate scenes using traditional surface graphics primitives such as polygons and spline surfaces; it does not contain an optimized splat primitive. To this end, new hardware architectures which better support operations which are common in volume rendering are needed. Some possible avenues of exploration are:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Extended bitblt-like operators that can be sub-pixel centered and subsequently composited.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Hardware support for point rendering using different reconstruction kernels (cubic, Gaussian, etc.) with common footprints (circular, elliptical, etc.). Potentially this offers a far more efficient implementation of splatting than hardware texture mapping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>A higher resolution alpha channel to allow for the accurate accumulation of very transparent splats.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>•</head><p>Splat primitives with automatic size scaling based on their zdepth.</p><p>A splat primitive has properties of both simple points (always lying in the projection plane) and texture maps (non-linear intensities across the primitive). We are currently working on scanline algorithms to efficiently render splat primitives, with the goal of future hardware implementations.</p><p>The implications of our technique for rendering other types of objects needs to be explored. As shown in <ref type="figure" target="#fig_5">Figure 7</ref> (a)-(d), one can employ our technique for traditional texture mapping. Our method obviously provides an accurate solution to the texture sampling problem -a solution which is much more accurate than either mip-maps or summed area tables <ref type="bibr" target="#b19">[20]</ref>. We are exploring this point-based approach to viewing and rendering as an alternative to the traditional scanline rendering of discrete objects, and we are exploring its applications for texture mapping, image-base rendering, and volume rendering. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>FIGURE 1 .</head><label>1</label><figDesc>Resampling the volume raster onto the integration grid. (a) In eye space. (b) In perspective space. become larger as the rays diverge [15][17].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>FIGURE 3 .</head><label>3</label><figDesc>A comparison of the standard splatting method (top) with our anti-aliased method (bottom). (a) The standard splatting method in eye space. (b) The standard splatting method in perspective space. (c) The anti-aliased splatting method in eye space. (d) The anti-aliased splatting method in perspective space.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FIGURE 4 .</head><label>4</label><figDesc>Calculating the integration grid sampling frequency.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>FIGURE 5 .</head><label>5</label><figDesc>The behavior of the anti-aliased method in the frequency domain. (a) Previous to k (d &lt; k). (b) Beyond k (d ≥ k); standard splatting method. (c) Beyond k (d ≥ k); anti-aliased splat-</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>FIGURE 6 .</head><label>6</label><figDesc>Analysis of the integration grid sampling rate error.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>FIGURE 7 .</head><label>7</label><figDesc>Rendered images. The left column is rendered with standard splatting, the right column is rendered with the anti-aliased splatting algorithm. (a)-(b) Checkerboard pattern. (c)-(d) Terrain dataset from satellite and mapping data. (e)-(f) Microtubule dataset acquired from confocal microscopy.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">ACKNOWLEDGMENTS</head><p>We acknowledge Daniel Cohen-Or for the terrain dataset and Noran Instruments for the confocal dataset. We acknowledge The Ohio Visualization Lab at The Ohio Supercomputer Center for computer access.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">The Fourier Transform and Its Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">N</forename><surname>Bracewell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1978" />
			<pubPlace>McGraw-Hill</pubPlace>
		</imprint>
	</monogr>
	<note>2nd edition</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Frequency Analysis of Gradient Estimators in Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Bentum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B A</forename><surname>Lichtenbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Malzbender</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="242" to="254" />
			<date type="published" when="1996-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Accelerated Volume Rendering and Tomographic Reconstruction Using Texture Mapping Hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of 1994 Symposium on Volume Visualization</title>
		<meeting>1994 Symposium on Volume Visualization<address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Texture Splats for 3D Scalar and Vector Field Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Max</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Visualization &apos;93</title>
		<meeting>Visualization &apos;93<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="261" to="266" />
		</imprint>
	</monogr>
	<note>October 25-29)</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH)</title>
		<imprint>
			<date type="published" when="1988-08" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="65" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Fast Volume Rendering Using a Shear-Warp Factorization of the Viewing Transformation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lacroute</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH)</title>
		<imprint>
			<date type="published" when="1994-07" />
			<biblScope unit="page" from="451" to="458" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Hierarchical Splatting: A Progressive Refinement Algorithm for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH)</title>
		<imprint>
			<date type="published" when="1991-07" />
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="285" to="288" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Data-Parallel Volume Rendering Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page" from="319" to="338" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An Evaluation of Reconstruction Filters for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">R</forename><surname>Marschner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">J</forename><surname>Lobb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Visualization &apos;94</title>
		<meeting>Visualization &apos;94<address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="100" to="107" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Splatting of Non Rectilinear Volumes Through Stochastic Resampling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Mao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="156" to="170" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">An Optimal Filter for Image Reconstruction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<editor>Graphics Gem II, J. Arvo</editor>
		<imprint>
			<publisher>Academic Press</publisher>
			<biblScope unit="page" from="101" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Classification and Local Error Estimation of Interpolation and Derivative Filters for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Machiraju</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yagel</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of 1996 Symposium on Volume Visualization</title>
		<meeting>1996 Symposium on Volume Visualization<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1996-11-01" />
			<biblScope unit="page" from="71" to="78" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fast Perspective Volume Rendering with Splatting by Utilizing a Ray-Driven Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Mueller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Visualization &apos;96</title>
		<meeting>Visualization &apos;96<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1996-11-01" />
			<biblScope unit="page" from="65" to="72" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">An Efficient Method for Volume Rendering using Perspective Projection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Novins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">X</forename><surname>Sillion</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Greenberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of San Diego Workshop on Volume Visualization</title>
		<imprint>
			<date type="published" when="1990-11" />
			<biblScope unit="page" from="95" to="102" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Oppenheim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">W</forename><surname>Shafer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Digital Signal Processing</title>
		<imprint>
			<date type="published" when="1975" />
			<publisher>Prentice-Hall</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Cube-4 -A Scalable Architecture for Real-Time Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Visualization &apos;96</title>
		<meeting>Visualization &apos;96<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1996-11-01" />
			<biblScope unit="page" from="47" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Dynamic Screen Technique for Shaded Graphics Display of Slice-Represented Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chen</forename><forename type="middle">L</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision, Graphics, and Image Processing</title>
		<imprint>
			<date type="published" when="1987-06" />
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="275" to="298" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Hardware Acceleration for Volumetric Ray Tracing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename><surname>Sobierajski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Avila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Visualization &apos;95</title>
		<meeting>Visualization &apos;95<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1995-11-03" />
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Object-Order Rendering of Discrete Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Swan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Edward</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ii</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer and Information Science, The Ohio State University</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">In proceedings of Volume Visualization Workshop</title>
		<meeting>eedings of Volume Visualization Workshop<address><addrLine>Chapel Hill, NC; Chapel Hill, NC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of North Carolina</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Footprint Evaluation for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (Proceedings of SIGGRAPH)</title>
		<imprint>
			<date type="published" when="1990-08" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="367" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">SPLATTING: A Parallel, Feed-Forward Volume Rendering Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">A</forename><surname>Westover</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, The University of North Carolina at Chapel Hill</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. Dissertation</note>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title level="m" type="main">Digital Image Warping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wolberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>IEEE Computer Society Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Accelerating Volume Animation by Space-Leaping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">proceedings of Visualization &apos;93</title>
		<meeting>Visualization &apos;93<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="62" to="69" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Grouping Volume Renderers for Enhanced Visualization in Computational Fluid Dynamics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Yagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Ebert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Scott</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Kurzion</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="117" to="132" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
