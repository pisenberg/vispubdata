<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>The order and arrangement of dimensions (variates) is crucial for the effectiveness of a large number of visualization techniques such as parallel coordinates, scatterplots, recursive pattern, and many others. In this paper, we describe a systematic approach to arrange the dimensions according to their similarity. The basic idea is to rearrange the data dimensions such that dimensions showing a similar behavior are positioned next to each other. For the similarity clustering of dimensions we need to define similarity measures which determine the partial or global similarity of dimensions. We then consider the problem of finding an optimal one-or twodimensional arrangement of the dimensions based on their similarity. Theoretical considerations show that both, the one-and the two-dimensional arrangement problem are surprisingly hard problems, i.e. they are NP-complete. Our solution of the problem is therefore based on heuristic algorithms. An empirical evaluation using a number of different visualization techniques shows the high impact of our similarity clustering of dimensions on the visualization results.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Visualization techniques are becoming increasingly important for the analysis and exploration of large multidimensional data sets, which is also called data mining [Kei 97]. A major advantage of visualization techniques over other (semi-)automatic data mining techniques (from statistics, machine learning, artificial intelligence, etc.) is that visualizations allow a direct interaction with the user and provide an immediate feedback as well as user steering, which is difficult to achieve in most non-visual approaches. The practical importance of visual data mining techniques is therefore steadily increasing, and basically all commercial data mining systems try to incorporate visualization techniques of one kind or the other (usually rather simple ones) <ref type="bibr">[KDD]</ref>. There are, however, also a number of commercial data mining products which use advanced visualization technology to improve the data mining process. Examples include the MineSet System from SGI <ref type="bibr">[SGI 96</ref> A large number of visualization techniques used in those systems, however, suffer from a well-known problem -the incidental arrangement of the data dimensions 1 in the display. The basic problem is that the data dimensions have to be positioned in some one-or two-dimensional arrangement on the screen, and this is usually done more or less by chance -namely in the order in which the dimensions happen to appear in the database. The arrangement of dimensions, however, has a major impact on the expressiveness of the visualization. Consider, for example, the parallel coordinates technique <ref type="bibr">[Ins 85,</ref><ref type="bibr">ID 90]</ref>. If one chooses a different order of dimensions, the resulting visualization becomes completely different and allows different conclusions to be drawn. Techniques such as the parallel coordinates technique and the circle segments technique [AKK 96] require a one-dimensional arrangement of the dimensions. In case of other techniques -such as the recursive pattern technique [KKA 95] or the spiral &amp; axes techniques [Kei 94, KK 94] -a two-dimensional arrangement of the dimensions is required.</p><p>The basic idea of our approach for finding an effective order of dimensions is to arrange the dimensions according to their similarity. For this purpose, we first have to define similarity measures which determine the similarity of two dimensions. These similarity measures may be based on a partial or global similarity of the considered dimensions (cf. sections 2). For determining the similarity, a simple Euclidean or more complex (e.g., Fourier-based) distance measures may be used. Based on the similarity measure, we then have to determine the similarity arrangement of dimensions. After formally defining the one-and two-dimensional arrangement problems (cf. subsection 3.1), in subsection 3.2 we show that all variants of the arrangement problem are computationally hard problems which are NP-complete. For solving the problems, we therefore have to use heuristic algorithms (cf. subsection 3.3). Section 4 contains an experimental evaluation of our new idea, showing its impact for the parallel coordinates, circle segments, and recursive pattern technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">SIMILARITY OF DIMENSIONS</head><p>The problem of determining the similarity of dimensions (variates) may be characterized as follows: The database containing N objects with d-dimensions can be described as d arrays A i , each containing N real numbers , . We are interested in defining a similarity measure S, which maps two arrays to a real number (S:</p><p>). All meaningful similarity measures S must have the following properties: 1. positivity: 2. reflexivity: 3. symmetry:</p><p>where .</p><p>1. In the context of this paper, we use the term data dimension exchangable with the term variates (statistics termiology) and attributes (database termiology). Intuitively, the similarity measure S takes two dimension arrays and determines the similarity of the two dimensions. One might also call S a dissimilarity measure because large numbers mean high dissimilarity whereas zero means identity.</p><formula xml:id="formula_0">0 i d &lt; ≤ ( ) a i k , 0 k N &lt; ≤ ( ) ℜ N ℜ N × ℜ → A i A j , ℜ d ∈ ∀ : S A i A j , ( ) 0 ≥ A i A j , ℜ d ∈ ∀ : A i A j = ( ) S A i A j , ( ) ⇔ 0 = A i A j , ℜ d ∈ ∀ : S A i A j , ( ) S A j A i , ( ) = 0 i j , d &lt; ≤ ( )</formula><p>Computing similarity measures in the computer is a non-trivial task because similarity can be defined in various ways, and often, similarity measures used in a specific domain are a mixture of single notions of similarity. For example when comparing images, a reasonable similarity measure might be based purely on color [SH 94]. On the other hand, the form and shape of objects are relevant parameters in some applications <ref type="bibr">[WW 80,</ref><ref type="bibr">MG 95]</ref>. In general, the problem arises that one similarity measure detects a high degree of similarity whereas another measure detects dissimilarity. In this situation, state-of-the-art systems use some kind of weighted sum to compute an overall result. An example is the QBIC system [Fli 95] which implements a variety of similarity measures and tries to trade off between them.</p><p>Furthermore, similarity is highly domain-dependent. Objects which are regarded very similar by a domain expert might appear rather dissimilar to a non-expert. Recent results [Ber 97] show that even within a specific domain such as the similarity of industrial parts, a domain expert's notion of similarity depends on the class of parts which are considered.</p><p>The accuracy (or quality) of a similarity measure usually is determined by comparing a system's result with the subjective notion of a domain expert. Thus both, the domain expert and the system compute a ranking of similar objects. Then, both rankings are compared. However, human users are not used to determine the exact similarity of two objects. They rather realize that there exists a similarity but they are unable to quantify. As a consequence, it is almost impossible to reach 100% accuracy when automatically measuring similarity. Therefore, systems try to offer a relatively small subset of the domain experts result as an answer. Then a user can easily scan the small set of candidates and find the "real" hits. To avoid some of these problems, in some domains simple similarity measure such as Euclidean Distance or Hausdorff Distance [Kah 76, HK 90] have been applied. These are easy to handle from a theoretical point of view, and -at least in some domains -also provide a sufficient quality for practical purposes.</p><p>Similarity measures can be generally divided into two subclasses: global similarity measures and partial similarity measures. Global similarity measures compare the whole dimension such that any change in one of the dimensions has an influence on the resulting similarity. In contrast, partial similarity measures focus only on some portions of the dimensions. For example, in case of a timeseries, a global similarity measure will take two series and compare them value by value. An example task is "Given the course of AT&amp;T's stock rate, give me the most similar stock." Every value has an influence on the similarity. On the other hand, one might be interested in a similar course of the time series focusing on one month. An example task is "During which month behaved AT&amp;T's stock rate most similar to IBM's stock rate." Note that the answer might be: "AT&amp;T in January 1998 was very similar to IBM in December 1997". Here, we only focus on 20 values of a large time-series and ignore all other values. Thus, we applied a partial similarity measure.</p><p>Another distinction of similarity measures is the invariance against transformations. For instance, imagine the following three timeseries U (0, 1, 1, 0, 0, 0), V (10, 11, 11, 10, 10, 10), and W (2, 5, 3, 4, 1, 0).</p><p>The Euclidean distance of U and V is 24.5, whereas the Euclidean distance of U and W is 6.4. However, V seems to be more similar to U than W. This can be expressed by making the similarity measure invariant against translation. In case of time-series, this can be done by subtracting the mean of the signal from each value. Other interesting transformations are scaling in the value domain. For example under scaling invariance, U(20, 22, 22, 20, 20, 20) is identical to V(10, 11, 11, 10, 10, 10). Or one might even demand scaling invariance in the time domain. Then U(0, 0, 1, 1, 0, 0) becomes identical to V(0, 1, 0).</p><p>Concluding this discussion about similarity, we draw the following conclusions:</p><p>1) As similarity is subjective and domain-dependent, we cannot provide a single similarity measure for an application-independent system. Rather, we have to tune our similarity measure to adapt to the application domain. 2) Similarity in a human sense is difficult to compute. We have to aim for a good approximation of a user's notion of similarity. 3) For certain domains such as time-series databases, rather simple similarity measures such as an L P -metric are sufficient. 4) Invariances are crucial for the effectiveness of similarity measures. Note that the required invariances are again application-dependent. In our context, we have two possibilities for computing similarity: We may compute the similarity of two visualizations, or the similarity of the underlying data. Both alternatives have to deal with the problems described above and there are good arguments for both alternatives. On the one hand, one might argue that when computing similarity of visualizations, we already lost some information about the underlying data and therefore, the quality will not be that good. On the other hand, one might argue that in order to visualize data, we already normalized the data in an adequate manner and we should use this intelligent preprocessing. Furthermore, we actually intend to display similar visualizations in an adjacent fashion. The final decision largely depends on the specific application domain. For the example data sets used in the experiments, we compute the similarity based on the underlying data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Global Similarity of Two Dimensions</head><p>For our purpose of adjacently depicting similar dimensions, we use an Euclidean distance function as a basic similarity measure. As a first step, similarity of two dimensions A k and A l , is determined as As we argued in the above section, a similarity measure which is not even translation invariant is not useful for practical purposes. Therefore, as a next step, we modify S to being translation invariant by sim-</p><formula xml:id="formula_1">S A k A l , ( ) a k i , a l i , - ( ) 2 i 0 = N 1 - ∑ =</formula><p>ply subtracting the mean 1 of the dimension. Thus, we get the following modified similarity measure:</p><p>where .</p><p>If one additionally demands invariance against scaling, we can scale the dimension independently such that the maximum value of a dimension becomes 1 and the minimum becomes -1. Thus, the scaling invariant global similarity measure can be computed as where . 2</p><p>Other approaches to determine the global similarity of two dimensions have been proposed in the context of time series databases [AFS 93, ALSS 95]. Depending on the application, other similarity measures such as described in [Ber 97] might be preferable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Partial Similarity of Two Dimensions</head><p>For most real-life applications, partial similarity measures are more appropriate than global ones. Imagine two stock rates over time, say AT&amp;T and IBM. Of course there will be weeks or even months, where the two stocks show a similar behavior e.g. because some global development (such as a black friday) is going on. However, it is very unlikely that the AT&amp;T and IBM stocks behave similar over a period of 10 years. Therefore, we are actually interested in periods where the AT&amp;T and IBM stocks behaved similar. Thus, given the two dimensions A k and A l , in the most simple case we are looking for</p><p>where b x,y is defined as above and ε is some maximum allowed dissimilarity.</p><p>This partial similarity measure uses the length of the longest sequence which is at least ε-similar (under scaling and translation invariance). We call this similarity measure "Synchronized partial similarity".</p><p>Depending on the application, the partial similarity may also be an "Unsynchronized partial similarity". In this case, we do not force the two dimensions to be similar at the same "time" but in an arbitrary time frame of the same length. More formally,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2.3Efficiency Considerations</head><p>The synchronized partial similarity can naively be computed in O(N 2 ) time and the unsynchronized partial similarity in O(N 3 ). In order to make both similarity measures computationally tractable, one might restrict the choices for i, j, x, y to some constant length u, i.e., , and search for the subsequence having the lowest Euclidean distance. More formally, .</p><p>Naively, this can be done in O(N 2 ) time by using all possible values of i and j. However, with some precomputations, this can be optimized to O(N log(N)): For each dimension, we precompute the set of all subsequences of length u. There exist such subsequences. The subsequences can be accurately (but lossy) encoded into a w-dimensional feature vector (with w much smaller than u) by applying a transformation such as the Fourier-transformation [WW 80] or the Discrete-Cosine transformation <ref type="bibr">[PTVF 92</ref>]. Thus for each dimension, we get a set of w-dimensional feature vectors which we store in an appropriate high-dimensional index structure such as the X-Tree [BKK 96] or the Pyramid-Tree [BBK 98]. The preprocessing step requires O(n log(n)) time. The feature vector has the nice property that it can be used to estimate the distance between two subsequences such that the distance is always underestimated (see [Kor+ 96] for a proof of this property). Therefore, the vectors can be used for an efficient but still correct filter step. In order to determine S const for two dimensions A k and A l , we have two choices: First, we may compute all subsequences of A k and perform a nearest-neighbor query for each of the subsequences using the index for A l . In low-dimensional feature space, this leads to a computational cost of O(N log(N)). The second possibility is to perform the nearest-neighbor queries simultaneously which leads to an operation similar to a spatial-join [Bri 95] between the indexes of A k and A l .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">SIMILARITY ARRANGEMENT OF DIMENSIONS</head><p>The mapping of the dimensions into the visual representation is fundamental for the perception of the user. Especially the arrangement of dimensions plays a significant role, e.g., for the detection of functional dependencies and correlations. It is therefore important to adequately arrange the dimensions. In the following, we define the dimension arrangement problem mathematically as an optimization problem which ensures that the most similar dimensions are placed next to each other.</p><p>1. Note that one could also use the median of the dimension which is statistically more robust, but more difficult to compute. 2. In order to become more robust against outliers, instead of using MAX (the 100%-quantile) and MIN (the 0%-quantile), we use the 98% and 2% quantile of</p><formula xml:id="formula_2">A i . S trans A k A l , ( ) a k i , mean A k ( ) - ( ) a l i , mean A l ( ) - ( ) - ( ) 2 i 0 = N 1 - ∑ = mean A i ( ) 1 N ---- a i k , k 0 = N 1 - ∑ = S scaling A k A l , ( ) b k i , b l i , - ( ) 2 i 0 = N 1 - ∑ = b i j , a i j , MIN A i ( ) - MAX A i ( ) MIN A i ( ) - ----------------------------------------------------- = S sync A k A l , ( ) = MAX i j , j i - ( ) 0 i ≤ j N &lt; &lt; ( ) b k z , b l z , - ( ) 2 z i = j ∑ ε &lt; ∧       S unsync A k A l , ( ) = MAX i j x y , , , j i - ( ) 0 i ≤ j N &lt; &lt; ( ) 0 x ≤ y N &lt; &lt; ( ) ∧ ∧    j i - ( ) y x - ( ) = b k z , b l z i - x + ( ) , - ( ) 2 z i = j ∑ ε &lt; ∧    j i - ( ) y x - ( ) u = = S const A k A l u , , ( ) = MIN i j , x 0 i ≤ j N u - ( ) &lt; &lt; x b k i x + ( ) , b l j x + ( ) , - ( ) 2 x 0 = u 1 - ∑ = ∧       d N u - 1 + ( ) ⋅ N u - 1 + ( )</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Definition of the Arrangement Problems</head><p>Depending on the considered visualization technique, we have to distinguish between the one-dimensional and the two-dimensional arrangement problem. The one-dimensional arrangement problem occurs, for example, for the parallel coordinate and circle segment techniques and the two-dimensional problem occurs, for example, for the recursive pattern and spiral techniques. In case of the onedimensional arrangement problem, there are two slightly different variants of the problem -the linear and the circular problem (cf. <ref type="figure">Figure 1)</ref>. In case of the linear one-dimensional arrangement problem, the first and last dimensions do not have to be similar, whereas in case of the circular problem, the dimensions form a closed circle, i.e. first and last dimension have to be similar. In the following, we assume to have a symmetric similarity matrix where and . describes the similarity between dimension i and dimension j. The similarity matrix is the result of applying the global or partial similarity measures introduced in section 2. In addition, we need a neighborhood matrix which describes the neighborhood relation between the dimensions in the arrangement. The matrix N is also symmetric (i.e., ) and . Now, we are able to define the general arrangement problem as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 1 (General Arrangement Problem)</head><p>For a given similarity matrix S, the optimal arrangement of dimensions is given by a neighborhood matrix N such that is minimal. This definition is a general notion of the problem which defines the optimal arrangement of dimensions. The specific one-and twodimensional arrangement problems of the existing visualization techniques such as the parallel coordinates, circle segments, and spiral techniques are instantiations of the problem. In case of the onedimensional arrangement problem, the neighborhood matrix reflects either the linear (cf. <ref type="figure">Figure 1a)</ref> or the circular arrangement of the dimensions (cf. <ref type="figure">Figure 1b)</ref>. The linear arrangement problem occurs, for example, in case of the parallel coordinate technique and the circular arrangement problem occurs, for example, in case of the circle segments technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 2 (One-Dimensional Arrangement Problem)</head><p>In addition to the minimality requirement of definition 1, the optimal one-dimensional arrangement requires a neighborhood matrix N with the following properties:</p><p>1. Circular Case:</p><p>2. Linear Case:</p><p>.</p><p>In the circular case, every dimension has two neighbors and therefore the neighborhood matrix N has two times a "1" in each row and each column. In contrast, in the linear case there are two dimensions k and l which only have one neighboring dimension since they are the start and end dimension.</p><p>In case of the two-dimensional arrangement of dimensions, in addition we need the number of rows R and number of columns C of the two-dimensional arrangement. Without loss of generality, we assume . Then, the neighborhood matrix N of the twodimensional arrangement can be defined as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 3 (Two-Dimensional Arrangement Problem)</head><p>In addition to the minimality requirement of definition 1, the optimal two-dimensional arrangement requires a neighborhood matrix N with the following properties:</p><p>(1) for rows i</p><p>(2) for other rows i</p><p>(3) for 4 other rows i.</p><p>The reason for these constraints are that each of the dimensions belongs to one of the following three neighborhood types: There are</p><formula xml:id="formula_3">d d × ( ) S S A 0 A 0 , ( ) … S A d 1 -A 0 , ( ) … … … S A 0 A d 1 - , ( )…S A d 1 -A d 1 - , ( ) = S A i A j , ( ) S A j A i , ( ) = i j , ∀ 0 … d 1 - ( ) , = S A i A i , ( ) 0 = i ∀ 0 … d 1 - ( ) , = S A i A j , ( ) d d × ( ) N n 00 … n d 1 - ( )0 … … … n 0 d 1 - ( ) … n d 1 - ( ) d 1 - ( ) = n ij n ji = n ii 0 = ∧ ( ) i j , ∀ 0 … d 1 - ( ) , = n ij</formula><p>1 if dimensions i and j are neighbors </p><formula xml:id="formula_4">0 otherwise    = n ij S A i A j , ( ) ⋅ j 0 = d 1 - ∑ i 0 = d 1 - ∑ n ij j 0 = d 1 - ∑ 2 = i ∀ 0 … d 1 - ( ) , , = n ij j 0 = j k l , ≠ , d 1 - ∑ 2 = i ∀ 0 … d 1 - ( ) , , = ∧ n kj j 0 = d 1 - ∑ n lj j 0 = d 1 - ∑ 1 = = n kl ∧ n lk 0 = =</formula><formula xml:id="formula_5">d R C ⋅ = n ij j 1 = C ∑ 4 = (R-2) (C-2) ⋅ n ij j 1 = C ∑ 3 = 2 (R-2) ⋅ 2 (C-2) ⋅ + n ij j 1 = C ∑ 2 =</formula><p>four dimensions lying in the corners, thus having only two neighbors. The remaining dimensions on the borders have 3 neighbors, and the inner dimensions have 4 neighbors. Note that in addition to the direct vertical and horizontal neighbors, the two-dimensional arrangement problem could also be defined to include, for example, the diagonal neighbors. Since similarity is usually at least locally transitive, for practical purposes it is sufficient to consider the twodimensional arrangement problem as defined above.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Complexity of the Arrangement Problems</head><p>In this chapter, we discuss the complexity of the one-and twodimensional arrangement problem. We show that even the onedimensional arrangement problems are computationally hard problems, i.e. they are NP-complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 1 (NP-Completeness of the Circular 1D Problem)</head><p>The circular variant of the one-dimensional arrangement problem according to definition 2 is NP-complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>We can also describe the circular 1D arrangement problem as: Given a similarity matrix S, find a permutation of the dimensions such that is minimal.</p><p>If we use this description of the problem, it becomes obvious that the problem is equivalent to the well-known travelling salesman problem <ref type="bibr">(TSP)</ref> which is known to be NP-complete. We just have to map the dimensions to cities, the similarity between the dimensions to the cost of travelling between cities, and the solution back to the arrangement of dimensions. q.e.d. In case of the linear one-dimensional and the two-dimensional arrangement problems, the proof of the NP-completeness is more complex. Let us therefore recall the notion of "polynomial reduction" and the "reduction lemma" from complexity theory.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 4 (Polynomial Reduction)</head><p>A problem can be polynomially reduced to a problem (notation ) if there exists a transformation which can be determined in polynomial time such that : .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 2 (Reduction [GJ 79])</head><p>P 1 ∈ NP P 2 NP-complete P 2 ≤ P 1 ⇒ P 1 NP-complete. The principle idea of the reduction is to show that the problem can be reduced to a known NP-complete problem. A precondition is that the new problem can be solved in non-deterministic polynomial time. If we assume that we have a solution of the problem and show that in this case, we can use the solution to also solve the NPcomplete problem , then it implies that is at least as complex as and therefore, has also to be NP-complete. Note that the transformation of the problem and solution in the reduction step have to be of polynomial time and space complexity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 3 (NP-Completeness of the Linear 1D Problem)</head><p>The linear variant of the one-dimensional arrangement problem according to definition 2 is NP-complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>For proving the NP-completeness of the problem, we have to show that (1) the problem can be solved in non-deterministic time, and (2) we have to find a related NP-complete problem and a polynomial transformation (reduction) between the original and the NP-complete problem. 1. To show that the problem can be solved in non-deterministic time we have to define the corresponding decision problem: Given an arrangement and some real number X. Decide whether .</p><p>This problem is obviously in NP (we can non-deterministically guess a solution and then calculate the sum in polynomial time). If we are able to solve this problem, we can also solve the original problem in non-deterministic polynomial time since we can use a binary partitioning for the X value range and iteratively apply the decision problem to determine the correct X which corresponds to the correct solution. 2. A related problem NP-complete problem is the TSP problem. The reduction, however, is not straight-forward. We have to show that the linear problem is at least as complex as the TSP problem, i.e. if we can solve the linear problem, then we also have a solution of the TSP problem. Let us assume that we have an algorithm for solving the linear problem. For solving the TSP problem (for an arbitrary set of dimensions with an arbitrary similarity matrix ), we now define a transformation where and is a matrix which is defined as (1) (2) (3) . where . Without loss of generality, we split such that becomes the start dimension and the additional dimension becomes the end dimension of the linear solution (cf. <ref type="figure" target="#fig_1">Figure 2a)</ref>. The distance (similarity) values of the new dimension are set to the same values as the distances for , and the distance between and is set to a very high value , which is larger than all similarity values in the similarity matrix together. By this choice, we ensure that the path between and will not become part of the solution and </p><formula xml:id="formula_6">π 0 ( ) … π d 1 - ( ) , , { } S A π i ( ) A π i 1 + ( ) mod d ( ) , ( ) j 0 = d 1 - ∑ P 1 Σ ⊆ 1 * P 2 Σ 2 * ⊆ P 2 P 1 ≤ f : Σ 1 * Σ 2 * → x Σ 1 * ∈ ∀ x P 1 ∈ f x ( ) P 2 ∈ ⇔ ∧ ∧ P 1 P 1 P 2 P 1 P 2 P 1 π 0 ( ) … π d 1 - ( ) , , { } S A π i ( ) A π i 1 + ( ) mod d ( ) , ( ) j 0 = d 1 - ∑ X ≤</formula><formula xml:id="formula_7">A A 0 … A d 1 - , , { } = S f A S , ( ) Ã S , ( ) = Ã A A 0 { } ∪ = S d 1 + ( ) d 1 + ( ) × S A i A j , ( ) S A i A j , ( ) i j , ∀ 0 … d 1 - ( ) , = = S A 0 A i , ( ) S A i A 0 , ( ) S A 0 A i , ( ) = = i ∀ 0 … d 1 - ( ) , = S A 0 A 0 , ( ) S A 0 A 0 , ( ) LARGE = = LARGE S A i A j , ( ) 1 + j 0 = d 1 - ∑ i 0 = d 1 - ∑ = A 0 A 0 A 0 A 0 A 0 A 0 A 0 LARGE ( ) A 0 A 0</formula><p>therefore, and will be the start and end point. If we now use the linear algorithm to determine a solution, then we also have a solution of the TSP problem, since in the back transformation we just have to ignore the dimension and connect directly to the neighbor of . The transformation between the linear problem and the TSP problem as well as the back transformation of the solution can be done in polynomial time and space. q.e.d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 4 (NP-Completeness of the 2D Arr. Problem)</head><p>The two-dimensional arrangement problem according to definition 3 is NP-complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof:</head><p>The structure of the proof is analogous to the proof of lemma 3. Again we have to show that (1) the problem can be solved in nondeterministic time, and (2) we have to find a related NP-complete problem and a polynomial transformation (reduction) between the original and the NP-complete problem. 1. Analogously to the proof of lemma 3, we have to define the corresponding decision problem and then, the rest works as shown in proof of lemma 3. The decision is: Given a two-dimensional arrangement and some real number X. Decide whether .</p><p>The first portion of the formula corresponds to the sum of the distances in the rows and the second portion to the sum of the distances in the columns of the two-dimensional arrangement. 2. Again, we use the TSP problem as the related NP-complete problem. In this case, the reduction, however, gets more complex. Again, let us assume that we have an algorithm for solving the two-dimensional arrangement problem. Without loss of generality, we assume that the two-dimensional arrangement consists of rows and columns and we assume 1 . For solving the TSP problem (for an arbitrary set of dimensions with an arbitrary similarity matrix ), we now define a transformation where and is a matrix which is defined as (1) (2) . (3) The basic idea of the proof is to introduce new dimensions, for which the distances (similarity values) are chosen such that those dimensions will be positioned by the two-dimen-sional arrangement algorithm as inner nodes of the arrangement, while the dimensions of the original problem will be positioned as outer nodes (cf. <ref type="figure" target="#fig_1">Figure 2b)</ref>. This is achieved by giving the new dimensions very small distances to all other new dimensions while the distances of the outer dimensions are increased by a high value that they do not interfere with the inner dimensions. The distance between inner and outer dimension is set to a very high value to prevent a jumping between the inner and outer dimensions.</p><p>If the algorithm for the two-dimensional arrangement problem is now applied, we also obtain a solution of the TSP problem, since in the back transformation we just have to ignore the additional dimensions . Again, the transformation between the linear and the TSP problem as well as the mapping between the solutions can be done in polynomial time and with polynomial space since at most dimensions are added and since the summations can also be done in polynomial time. Therefore, if we have a solution for the two-dimensional arrangement problem, we are able to construct a solution of the TSP problem in polynomial time and space. Thus, the two-dimensional arrangement problem must also be NP-complete. q.e.d.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Dimension Arrangement Algorithms</head><p>Since the dimension arrangement problems are NP-complete, we have to use heuristic algorithms to solve the problem. Since the problems are all similar to the traveling salesman problem, we can use variants of the existing heuristic algorithm proposed for the traveling salesman problem such as memetic and genetic algorithms, tabu search, ant colony optimization, neural networks, space-filling heuristics or simulated annealing. For an overview of these approaches including an extensive bibliography see <ref type="bibr">[TSP]</ref>.</p><p>In our implementation, we use a variant of the ant system algorithm which is inspired by the behavior of real ants [DG 97]. Ants are able to find good solutions to shortest path problems between a food source and their home colony. Ants deposit a certain amount of pheromone while walking, and each ant probabilistically prefers to follow a direction rich in pheromone. The pheromone trail evaporates over time, i.e., it looses intensity if no more pheromone is laid down by other ants.</p><p>In our variant of the algorithm we have transferred three ideas from natural ant behavior to our artificial ant colony: (1) the trail mediated communication among ants, (2) the preference for paths with a high pheromone level, and (3) the higher rate of growth of the amount of pheromone on shorter paths. An artificial ant is an agent which moves from dimension to dimension on the neighborhood graph where the length of the edges equals to the distance between the corresponding dimension nodes. Initially, m artificial ants are placed on randomly selected dimensions. At each time step they move to new dimensions and modify the pheromone trail on the edges passed. The ants choose the next dimension by using a probabilistic function depending both on the trail accumulated on edges and on a heuristic value which is chosen as a function of the edge length. Obviously, the ants must have a working memory used to memorize the dimensions already visited. When all ants have completed a tour, the ant which made the shortest tour modifies the edges belonging to its tour by adding an amount of pheromone trail which is inversely proportional 1. This assumption is only necessary to technically simplify the proof, since otherwise we would have to introduce additional dimensions to fill up the gap and we would have to define specific distances to ensure an appropriate arrangement of those dimensions.</p><formula xml:id="formula_8">A 0 A 0 A 0 A 0 A 0 π 0 0 , ( ) … π r 1 -c 1 - , ( ) , , { } S A π i j , ( ) A π i 1 j , + ( ) , ( ) S A π i j , ( ) A π i j 1 + , ( ) , ( ) j 0 = C 2 - ∑ i 0 = R 1 - ∑ + j 0 = C 1 - ∑ 0 = R 2 - ∑ X ≤ R C d 2 R C + ( ) ⋅ 4 - = A A 0 … A d 1 - , , { } = S f A S , ( ) Ã S , ( ) = Ã A A d … A R C ⋅ 1 - , , { } ∪ = S R C ⋅ ( ) R C ⋅ ( ) × S A i A j , ( ) S A i A j , ( ) LARGE + i j , ∀ 0 … d 1 - ( ) , , = = S A i A j , ( ) S A j A i , ( ) 2 = LARGE ⋅ = i ∀ 0 … d 1 - ( ) j ∀ , , = d … R C 1 - ⋅ , , = S A i A j , ( ) 0 = i ∀ d … R C 1 - ⋅ , , j ∀ = d … R C 1 - ⋅ , , = R 2 - ( ) C 2 - ( ) ⋅ LARGE ( ) 2 L ⋅ ARGE ( ) A d … A R C ⋅ 1 - , , { } O R C ⋅ ( ) O d 2 ( ) =</formula><p>to the tour length. This procedure is repeated for a given number of cycles.</p><p>In our version of the ant colony system, an artificial ant k at dimension r chooses dimension s to move to (s is among the dimensions which do not belong to its working memory M k ) by applying the following probabilistic formula:</p><p>where is the amount of pheromone trail on edge (r,u), is a heuristic function which is chosen to be the inverse of the distance between dimensions r and u, β is a parameter which weighs the relative importance of pheromone trail and of closeness, q is a value chosen randomly with uniform probability in [0,1], q 0 (0≤q 0 ≤1) is a parameter, and T is a random variable selected according to the following probability distribution, favoring dimensions with small distances and higher levels of pheromone trail:</p><p>where p k (r,s) is the probability that ant k chooses to move from dimension r to dimension s.</p><p>We applied this heuristic to arrange the dimensions according to their distances. In the one-dimensional arrangement case, the only difference between the linear and the circular variant is that the tour consists of one more dimension and that the ants move back to the starting dimension. For the two-dimensional arrangement problem, we have to slightly modify the algorithm described above. Let R be the number of rows and C the number of columns of the two-dimensional arrangement and let us assume that we map the sorted dimensions on the arrangement in a row-wise manner, always filling the row from the left to right. Thus, the ordered dimensions are mapped to the arrangement such that the dimension number n is mapped to column number and to row number . Let be the distance between dimension A i and dimension A j and M k (n) be the dimension in the n-th position in the working memory. Then, we modify the heuristic function as In the two-dimensional version of the algorithm the heuristic function also depends of n which is the number of dimensions already in working memory. This function results in the inverse of the distance to the next dimension in case of arranging the first uppermost row. The second condition is fulfilled if a dimension for the first or last column is chosen. In this case, we consider the inverse of the distance to the dimension located in the same column one row above.</p><p>In all other cases, we consider the average of the inverse of the distances to its already known neighbors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">EXPERIMENTAL EVALUATION</head><p>In this section, we provide a number of example visualizations showing the influence of our new similarity arrangement of the dimensions on the overall perception. We demonstrate the effect of different arrangements in visualizing a stock exchange database containing the stock prices from Jan '74 to Apr. '95 on a daily basis (5329 data items) using three different visualization techniquesthe parallel coordinates, circle segments, and recursive pattern techniques. The similarity measure used is based on the translation-and scaling-invariant global as well as the translation-and scaling-invariant synchronized partial similarity measure described in section 2. <ref type="figure" target="#fig_3">Figure 3</ref> presents the result of using the parallel coordinate technique for visualizing eight different stock prices in the sequential (cf <ref type="figure" target="#fig_3">. Figure 3a)</ref> and similarity arrangement (cf. <ref type="figure" target="#fig_3">Figure 3b</ref>). It is interesting that even for this small number of dimensions our approach leads to an improvement. Consider, for example, dimensions 1 and 2, dimensions 3 and 4, and dimensions 6 and 7 where correlations can be identified more easily. The significant amount of nearly horizontal lines between the corresponding axes indicates a similar behavior of the stock prices over the same period of time. When visualizing the database using the circle segments technique which was designed to visualize databases with high dimensionality, we clearly see the relevance of our similarity-based dimension arrangement. In comparison to the sequentially arranged visualization (cf. <ref type="figure">Figure 4a</ref>), our new arrangement allows the user to see clusters, correlations and functional dependencies more easily (cf. <ref type="figure">Figure 4b</ref>). The segments on the right side of the circle, for example, all seem to have a peak (light color) at the outside, which corresponds to approximately the same period of time. Seven dimensions on the upper left side seem to have their peaks in a different period of time and -because they are placed next to each other -it is easy to compare them and to find differences between them.</p><p>In <ref type="figure">Figure 5</ref>, we show the results of visualizing the database using the recursive pattern technique with slightly different parameter settings. The recursive pattern technique is a visualization technique which requires a two-dimensional arrangement of dimensions. Again, the results clearly show the superiority of our similarity arrangement. Whereas the sequentially arrangement of dimensions (cf. <ref type="figure">Figure 5a</ref>) tends to confuse the user's perception, the similarity arrangement (cf. <ref type="figure">Figure 5b</ref>) clearly shows clusters in the upper left and right and the lower right where about 9-12 dimensions show a similar development. At the same time, there are some dimensions in the lower left which seem to fit better at some another position. This fact is just a consequence of the NP-completeness of the arrangement problem and the necessity to use a heuristic solution. It is, however, obvious that even a simple similarity arrangement provides significantly better visualizations than a sequential arrangement This is true not only for visualization techniques requiring a linear or circular one-dimensional arrangement but also for visualization techniques which require a two-dimensional arrangement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">CONCLUSIONS</head><p>In this paper, we introduce the similarity clustering of dimensions as an important possibility to enhance the results of a number of differ- ent multidimensional visualization techniques. We introduce a number of different similarity measures which can be used to determine the (global or partial) similarity of dimensions. The similarity of dimensions is an important prerequisite for finding the optimal oneor two-dimensional arrangement. All variants of the dimension arrangement problem, however, are shown to be computationally complex problem, i.e. they are NP-complete. In our implementation to solve the dimension arrangement problem we therefore have to use a heuristic solution which is based on an intelligent ant system. The experimental comparison of the sequential and similarity arrangement clearly shows the advantage of our new approach. In our future work, we will try to apply the similarity-based dimension arrangement to other visualization techniques and use the new method to improve the exploration of data sets with a very high number of dimensions. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure</head><label></label><figDesc>Figure 1: One-and Two-dimensional Arrangement Problem a. Linear 1D b. Circular 1D c. 2D</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Ideas of the NP-Completeness Proofs a. Linear 1D Arrangement b. 2D Arrangement</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>-------------------------------------------------------------if s M k ----------------------------------------------if n 1 ---------------------------------------------</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Visualizations Generated Using the Parallel Coordinates Visualization TechniqueFigure 4: Visualizations Generated Using the Circle Segments Visualization Technique b. Similarity Arrangement a. Sequential Arrangement Figure 5: Visualizations Generated Using the Recursive Pattern Visualization Technique b. Similarity Arrangement a. Sequential Arrangement b. Similarity Arrangement a. Sequential Arrangement</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>], the Parallel Visual Explorer from IBM, Diamond from SPSS, IVEE from Spotfire [AW 95]. There are also a number of university research prototypes such as SPlus/Trellis [BCW 88], XGobi, and DataDesc, which emerged from the statistics community, as well as ExVis [GPW 89], XmDv [Ward 94], and VisDB [KK 95], which emerged from the visualization community.</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Similarity Clustering of Dimensions for an Enhanced Visualization of Multidimensional DataMihael Ankerst 1 , Stefan Berchtold 2 , Daniel A. Keim 3 1 University of Munich, Oettingenstr. 67, D-80538 Munich, Germany, ankerst@informatik.uni-muenchen.de 2 AT&amp;T Laboratories, 180 Park Avenue, Florham Park, NJ 07932, berchtol@research.att.com 3 Martin-Luther-University Halle-Wittenberg, Kurt Mothes Str. 1, 06099 Halle, Germany, keim@informatik.uni-halle.de Similarity Clustering of Dimensions for an Enhanced Visualization of Multidimensional Data Mihael Ankerst 1 , Stefan Berchtold 2 , Daniel A. Keim 3</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">University of Munich, Oettingenstr. 67, D-80538 Munich, Germany, ankerst@informatik.uni-muenchen.de 2 AT&amp;T Laboratories, 180 Park Avenue, Florham Park, NJ 07932, berchtol@research.att.com 3 Martin-Luther-University Halle-Wittenberg, Kurt Mothes Str. 1, 06099 Halle, Germany, keim@informatik.uni-halle.de</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEGDEMENTS</head><p>We thank Professor L. Staiger and Dr. R. Winter for their help in developing the NP-completeness proofs of the linear one-dimensional and two-dimensional arrangement problems.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Circle Segments: A Technique for Visually Exploring Large Multidimensional Data Sets&apos;, Visualization &apos;96, Hot Topic Session</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<pubPlace>San Francisco, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Efficient Similarity Search in Sequence Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Faloutsos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Swami</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Foundations of Data Organization and Algorithms</title>
		<meeting>Int. Conf. on Foundations of Data Organization and Algorithms<address><addrLine>Evanston, ILL</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1993" />
			<biblScope unit="volume">730</biblScope>
			<biblScope unit="page" from="69" to="84" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Agrawal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sawhney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Shim</surname></persName>
		</author>
		<title level="m">Fast Similarity Search in the Presence of Noise, Scaling, and Translation in Time-Series Databases&apos;, Proc. 21st</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m">Conf. on Very Large Databases</title>
		<meeting><address><addrLine>Zurich, Switzerland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="490" to="501" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">IVEE: An Environment for Automatic Creation of Dynamic Queries Applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wistrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM CHI Conf. Demo Program (CHI95)</title>
		<meeting>ACM CHI Conf. Demo Program (CHI95)</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Pyramid-Tree: Towards Breaking the Curse of Dimensionality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Berchtold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Böhm</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Management of Data (SIG-MOD&apos;98)</title>
		<meeting>Int. Conf. on Management of Data (SIG-MOD&apos;98)<address><addrLine>Seattle</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Chambers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">R</forename><surname>Wilks</surname></persName>
		</author>
		<title level="m">The New S Language</title>
		<meeting><address><addrLine>Pacific Grove, CA</addrLine></address></meeting>
		<imprint>
			<publisher>Wadsworth &amp; Brooks/Cole Advanced Books and Software</publisher>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Geometry-based Search of Similar Parts</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Berchtold</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
		<respStmt>
			<orgName>University of Munich</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
	<note>in German</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The X-Tree: An Index Structure for High-Dimensional Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Berchtold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Very Large Databases (VLDB&apos;96)</title>
		<meeting>Int. Conf. on Very Large Databases (VLDB&apos;96)<address><addrLine>Bombay, India</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="28" to="39" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">The Spatial Join in Geo-Databases</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Brinkhoff</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Shaker Publishing Company</publisher>
			<pubPlace>Aachen</pubPlace>
		</imprint>
	</monogr>
	<note>in German</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Ant Colony System: A Cooperative Learning Approach to the Traveling Salesman Problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dorigo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">M</forename><surname>Gambardella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Evolutionary Computation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Query by Image and Video Content: The QBIC System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Flickner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sawhney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Niblack</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ashley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Dom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gorkani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hafner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Petkovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Steele</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Yanker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page" from="23" to="32" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">EXVIS: An Exploratory Visualization Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Pickett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">G</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Graphics Interface &apos;89</title>
		<meeting>Graphics Interface &apos;89<address><addrLine>London, Ontario, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Computers and Intractability: A Guide to the Theory of NP-completeness</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">R</forename><surname>Garey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1979" />
			<publisher>W.H. Freemann</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Computing the Minimum Hausdorff Distance For Point Sets Under Translation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Huttenlocher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Kedem</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 6th Annual ACM Symp. on Computational Geometry</title>
		<meeting>6th Annual ACM Symp. on Computational Geometry</meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="340" to="349" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inselberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Dimsdale</surname></persName>
		</author>
		<title level="m">Parallel Coordinates: A Tool for Visualizing Multi-Dimensional Geometry&apos;, Visualization &apos;90</title>
		<meeting><address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="361" to="370" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The Plane with Parallel Coordinates, Special Issue on Computational Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Inselberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1985" />
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="69" to="97" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Haar Measure and Hausdorff Measure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kahnert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Lecture Notes in Mathematics</title>
		<imprint>
			<biblScope unit="volume">541</biblScope>
			<biblScope unit="page" from="13" to="23" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
	<note>in German</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Visual Support for Query Specification and Data Mining</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-07" />
			<publisher>Shaker Publishing Company</publisher>
		</imprint>
		<respStmt>
			<orgName>University of Munich</orgName>
		</respStmt>
	</monogr>
	<note>Ph.D. thesis</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<title level="m">Visual Techniques for Exploring Databases&apos;, Invited Tutorial, Int. Conference on Knowledge Discovery in Databases (KDD&apos;97)</title>
		<meeting><address><addrLine>Newport Beach, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<ptr target="http://www.kdnuggets.com/siftware.html" />
		<title level="m">Software for Data Exploration and Data Mining</title>
		<imprint/>
	</monogr>
	<note>KK 94</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VisDB: Database Exploration using Multidimensional Visualization</title>
		<imprint>
			<date type="published" when="1994-09" />
			<biblScope unit="page" from="40" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">VisDB: A System for Visualizing Large Databases&apos;, System Demonstration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. ACM SIGMOD Int. Conf. on Management of Data</title>
		<meeting>ACM SIGMOD Int. Conf. on Management of Data<address><addrLine>San Jose, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page">482</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Recursive Pattern: A Technique for Visualizing Very Large Amounts of Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Kriegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Ankerst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Visualization &apos;95</title>
		<meeting>Visualization &apos;95<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes in C&apos;</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
	<note>2nd ed.</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Feature-Index-Based Similar Shape Retrieval</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Mehrotra</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Gary</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. 3rd Working Conf. on Visual Database Systems</title>
		<meeting>3rd Working Conf. on Visual Database Systems</meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m">Database Mining and Visualisation Group -SGI Inc.: &apos;MineSet(tm): A System for High-End Data Mining and Visualization&apos;, Int. Conf. on Very Large Data Bases (VLDB&apos;96)</title>
		<meeting><address><addrLine>Bombay, India</addrLine></address></meeting>
		<imprint>
			<biblScope unit="page">595</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Efficient Color Histogram Indexing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shawney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hafner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Int. Conf. on Image Processing</title>
		<meeting>Int. Conf. on Image essing</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="66" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Integrating Multiple Methods for Visualizing Multivariate Data</title>
		<ptr target="http://www.ing.unlp.edu.ar/cetad/mos/TSPBIB_home.html" />
	</analytic>
	<monogr>
		<title level="m">Overview over Research on the Traveling Salesman Problem</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="326" to="336" />
		</imprint>
	</monogr>
	<note>Proc. Visualization &apos;94</note>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">An Efficient Three-Dimensional Aircraft Recognition Algorithm Using Normalized Fourier Descriptors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Wallace</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Wintz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Image Processing</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="99" to="126" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
