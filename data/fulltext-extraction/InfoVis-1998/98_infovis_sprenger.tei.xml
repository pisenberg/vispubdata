<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">IVORY -An Object-Oriented Framework for Physics-Based Information Visualization in Java</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Sprenger</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Swiss Federal Institute of Technology (ETH)</orgName>
								<address>
									<settlement>Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Swiss Federal Institute of Technology (ETH)</orgName>
								<address>
									<settlement>Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bielser</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Swiss Federal Institute of Technology (ETH)</orgName>
								<address>
									<settlement>Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Strasser</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Swiss Federal Institute of Technology (ETH)</orgName>
								<address>
									<settlement>Zurich</settlement>
									<country key="CH">Switzerland</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">IVORY -An Object-Oriented Framework for Physics-Based Information Visualization in Java</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>three-dimensional information visualization</term>
					<term>physics-based graph layout</term>
					<term>object-oriented visualization toolkit</term>
					<term>multidimensional information modeling</term>
					<term>time varying data</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present IVORY, a newly developed, platform-independent framework for physics-based visualization. IVORY is especially designed for information visualization applications and multidimensional graph layout. It is fully implemented in Java 1.1 and its architecture features client-server setup, which allows to run the visualization even on thin clients. In addition, VRML 2.0 exports can be viewed by any VRML plugged-in WWW-browser. Individual visual metaphors are invoked into IVORY via an advanced plug-in mechanism, where plug-ins can be implemented by any experienced user. The configuration of IVORY is accomplished using a script language, called IVML. Some interactive visualization examples, such as the integration of an haptic interface illustrate the performance and versatility of our system. Our current implementation supports NT 4.0. 1</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Visual communication had always been of fundamental importance to mediate information and to understand complex relationships. With the advent of the computer, scientific visualization was born as a discipline <ref type="bibr" target="#b0">[1]</ref> and conquered many science and engineering applications. However, whereas in the past, research was mostly focussed on the visualization of spatial data sets and metric spaces, the design of new visual metaphors for abstract, complex information spaces has recently emerged as a challenging research topic. Applications are manifold and range from web/network visualization and document retrieval, via software engineering to risk and portfolio management in the financial services <ref type="bibr" target="#b11">[11]</ref>.</p><p>Due to the tremendous importance of visualization methods various systems and toolkits had successfully been designed in the past, part of which are available as commercial products. One of the pioneers is AVS/Exress <ref type="bibr" target="#b1">[2]</ref> that uses a data flow paradigm and allows the user to compose a visualization application interactively by definition of data flow paths between individual modules. Similar paradigms have been implemented in the IRIS Explorer <ref type="bibr" target="#b2">[3]</ref> or in IBMs DataExplorer <ref type="bibr" target="#b3">[4]</ref>. Another elegant visualization library is provided by General Electrics VTK <ref type="bibr" target="#b4">[5]</ref> and can be customized in TCL/TK. However, most of the general purpose toolkits and libraries target at classical scientific visualization of spatial data.</p><p>For information visualization and visual data mining sophisticated algorithms and metaphors had been devised in recent years to visually inspect abstract and multidimensional information spaces. Cone trees <ref type="bibr" target="#b5">[6]</ref> and their hyperbolic projections <ref type="bibr" target="#b7">[7]</ref> are only one prominent example. Physics-based graph layout is another important paradigm and has been successfully exploited in various applications <ref type="bibr" target="#b8">[8]</ref>, <ref type="bibr" target="#b9">[9]</ref>, <ref type="bibr" target="#b10">[10]</ref>. Good surveys of contemporary information visualization methods can be found in <ref type="bibr" target="#b11">[11]</ref> or <ref type="bibr" target="#b12">[12]</ref>. However, generic toolkits and systems are rare or mostly focussed, such as statistics packages, like Bell Labs XGobi <ref type="bibr" target="#b13">[13]</ref>, IVEE <ref type="bibr" target="#b14">[14]</ref> or the hierarchical algorithms in SGIs SiteManager. Conversely, visual data mining tools, like SGIs MineSet <ref type="bibr" target="#b15">[15]</ref> often comprise visualization functionality, however, have limited flexibility regarding the integration new metaphors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">OUR APPROACH</head><p>Our toolkit IVORY has been developed as an open and flexible system for information visualization to fill the gap between general purpose visualization tools and application specific systems. Although it is primarily designed for physics-based approaches to multidimensional information spaces and for the visual analysis of large financial data volumes, the underlying design principles make it a versatile framework for the investigation and application of new visual metaphors. Some algorithmic details of the visualization paradigm currently used in IVORY have been presented by the authors in <ref type="bibr" target="#b9">[9]</ref> and <ref type="bibr" target="#b16">[16]</ref>.</p><p>Our essential design and engineering goals for IVORY can be summarized as follows:</p><p>• Client-Server setup: This allows the separation of any visualization mapping engine from the client and the user interface. • Java programming language: Despite of all hype, Java features object-oriented programing paradigms and stands for platform independence. • Clustering and hierarchies: In order to manage complexity of information objects IVORY supports specifically multiresolution visualization methods, such as hierarchies and clustering <ref type="bibr" target="#b9">[9]</ref>. • 4 layered abstraction model for users: In order to offer an appropriate interface for different types of users, IVORY can be configured at 4 different levels of abstraction, depicted in <ref type="figure" target="#fig_0">Figure 1</ref>. The standard user, such as a financial analyst, will apply preconfigured instances of IVORY in his everyday work. The more advanced power user can customize existing configurations using the script language IVML. On an admin- <ref type="bibr" target="#b0">1</ref> IVORY will be made available in short. istrators level Java plug-ins can be programmed to implement individual visual metaphors and layout algorithms. Finally, the systems designer can modify and extend the IVORY kernel to add new classes for solvers, particle engines or other kernel methods.</p><p>The remainder of the paper is organized as follows: In section 3 we elaborate on general design and architectural issues underlying our system. Section 4 addresses the plug-in mechanism, which allows to implement new visualization paradigms. Next, we discuss the scripting language, where, however, for brevity, the complete EBNF is omitted. Finally, an example using a forcefeedback interaction model illustrates the flexibility and versatility of our approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">ARCHITECTURAL ISSUES</head><p>To implement the introduced system architecture shown in <ref type="figure" target="#fig_0">Figure  1</ref> we choose an object-oriented framework. Our basic design goals include a fast, compact kernel and a powerful interface which can be flexibly expanded for a wide range of user-specific problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Framework Concepts</head><p>When designing our toolkit, we focused specifically on physicsbased information visualization, since it provides a promising and intuitive paradigm enabling the user to map abstract multidimensional information spaces onto appropriate subspaces, that can be visualized in 3D or 2D.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Double Separation</head><p>As illustrated by the horizontal separation in <ref type="figure" target="#fig_1">Figure 2</ref> we employed a frontend/backend-concept, where the backend is responsible for efficient number crunching and the frontend handles the graphical user interface and user interactions. In addition, we distinguish between data-dependent and data-independent components (vertical separation in <ref type="figure" target="#fig_1">Figure 2</ref>). For this reason we distill all data-dependent components into so-called plug-ins. The script language IVML handles configurations of individual plugins. That is, in order to visualize a new data-type, the user has essentially to write an appropriate plug-in. The remainder of the system is not affected at all. For a more detailed discussion of the plug-in concept we refer to Section 4.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>System Configuration using IVML</head><p>The configuration and parametrization of the kernel and the plugins to be loaded, has both to be comfortable for the users and to exhibit small turn-around times. Therefore, the framework is equipped with a high-level script language, called IVML (Information Visualization Modeling Language). In contrast to all other system components which are build by using a compiled language providing a maximum of speed, the configuration scripts are handled by an interpreter. Since they execute only once at start-up time we balance time against flexibility. All in all, the fundamental question of compiled or interpreted components is solved by a compromise: On the one hand the interpreted approach is used wherever the execution repetition is very low and therefore the demand for speed is of secondary interest. On the other hand compiled code is used for all low-level and often-run-through program segments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Some Arguments pro Java</head><p>Two important aspect have to bear in mind to give a framework the chance for general acceptance: First the system should base on already established standards. Second, the implementation should be as independent of operating systems as possible.</p><p>In this context, a new trend in portability emerges with Java <ref type="bibr" target="#b17">[17]</ref> and its "write once, run everywhere" philosophy. In this way applications run (almost) on any operating system supporting Java. We believe that the leak of performance compared to C++ will get obsolete over time. Here, the performance improvements made with every new Java release and the availability of native code Java compilers <ref type="bibr" target="#b18">[18]</ref>, <ref type="bibr" target="#b19">[19]</ref> are good evidences.</p><p>In addition, besides all the euphoria, Java is widely accepted as a highly portable quasi-standard in the computer community and is available on many operating systems. Furthermore Java is strongly object-oriented, which is critical for a well structured implementation of a complex framework.</p><p>For 3D graphic output we selected the system independent modeling language VRML 2.0 [20] to provide a high-level description of the scene. Specifically, there are many viewers and APIs available supporting VRML 2.0. Each of them handles basic object management such as adding, removing and picking of an object.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Information Flow</head><p>In our terminology an information flow affects the visual representation of our input data. Consequently, one stream of information flow is the data itself. It starts with the data acquisition and ends up in the visual representation. If we connect, for instance, real-time data feeds, such as a Reuters ticker, to the system the visualization will be continuously driven by the data. A second important flow of information is defined by the user interactions. The information contained in this flow range from mouse clicks to cursor updates of a connected haptical device.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data Acquisition</head><p>The data acquisition is the starting point of every visualization or visual mining procedure and supplies the system with raw material. In the simplest case the data can be read from an ASCII-file. Since the acquisition process obviously belongs to the datadependent components and is therefore settled in the data plug-in components, IVORY does not impose any further restrictions on data access. Each instance of a data plug-in is responsible for its own data acquisition, which is thus fully transparent to the rest of the system. This mechanism enables us to tap any data-source by a specifically designed method and conversely to access one datatype through different methods without changing the rest of the </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Configuration of the Layout System</head><p>In many graph-based visualization methods, data units, as represented in the system by instances of plug-ins, are considered as entities in a physical world and relations between them can be mapped onto interacting forces. However, the configuration of an individual layout algorithm takes a direct influence on the resulting object arrangement in 3D space <ref type="bibr" target="#b8">[8]</ref>, <ref type="bibr" target="#b10">[10]</ref> and <ref type="bibr" target="#b16">[16]</ref>.</p><p>In IVORY, the configuration of the interacting forces is done by a second type of plug-in, the connection plug-ins. They provide two adjustable parameters, rest length and the spring stiffness . Their values are defined through the metric method of the connection plug-in. This method calculates a scalar value depending on similarity of the two connected data plug-ins and . The definition of expressive metric functions is still an ongoing research issue in information retrieval and can therefore be individually adjusted.</p><p>In the current setting we propose four different mapping models summarized as follows:</p><p>• Similarity mapped onto the rest length only: (Chose sufficiently large) (Rest length inverse proportional to stiffness)</p><p>• Similarity mapped onto the spring stiffness only:</p><p>(Stiffness proportional to rest length) .</p><p>• Similarity mapped onto both parameters and :</p><p>and .</p><p>• Similarity mapped onto the rest length and the reliability of the value of mapped on the spring stiffness :</p><p>and .</p><p>All methods mentioned above are aiming at a mapping of object similarities onto the parameters of the physics-based metaphor. That means, similar data objects will be tighten together by a large and/or a small . The last version especially considers the reliability of individual similarity values and is used for the visualization of uncertain or unreliable data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Relaxed Layouts</head><p>Self-organizing layouts are results of a simulation process relaxing the configured system into an energy minimum. This process eventually performs the dimensionality reduction and discovers knowledge in data or confirms existing hypotheses about the data. Specifically, in explorative data analysis, clustering and aggregation of data objects are extremely important methods. The layout algorithms used perform implicit cluster-based object arrangements, a more detailed discussion of which is given in <ref type="bibr" target="#b9">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3D Representation</head><p>The 3D representation is the essential step in the data information flow. In order to assign color, material, texture, geometry or other features to the data objects or aggregations IVORY provides the plug-in mechanism, where a data-specific property mapping could be defined for each data-type. The mapping from data properties to visual attributes is done by the visualizer task. In addition, IVORY provides a powerful set of user interactions described in the following subsection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>User interactions</head><p>The user interaction closes the feed-back loop by which the user can optimize the visual data analysis process. Besides generic interaction methods, such as free or constraint navigation in the 3D-representation or object picking, IVORY supports specifically a so-called "drill-through" mechanism. That is, when picking an object we can invoke any data-dependent operation on it, such as requesting a 2D-visualization of the underlying data or direct data editing. This is accomplished by implementing the appropriate method in the objects plug-in. In this way, for each data-type there are various data-specific interaction methods provided for the user. Generally, IVORY advocates the same intuitive interaction methods many users are used to from modern desktop windowing systems.</p><p>Another class of user interactions are the computer aided analysis methods. By the use of view filtering, for instance, the user can select interesting subsets of objects. Conversely, clustering is used as a method to handle complex visualizations, where groups of objects are condensed to one meta-object, a cluster. Applying this process recursively we can build hierarchical object arrangements. This enhances the overview and simultaneously reduces the computational efforts. A third class of methods are pathfinders. They are specifically designed for graphbased visualizations and enable to identify paths between individual nodes in a graph <ref type="bibr" target="#b21">[21]</ref>.  </p><formula xml:id="formula_0">l 0 k s ij d i d j s ij l 0 k const = const l 0 inv s ij ( ) = s ij k k s ij = l 0 const = s ij l 0 k k s ij = l 0 inv s ij ( ) = s ij l 0 r s ij k k r s ij ( ) = l 0 inv s ij ( ) = k l 0</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Framework Kernel</head><p>The abstract framework kernel of IVORY contains generic implementations of all common components underlying to our physicsbased visualization paradigms and belongs to the set of data-independent components of the framework. Thus, kernel methods are highly reusable and shorten the design cycles of novel visual metaphors. Unlike most visualization systems, where the frontend/backend-separation is introduced to detach systemdependent from system-independent code segments, we employed this notion primarily to run the system in client-server setup over a network.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Frontend</head><p>The frontend is designed to run in a Java enabled WWW-browser. It consists of three parts: The visualization subsystem, which is responsible for all visual system outputs, as well as for the handling of user inputs. The 2D graphical user interface (GUI),</p><p>shown on the left side of <ref type="figure" target="#fig_4">Figure 5</ref>, covers all standard I/O tasks with appropriate menus and dialog boxes. Per default, an outline of all loaded objects (plug-ins) is shown as a collapsible tree structure. The 3D viewer is presented on the right side of <ref type="figure" target="#fig_4">Figure  5</ref>. Note that the visualized objects do not belong to the frontend. They manage the visualization of the calculated object arrangements and basic navigation functions. In order to decouple the frontend from the viewer we defined a generic 3D viewer interface. Thus, only the defined interface has to be re-implemented when changing the VRML viewer.</p><p>In addition we introduce two messenger components. The propagator is responsible to inform the backend, if a user interaction has invalidated the integrity of the frontend and the backend data-structures. E.g. whenever the user manipulates the layout parameters, the backend has to recalculate the corresponding object arrangement and synchronize itself with the frontend. The visualizer performs in a similar manner, but in the opposite direction from the backend data-structure to the frontend visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Backend</head><p>The backend supports two different execution modes: Either it is directly attached to the frontend and runs in the same address space or it runs as a separate server-application on a different machine. In the second case the frontend and backend communicate over a Java socket connection.</p><p>One of the main design goals for the backend was a responsive care data-structure, where all the instantiated objects (plugins) are stored. It is strictly optimized for fast object insertion, deletion and look up. The structure is initialized by the IVML subsystem, which is responsible for dynamic object instantiating according to the parsed configuration script. Hence, this subsystem must be able to load and link unknown plug-ins at runtime.</p><p>As indicated by <ref type="figure" target="#fig_1">Figure 2</ref>, we distinguish between two different subsystem components accessing the core data-structure directly. The layout subsystem builds up a mass-spring-network based on the objects stored in the core structure. It also contains state-of-the-art differential-equation-solvers to simulate networks relaxation over time. This includes specifically gradient (Euler, Runge-Kutta) or stochastic (annealing) based-methods, where, in practice, gradient algorithms are much more suitable to treat time-varying data. The second subsystem type is provided by the analysis component comprising selection filters, pathfinders and clustering algorithms. The subsystem interfaces allow users at a systems designer level to easily extended kernel algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Transparent Network-Layer</head><p>All communication between frontend and backend is streamed over the transparent network-layer. Hence, the communication is generally transparent to all system components from above and guarantees full independence of the IVORY execution mode (stand-alone or client/server).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">PLUG-IN MODEL</head><p>While defining the abstraction level of IVORYs plug-ins, we focussed on productivity and ease of use. Since Plug-ins only contain functions which implement a specific metaphor or rule the plug-in programmer can concentrate his efforts on the dataspecific issues. Recalling the information flow pipeline shown in <ref type="figure" target="#fig_2">Figure 3</ref>, a plug-in contains, for instance, the similarity metrics and the property-and behavior-mappers driving the visualizers.</p><p>For reasons of simplicity, plug-ins contain both frontend-and backend-components. Conceptional, the separation is reflected by two groups of methods. Unlike AVS 5 <ref type="bibr" target="#b1">[2]</ref>, where separate computation and description modules exist, an IVORY plug-in is always viewed as one entity even though individual classes belong either to the client or to the server.</p><p>The design of new plug-ins takes advantage of the object-oriented approach of the framework, where we make extensive use of object inheritance. All plug-ins are derived from a small set of base classes and are thus organized in a hierarchical structure, illustrated in <ref type="figure" target="#fig_5">Figure 6</ref>. The most important classes are discussed in the following subsections.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Base Objects</head><p>The base object class (BaseObj) builds the root of all plug-ins. Practically it's the only object class known in the abstract information visualization kernel of the system. It essentially determines the set of methods, the plug-ins could be accessed through.</p><p>A selection of the most important (abstract) methods are given below:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Frontend Methods</head><p>• getIcon (abstract)</p><p>Optionally returns a reference to an icon resource. If available, it will be displayed in the 2D outline window.</p><p>• getAppearance (abstract) Returns the description of the representation of the object in the 3D viewer and is described in native VRML 2.0 <ref type="bibr" target="#b20">[20]</ref>.</p><p>• getDisplayComponent (implemented) This method provides the dialog component, which displays the information contained in the corresponding object. This includes administrative information (id, position, flags, ...) as well as stored user data.</p><p>• getEditComponent (abstract) If the object features editing, the method provides an editor component for the above information. This enables specifically data editing at runtime.</p><p>• getVisPar (implemented) Returns the previously calculated visual parameters by calling the method calcVisPar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Backend Methods</head><p>• calcVisPar (abstract) Calculates the visual parameters (position, scale, orientation and color) of an object depending on the underlying data. This way, specific data-properties can be mapped onto visual attributes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Data Objects</head><p>Data objects are directly derived from the base object class and serve as an access interface to the explored data. The data management is individually solved by the current implementation of a data object. For each instance of a data object a corresponding particle-mass is automatically created in the layout-subsystem. The setup of particle parameters is handled by the additional backend method explained below.</p><p>Due to its paramount importance for many applications we support time-variant data and multiple data channels per data object in our implementation. A good example is the analysis of a set of critical interest rates of different countries over the last years. In this case, a data object is allocated for each country. In each data object one channel is opened for each data feed <ref type="bibr" target="#b9">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additional Backend Methods</head><p>• calcParticle (abstract)</p><p>In this method non-visual parameters of the particle attached to the data object could be parametrized. In this way the object behavior during the layout process can be defined.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Connection Objects</head><p>Connection objects are of the same inheritance level as the data objects. This object type serves as a binding object, which represents the relation of two data objects and is of fundamental relevance for the resulting object layout.</p><p>For each connection object instance a corresponding spring is created in the layout-subsystem. The physical parameters of the spring are defined via the additional backend method described below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Additional Backend Methods</head><p>• calcConnection (abstract) In this method non-visual parameters of the spring corresponding to the connection object can be parametrized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Cluster Objects</head><p>Another object type of the first derivation level are the cluster objects. They enable a hierarchical organization of the visualization and can be looked at as data object containers.</p><p>Note, that they are created by the corresponding clustering algorithm located in the analysis subsystem. For each identified cluster a new instance is allocated. The appearance of this instance is a result of the cluster analysis calculations. In <ref type="figure" target="#fig_6">Figure 7</ref> the resulting appearances of two different clustering methods are illustrated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Abstract System Object</head><p>Our experience has shown that generic objects without a visual appearance are very helpful for efficient solutions. Thus, we introduce so-called abstract system objects. Examples are parameterized global functions, such as data or currency converters.</p><p>Another area of application is the attachment of additional I/O-devices. For example, our physics-based system is predestinated for the use of force-feedback devices. In the example presented in Section 7, for instance, an object representing the device is derived from the abstract system class and helps to seamlessly integrate it into IVORY.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">THE INFORMATION VISUALIZATION MODELLING LANGUAGE (IVML)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Scope</head><p>As already explained in Section 2, the purpose of the script language developed for IVORY is to configure and parameterize individual visual metaphors implemented by the plug-ins. Since VRML 2.0 is not sufficient to specify the topology of large graphs, we had to devise a proprietary extension called IVML. As an interpreted high-level language it enables users on the power level to elegantly describe individual visualization problems and to build fast prototypes. The language is open, object-oriented and features scene graphs. In order to describe the geometry and visual appearance of layouts VRML 2.0 code can be embedded into IVML. Similar to VRML 2.0 the basic building blocks describing the scene are objects defined by fields. The following example outlines a typical IVML object:</p><formula xml:id="formula_1">DEF myObj SampleData {</formula><p>label "Hello world!" num (23+7)/sin(0.334) visual IVVisual { color &lt;0, 0, 1&gt; * settings.intensity } appearance INLINE "file:/vrml/lora.wrl" datapath system.scriptbase + "/dbase" } The object type SampleData is implemented by the corresponding IVORY plug-in. Thus, we do not impose any restrictions to the number of object types in IVML. Other features comprise inline arithmetic expressions and references (settings.intensity), which replace the route mechanism along with JavaScript.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">IVML specific Nodes</head><p>In essence, the following IVML-specific nodes, whose hierarchy is presented in <ref type="figure" target="#fig_7">Figure 8</ref>, make up the extensions to VRML 2.0:</p><p>The header identifies the IVML script and version. Connectors are objects which support the automatic description of the graph topology of the visualization problem. We distinguish between so-called NameConnector and TypeConnector. Both support wildcards to simplify the generation of object connections in very complex environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">The Plug-in Interface</head><p>In order to reflect the plug-in mechanism, IVML features dynamic loading to invoke plug-in classes at runtime. It is similar to SGIs OpenInventor.</p><p>The following example illustrates the idea. Here, we define a simple, static graph consisting of 6 data objects and 12 interconnections. The associated connectivity matrix is given by:</p><p>The IVML code fragment depicted below gives the full definition of the graph. We start with a prototype definition of a generic data object from which all subsequent instances are derived. The prototype contains a default initialization of information assigned to all objects, such as color or scale factors. Note that the geometry of the prototype object is hardwired in the plugin SimpleData, which itself is derived from the BaseData class (see also Section 4). Next, two individual objects (ellipses in <ref type="figure">Figure 9)</ref> are instantiated overwriting some of the default parameters of the prototype. In particular, we overwrite the object appearance by an VRML 2.0 expression, which can be either inline or URL. Likewise, we generate the four spherical objects. The subsequent prototype definition of connection objects is used by the following expression, which describe the links between all objects. It can be seen, that the wildcard expressions in IVML, such as "R*" tremendously simplify the definition of the graph topology of our example.   cally organized layout subsystems, which make use of the object clustering analysis embedded into the system. We expect a tremendous speedup for the layout. Secondly, a widely strewn usability test including daily-business cases in the areas of our cooperation partner will validate IVORYs performance in practice.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>User abstraction model and system architecture</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Schematic overview of the system-components in IVORY data-sources encompass conventional data bases (SQL, DB2, DBase, ...), search-engines in the internet, the World Wide Web (WWW) or real-time data tickers.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>IVORYs information flow pipeline. 1) Data driven information flow. 2) User interaction (feed-back) information flow</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Results of possible user interactions. a) "Drill-through" the data provided by a currency plug-in. b) 3D Arrangement of a HTML-page domain (similarity criterion is the URL) after invoking the Blob-clustering algorithm from [</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Screenshot of the IVORY frontend running on a Windows NT 4.0 machine under Netscape 4.04 with AWT 1.1 support.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>IVORYs plug-in hierarchy: The base classes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Two implemented types of clustering. a) Blob Cluster and b) Ellipsoid Cluster. a) b)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Hierarchy of IVML specific Classes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :Figure 10 :</head><label>910</label><figDesc>Layout computed from IVML script presented above a) User sitting in front of the haptical device. b) View on the virtual representation of the haptical workspace. The layout shows the influence of four economic indicators onto the long term interest rates of different countries; Canada is currently being dragged by the user.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>Constants are represented as strings in IvoryConst objects.System parameters are stored in an IvorySystem object, which is automatically initialized at parse time. It contains various fields, which are omitted here for brevity.Environment objects contain VRML inlays to define individual backgrounds, light sources, cursors and static scene parameters. env IvoryEnvironment { lights INLINE "brightLight.wrl" cursor INLINE "crossCursor.wrl" environment INLINE "financeEnv.wrl" billboards INLINE "extendetBboard.wrl" }</figDesc><table><row><cell></cell><cell>DEF</cell></row><row><cell>#IVML 1.0</cell><cell></cell></row><row><cell cols="2">DEF myconst IvoryConst {</cell></row><row><cell cols="2">myTitle "Hello World!"</cell></row><row><cell>myURL</cell><cell>"http://hello.world.ch/basics.html"</cell></row><row><cell>}</cell><cell></cell></row><row><cell cols="2">DEF system IvorySystem {</cell></row><row><cell cols="2">cluster BaseCluster {</cell></row><row><cell cols="2">visible TRUE</cell></row><row><cell cols="2">transparency 0.8</cell></row><row><cell>}</cell><cell></cell></row><row><cell cols="2">layout BaseLayout {</cell></row><row><cell cols="2">series IVTimeSeries {</cell></row><row><cell cols="2">start 1.1.75</cell></row><row><cell cols="2">stop 31.12.95</cell></row><row><cell>}</cell><cell></cell></row><row><cell>}</cell><cell></cell></row><row><cell cols="2">info IVInfo {</cell></row><row><cell cols="2">title "Economic indices"</cell></row><row><cell cols="2">info ["Example for Ivory V2.0"]</cell></row><row><cell>}</cell><cell></cell></row><row><cell>}</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Connectivity matrix of the example shown below</figDesc><table><row><cell></cell><cell>T1</cell><cell>T2</cell><cell>R1</cell><cell>R2</cell><cell>R3</cell><cell>R4</cell></row><row><cell>T 1</cell><cell></cell><cell></cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>1</cell></row><row><cell>T2</cell><cell></cell><cell></cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>1</cell></row><row><cell>R 1</cell><cell>1</cell><cell>1</cell><cell></cell><cell>1</cell><cell></cell><cell>1</cell></row><row><cell>R2</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell></cell><cell>1</cell></row><row><cell>R 3</cell><cell>1</cell><cell>1</cell><cell></cell><cell>1</cell><cell></cell><cell>1</cell></row><row><cell>R4</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell></cell><cell>1</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENT</head><p>This research has been made possible by the IT-Camp of the Swiss Bank Corporation (SBV), Basel, Switzerland. The authors thank T. Strasser and D. Bielser for implementing parts of the software.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">IMPLEMENTATION ISSUES</head><p>The IVORY implementation takes full advantage of all sophisticated features provided by Java 1.1. Each plug-in is mapped onto a Java class. Thus, the loading of individual plug-ins at runtime can be accomplished by the dynamic class loading mechanism of Java. The Java reflection model is used by the IVML interpreter to check, read and set the field values of plug-in objects.</p><p>We use the naming convention for setter and getter methods of Java Beans to access the underlying Java member variables. The Beans compliance enable to use all advanced Beans features, such as property editing. Although our current client-server implementation is based on a proprietary object serialization protocol, we are currently working on an RMI-based method invocation.</p><p>One of the critical implementation issues of IVORY was (and still is) the 3D API. The OpenGL bindings, available in beta-version from <ref type="bibr" target="#b22">[22]</ref>, are fast, however, are on a low abstraction level and do not support advanced object management by scene graphs. In addition, some rendering features, such as texture mapping are not implemented. In addition, VRML parsing has to be provided by the user.</p><p>Unlike OpenGL, Suns Java3D <ref type="bibr" target="#b23">[23]</ref> provides a powerful API for 3D graphics including scene graph optimization and VRML extensions. The platforms comprise SUN and Windows 95/NT, however, the API has not been available during the implementation of IVORY.</p><p>Therefore, an early version of IVORY was based on Dimension Xs Liquid Reality class library <ref type="bibr" target="#b25">[25]</ref>, which was the only appropriate 3D Java API at that time. The robust beta version supported VRML and has been ported onto many platforms. Since the scene graph data structures are maintained in Java, the system performance is low.</p><p>Our current implementation uses SGIs CosmoPlayer <ref type="bibr" target="#b24">[24]</ref> for visualization. Unlike the libraries from above, the software is essentially a VRML 2.0 viewer plug-in for WWW browsers which has no immediate 3D API for Java. However, viewer control and callback-functions can be invoked through the LifeConnect mechanism of the WWW-browser and the External Author Interface (EAI) of CosmoPlayer. The scene rendering is based on OpenGL and thus supported by a wide range of hardware accelerators. At this time CosmoPlayer is available for SGI, Windows 95/NT and Apple Macintosh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">EXAMPLE</head><p>In physics-based visualization environments force-feedback provides a natural human-computer interface and mediates an additional sensoric cue to the user. Therefore, we invoked a Phantom ® as 3D haptic interface. The Phantom enables to pick individual objects in 3D and to pull or push to "feel" the connection strength of objects for a given graph layout.</p><p>Further examples can be seen on our IVORY project homepage <ref type="bibr" target="#b26">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSIONS AND FUTURE WORK</head><p>We presented a new approach towards a portable, object-oriented framework especially designed for physics-based information visualization.</p><p>The system is open and expandable by adding new plug-ins. With the 4 layered abstraction model for users we provide adequate interfaces to configure our system at different abstraction levels. This covers a fast visualization prototyping using predefined plug-ins, but also a very flexible low-level system access. We also introduce a new script language named Information Visualization Modeling Language (IVML), which is distinctively proposed to describe information visualization problems. Future work has to encompass the development of hierachi- </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Visualization in Scientific Computing (ViSC)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Bruce</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><forename type="middle">A</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Maxine</forename><forename type="middle">D</forename><surname>Defanti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ed</forename><surname>Brown</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">In Computer Graphics, ACM SIGGRAPH</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">6</biblScope>
			<date type="published" when="1987-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Advanced Visual Systems Inc</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Avs Homepage</surname></persName>
		</author>
		<ptr target="http://www.avs.com" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IRIS Explorer Users Guide</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>Silicon Graphics Inc.</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Data Explorer Reference Manual, IBM Corporation</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">The Design and Implementation Of An Object-Oriented Toolkit For 3D Graphics And Visualization, Proceedings IEEE Visualization &apos;96</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">M</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="93" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">G</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Card</surname></persName>
		</author>
		<title level="m">Cone Trees: Animated 3D Visualization of Hierarchical Information, Proceedings Human Factors in Computing Systems CHI &apos;91</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Conference</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="189" to="194" />
			<pubPlace>New Orleans, LA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualizing the Global Topology of the mbone</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hoffmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Claffy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Fenner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Symposium on Information Visualization</title>
		<meeting>Symposium on Information Visualization</meeting>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Fast Interactive 3-D Graph Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Bruss</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Frick</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graph Drawing 95</title>
		<meeting>Graph Drawing 95</meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1996" />
			<biblScope unit="volume">1027</biblScope>
			<biblScope unit="page" from="99" to="110" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visualizing Information on a Sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Sprenger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Finger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Information Visualization 97</title>
		<meeting>the IEEE Information Visualization 97</meeting>
		<imprint>
			<biblScope unit="page" from="11" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Case Study -Narcissus: Visualizing Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hendley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Information Visualization 95</title>
		<meeting>the IEEE Information Visualization 95</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="90" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Card</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Gershon</surname></persName>
		</author>
		<title level="m">Information Visualization, SIGGRAPH 96 Course Notes 8</title>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Keim</surname></persName>
		</author>
		<title level="m">Visual Techniques for Exploring Databases, Invited Tutorial, Int. Conference on Knowledge Discovery in Databases (KDD&apos;97)</title>
		<meeting><address><addrLine>Newport Beach, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Xgobi</surname></persName>
		</author>
		<ptr target="http://www.research.att.com/~an-dreas/xgobi" />
		<title level="m">System For Multivariate Data Visualization</title>
		<imprint/>
		<respStmt>
			<orgName>AT&amp;T Labs Research</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">IVEE: An Information Visualization and Exploration Enviroment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ahlberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Wistrand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings International Symposium on Information Visualization</title>
		<meeting>International Symposium on Information Visualization<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="66" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Silicon Graphics data mining and visualization product</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mineset</surname></persName>
		</author>
		<ptr target="http://www.sgi.com/Products/software/MineSet" />
	</analytic>
	<monogr>
		<title level="j">Silicon Graphics Inc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">C</forename><surname>Sprenger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Eggenberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Kaufmann</surname></persName>
		</author>
		<title level="m">A Framework for Physically-Based Information Visualization. Eight EuroGraphics-Workshop on Visualization in Scientific Computing</title>
		<meeting><address><addrLine>France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="77" to="86" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">The source for Java Technology</title>
		<ptr target="http://java.sun.com" />
		<imprint>
			<publisher>SUN Microsystems Inc</publisher>
			<pubPlace>Palo Alto, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<ptr target="http://www.alphaWorks.ibm.com" />
		<title level="m">Home of the latest technologies from IBM, IBM Corporation</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">TowerJ High Performance Native Java, Tower Technologies</title>
		<ptr target="http://www.towerj.com" />
		<imprint>
			<pubPlace>Austin, TX</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vrml</forename><surname>The</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Consortium</surname></persName>
		</author>
		<ptr target="http://www.vrml.org" />
		<imprint>
			<publisher>VRML Consortium Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Tannenbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Langsam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Augenstein</surname></persName>
		</author>
		<title level="m">Data Structures Using C</title>
		<imprint>
			<publisher>Prentice-Hall</publisher>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The Magician OpenGL Interface</title>
		<ptr target="http://www.hermetica.com/technologia/java/magician" />
	</analytic>
	<monogr>
		<title level="m">Arcane Technologies Ltd</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Api</forename><surname>Java3d</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Homepage</surname></persName>
		</author>
		<ptr target="http://java.sun.com/products/java-media/3D" />
		<imprint>
			<publisher>SUN Microsystems Inc</publisher>
			<pubPlace>Palo Alto, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cosmo</forename><surname>Software Homepage</surname></persName>
		</author>
		<ptr target="http://cosmosoftware.com/products/player" />
	</analytic>
	<monogr>
		<title level="j">Silicon Graphics Inc</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<ptr target="http://www.microsoft.com/dimensionx/lr" />
		<title level="m">Dimension Xs Liquid Reality, Microsoft Corporation</title>
		<meeting><address><addrLine>Redmond, WA</addrLine></address></meeting>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cgrg Homepage</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Zürich</surname></persName>
		</author>
		<ptr target="http://www.inf.ethz.ch/department/IS/cg/html/research/infovis.html" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
