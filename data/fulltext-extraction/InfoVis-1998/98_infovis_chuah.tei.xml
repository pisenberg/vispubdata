<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Dynamic Aggregation with Circular Visual Designs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mei</forename><surname>Chuah</surname></persName>
							<email>mei@cs.cmu.edu</email>
							<affiliation key="aff0">
								<orgName type="department">School of Computer Science</orgName>
								<orgName type="institution">Carnegie Mellon University Pittsburgh</orgName>
								<address>
									<postCode>15213 (412) 268-2145</postCode>
									<region>PA</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Dynamic Aggregation with Circular Visual Designs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>One very effective method for managing large data sets is aggregation or binning. In this paper we consider methods for making data aggregation more simple and intuitive so that general users may benefit from this powerful technique. We present two interactive visual displays, each of which is tightly coupled with data aggregation. Both visualizations support: 1) automatic aggregation, 2) continuous change and control of the aggregation level, 3) spatially based aggregates, 4) context maintenance across different aggregate levels, and 5) feedback on the level of aggregation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>New technologies have made it much easier for us to collect and disseminate information. As the information available to us grows, so does the need for more powerful tools to manipulate this information. A very effective method for dealing with large data sets is aggregation. Data aggregation simplifies large data sets by summarizing groups of data elements and representing such groups with a single graphical symbol or glyph.</p><p>In this paper we explore two visual representations that are tightly coupled with the aggregation technique. We believe that the close marriage between the interactive display and the aggregation method will simplify the summarization process and make it more accessible to general users. Specifically, our interactive displays enhance the usability of aggregation in five primary ways:</p><p>1. Automatic aggregation of elements: Our dynamic visualizations automatically aggregate and deaggregate the data as necessary so that the greatest possible level of data detail is shown. Aggregation is performed in two cases: a) if an object is occluded, or b) if an object is too small to be perceived. Objects that fall into any one of these two categories are aggregated with neighboring objects. Some systems allow users to choose the elements for aggregation either through enumeration or through a data query. While such techniques are more flexible, they also tend to require significant manipulation of the visualization elements by the user.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">. Interactive control of the aggregation level:</head><p>Traditionally, the aggregation process is performed in a data preparation stage that occurs before the data is visualized. A problem with separating the visualization process from the aggregation process is that it is difficult to decide how to divide up the groups of data elements for summarization. The best way to divide up the elements can sometimes be arrived at only after repeated cycles of aggregating and visualizing the data. In addition, different aggregate levels may reveal different patterns in the data, thus there may be several ÒrightÓ ways of dividing up the data set. The visualizations presented in this paper support interactive, continuous aggregation control so that users may rapidly perform the Òaggregate and visualizeÓ cycle. In addition, the level of aggregation may be controlled continuously so that users may not only explore particular aggregate levels but also all the transition levels in between. This allows users to better perceive how the data patterns change with respect to different levels of detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">. Aggregation of spatial neighbors:</head><p>Our visual displays are designed so that neighboring data values are mapped to spatially contiguous graphical elements. When there are too many elements to fit within a given space, the elements are aggregated with their closest spatial neighbor. By limiting aggregation to spatially proximal objects, it will be much easier to figure out the contents of an aggregate and subsequently interpret it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">. Context maintenance across aggregation levels:</head><p>When the level of aggregation changes, its visual representation must naturally also change. Such changes can sometimes make it difficult to maintain visual context from one level of aggregation to the next. Our interactive displays are crafted so that context is easily maintained across aggregate levels. This is achieved by encoding the data with a graphical property that remains constant across aggregate levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Feedback on level of aggregation:</head><p>It is important to give feedback on the degree of aggregation applied to different value sets so that users do not erroneously draw conclusions between value sets that are aggregated at different levels. This becomes especially important when a particular value set is divided into multiple subsets, each with its own aggregation level. This is commonly done to focus on particular sections of the data while maintaining context of the surrounding elements.</p><p>In this paper we combine circular visual displays with dynamic aggregation to provide easy access to large data sets at different levels of detail. There are other techniques that allow users to interactively control the level of detail including PAD++ <ref type="bibr" target="#b1">[2]</ref>, distortion techniques <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b7">8]</ref>, and Table Lens <ref type="bibr" target="#b9">[10]</ref>. Our approach is different from these previous approaches in terms of the visual displays used and the interactive metaphors employed to control the different detail levels.</p><p>Subsequently we will present two interactive visualizations for dynamically manipulating aggregates. One display is a circular bar chart for showing non-hierarchical data and the other is an aggregate tree-map for showing hierarchical data. Subsequently, we will also show how both these techniques can be combined to form a visual display containing aggregates within aggregates. Such a display is especially useful for relating attributes of objects to the hierarchical structure in which the objects belong. We will conclude by discussing some limitations of these techniques as well as how the techniques can be combined with other interactive visualization metaphors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SolarPlot (Circular BarChart)</head><p>In this visualization, values are plotted around the circumference of a circle. For example, <ref type="figure" target="#fig_0">Figure 1</ref> shows ticket sales data for a hypothetical movie theatre over a period of 30 years. In this case the circumference encodes the time in which a particular ticket was sold (i.e. the date-sold attribute of the ticket object). Data is encoded from 0 degrees (which is at the mid-bottom point of the circle) to 360 degrees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Automatic aggregation</head><p>The level of detail with which we are able to show the data values in this display is automatically determined by the size of the circle circumference. A smaller circle will most likely have many different date sold values fall on the same circumference pixel. When more than one value fall on the same pixel, we plot a higher spoke emanating from that pixel. For example in <ref type="figure" target="#fig_0">Figure 1</ref>, more tickets are sold in the later dates than in the earlier dates. A larger circular plot of the same data (e.g. <ref type="figure" target="#fig_1">Figure 2</ref>) usually results in shorter spokes. This is because when more space is available, there is a smaller probability that values will fall on the same pixel of the circle perimeter. Because the heights of the spokes encode the number of tickets sold at a particular date, the solarPlot visualization used in this example resembles a circular frequency distribution (or a circular histogram).  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Interactive control of the aggregation level</head><p>Interactive control is provided so that the circle may be continuously expanded or contracted. By interactively expanding and contracting the solarPlot we can view different levels of aggregation. Different aggregation levels may reveal different patterns within the data set. From the highly aggregated display in <ref type="figure" target="#fig_0">Figure 1</ref> we notice that the sales distribution is increasing with time. The less aggregated display <ref type="figure" target="#fig_1">(Figure 2</ref>), however, shows that there is a periodic cyclic trend, peaking out during the summer and winter seasons of each year. The outer gray circle around the histogram is used to interactively scale the absolute heights of the histogram bars.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Aggregation of spatial neighbors</head><p>Aggregation is performed on close spatial neighbors. This is so that users may easily figure out the elements within an aggregate group. In addition adjacent values will probably be related in the data set so aggregating them will hopefully still produce useful data trends. That is why this representation is most appropriate for encoding ordered values where the positions of the elements on the circumference of the solarPlot have information significance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Context maintenance across aggregation levels</head><p>In the solarPlot, data values are mapped to different angles on the circle. This directional graphical property remains the same throughout all the different aggregate levels. For example in <ref type="figure" target="#fig_0">Figure 1</ref>, the value 49.999 is represented at 180 degrees. Similarly in <ref type="figure" target="#fig_1">Figure 2</ref>, which shows a different aggregation level of the same data set as <ref type="figure" target="#fig_0">Figure 1</ref>, the value 49.999 is still represented at 180 degrees. Thus the degrees per value stays constant no matter the level of detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Feedback on level of aggregation</head><p>The circular representation shows the level of aggregation by the size of the circle (or the radius of the sector). A large radius indicates a lower aggregate level (because there is more perimeter space) and a smaller circle indicates a higher level of aggregation.</p><p>We can also focus on particular attribute value intervals and expand the level of detail for only those intervals. This can be done by marking the sector that we want to control separately, and then expanding it independently from the other parts of the circle. For example, <ref type="figure">Figure 3</ref> shows sales data for a hypothetical company over time. From the highly aggregated data we can see that in general the company sales have been rather flat or constant with time. There is however an area of lower sales shown in <ref type="figure">Figure 3</ref>. By marking that time period and expanding it ( <ref type="figure">Figure 4</ref>) we can see that there are five spikes corresponding to it. As it happens, these spikes indicate periods of great advertising. Based on the distribution we may surmise that although advertising increases the sales for a small window of time, it is followed by periods of inactivity (low sales) right after the peaks. This resulted in lower overall sales in that period compared to other periods. In conclusion, the advertising campaign was not too successful. By focussing solely on the problematic time interval we are able to diagnose the problem without having to expand the entire display (which would require significantly more screen space).  <ref type="figure" target="#fig_4">Figure 7</ref>. In this representation, the x-axis encodes the attribute values and the y-axis encodes the frequency of particular attribute values. The circular representation, however, has some good properties for interactively manipulating and controlling aggregates:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Greater maximum level of detail</head><p>Here we define the maximum level of detail to be the highest level of data detail that may be viewed on a visualization within a CRT screen area. In the solarPlot representation, the maximum level of detail is limited by the maximum circle circumference. Assuming that the CRT screen has a resolution of 1280 by 1024 pixels, we can have:</p><formula xml:id="formula_0">√ ↵  − 2 2 1024 2 c π bins,</formula><p>where c is the number of pixels needed for the spoke lengths. Assuming a data set size of 10,000 elements, the average size per bin comes out to be approximately 3 elements per bin. Based on this figure, we could have up to 3199 aggregate bins within the CRT screen (assuming a flat distribution). On the other hand, the rectilinear histogram can only have a maximum of 1280 bins per CRT screen.</p><p>The 3199 bins estimate is admittedly an optimistic estimate because we are assuming a flat distribution. However, even if we increased the size of each bin from 3 to 300, we would still be able to show 1332 bins.</p><p>On the downside, the solarPlot representation leaves a great area within its inner circle empty. This does not pose a problem when we can position some plots within the inner area of other plots. However, problems arise when we want to view several plots simultaneously at the same level of aggregation. In this case we would not be able to embed plots within plots because all of them would have the same size (i.e. same aggregate level). Thus all the inner areas would be wasted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Less false irregularity</head><p>When aggregating value sets we often cannot ensure that each bin will represent the same data interval size. We can only ensure equal interval bins if we grow the display by data size chunks. This is often not a good solution because the display size makes a discrete jump every time we cross a data size boundary and the effect can be very jarring to users. Thus we are left with the problem of having to deal with non equiinterval sized bins. We call bins with different interval sizes than the majority of the other bins odd sized bins. Our goal is therefore to minimize the visual effect of odd-sized bins by hiding the irregularities that they introduce while maintaining continuous display change and maximal aggregation. These irregularities are better hidden when we can disperse the odd bins more frequently and regularly across the distribution. For example in <ref type="figure" target="#fig_3">Figure 5a</ref>, which only has 3 odd bins, the placement of the odd bins is very irregular. Thus the probability of falsely interpreting this irregularity as a data pattern is great. In contrast, <ref type="figure" target="#fig_3">Figure 5b</ref> has 13 odd bins more regularly dispersed throughout the distribution, and is thereby less susceptible to false irregularities. In the solarPlot representation, the visual effect of odd-sized bins is minimized because these bins are distributed more regularly around the circle. This is because any expansion or contraction of the solarPlot radius will cause a balanced growth/shrinkage around the entire circumference of the circle. As a result the error, or odd sized bins are spread regularly around the circle. On the other hand the rectilinear histogram can be expanded on a pixel by pixel basis. Thus the error, or odd sized bins may be concentrated in a smaller area and thus appear more irregular.</p><p>Suppose we have a solarPlot with a circumference of 100 pixels. Further suppose that we use this solarPlot to represent 1000 different days, so that each bin represents 10 days. If we increased the radius by 1 pixel, we would have a circumference of approximately 106 pixels which would leave 46 odd sized bins representing 10 days and 60 regular bins representing 9 days. On the other hand the rectilinear histogram has a minimum expansion size of 1 pixel. So if we increased a 100 pixel sized rectilinear histogram by 1 pixel we would have to map 1000 days into 101 pixels. In this case we would only have 10 odd sized bins with 9 days and 91 bins with 10 days. Thus there are 46 odd sized bins for the solarPlot and 10 odd sized bins in the rectilinear histogram. The odd-sized bins are therefore more susceptible to showing false irregularities in the latter case.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Better label layouts</head><p>In the circular visualization display, data labels may be placed above or below and slightly to the left or right of neighboring labels. In this representation the number of labels that can be displayed equals:</p><formula xml:id="formula_1">√ ↵  + s h D 2</formula><p>where D is the solarPlot diameter, h is the height of a label character, and s is the space between labels.</p><p>The rectilinear histogram in contrast can display:</p><formula xml:id="formula_2">X n w s ( * ) + labels</formula><p>where X is the x-axis length, n is the maximum number of label characters, w is the width of a character, and s is the space between labels. Now let us consider the number of labels that can be displayed on a solarPlot and a rectilinear histogram of the same length (i.e. D = X). For simplicity we will assume that the height and width of font characters are the same (i.e. h = w) and that s is small and thus negligible (i.e. s = 0). Based on these assumptions the solarPlot representation can display 2n more labels than the rectilinear histogram (where n represents the number of characters in the longest label). Suppose that the maximum label width is 5 characters long (depending on the attribute values encoded this can commonly be much longer). This would mean that the solarPlot representation can display 10 times the number of labels possible on a rectilinear histogram. A horizontal labeling method requires a large amount of space in the rectilinear histogram because it is width based.</p><p>Another possible labeling method is to offset the labels to the top and bottom as is shown in <ref type="figure" target="#fig_0">Figure 14</ref>. This method allows double the number of labels to be displayed compared to the simple horizontal layout described above. However this layout scheme can often be confusing as it may be difficult to relate the label to a point on the x-axis. In any case, the solarPlot label layout can still display n times more labels compared to the layout method in <ref type="figure" target="#fig_0">Figure 14</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Label-1</head><p>Label-2</p><p>Label-3 Label-4</p><p>Label-5</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 6: Horizontal labeling method</head><p>Finally, we can also use a vertical labeling scheme in the rectilinear histogram. This would allow:</p><formula xml:id="formula_3">X h s + labels</formula><p>On the surface this comes very close to the number of labels in the solarPlot. However, in reality, this figure is much smaller because s here is large. A significant amount of white-space (s) has to be allocated between neighboring labels so that the user is not tempted to read the labels horizontally which is the more common way to read text.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Better feedback on level of aggregation</head><p>As was described previously, the solarPlot shows the level of aggregation clearly through the size of the circle. The aggregation level is less clear in the rectilinear histogram, especially when we are aggregating different value intervals at different levels. For example <ref type="figure" target="#fig_4">Figure 7</ref> shows the same data as <ref type="figure">Figure 4</ref> with the same two levels of aggregation. In <ref type="figure">Figure 4</ref> it is clear which time intervals are more highly aggregated and which are not. In <ref type="figure" target="#fig_4">Figure 7</ref>, however, it is unclear whether the circled area is lower due to the distribution of the data set or due to different aggregate levels. The only way to determine for certain is to look at the x-axis labels, which in this case increases by 3.6 in the circled area and by 7.7 in the other areas.</p><p>It is possible to make aggregated areas on the rectilinear histogram more apparent by using different tick spacings on the x-axis depending on the level of aggregation. However, this method is still much less visually salient compared to the size encoding used in the solarPlot. We could also map the level of aggregation to other visual properties. For example we could indicate the level of aggregation by saturating the background of the display differently according to the aggregation level. Another alternative is to encode level of aggregation by using the depth of the bars (i.e. making highly aggregated portions jut out more and less aggregated portions sink into the display). However theses additional graphical mappings may introduce added complexity as well as clutter up the display by introducing more ink density <ref type="bibr" target="#b11">[12]</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Maintain context across aggregate levels</head><p>As was previously described the angle to data encoding for the solarPlot remains constant across different aggregate levels. On the other hand, the rectilinear histogram plot maps data values to xposition. Unlike the solarPlot angles, the x-position for a particular value changes depending on the aggregate level. A higher aggregation level will cause x-position values to shift to the left and a lower aggregation level will cause x-position values to shift to the right.</p><p>It is interesting to note that the solarPlot display can be extended to encode two attributes instead of just one as in the case of <ref type="figure" target="#fig_0">Figure 1, Figure 2</ref>, <ref type="figure">Figure 3</ref>, and <ref type="figure">Figure 4</ref>. I.e. the solarPlot can be used as a bar chart instead of as a histogram. This can be achieved by encoding the second attribute using spoke lengths and using color to encode the level of aggregation. The spoke length of an aggregate object would then be the average value of all the elements it contains. In this extended system aggregation would still occur in the same way (i.e. when two values fall on the same circumference pixel) and the interactive controls can also remain the same.</p><p>The solarPlot is most useful for viewing global relationships or trends in large data sets for a single data attribute or between two data attributes. It is less appropriate for viewing relationships between multiple attributes. For this purpose we have linked different solarPlots together through painting <ref type="bibr" target="#b0">[1]</ref> so that attribute relationships can be explored across plots. The <ref type="table">Table  Lens system allows the cross exploration of multiple  attribute relationships by aligning a set of rectilinear  histograms.</ref> Aligning a set of solarPlots would correspond to nesting one within the other, generating a series of concentric plots (similar to <ref type="figure" target="#fig_0">Figure 12</ref>). Unlike rectilinear alignment however, the series of concentric circles has an implicit importance ordering, with the outer circles being the most important because it is shown at the highest level of detail. The innermost circle is deemed least important and is highly aggregated. Such a representation is appropriate for data sets that have an importance ordering corresponding to the ordering implicit within the concentric graphical representation. An example is time-based data, e.g. stock price data, where the later time values are of more interest than the earlier time values. By using the concentric circles representation we can compare more recent time trends with older trends for similarities and differences. At the same time more detail is shown on the newer data values.</p><p>The solarPlot system can be extended to support concentric alignment and to allow aggregation to occur not just within each circle plot but also between circles. When too little space is allocated between two concentric circles we can combine them by aggregating up the values of the two circles.</p><p>We now move on to describe a technique for viewing large hierarchies, the aggregate treeMap. After doing so, we will conclude by demonstrating that the solarPlot technique described in this section can be combined with the aggregate treeMap technique (which is designed for viewing hierarchical data).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Aggregate TreeMap</head><p>The aggregate tree is a spatially contiguous method for displaying hierarchies. This visual display is very similar to the Polar TreeMap visualization presented by Johnson <ref type="bibr" target="#b5">[6]</ref>. In this visualization we represent a hierarchy as a triangle. Each node fills a space within that triangle. The space allotted to a particular node is based upon its total number of descendants in the hierarchy. Subtrees that have greater numbers of nodes will be allotted more space than those with fewer nodes.</p><p>The triangle is vertically divided into as many levels as are in the hierarchy. For example <ref type="figure">Figure 8</ref> shows an aggregate tree of a 3 level hierarchy (shown in <ref type="figure" target="#fig_6">Figure 9</ref>). The topmost level is given to the root of the tree. The second level is divided among the rootÕs children based on their total number of descendants. Child d gets two-thirds (four-sixths) of the space because there are 4 nodes within that subtree while there is only one node in the b and c subtrees.   Node color may also be used to encode an attribute of the hierarchy nodes (e.g. file-permissions, file-size, modification-date). For example <ref type="figure" target="#fig_0">Figure 10</ref> shows an aggregate tree representation of my home directory. The color saturation of the nodes are used to represent date-of-last-modification.</p><p>To better utilize the display space, we can use a partial circular representation instead of a triangular representation. The circular representation provides a greater angle range at the apex of the tree and this trickles down to the nodes on the lower levels of the tree. For example <ref type="figure" target="#fig_0">Figure 11</ref> shows the same data as <ref type="figure" target="#fig_0">Figure 10</ref>, however, the greater number of mappable angles allows greater data detail to be shown given the same amount of space. The difference between <ref type="figure" target="#fig_0">Figure  10</ref> and <ref type="figure" target="#fig_0">Figure 11</ref> can be seen especially on the leaf nodes. <ref type="figure" target="#fig_0">Figure 11</ref> has more detail on the leaf nodes whereas in <ref type="figure" target="#fig_0">Figure 10</ref> many of the leaf nodes have been aggregated together. Note that we do not use a full circle because we want a separation between the right and left sides of the hierarchy so that users do not falsely interpret the structure of the hierarchy. The aggregate treeMap is an effective interactive display for manipulating large data sets for the following reasons:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Automatic Aggregation</head><p>Aggregation is performed automatically on a level by level basis. For each level we consider every node within the level and determine whether it fills a perceivable area of space. If so, we let it be. It not we aggregate it with its nearest, smallest neighbor. This is in contrast to certain tree techniques that collapse entire subtrees to avoid occlusion. In this case, some nodes may be collapsed although they are not contributing to the occlusion problem.</p><p>When multiple nodes are aggregated, the resulting aggregate node will fill the entire space allotted to its encapsulated nodes. Each node within the aggregate will contribute to a portion of the aggregate nodeÕs color. The percentage contribution of each node is dependent on its number of descendants. Larger nodes (i.e. nodes with more descendants) will contribute a greater percentage than smaller nodes. When nodes of different color are aggregated the aggregate will be a combination of all their colors. Because of aggregation, this treeMap representation can encode very large trees (the trees shown in <ref type="figure" target="#fig_0">Figure 10</ref> and <ref type="figure" target="#fig_0">Figure 11</ref> has 5842 nodes).</p><p>Currently we also use color to encode the level of aggregation (i.e. the number of values within the aggregate). If saturation is used to encode a data attribute (as in <ref type="figure" target="#fig_0">Figure 11</ref>) then hue is used to encode the aggregate level. In this example, the more purple a node is, the greater the aggregate level. The saturation of the nodes in <ref type="figure" target="#fig_0">Figure 11</ref> is not changed by the aggregate level. On the other hand, when hue is used to encode a data attribute (e.g. file permissions) then saturation is used to encode the aggregate level.</p><p>By using both hue and saturation to encode two different types of information we recognize that accurate data readings can no longer be extracted from the display. This is because hue and saturation are integral properties, and such properties are hard for our perceptual system to separate <ref type="bibr" target="#b10">[11]</ref>. However, our intention with the color coding is to bring the userÕs attention to interesting areas which includes: 1) areas with interesting data and 2) highly aggregated areas. By combining the coding of these two attributes, we hope that the userÕs eye will be drawn to both these areas. For example in <ref type="figure" target="#fig_0">Figure 11</ref>, our eye is drawn to the large magenta area, which indicates a high aggregation area. This section corresponds to different folders in my Mail directory. The brighter magenta colors indicate files with more recent modification dates, and these mainly correspond to entries in my inbox folder. The subtree indicated by the red circle also shows fairly recent modification dates, and these correspond to the program files for generating the displays used within this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Interactive control of the aggregation level</head><p>Users may interactively control the level of aggregation by allocating more or less space to the entire tree. This is done by expanding the height or width of the tree. When more space is allocated, aggregate nodes will automatically be de-aggregated if there is sufficient space. Similarly, when less space is allocated, nodes with insufficient space will be automatically aggregated. The process occurs continuously, as with the solarPlot display, thus users can view any level of aggregation. Continuous change also enables users to better maintain context across aggregate levels because changes only occur in small steps.</p><p>We have also considered focus + context techniques like the one shown in <ref type="figure">Figure 4</ref> which allows part of the data set to be aggregated at a different level of detail than the other data values. However, we have not integrated such techniques into the aggregate tree because there is no apparent way to achieve this without introducing false implications into the displayexpanding a subtree height may falsely imply a greater number of levels while expanding a subtree width may falsely imply a greater number of descendants. inbox</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Aggregation of spatial neighbors</head><p>In this case spatial neighbors correspond to siblings within the hierarchical structure represented by the aggregate treeMap. Since siblings within a hierarchical structure usually correspond to related user defined categorizations of data concepts, aggregating them will hopefully not hide too much information from the user. The siblings can also be ordered based on another data attribute, e.g. order the sibling concepts alphabetically (based on their name) so that users can easily identify elements within a particular aggregate group.</p><p>More accurate data on the individual nodes may also be obtained by moving the mouse over the chosen nodes (this technique was used by Eick et al. <ref type="bibr" target="#b2">[3]</ref>). Moving the mouse over a node will cause information on that node to be displayed as text on the bottom left corner of the display. In the case of aggregate nodes, the names of all member elements will be displayed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Context maintenance across aggregation levels</head><p>Subtrees are mapped to angles based on their total number of descendants. For the circular aggregate trees, this mapping remains constant no matter the aggregation level. This ensures that a particular subtree will always be rooted at the same angular value and will always have the same angular spread.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Feedback on level of aggregation</head><p>The level of aggregation is based on the size of the circle or triangle. A larger aggregate tree-map indicates a lower aggregation level and a smaller tree-map indicates a higher aggregation level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">No total loss of data values</head><p>All nodes mapped onto the aggregate treeMap are represented to some degree. Nodes that are too small to be perceived are summarized with neighboring nodes, and their appearance changes the appearance of the resulting aggregate. This is in contrast to tree manipulation techniques that miniaturize the data elements without aggregation. In this case some nodes may become too small to see, and thus be culled from the display.</p><p>The aggregate treeMap is more effective than node-link diagrams for certain tasks. We extracted some common tasks performed on tree representations <ref type="bibr" target="#b12">[13]</ref> and examined which were appropriate for the aggregate treeMap. Some of the tasks in which it excels include: 1) obtaining global relationships and structure from the entire hierarchy, 2) finding clusters, duplicate relationships, and inheritance properties from the structure of the hierarchy, and 3) discovering attributes of entire subtrees. Tasks such as the following are less appropriate for the aggregate treeMap: 1) finding the most recent common ancestor between two nodes, 2) finding the path to a particular node from the root of the hierarchy, 3) getting accurate information on individual nodes, and 4) tree navigation. For the second set of tasks, it is perhaps more appropriate to use a node-link diagram together with some interactive technique such as fisheye-lens <ref type="bibr" target="#b3">[4]</ref>, or hyperbolic tree <ref type="bibr" target="#b6">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>SolarPlot + Aggregate TreeMap</head><p>The SolarPlot and the Aggregate TreeMap displays can be integrated to form a hybrid visualization system for viewing data attributes (e.g. email arrival frequency) within the confines of a structured hierarchy (e.g. an organizational hierarchy). For example <ref type="figure" target="#fig_0">Figure 12</ref> shows an organizational hierarchy for a hypothetical company. The apex of the hierarchy represents the company CEO and the first level of the hierarchy shows the vice presidents within the company and so on. The histograms within each node in the hierarchy represents the amount of electronic mail received by each person in the organization throughout the period of a day. The color of each node in the tree encodes the time in which a person joined the organization. From <ref type="figure" target="#fig_0">Figure 12</ref> we see that a new division was just added to the company very recently (i.e. the more saturated area).</p><p>In this hybrid display, when nodes are aggregated the histograms within them would get aggregated as well, showing the electronic mail distributions for several people. As before the level of detail should be controllable by changing the global size of the structure. <ref type="figure" target="#fig_0">Figure 12</ref> we can begin to explore how the data attributes of objects are related to the hierarchical relationships among the objects. For example in <ref type="figure" target="#fig_0">Figure 12</ref> we see that most people in the organization have an approximately flat email traffic distribution (i.e. email arrives at all times in the day, including non-working hours). The two main groups of people falling into this distribution category are the managers, vice-presidents, and CEO as well as the programming staff. Exceptions to this distribution are at the new division and the sales division. People in the new division have a lot of email coming in at the start originating from introductions within the company. This traffic however disappears after the first few hours and they receive virtually no email thereafter because they have yet to announce their new email addresses to their friends and external colleagues. People in the sales department however have a more cyclic email trend, peaking out in the middle of the work day and virtually disappearing after the work day. This indicates that most of the email activity is work related.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Based on the visualization in</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 12: SolarPlot + Aggregate TreeMap hybrid</head><p>A problem with the display is that the degree of email aggregation for each person is different. The level of aggregation is based on 1) the level of a person in the hierarchy and 2) the importance of a person in the organization (measured by the number of subordinates in the hierarchy). A more important person in the hierarchy has a greater angular spread to represent the histogram data. However, by the same token, a level higher up in the hierarchy has less total circumference. Another problem with the hybrid display is that each different person has a different angle-to-attribute-value encoding. For example, the CEO has the entire day mapped to 330 degrees, this is different from the number of degrees used for each of the vice presidents, etc. Thus trying to compare particular email time-intervals across people in the hierarchy can be a difficult task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Other Interactive Metaphors</head><p>In this paper, we dynamically scale the size of our circular representations to change the level of data detail. Other interactive metaphors for controlling level of detail include: 1. Zoom Zooming is used in the PAD++ system <ref type="bibr" target="#b1">[2]</ref> to control level of detail. When a user zooms in on an object, more information is shown about that object (i.e. a lower level of aggregation is used). Since this interactive method is already a very common navigation technique, it can be easily learned and remembered by end users. One weakness however is there can usually only be one focus area (i.e. two spatially distinct regions cannot be viewed in detail simultaneously). This interactive method can be easily integrated into our visual displays. Zooming into a particular portion of the display will enlarge the focus region and cause the elements within to be deaggregated according to the larger area available.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Spatial distortion</head><p>Spatial distortion, like zooming changes the amount of space allocated to showing portions of the data set. Spatial distortion techniques enlarge particular regions of the visual display while contracting surrounding areas so that the entire visualization still takes up the same amount of space. Unlike zooming, spatial distortion techniques allow multiple focal points.</p><p>Distortion techniques are less appropriate for our representations because they may cause our representations to lose their circular property. As a result we may no longer have constancy in data encoding (i.e. where a given angle always represents a particular data value). An alternative is to distort the space based on the radial length rather than based on x and y dimensions as is usually done. This distortion method is especially useful for the concentric representation shown in <ref type="figure" target="#fig_0">Figure 12</ref>. By using radial distortion we can give particular circles more radial space but still show the contextual information at a higher level of aggregation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Magic Lens</head><p>Another possibility is to use Magic Lenses <ref type="bibr" target="#b8">[9]</ref> to control aggregation for a chosen spatial area. A slider attached to the lens can be used to manipulate the level of detail. This method may also cause us to lose the nice angle encoding constancy property especially if we magnify our representations in-place.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion &amp; Future Work</head><p>Aggregation is a useful technique for manipulating large data sets. However, this technique has largely been accessible only to database experts and data analysts. We believe that one way to make aggregation more accessible to general users is to integrate it with the visualization display and with the interactive metaphors within the display. This paper explores two interactive displays that are tightly coupled with the aggregation technique. These techniques require little user input but at the same time allow users to dynamically control the aggregation level in a continuous and intuitive fashion.</p><p>When aggregating a set of data values, we are simplifying the data set. We are therefore bound to lose some information. The trick is to keep the amount of new division sales division information lost to a minimum with respect to the types of tasks that the user wants to perform. Interactivity helps because then users may rapidly view the data at different levels of aggregation. We also provide users with visual feedback so that the different aggregation levels are clearly shown, and so that context can be easily maintained across aggregation levels.</p><p>In the future we plan to explore uses of the hybrid technique and how to overcome some of its limitations. We also hope to develop some good ways for providing feedback in the aggregate treeMap displays for subtrees manipulation. Finally, we hope to explore different interactive metaphors and different aggregation schemes <ref type="bibr" target="#b4">[5]</ref>.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Highly aggregated ticket sales data</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Less highly aggregated ticket sales data</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>Sales data for hypothetical company Same data as Figure 3 but with a focus intervalA more common representation for frequency distributions is a two dimensional histogram (rectilinear histogram), like the one shown in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>a) less frequent odd sized bins; b) more frequent odd sized bins</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7 :</head><label>7</label><figDesc>rectilinear histogram with two different levels of aggregation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>Figure 8: Triangle Aggregate Tree</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Node-link Tree Representation of same hierarchy as inFigure 8</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 10 :</head><label>10</label><figDesc>Home directory with last modification encoded as color saturation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11 :</head><label>11</label><figDesc>Home directory with last modification date encoded by color saturation.</figDesc></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Cleveland</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brushing</forename><surname>Scatterplots</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Technometrics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="127" to="142" />
			<date type="published" when="1987-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">PAD++:A Zooming Graphical Interface for Exploring Alternate Interface Physics, UIST &apos;94</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">B</forename><surname>Bederson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Hollan</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-11" />
			<biblScope unit="page" from="17" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Visualizing code profiling line oriented statistics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">G</forename><surname>Eick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Steffen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1992-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Generalized fisheye views</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Furnas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI `91 Human Factors in Computing Systems, ACM</title>
		<meeting>CHI `91 Human Factors in Computing Systems, ACM</meeting>
		<imprint>
			<date type="published" when="1991-04" />
			<biblScope unit="page" from="16" to="23" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A framework for knowledge-based interactive data exploration</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kolojejchick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mattis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages and Computing</title>
		<imprint>
			<biblScope unit="page" from="339" to="363" />
			<date type="published" when="1994-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Treemaps: Visualizing Hierarchical and Categorical Data, PhD dissertation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">S</forename><surname>Johnson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
		<respStmt>
			<orgName>University of Maryland</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">A focus + context technique based on hyperbolic geometry for visualizing large hierarchies, Porceedings CHIÕ95 Human Factors in Computing Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lamping</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Pirolli</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>ACM</publisher>
			<biblScope unit="page" from="401" to="408" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A Review and Taxonomy of Distortion-Oriented Presentation Techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">K</forename><surname>Leung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Apperley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Computer-Human Interaction</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="126" to="160" />
			<date type="published" when="1994-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The Movable Filter as a User Interface Tool</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Stone</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Fishkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Bier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings CHI&apos;94 Human Factors in Computing Systems, ACM</title>
		<meeting>CHI&apos;94 Human Factors in Computing Systems, ACM</meeting>
		<imprint>
			<date type="published" when="1994-04" />
			<biblScope unit="page" from="306" to="312" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Tenev</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Rao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Research Report</surname></persName>
		</author>
		<title level="m">Managing Multiple Focal Levels in Table Lens, IEEE Symposium on Information Visualization</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="59" to="65" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Features and Objects: The Fourteenth Bartlett Memorial Lecture</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Anne</forename><surname>Treisman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Quarterly Journal of Experimental Psychology</title>
		<imprint>
			<biblScope unit="page" from="201" to="237" />
			<publisher>Lawrence Erlbaum Associates Ltd, The Distribution Center</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">The Visual Display of Quantitative Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Tufte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Graphic Press</publisher>
			<pubPlace>Cheshire, CT</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Umcp</forename><surname>Olive: Tree</surname></persName>
		</author>
		<ptr target="http://www.otal.umd.edy/Olive/Text/Tree.html" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
