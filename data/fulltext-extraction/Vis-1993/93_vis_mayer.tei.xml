<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualizing Results of Transient Flow Simulations</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Harald</forename><forename type="middle">F</forename><surname>Mayer</surname></persName>
							<email>mayer@pb0x.joanneum.ac.at</email>
							<affiliation key="aff0">
								<orgName type="institution">JOANNEUM RESEARCH Institute for Information Systems</orgName>
								<address>
									<postCode>A-8010</postCode>
									<settlement>Graz</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Behnam</forename><surname>Tabatabai</surname></persName>
							<email>tabatabai@pb0x.joanneum.ac.at</email>
							<affiliation key="aff0">
								<orgName type="institution">JOANNEUM RESEARCH Institute for Information Systems</orgName>
								<address>
									<postCode>A-8010</postCode>
									<settlement>Graz</settlement>
									<country key="AT">Austria</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Visualizing Results of Transient Flow Simulations</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This work briefly describes our approach to visualize results of transient flow simulations in the application areas of groundwater flow and pollutant transport as well as compressible fluid flow in engine parts. The simulations use finite element data structures and can have geometries which change over time. We designed a client-server model to handle the huge amount of data that can be obtained either directly from the simulation process or from files on disk. As standard visualization packages are not able to cope with transient unstructured data, we implemented streamlines, stream surfaces and particle systems as our main visualization methods. Our experiences and results with these techniques will be discussed in this paper.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>We are a small working group which deals with numerical simulations, computer graphics and visualization for scientific computing at Joanneum Research, an Austrian research organization owned by the Province of Styria. Our task in the visualization group mainly comprises the areas of environment and flow simulations [4,81.</p><p>Regarding flow simulations, we deal with two different application fields which we will briefly describe in the following. One of them is the numerical simulation of groundwater flow and pollutant transport. This simulation is carried out by using our own newly-developed proprietary finite element program called <ref type="bibr">FETUX [5]</ref>.</p><p>This program runs on every workstation or supercomputer supporting OSFFlotif (Unix or VMS). The typical applications of this package are investigations of the impact on the groundwater situation caused by building projects. One example is the simulation of driving a road tunnel through an environmentally sensitive area with mineral springs. The main part of interest is the influ-ence of different construction methods (e.g. shotcrete lining and/or advance grouting) on the groundwater lowering in the area of observation.</p><p>The time-dependent calculation of the lowering of the groundwater-table is based on a 2D horizontal model. The water inflow into the tunnel, used as a boundary condition for this investigation, is calculated in a preprocessing step using two horizontal models. primary results from this simulation are the height of the groundwater-table and the velocity vectors stored per node for all time steps computed.</p><p>The other field of application is a problem from the classical computational fluid dynamics (CFD) domain. It deals with the simulation of flow, spray mixture preparation and combustion in engines. The numerical simulation is realized by another Austrian company, AVL, with its proprietary CFD program called FIRE [l]. FIRE is a powerful tool for the prediction of flow, temperature and concentration distribution inside arbitrary flow domains. A broad variety of two-or three-dimensional turbulent compressible fluid flow problems can be solved based on the finite volume method, using a two equation k-E model. Our task is to visualize the results of these simulations.</p><p>An important issue of the application domains mentioned is the structure of the data which is principally the same. Both simulations operate on a data structure which is a mesh of finite elements. This means that the spatial domain of the simulations is of arbitrary shape, usually defined by B-spline surfaces, subdivided into small (finite) elements. The results for each time step are calculated either on a per element-or a per node-basis. One characteristic feature which can not be found in other simulation packages very often is the possibility of moving coordinates and also changing topologies.</p><p>Moving coordinates mean that the coordinate^ of the nodes are changed with the time whereas the topology of the mesh remains the same, in contrast to changing topologies where everything is allowed to be changed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Results</head><p>At the very beginning of every visualization there is the problem of data acquisition. This is particularly true for transient data sets. Usually, all geometry information and results are stored in huge data fdes which are saved on the computer performing the computation. The geometry information consists of 3D coordinates for every node and arrays describing the connections between elements and nodes. As results we get at least one velocity vector and usually also some other scalar values per node. The problem size we have to deal with typically lies between 5000 and 200000 elements and at about 2000 simulated time steps implying data sizes up to 5 Mbyte per time step for the velocity results only. If the geometry of the objects changes over time, also this information has to be obtained more often than once. To have an easy and network-transparent access to all this data, we developed a client-server model application interface based on the standard RPC mechanism. The visualization, running on a high-speed graphics workstation, represents the client that requests data from the server (usually a number-crunching workstation or supercomputer). The server either gets its data directly from a running simulation or from a pre-calculated set of data on a fileserver (see <ref type="figure" target="#fig_0">Figure 1</ref>). As visualization and simulation are independent prmsses and can run simultaneously we designed an asynchronous protocol, so no process has to wait for the other. This functionality is achieved by providing two steps for getting data. In a first call the client tells the server which data it wants and returns control immediately. After that, both the client and the sewer processes can work independently.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>result files Simulation</head><formula xml:id="formula_0">Network RPC 41 client I library .................................................. .......... -..... I Postprocessing x visualization / i \ r i</formula><p>With a utility function the client can ask the server if it is ready to send the data which then can be obtained by using a final call. This approach is very powerful for visualizing transient data since the client usually knows what data (time step) it will need after preparing one visualization.</p><p>As our next step we evaluated the standard visualization tools for our data. We soon discovered that a lot of visualization packages available are not suitable for unstructured data like ours and that the support for transient data is very limited. Finally, we decided to use AVS <ref type="bibr">[lo]</ref> from AVS Inc. as our primary visualization and development tool and to make use of its extendibility features to implement visualization methods suitable for our applications. However, we careMly designed all interfaces for our visualization methods to be independent from AVS and to have the possibility to integrate these methods into other visualizarion packages or postprocessors easily. AVS itself proved to be very powerful for visualizing scalar results as shown in Figure2 which presents a set of isosurfaces of pressure inside a manifold intake system. Both simulations produce flow data (in our cases 2D or 3D velocity vectors per node) as one of their results.</p><p>Therefore, we developed and implemented methods to visualize such vector data sets. The most straightforward methodalso directly available by most visualization systemsis to draw vectors on every position with an existing result. This method proved to be useful for small simulations but failed for simulation sizes we normally have to deal with. A large number of v e c m is very confusing for the scientist who analyses the data.</p><p>The next method, which is very common in flow visualization [3], is to calculate the way a massless particle would take in the flow. Such ways are called streamlines for stationary flows and particle paths for transient flow fields. We soon realized that the available programs or modules are not able to meet our requirements. These requirements include: the ability to work with unstructured data; to have mechanisms to calculate particle paths a good support to define starting or ending points; methods to deal with the boundaries of the object the flow goes through or around. It is especially the last item that is very important when calculating streamlines in a real object. Considering a tube where flow goes through, particles are only allowed to enter at one end and to leave at the other end. It is not possible for a streamline or particle path to end inside the tube, just because it hits the boundary surface.</p><p>Due to the reasons mentioned above, we had to develop (transient models); our own implementation of streamlinesmd particle paths which are able to cope with these requirements. The problem with the streamlines ending at the boundary surfaceswhere the velocities approach zerois solved by assuming a reflection of the particles about the surface normal. For the integration of streamlines we implemented an improved Euler formula and the classical Runge-Kutta algorithms of orders 3,4, 5, and 8. For the orders 3 and 5 we used algorithms to calculate the stepsize in the integration process adaptively. It turned out that the Runge-Kutta algorithm of order 5 with adaptive stepsize yields the best results. Higher order of integration only causes higher computational effort but does not produce more accurate results. The adaptive stepsize is very important since the size of the elements and the associated velocity fields may vary enormously in different parts of the investigated object.</p><p>Another important issue is the interpolation of results while preserving Co-continuity at element boundanes. This is achieved by using shape functions exactly in the same way as used in finite element applications. For this approach, however, the discrete function values must be known at element nodes. This is true only in the case of primary results of a finite element simulation. The secondary results are calculated indirectly, i.e. out of primary results at the Gauss integration points, yielding higher accuracy than other locations inside the element [2]. Before we use the element intrinsic shape functions these results must be extrapolated to the nodes. Among many different and well-investigated methods, we choose the most simple and obvious approach of linear extrapolation towards element nodes. For the nodes shared by more than one element, this generally entails discrepancies in the extrapolated function value which we resolve by a non-weighted averaging.</p><p>Next, we implemented different approaches for selecting the starting or ending points of the streamlines. These approaches include an interactive point and click interface which turned out to be uncomfortable to use due to the difficulties of pointing into a 3D object on a 2D screen. The selection by defining a cut plane through the object has proved to be a useful alternative. Of course, it is also possible to take just the inlet or outlet endings of the object. Another approach was to apply the idea of Helman's work [6] on critical points for our 3D unstructured data sets. These critical points, i.e. points where the magnitude of the vector vanishes like turbulences and other significant features of the flow topology, can be used as starting points of streamlines in both directions. The streamlines starting at the inlet or near critical points offer a good impression of the main flow directions as well as of the turbulent remaining flow.</p><p>Streamlines are visualized as simple lines or tubes, though shaded tubes give a better idea of the streamline's position in 3D space. The lines or tubes can also be rendered colorcoded with another scalar value such as magnitude of velocity. Figure3 shows an example of streamlines rendered as tubes. This example figures the flow inside a manifold intake system from the inlet (air filter) to the valve just opened.</p><p>Next, we moved to the concepts of stream surfaces to visualize the flow topology. Stream surfaces can be generated by the triangular tiling of adjacent pairs of streamlines. Figure4 shows an example of stream surfaces inside our test object. These surfaces show one side colorcoded according to the magnitude of velocity and the other side rendered in a single color. We choose this form of representation, since it would be very difficult to distinguish between both sides if they were rendered in a similar way. The advantage of stream surfaces is the small number of streamlines that need to be calculated to have a superior impression of the flow topology. However, there are problems in generating stream surfaces if the gap between adjacent streamlines becomes too wide.</p><p>In this case, the surface has to be divided and new streamlines have to be calculated <ref type="bibr">[7]</ref>.</p><p>Particle paths should not be drawn as simple lines or tubes because it is very difficult to interpret the time incorporated in the paths. A better solution for particle paths is to use the idea of particle systems [9]. In such systems only a set of particles moving along their calculated paths is drawn as spheres, producing a form of computer animation. As for complex simulations, our hardware (SGI Crimson VGX, DECstation 5000/240 PXGT) is not fast enough to generate such animations in realtime. To cope with the problem, we produce anjmations on video utilizing single frame recording on an Abekas A66 digital disk recorder. A disadvantage of this technique is that in a single frame the observer does not get any visual clues about speed and direction of the particles. This problem is solved by using a kind of "motion blur" technique where each particle gets a tail consisting of a small number of previous positions rendered as transparent darker spheres.</p><p>With the help of these techniques we visualized the results of the groundwater simulation mentioned in the introduction ( <ref type="figure" target="#fig_4">Figure 5</ref>). The water table is rendered as a layer colorcoded by its height, with particles running along their paths into the tunnel as its construction advances. In this animation we included an advancing tunnel geometry to give the observer visual clues about the progress of the construction phases. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Future and Conclusions</head><p>As stated above, today's standard visualization tools are not able to handle transient data satisfactorily for our applications. However, some tools are easy to extend, thus making it possible to achieve visualization based on existing software. It is very convenient that one has not to reinvent the wheel and can make use of the existing powerful rendering features of software packages like AVS. A desirable enhancement for future versions of professional visualization systems would be some kind of support for transient data sets.</p><p>Our future work will particularly be oriented towards direct volume rendering for scalar results of transient flow simulations. Again, it will be important to handle unstructured data and to find methods that save computation time when visualizing a time series of data, since volume rendering is very CPU-intensive. At present, we investigate the methods for breaking down the integration process into result-dependent and result-independent parts, in order to calculate as much as possible in a first pre-integration phase and subsequently apply different results (e.g. from different time steps) to the constant precalculated data.</p><p>Animations on video have already been presented to different groups, from students to managers as well as technical and scientific experts. In all cases, the animations have proved to be very helpful, either to introduce to the problem in short time or to help grasp the problems and their possible solutions.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Client-server model for data acquisition.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>(</head><label></label><figDesc>See color plates, </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>lsosurfaces of pressure inside a manifold intake system.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :Figure 3 :</head><label>43</label><figDesc>Two stream surfaces Streamlines rendered as tul2es.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5</head><label>5</label><figDesc>Groundwater flow visualized b y Dartides with tails</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work was partially supported by funds from the Austrian Industrial Research Promotion Fund (FFF) under contract number 6/674.</p><p>All data for the visualization of flow simulations in engine parts were provided by the company of AVL.</p><p>The authors would like to thank Georg Thallinger for his efforts in designing and implementing the streamline and particle path code and Doris Plank for her valuable support.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Using a Standard Tool for Visualization of Environmental Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Grubergexmayer B</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">F</forename><surname>Mayer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">;</forename><surname>Haas W</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Haas W</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Unsteady Flow, Visualization &apos;91 Conference Procee</title>
		<meeting><address><addrLine>Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
	<note>in German, presented at the 2nd Workshop on Visualization of Environmental Data</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Numerical Simulation of Ground Water Flow and Ground Water Pollution in a Graphical Software Environment, Computer Techniques in Environmental Studies IV</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">M</forename><surname>Suewig D</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computational Mechanics Publications</title>
		<editor>P. Zannetti</editor>
		<meeting><address><addrLine>Southampton Boston</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Visualizing Vector Field Topology in Fluid Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hesselim( L</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">E E E Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="36" to="46" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Visualizing complex relationships in the soil area</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P M</forename><surname>Hultquist</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">F</forename><surname>; R H</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Fank</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Haas W</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Zell an der Ram, Austria, 1992. REEVES W.T., Particle Systems -A Technique for Modeling a Class of Fuzzy Objects</title>
		<imprint>
			<biblScope unit="page">83</biblScope>
		</imprint>
	</monogr>
	<note>Constructing Stream Swjiaces in Steady 3 0 Vector Fie&amp;, Visualization &apos;92 Conference MAYF</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Conference Proceedings</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="17" to="24" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
	<note type="report_type">. dings</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rweedings</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">The Application Visualization System: A Computational Environment for Scientific Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Faulhaber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kams</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Laidlaw D</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Schlegel D</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>R~ R</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Van Dam A</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">E E E i Computer Graphics &amp; Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">3042</biblScope>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Purpose Fluid Mechanics Sofcware Package, Leavelet, 1990. BARLOW I., Optimal stress locations in fmite element models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">Et</forename><surname>Bachler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Al</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Num. Meth. Eng</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="243" to="251" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">The Virtual Windtunnel: An Environment for the Exploration of Three-Dimensional Visualizing Results of Transient Flow Siimilutioj1s</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bryson S</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Lewt</surname></persName>
		</author>
		<editor>H .F. Mayer and B. Tabatabai</editor>
		<imprint>
			<biblScope unit="page" from="406" to="409" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
