<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Fast Analytical Computation of Richards&apos;s Smooth Molecular Surface</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amitabh</forename><surname>Varshney</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill Chapel Hill</orgName>
								<address>
									<postCode>27599-3175</postCode>
									<region>NC</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frederick</forename><forename type="middle">P</forename><surname>Brooks</surname><genName>Jr</genName></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill Chapel Hill</orgName>
								<address>
									<postCode>27599-3175</postCode>
									<region>NC</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Fast Analytical Computation of Richards&apos;s Smooth Molecular Surface</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>An algorithm f o r rapid computation of Richards$ smooth molecular surface is described. T h e entire surface is computed analytically, triangulated, and displayed at interactive rates. T h e faster speeds for our program have been achieved by algorithmic improvements, parallelizing the computations, and by taking advantage of the special geometrical properties of such surfaces. O u r algorithm is easily parallelizable and it has a t i m e complexity of O(k1ogk) over n processors, where n is the number of atoms of the molecule and k is the average number of neighbors per atom.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The smooth molecular surface of a molecule is defined as the surface which an exterior probe-sphere touches as it is rolled over the spherical atoms of that molecule. This definition of a molecular surface was first proposed by Richards <ref type="bibr" target="#b16">[16]</ref>. This surface is useful in studying the structure and interactions of proteins, in particular for attacking the protein-substrate docking problem. For examples of such molecular surfaces, refer to Figures 4 -9, where these surfaces have been shown for various molecules and with different probesphere radii.</p><p>Present systems for computing the surfaces of molecules are batch-oriented. They take a few minutes to compute the surface for a couple of thousand atoms. Our goal has been to compute and display these surfaces at interactive rates, by taking advantage of results from the field of computational geometry, making further algorithmic improvements, and parallelizing the computations.</p><p>Interactive computation and display of molecular surfaces should benefit biochemists in three important ways. First, the ability to change the probe-radius interactively helps one study the surface. Second, it helps in visualizing the changing surface of a molecule as its atom positions are changed. These changes in atom positions could be due to user-defined forces as the user attempts to modify a molecular model on a computer. Third, it assists in incorporating the effects of the solvent into the overall potential energy computations during the interactive modifications of a molecule on a computer.</p><p>The rest of this paper is organized as follows. In Section 2 we briefly review some of the previous work that has been done in computation of smooth molecular surfaces as well as some work that has been done in related areas, particularly computational geometry. Then in Section 3 we outline our approach. Section 4 presents our results. Finally, we present our conclusions and some promising areas deserving further research in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Previous and related work</head><p>The first molecular surface computation algorithms were numerical in nature (ie. they were computed by sampling). Connolly <ref type="bibr" target="#b2">[2]</ref> and Greer <ref type="bibr">[la]</ref> give such algorithms. Connolly [a] computes the sampled surface (also known as the dot-surface) by placing a probe tangent to either one atom, or two atoms, or three atoms and checking to see if it intersects any of the other neighboring atoms. If it does not and it is tangent to (i) one atom, then a dot is placed at the point of tangency between the probe and that atom, (ii) two atoms, then a concave arc of dots connecting the two points of tangency is created, (iii) three atoms, then a concave spherical triangle of dots is created between the three points of tangency. This generates a dotrepresentation of the entire surface.</p><p>The analytic computation of the molecular surface was also first done by Connolly <ref type="bibr" target="#b3">[3]</ref>, <ref type="bibr" target="#b4">[4]</ref>. Here a molecular surface is represented by a collection of spherical and toroidal patches as follows:</p><p>0 The surface for a region of a molecule where the probe is in contact with only a single atom is modeled by a convex spherical patch.</p><p>0 The surface for a region of a molecule where the probe is in simultaneous contact with only two atoms is modeled by a saddle-shaped toroidal patch.</p><p>0 The surface for a region where the probe is in simultaneous contact with three atoms is modeled by a concave spherical triangular patch.</p><p>The issues of triangulation of such surfaces are discussed by Connolly in <ref type="bibr" target="#b5">[5]</ref>.</p><p>Only recently have the issues of algorithmic complexity of these algorithms begun to be addressed. Let n be the number of atoms in a molecule and let k be the average number of neighboring atoms for an atom in the molecule. By neighboring we mean the atoms that are near enough to affect probe placement on a particular atom. Yip and Elber <ref type="bibr" target="#b19">[19]</ref> present an algorithm for computation of the list of neighboring atoms that is linear in n. It is based on spatial subdivision by a global grid. Perrot e2 al. <ref type="bibr" target="#b13">[13]</ref>, [14] present a O(kn) algorithm that generates an approximation to the solvent-accessible surface. In this approximation, every concave spherical triangular patch between three atoms is represented by a planar triangle with vertices at the centers of these three atoms. Saddleshaped toroidal regions and convex spherical patches are ignored. In terms of sequential algorithmic complexity this is good, however some points remain unaddressed here. This algorithm is inherently sequential, as it always needs to start from some concave spherical triangular region of the molecule and from there it proceeds by adding an adjacent face at a time. Besides being hard to parallelize, it fails for the cases where the solvent-accessible surface folds back to intersect itself or where the molecule has two or more sub-parts connected by only two overlapping spheres. Also, it cannot generate the interior cavities of a molecule.</p><p>In computational geometry, the a-hull has been defined as a generalization of the convex hull of pointsets by Edelsbrunner, Kirkpatrick, and Seidel <ref type="bibr" target="#b6">[6]</ref>, <ref type="bibr" target="#b8">[8]</ref>.</p><p>For a &gt; 0, the a-hull of a set of points P in two dimensions is defined to be the intersection of all closed complements of discs with radius a that contain all points of P . If we generalize this notion of a-hulls over point-sets to the corresponding hulls over spheres of unequal radii in three dimensions, we would get the Richards's smooth molecular surface (along with the surfaces defining the interior cavities of the molecule). It has been shown in <ref type="bibr" target="#b8">[8]</ref> that it is possible to compute the a-hulls from the Voronoi diagram of the points of P . For a = CO the a-hull over the set of points P is the same as their convex hull. Richards <ref type="bibr" target="#b16">[16]</ref> had also suggested computing the molecular surface by computing a 3D Voronoi diagram first and then using its faces to determine which nearby atoms to consider.</p><p>Edelsbrunner and Miicke <ref type="bibr" target="#b9">[9]</ref> extend the definition of cy-hulls to points in three dimensions. Here an ashape over a set of points P has been defined to be the polytope that approximates the a-hull over P by replacing circular arcs of the a-hull by straight edges and spherical caps by triangles. An a-shape of a set of points P is a subset of the Delaunay triangulation of P . Edelsbrunner in <ref type="bibr" target="#b7">[7]</ref>, extends the concept of a-shapes to deal with weighted points (i.e. spheres with possibly unequal and non-zero radii) in three dimensions. An a-shape of a set of weighted points P, is a subset of the regular triangulation of P,,,. Since these methods involve computing the entire triangulation first and then culling away the parts that are not required, their complexity is O ( n 2 ) in time. This is worst-case optimal, since an a-shape in three dimensions could have a complexity of s2(n2). We next discuss a different approach that works better for environments where the maximum density of P in a given volume is some constant smaller than n. Molecules are a good example of such environments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Our approach</head><p>Our goal has been to formulate a parallel analytical molecular surface algorithm that has expected linear complexity with respect to the total number of atoms of a molecule. For achieving this goal, we have avoided computation of the complete three-dimensional regular triangulation over the entire set of atomsa process that takes time O(n2), where n is the number of atoms in the molecule.</p><p>Let us consider a molecule as a collection of weighted points (ci, ri) in three dimensions, where the coordinates ci of each point correspond to the center of atom i and the weight ri is the radius of atom i . Such collections of weighted points representing molecules have two interesting properties: (i) the minimum distance d i j between any two points i and j is greater than or equal to a positive constant lmin -the smallest bond-length in the molecule and (ii) the set of all the weights can be bounded from above and below by strictly positive values, 0 &lt; r,in 5 ri 5 rma+.</p><p>We take advantage of the first property to arrive at better running times for our algorithm. Stated simply, the first property says that the number of neigh-boring atoms within a fixed distance from any atom i, is always bounded from above by a constant kmar that depends on the minimum spacing between any two atoms. If the average number of neighbors for an atom is k, then we can just compute an approximation to the power cell (the concept of a power cell is presented in <ref type="bibr">[l]</ref> and briefly reviewed in Section 3.1), which we call a feasible cell (the definition of a feasible cell appears in Section 3.3), by considering only these neighbors. Each feasible cell can be computed in parallel in time O(k log k). For n atoms, this task requires n processors, each processor computing the feasible cell for one atom.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Formal notation</head><p>In this section we will introduce the definitions and notations that we will be using for the rest of the paper. We consider the underlying space to be threedimensional Euclidean Space ?R3, although these results can be generalized to higher dimensions.</p><p>Let M = {S1,. . . , Sn}, be a set of spheres, where each sphere, Si, is expressed as a pair (ci, r i ) , ci being the center of the sphere and ri being the radius of the sphere.</p><p>Define Henceforth, we shall be assuming that the atoms of a molecule are represented as spheres and will be using the terms atom i and Si interchangeably. Let the radius of the probe-sphere be R. We define the extended-radius sphere for atom i to be Q i = (ci, ri + R ) . This extended-radius sphere Q i is the locus of the possible centers of the probe-sphere when it is in contact with atom i.</p><p>Define a chordale IIij of two spheres Q i and @ j as</p><formula xml:id="formula_0">IIij = { z I p ( x , Q i ) = p ( x , Q j ) } = { x ) 2 x ( c j -ci) = ri2-rj2-ci2+cj2}.</formula><p>Thus, IIij is aplane perpendicular to the line joining ci and cj. Define the halfspace Hij as Hi?</p><formula xml:id="formula_1">= { x J p ( x , Qi) &lt; p ( x , Qj)}.</formula><p>The chordale IIij divides the whole space into two halfspaces. Hij is that half-space in which all points have a smaller power with respect to Q i than Qj. In other words, all points selected by Hij are closer to ci than cj under the distance function defined by the power metric (as defined by the power function above), instead of the conventional Euclidean metric. Thus, whereas IIij = IIj;, Hij # H j i .</p><p>Let x , y be two points.</p><formula xml:id="formula_2">p ( 3 , Si) = &amp;(z, c,) -pi2 Thus, P ( X , Si) &lt; 0, = 0, &gt; 0,</formula><p>Define the power cell, PCi, for atom i as PCi = njHij. Thus PCi is the set of all the points that are closer to c, than any other sphere center c, , assuming that the distance is measured in the power metric. The definition and algorithms for computing power cells have been given by Aurenhammer in <ref type="bibr">[l]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Determination of neighboring atoms</head><p>Determination of neighboring atoms can be done by spatial grid subdivision into cubical voxels, and assigning atoms to the appropriate voxels. We recall that an atom j is considered a neighbor to atom i if it is possible to place a probe such that it is in contact with both Si and S, (without considering any hindrance due to other atoms). We define the region of influence, p i , for atom i to be the sphere ( c ; , ri + 2R + maxy=l r j ) .</p><p>Then for computing the list of neighboring atoms, N,, for atom i, one needs to find all the atoms that are close enough to affect probe placement on atom i. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Determination of surface atoms</head><p>Here the aim is to determine the atoms that are buried in the interior of the molecule and would not therefore directly participate in the final definition of the smooth molecular surface. This step is not crucial to the linear time complexity of the overall algorithm but it helps in improving the execution times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Let us first define a feasible cell Fi as Fi = n j e N i Hij.</head><p>We will refine this definition of a feasible cell later in this section. Since a power cell PCi is defined as PCi = n j H i j , it is easy to see that PCj F,. This difference between power and feasible cells arises from the fact that for the construction of a feasible cell F, we use only those halfspaces Hjj for which it is true that the extended-radius spheres 4i and 4 j intersect. However, for forming the power cells P C i , we use all the halfspaces Hij regardless of whether 4 i and 4 j intersect or not.</p><p>In <ref type="figure">Figure 2</ref>, we show these differences for power cells and feasible cells defined over circles. The power cell PC3 contains two edges and one vertex as does the corresponding feasible cell F3. However, whereas the power cells PC1 and PC2 have two edges and one vertex each, the corresponding feasible cells Fl and F2 have only one edge each, with no vertices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>(a) Power Cells (b) Feasible Cells</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2: Power Cells and Feasible Cells</head><p>As the above example shows that it is possible to get feasible cells that are not bounded. However, it is attractive to have all the Fi closed and bounded. This compactness property of Fj enables one to use the vertices of Fj in computing a tessellation of the molecular surface. We plan to describe the details of this tessellation process elsewhere; it is outside the scope of this paper.</p><p>To </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fi as: Fi = ( n j c N , Hij) n ( n ? = , H f ) .</head><p>With the matter of the definition of Fi having been settled, we can now determine the surface atoms as follows. First, for the entire molecule we compute H j , 0 5 f 5 3. Next, for every atom i, we first compute Ni as described in Section 3.2. Then we compute <ref type="figure" target="#fig_2">Fi = (nj,N,Hij)n(n3f=,Hf&gt;. If F, = 4, atom i</ref> is totally buried and cannot be a surface atom. This checking for nullity is done by Seidel's randomized linear programming algorithm that has linear expected time and is quite fast in practice <ref type="bibr" target="#b17">[17]</ref>. All the atoms for which Fi # q5 are classified as candidates for being surface atoms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Determination of surface patches</head><p>Determination of the vertices defining the convex spherical, concave spherical, and toroidal patches is the most crucial (and time-consuming) part of the whole algorithm.</p><p>If one computes a three-dimensional a-shape polytope for the set of atoms in a molecule, with Q = probe-radius, then the torii occur along the edges, the concave spherical triangular patches correspond to the faces, and the convex spherical patches correspond to the vertices of this polytope. The method given by Edelsbrunner <ref type="bibr" target="#b7">[7]</ref> finds these edges by first computing the entire three-dimensional regular triangulation, an O(n2) approach. We show here an equivalent method for computing the three-dimensional Qhulls for molecules in parallel time O ( k log k) over n processors</p><p>To compute F,, we compute the convex hull of the points dual to the Hij in the dual-space, as described in <ref type="bibr" target="#b15">[15]</ref>. This is an O(k1ogk) time process. Next we compute the dual of the convex hull to get the feasible cell F,, in time O ( k ) . The intersection of the feasible cell F, with 4i gives rise to a set of components on 4i. Since Fi is convex, every component dc, is closed, simply connected, and does not intersect any other component. Each of these closed components dc,, divides 4i into two connected regions, say Rpo and RpI . For exactly one of these, say hm, it will be true that RPm c F,. We define Rpm to be the interior of the closed component dcp. We can determine all these components acp, by finding the intersections of the edges and faces of F, with 4j. This can be done in O ( k ) time.</p><p>After a connected component dcp has been determined on 4i we generate the surface patches. It is important to note there the distinction between the component dc, and the surface patches it generates.</p><p>For each component dc,, there exists a one-to-one mapping, say 3, with a convex spherical patch of the Richards's surface together with parts of its adjacent (non-convex) patches.</p><p>We describe the mapping 3 next. Let the component dc, be composed of T <ref type="figure">arcs, apo, aPl, . . . , aPr-l,   and T vertices, vpo, w p l , .</ref> . . , q &lt; T determine the locus of the center of the probe while it is in contact with two atoms. These arcs apq therefore are used to generate the toroidal patches. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Parallelization</head><p>Our approach to computing the smooth molecular surface can be parallelized over all the atoms of the molecule. Each of the steps as described above can be carried out independently for each atom. The most expensive of these steps is the construction of a feasible cell which takes time O(IC log IC), for IC neighbors. Therefore the complexity of our algorithm over n processors would be O(IC1ogk). If the number of available processors p &lt; n, we can allocate 5 atoms per processor to get a time complexity of o(-).</p><p>These bounds hold in a CREW PRAM model of parallel computation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.6">Robustness</head><p>In the algorithms for computing the convex hull of .a set of points, it is assumed that the points are in a general position, ie. no more than d points lie on the same d -1 dimensional hyperplane. In reality this assumption often fails to hold, leading to problems. For example, planar benzene rings occur often in proteins, causing six carbon and six hydrogen atoms to be all coplanar.</p><p>One of the recent approaches to solving this problem has been to perturb the input point set slightly to avoid these degeneracies. We are using a version of the deterministic perturbation scheme proposed by Emiris and Canny <ref type="bibr">[lo]</ref>, which perturbs the j t h dimension of the i f h point as:</p><p>where E is a symbolic infinitesimal and q is the smallest prime greater than n.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results</head><p>Our implementation has been done on Pixel-Planes 5 <ref type="bibr">[ll]</ref>, although it is general enough to be easily portable to any other parallel architecture. <ref type="table" target="#tab_1">Table 1</ref> shows our timings for computation and display of the molecular surface for various molecules for a proberadius of 1.4A. For these results we were using configurations of 8, 16, or 24 Intel i860 processors. The molecules for which we have made these studies are crambin, felix, dihydrofolate reductase (DHFR), and superoxide dismutase (SOD). At present, we are representing the molecular surface by triangles, and the column Tris in <ref type="table" target="#tab_1">Table 1</ref> refers to the complexity of the computed surface in terms of number of triangles (rounded to the nearest thousand).</p><p>As can be seen, the value of IC, the average number of neighbors, is fairly constant for a given probe-radius over different molecules. In fact, using concepts from the mathematical theory of packing of spheres and some reasonable assumptions, we have shown in <ref type="bibr" target="#b18">[18]</ref> that the number of neighbors in protein molecules      (See color plates, p.  can be bounded from above to be in low hundreds. This means that the algorithm we have presented here is more attractive than the conventional O(n2) a l p rithm even for medium-sized proteins that have more than a couple of thousand atoms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Molecule</head><p>Crambin Felix DHFR SOD whole surface has to be recomputed from the beginning. Assuming the atoms of the molecule move along continuous trajectories, it should be possible to compute such surfaces (and indeed a-hulls and a-shapes) incrementally by using the information from previous time steps.  <ref type="table" target="#tab_3">Table 2</ref> shows the times for the generation of the molecular surface for crambin using 24 processors, and different probe-radii varying from l.OA to lO.OA.  The smooth moleculy surfaces for crambin with probe-sphere radii of 1.4A, 2.8A, 5.OA, and lO.OA are shown in <ref type="figure" target="#fig_3">Figures 4, 5, 6</ref>, and 7 respectively. The smooth molecular surfaces for dihydrofolate reductase and superoxide dismutase for a probe-sphere radius of 1.4A are shown in <ref type="figure" target="#fig_7">Figures 8 and 9</ref> respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusions and future work</head><p>We have presented a parallel algorithm for computing the molecular surfaces in parallel time O(k log k ) over n processors. This is sufficiently general enough to be used for computation of a-hulls and a-shapes for a given value of a as long as no two points are arbitrarily close. Our algorithm would give an order of magnitude improvement over the previous best known algorithms for molecules with moderately large values of n, in the order of a few thousands or more, both in sequential as well as in parallel implementations.</p><p>At present we are not using any incremental temporal information in constructing these surfaces. Thus, if the atoms move slightly from their positions, the  Probe Radius = 1.4"A.     CP-32</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>d ( x , y ) to be the Euclidean distance between x and y. The power of a point x with respect to a sphere S i is defined as depending on whether x lies inside Si, on the boundary of Si, or outside Si, respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Formally, Ni = { j ( d ( c j , c,) &lt; ri+2R+rj}, or equivalently, Ni = { j ) Q i n \kj # I#J}. The centers of all atoms whose indices occur in Ni lie inside the sphere p i . Formally, VjcN;,p(c,,pi) 5 0. Therefore to compute the list of neighboring atoms for atom i, one needs to look at all the atoms whose centers lie in the voxels that intersect p i . Let the average number of neighboring atoms be k. Note that k grows as R3 assuming that the atoms are uniformly distributed. In Figure 1 atoms jl and j s are neighbors to atom i, but atom j , is not. Determination of Neighboring Atoms</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>The vertices vpq of this component dc,, where two arcs intersect, define the positions of the center of the probe while it is in contact with three atoms. These vertices wpq are used to generate the concave spherical triangular patches. The interior of the component dc, corresponds to the positions of the center of the probe while it is tangent to only atom i. This is used to generate a convex spherical patch.InFigure 3a component defined by three chordales I l i j ' s intersecting ?Tri has been shown with its interior unshaded. Determination of Molecular Surface Patches from Components</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Molecular surface for Crambin, Probe Radius = 1.4"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Molecular surface for Crambin, Probe Radius = 2.8"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Molecular surface for Crambin, Probe Radius = 5.O"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Molecular surface for Crambin, Probe Radius = 10.O"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Molecular surface for Dihydrofolate reductase, Probe Radius = 1.4"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Molecular surface for Superoxide dismutase, Probe Radius = 1.4"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Fast</head><label></label><figDesc>Analytical Computation of Richard's Smooth Molecular Surface, A. Varshney and F.P. Brooks, pp. 300-307.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 4 :</head><label>4</label><figDesc>Molecular surface for Crambin.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 5 :</head><label>5</label><figDesc>Molecular surface for Crambin, Probe Radius = 2.8"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 6 :</head><label>6</label><figDesc>Molecular surface for Crambin, Probe Radius = 5.O"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 7 :</head><label>7</label><figDesc>Molecular surface for Crambin, Probe Radius = 10.O"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 8 :</head><label>8</label><figDesc>Molecular surface for Dihydrofolate reductase, Probe Radius = 1.4"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 9 :</head><label>9</label><figDesc>Molecular surface for Superoxide dismutase, Probe Radius = 1.4"A.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>make all F; closed and bounded, we first construct a tetrahedron T that encloses the entire molecule. Let each face f of T lie in a plane IIj. such plane IIf can be considered to be defining two halfspaces, one that includes the molecule and the other that does not. Let H f , O 5 f 5 3 be the four halfspaces, one due to each face f of T , that select the molecule. We include H f with the set of halfspaces Hij that are used in defining Fi,Vi. With this modifi-cation we are now ready to give the final definition of</figDesc><table><row><cell>Every</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Smooth Molecular Surface Generation Times for 1.4A probe-radius.</figDesc><table><row><cell></cell><cell></cell><cell>Times (sec)</cell></row><row><cell>Atoms</cell><cell></cell><cell>Processors</cell></row><row><cell></cell><cell>8</cell><cell>16</cell><cell>24</cell></row><row><cell>396</cell><cell cols="3">0.84 0.43 0.31</cell></row><row><cell>613</cell><cell cols="3">1.42 0.69 0.47</cell></row><row><cell>3123</cell><cell cols="3">6.11 2.93 1.96</cell></row><row><cell>4386</cell><cell cols="3">8.73 4.16 2.76</cell></row><row><cell></cell><cell></cell><cell></cell><cell>0.70</cell><cell>1.32</cell></row><row><cell></cell><cell></cell><cell></cell><cell>224.0 384.9</cell></row></table><note>Times (sec) I 0.29 I 0.31 I 0.43k I 32.2 I 44.7 I 102.8</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>.4A I 2.8A I 5.0a I lO.OA I</head><label></label><figDesc></figDesc><table /><note>I Probe-Radius I l.OA I 1I Triangles I 22K I 18K I 14K I 13K I 13K</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>Smooth Molecular Surface Generation Times for Crambin using 24 Intel i860 Processors.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>We would like to acknowledge the valuable discussions we had with Dr. </p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Power diagrams: Properties, SIAM Journal of algorithms and applications</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Aurenhammer</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Computing</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="78" to="96" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Master&apos;s thesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Connolly</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981" />
			<pubPlace>Berkeley, USA</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of California at Berkeley</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Analytical molecular surface calculation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Connolly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Joumal of Applied Crystallography</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="548" to="558" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Solvent-accessible surfaces of proteins and nucleic acids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Connolly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">221</biblScope>
			<biblScope unit="issue">4612</biblScope>
			<biblScope unit="page" from="709" to="713" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Molecular surface triangulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">L</forename><surname>Connolly</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Applied Crystallography</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="499" to="505" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Algorithms in Combinatorial Geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EATCS Monographs on Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<date type="published" when="1987" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Weighted alpha shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<idno>UIUCDCS-R-92-1740</idno>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of Illinois at Urbana-Champaign</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">On the shape of a set of points in the plane</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">G</forename><surname>Kirkpatrick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory, IT</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="551" to="559" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Three dimensional alpha shapes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Edelsbrunner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Mucke</surname></persName>
		</author>
		<idno>UIUCDCS- R-92-1714</idno>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of Illinois at Urbana-Champaign</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">An efficient approach to removing geometric degeneracies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Emiris</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Canny</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Eighth Annual Symposium on Computational Geometry</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1992-06" />
			<biblScope unit="page" from="74" to="82" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Pixel-planes 5: A heterogeneous multiprocessor graphics system using processor-enhanced memories</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Poulton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Eyles</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Greer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Goldfeather</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ellsworth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Molnar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Tebbs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Israel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics: Proceedings of SIGGRAPH&apos;89</title>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1989" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="79" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Macromolecular shape and surface maps by solvent exclusion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Greer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">L</forename><surname>Bush</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the National Academy of Sciences USA</title>
		<meeting>the National Academy of Sciences USA</meeting>
		<imprint>
			<date type="published" when="1978" />
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="303" to="307" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Mseed: A program for the rapid analytical determination of accessible surface areas and their derivatives</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Perrot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">D</forename><surname>Gibson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vila</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">A</forename><surname>Palmer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Nayeem</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Maigret</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">A</forename><surname>Scheraga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Chemistry</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="11" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Perrot</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Maigret</surname></persName>
		</author>
		<title level="m">New determinations and simplified representations of macromolecular surfaces. Journ a1 of Molecu Jar Graphics</title>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="14" to="15" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Computational Geometry -an Introduction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Preparata</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Shamos</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1985" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Areas, volumes, packing and protein structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">M</forename><surname>Richards</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Ann. Rev. Biophys. Bioengg</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="151" to="176" />
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Linear programming and convex hulls made easy</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Sixth Annual A C M Symposium on Computational Geometry</title>
		<meeting><address><addrLine>California</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1990-06" />
			<biblScope unit="page" from="211" to="215" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Bounding the number of neighbors in protein molecules</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">V</forename><surname>Wright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">P</forename><surname>Brooks</surname><genName>Jr</genName></persName>
		</author>
		<idno>UNC-CS-TR- 93-039</idno>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of North Carolina at Chapel Hill</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Calculations of a list of neighbors in molecular dynamics simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Yip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Elber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Chemistry</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="921" to="927" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
