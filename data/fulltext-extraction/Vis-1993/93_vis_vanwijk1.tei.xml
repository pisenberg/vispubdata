<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Hyper Slice Visualization of scalar functions of many variables</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarke</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Netherlands Energy Research Foundation ECN</orgName>
								<address>
									<postBox>PO. Box 1</postBox>
									<postCode>1755 ZG</postCode>
									<settlement>Petten</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Hyper Slice Visualization of scalar functions of many variables</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:30+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>HyperSlice is a new method for the visualization of scalarfunctions of many variables. With this method the multi-dimensional function is presented in a simple and easy to understand way in which all dimensions are treated identically. The central concept is the representation of a multi-dimensional function as a matrix of orthogonal two-dimensional slices. These two-dimensional slices lend themselves very well to interaction via direct manipulation, due to a one to one relation between screen space and variable space. Several interaction techniques, for navigation, the location of maxima, and the use of user-dejined paths, are presented.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Problem</head><p>Scalar functions of several variables are often used in science and engineering. These functions can be denoted as f(x) = f(q, z2,. . . , z,-1, XN), where x is a point in N-dimensional space, and zi is a variable of the i-th dimension. Scalar functions can be analytically defined, or can be the result of a simulation or measurements.</p><p>Visualization is an important tool for their analysis. Two types of use can be discerned. First, the function can be precomputed at a set of discrete points. The visualization then boils down to a visual inspection of a data set in which calculation of new function values is limited to interpolation of the values in the data set. Second, the function can be computed during the visualization. Here the user specifies what he is interested in, and a separate computation module generates the data. This approach is an example of computational steering: the simulation runs continuously, while the user simultaneously views the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Robert van Liere</head><p>Centrum voor Wiskunde en Informatica CWI P.O. Box 4079, 1009 AB Amsterdam The Netherlands results and changes parameters. It is highly efficient for multi-dimensional functions, because when the number of dimensions is large, the precomputation of data on a fine grid is prohibitively expensive in terms of processing power and memory requirements. However, it obviously requires that the function can be evaluated fast enough for interactive use. The complexity of the representation of multi-dimensional functions depends heavily on N . For N = 1 a simple graph suffices, for N = 2 two-dimensional color images or three-dimensional mountain plots are routinely used. The visualization of scalar functions of three variables is known as volume rendering, and is an important and active area of research. Many techniques have been proposed for their visualization [ 13.</p><p>The direct visualization of scalar functions of more than three variables is more complex, because the human mind is not able to imagine high-dimensional objects. With some effort, four-dimensional functions can be imagined as timevarying three-dimensional functions, but if N &gt; 4 hardly anybody can produce mental images of such functions.</p><p>One solution to the representation of functions with N &gt; 4 is therefore to fix the value of a number of variables so that the number of free variables is lower than four, and then to use a standard visualization technique. In other words, a slice of the data is selected and visualized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Previous work</head><p>Several researchers have proposed methods for the visual representation of multi-dimensional functions and interaction on these representations. Although much progress has been made recently, most of the proposed solutions still do not seem to be satisfactory. All solutions compromise on the dimensionality, granularity and legibility of the representation. A crude classification for multi-dimensional function representations is: 0 One popular class of representation techniques involves hierarchy : select a small number of dimensions and display these within a space of higher dimension. <ref type="bibr">Young</ref> is an important exception. Scatterplot matrices provide simple representations of discrete data. An advantage is that the different dimensions are treated identically, no more or less arbitrary decision is expected from the user how the data must be structured for presentation purposes. Furthermore, interaction techniques on this representation can be added relatively easily.</p><p>We argue that a simple representation augmented with fast interaction tools, based on direct manipulation, can provide additional insight in continuous scalar functions of many variables.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Overview</head><p>Our basic conjecture is that in scientific visualization representation and interaction are equally important and that they are closely related. The visual representation should be such that the user can understand the behavior of the function, as well as easily interact on this representation.</p><p>The first choice to be made is on the dimensionality of the basic representation. The use of sophisticated threedimensional techniques, possibly enhanced with animation and color, seems natural, because as many as possible dimensions are shown simultaneously. This solution is optimal if the function or data is three-dimensional. However, if more dimensions have to be visualized, only a selection can be shown, and hence navigation (e.g. modification of the values of variables that are fixed for a single representation) becomes essential. Here we run into problems. Although significant progress has been made, current techniques for volume rendering are too slow for direct manipulation. Also, such volume renderings are more difficult to interpret than simpler representation forms, and often tuning of the settings of thresholds, opacity mappings, etc. is required. Furthermore, interaction in three-dimensional space is not trivial.</p><p>We therefore use two-dimensional slices as the basic visual representation. The geometric coordinates denote two variables, a gray or color value denotes the value of the function. Here rendering is fast, visual interpretation is easy, and interaction is direct, because of the one to one relation between the screen space and variable space.</p><p>However, a single slice only shows a very limited subset of the multi-dimensional space. We therefore developed Hyperslice, a new method for the visualization of multidimensional functions. With this method the function is presented in a simple and easy to understand way, all dimensions are treated identically, and interaction via direct manipulation of the representation is easy and effective.</p><p>The central concept, presented in section 2, is the representation of a multi-dimensional function as a matrix of orthogonal two-dimensional slices. This representation lends itself very well to a variety of interaction techniques. In section 3 navigation, the location of extrema, and the use of user defined paths is summarized. Next implementation issues (section 4) are discussed and an application (section 5) is presented. Finally, in section 6 the results are discussed and suggestions for further research are done.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Representation</head><p>In this section we present the Hyperslice representation, after an introduction of some basic notions and definitions.</p><p>We assume that the focus of the user is on a single N-dimensional point of interest which we call the current point, and denote as c = (cl, c2, ..., CN). The width of the focus is a set of scalar values wi, with i = 1,. . . , N . The range of values of interest for dimension i is the interval xi are equal to ci. In this case the horizontal axis is aligned again with Zk, while the vertical axis is aligned with f(x).</p><formula xml:id="formula_0">Ri = [ci -wi/2, Ci +wi/2]. A two-dimensional slice S~, J , with IC # I,</formula><p>The next question is which slices are to be displayed. We require that all dimensions are treated identically, so we display the value of the function for all pairs of variables. This leads us to the Hyperslice representation. A Hyperslice is a matrix of panels i , j with 1 5 i , j 5 N . 0 the values along a horizontal line through the center of the panel are the same for all panels in the same column, and also the values along a vertical line are the same for all panels in the same row (see <ref type="figure" target="#fig_0">fig. 1</ref>). The main strength of the Hyperslice representation is that it lends itself very well to interaction via direct manipulation, which is the subject of the next section. If the graph G k is dragged, the single variable xi is changed. The effect is similar to that as described for slices. Thus, each panel serves not only as a visual representation, but also as one-or two-dimensional sliders for the current value of variables xi.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Interaction</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Navigation</head><p>In practice this mechanism is used in various ways:</p><p>0 If in one of the panels an interesting spot is detected (e.g. an optimum) the user can drag this spot to the center of the panel;</p><p>0 The multi-dimensional space can be scanned along a single axis by dragging the graph in a diagonal panel;</p><p>0 It is very instructive to look at a slice Si,j while dragging the slice S k , J , with i, j , k, and 1 all different. The</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>x1 x2 x3 x4</head><p>x5 <ref type="figure">Figure 3</ref>: User defined path effect is that the slice Si,j is moved along the dimensions k and 1, which are both perpendicular to this slice.</p><p>The widths wi of each range Ri can also be changed.</p><p>In the current implementation all wi can be scaled simultaneously with the same factor with zoom-in and zoom-out buttons at a control panel. Also, they can be adjusted per dimension.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Optimization</head><p>In the previous section the emphasis was on user controlled changes of the current point. However, the value of c can also be adjusted automatically, according to some criterion. Currently, one such option has been implemented: a tool to simplify the location of maxima. When enabled, a gradient path from c to the nearest maximum is computed. Each step in this gradient path is in the direction of the steepest ascent. Projections of this gradient path are shown on all slices. The gradient path is recomputed each time the current point c is changed. This allows the user to detect for instance saddle areas: here the gradient path will jump wildly from one local maximum to another. In addition to the display of the gradient path, the user can request to animate c along the gradient path to the maximum.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Paths</head><p>It is easy to get lost during the exploration of hyperspace. To prevent this, the user can define paths and mark interesting points. A path P is a sequence of marks mi, where a mark is a point in N-dimensional space. The projections of the marks are shown as crosses, the path is shown as a sequence of projected line segments mimi+l. <ref type="figure">Figure 3</ref> shows a path with three points. The current point is indicated with B circle.</p><p>A set of standard editing operations is available to the user. A new path can be created, the current point can be marked and added to the path. Further, each mark can be selected by point and click. The user can set c to this selected mark, delete the mark, move the mark, or insert a new mark after this mark. The visualization tool can thus be used as a multi-dimensional drawing tool.</p><p>In addition to the path specification, the user has a control panel available to animate c using this path. The user can request to move c along the path, stepwise or continuously, in forward or backward direction. Again, if c changes, all panels are recomputed and redisplayed. The gradient path can also be displayed along with the animation.</p><p>Path specification and animation has proved to be very powerful in practice. The metaphor of a drawing tool is easy to learn and understand. The possibility to mark interesting points and to jump back and forth allows fast comparisons. The use of the path to animate c enables the viewer to observe trends in directions oblique to the principal axes. Another interpretation of the path is as a constraint on c to a user defined, one-dimensional subspace of the multi-dimensional space. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Implementation</head><p>For the display of a slice each dimension i is discretized into a number of samples Mi, resulting in a evenly spaced grid of coordinates.</p><p>The computational requirements of Hyperslice depend on the number of dimensions N and the sampling rates Mi. If all Mi are equal, the number of function evaluations for the slices is equal to M2(N2 -N)/2. Some values for the number of evaluations are given in <ref type="table" target="#tab_1">Table 1</ref>.</p><p>1 10 1 25 1 28125 A number of techniques can be used to improve performance. Various progressive and adaptive refinement techniques can be used. If the user does not interact with the representation, the computing process can continue to calculate the slices at higher sampling rates. During the dragging of a slice, the resolution of other slices can be low-ered. Further, the presentation lends itself well to parallel processing, because each slice is independent. However, if the computation of the function f(x) is not too demanding, a high level of interaction up to smooth animations can easily be achieved on a serial processor.</p><p>Hyperslice is written in C++ using the Forms library of user interface objects and SGI's graphics library. It runs on all SGI platforms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Application</head><p>To test the method we applied it to a simple synthetic application: a potential function that results from a set of multi-dimensional point objects. Each object has a position pi and a weight wi. The potential function fi (x) of a single object is defined by:</p><p>The total potential f(x) is their sum: z This function can be used for any number of dimensions, which makes it highly suitable for test purposes. <ref type="figure" target="#fig_0">Figure 4   (See color plates, p , CP-13.)</ref> shows an image as it appears on the screen for four dimensions. For all data related information (graphs and slices) a Gouraud shaded, grey-scale coloring scheme is used. The current value is depicted as a small red box in the center of a panels. A gradient path (green) and a user defined path (yellow) are shown, as well as some simple annotation of the axes. Three point objects were defined in this data set. Their positions were located with the gradient path and marked. The user defined path thus connects the three objects. <ref type="table" target="#tab_3">Table 2</ref> summarizes the performance achieved with this synthetic application. The first column provides various sampling rates, while the second and third column provide the number of frames per second on a SGI Indigo R4K with Elan graphics and a SGI 4D/310 with VGX graphics. The first workstation has a fast processor and relatively slow graphics, the second a slow processor and fast graphics. At both workstations animation rates can be achieved, provided that the sampling rate is not chosen too high. The  In the future we will apply Hyperslice to less synthetic problems. The most challenging is the problem of parameter estimation in chemical reactions <ref type="bibr" target="#b8">[9]</ref>. These parameters are e.g. unknown reaction constants in the kinetic equations. Estimates of these parameter values are input to a model of the reaction. The results of the model are judged, and compared with experimental data. These type of problems are called "inverse problems" and we expect Hyperslice to be a useful tool for steering the numerical solver towards areas of interest of the multi-dimensional parameter space. dimensional slices allows for fast rendering, and, most important, easy interaction via direct manipulation, due to the one to one relation between screen space and variable space.</p><p>To support the user in the search for interesting features, several interaction techniques, for navigation, the location of maxima, and the use of user-defined paths were presented. Many other techniques are conceivable. The handling of user-defined constraints and of rotation is under development.</p><p>Other areas for further research are the improvement of the performance, extension of the visual representation, the coupling of dedicated visualization and input tools, and the inclusion of sampled data. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>H?perSlice</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The concept of Hyperslice for N = 3</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>is a visual representation of f(x), where Xk and X J vary and the other xi are equal to ci, or: The horizontal axis of the slice is aligned with Xk, and the vertical axis with XJ. The function values are shown as a rectangular grid of filled cells. We used grey values for the cells, which are derived from the function value via a linear transfer function. The current point in the center of the slice is marked with a square, and other annotation of the axes can be displayed at request. A one-dimensional graph Gk is a graph of f(x) where xk E Rk and all other</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Ranges</head><label></label><figDesc>Ri are enumerated along the horizontal and vertical axes. Panels on the diagonal contain graphs Gi, panels at off-diagonal positions contain slices Si,j. As an example, figure 1 shows the concept for N = 3. Displayed on the left is the current point as a small sphere, whereas the matrix on the right displays the corresponding Hyperslice. Colors are used to annotate the three principle axes (red, yellow, blue) and slices (cyan, orange, green). The generalization of the Hyperslice representation to higher N is straightforward. Several relations exist between the panels: 0 all off-diagonal slices Si,? are the same as slices Sj,i, rotated over 90 degrees; 0 the function value f ( c ) displayed in the center of a panel is the same for all panels;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>(Figure 2 :</head><label>2</label><figDesc>See color plates, p. C f -13.) Effect of dragging a slice This HyperSlice representation allows the viewer to observe the sensitivity of f to changes in one and two dimensions. It is difficult, if not impossible, to reconstruct a complete, multi-dimensional mental image from the separate graphical representations. However, this representation does enable the user to view the multi-dimensional space around a point in a simple and intuitive way. The user can locate features such as extrema and hyperplanes. Because all dimensions are presented simultaneously and in various combinations, the chance that important relations are overlooked is small. Another interesting property is that for N = 1 the Hyperslice reduces to the standard representation: a single graph.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>The</head><label></label><figDesc>Hyperslice representation shows f only around the current point c. Probably the most important aspect of user interaction is therefore the change of c. By changing c the user steers through multi-dimensional space in search for interesting features of the function, where the visual representation supports his navigation. A direct and simple solution is feasible with the Hyperslice concept. The user can point at a panel, press a mouse-button, and drag the visual representation. If the user drags a slice s k , [ over a displacement [ d k , d l ] , then the current point c is changed as follows: The visual effect is shown in figure 2. Here the slice S4,2 is dragged. Slices in the same column move horizontally over a displacement d k , whereas the slices in the same row move vertically over a displacement d l . Furthermore, for all slices Si,j other than s k , J , one or two of the modified dimensions of the current point are not represented by a horizontal or vertical axis. One could say that these dimensions are perpendicular to these slices. A change in such a dimension does affect the slice shown: the slices move perpendicular to the image plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Hyperslice applied to four-dimensional potential function</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>-Figure 1 3 Figure 4 :</head><label>134</label><figDesc>Msiraiization of Scalar Functiolzs of Many Variables, J.J. van Wijk and R van Liere, pp. 119-125. The concept of HyperSllce for N = Hyperslice applied to four-dimensional potential function CP-13</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Number</figDesc><table><row><cell>of evaluations f(x) for several values of</cell></row><row><cell>N a n d M</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>table shows that</head><label>shows</label><figDesc>CPU processor performance dominates rendering performance, even for this relatively simple application.</figDesc><table><row><cell cols="3">A4 I R4K+Elan I R3K+VGX</cell></row><row><cell cols="3">18 10 I 9.1 1 8.5 5.7 4.0</cell></row><row><cell>26</cell><cell>4.8</cell><cell>2.2</cell></row><row><cell>42</cell><cell>1.8</cell><cell>0.9</cell></row><row><cell>58</cell><cell>1.1</cell><cell>0.5</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>Frame per second for different sample rates and architectures.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgement</head><p>The authors would like to thank Frits Post (Delft University of Technology) for his constructive criticism during the writing of this paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">State of the art in volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kajiya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Kreuger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIG-GRAPH &apos;91 Tutorial Course Notes</title>
		<imprint>
			<date type="published" when="1991-07" />
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Dynamic Graphics for Exploring Multvariate Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">W</forename><surname>Young</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">P</forename><surname>Kent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">F</forename><surname>Kuhfeld</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>Wadsworth Inc</publisher>
			<biblScope unit="page">391424</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">World within worlds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Beshers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization &apos;92</title>
		<meeting>Visualization &apos;92<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="283" to="290" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Hierarchical multivariate visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Mihalisin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Schwegler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Timiin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Jn Proceedings Interface &apos;92</title>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Interactive data exploration with a supercomputer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Bergeron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization &apos;91</title>
		<meeting>Visualization &apos;91<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="248" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The use of faces to represent points in kdimensional space graphically</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chemoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Jour Amer Stat. Assoc</title>
		<imprint>
			<biblScope unit="page" from="361" to="368" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Shape coding of multidimensional data on a microcomputer display</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Beddow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization &apos;90</title>
		<meeting>Visualization &apos;90<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="6" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">A new method is presented for the visualization of scalar as a Hyperslice: a matrix of orthogonal two-dimensional slices. This representation is simple and easy to understand, and symmetric for all variables. The use of twofunctions of many variables. The function is represented [81 w.s. Cleveland</title>
		<imprint>
			<date type="published" when="1985" />
			<publisher>OfGraphing Wadsworth Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Computational steering: a case study</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CWI Quarterly</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="207" to="209" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
