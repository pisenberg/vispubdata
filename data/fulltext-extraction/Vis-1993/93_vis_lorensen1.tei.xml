<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Geometric Clipping Using Boolean Textures</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">General Electric Company Corporate Research and Development Schenectady</orgName>
								<address>
									<postCode>12345</postCode>
									<region>New York</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Geometric Clipping Using Boolean Textures</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Texture mapping is normally used to convey geometric detail without adding geometric complexig. This paper introduces boolean textures, a texture mapping technique that uses implicit functions to generate texture maps and texture coordinates. These boolean textures perform clipping during a renderer&apos;s scan conversion step. Any implicit function is a candidate boolean texture clippel: The paper describes how to use quadrics as clippers. Applications from engineering and medicine illustrate the effectiveness of texture as a clipping tool.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Computer graphics applications in medicine, engineering and science often produce images that contain multiple objects that occlude each other. To understand the complex spatial relationships that exist in these renderings, users look for graphical tools that can efficiently manipulate the content of the views. Numerous graphical techniques exist to help a user selectively view multiple objects or objects that have multiple surfaces. Standard techniques include: front and back clipping, transparency, selective object display, wireframe and color. Texture mapping is a popular computer graphics technique that is usually used to add visual detail to a rendered image without adding geometric complexity. Texture mapping, once limited to expensive flight simulation hardware or special purpose rendering software, is now becoming commercially available in general purpose graphics hardware from companies like Silicon Graphics, Hewlett Packard and Evans and Sutherland and in software <ref type="bibr" target="#b19">[20]</ref>. This paper introduces boolean textures, a new visualization technique that uses texture mapping to clip or color graphics primitives according to their distance from implicit surfaces. Since it uses texture mapping to achieve its effects, operating during the scan conversion process, it is a visualization technique, not a modeling technique.</p><p>After a survey of clipping algorithms and texture mapping, we demonstrate the technique first for single planar surfaces and then for multiple, higher order surfaces. We use these basic elements to create a boolean texture tool box that includes clippers, telescopes, and outliners. Medical and engineering applications illustrate the applicability of the approach to practical problems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Related Work</head><p>Boolean textures cover two broad areas: clipping and texture mapping. A brief review of related work follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Clipping</head><p>Clipping can be performed during either modeling or rendering. During modeling, stringent topological requirements require robust, geometric clipping algorithms that produce new geometric entities. These geometric algorithms can be time consuming and complex <ref type="bibr" target="#b9">[9,</ref><ref type="bibr" target="#b18">19]</ref>. Also, different primitives require different clipping algorithms. If other than planar clipping is desired, the algorithm complexity increases. However, new models are sometimes a requirement, justifying the expense and complexity of geometric clipping. But this paper addresses rendering, not modeling, and, geometric clipping algorithms are too expensive to be used during the rendering cycle. Clipping performed during the rendering process must be efficient especially if the location and orientation of the clipping primitives depend upon the view. The Silicon Graphics GL library allows up to six planar clipping planes to be applied to geometric objects. The clipping is performed by dotting each vertex with the clipping planes that have been transformed into eye space. Vertices whose dot products are negative are clipped. Several authors report clipping that uses the graphics Zbuffer. Feiner <ref type="bibr" target="#b7">[7]</ref> uses z-buffer-based picking to determine which objects are occluded. Lucas <ref type="bibr">[</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Texture Mapping</head><p>Texture mapping was first introduced to the graphics community by Catmull <ref type="bibr" target="#b4">[5]</ref>. Catmull used texture to modify color and intensity in geometric renderings. Blinn extended texture to model mirror reflections <ref type="bibr" target="#b1">[2]</ref> and bumpy surfaces <ref type="bibr" target="#b2">[3]</ref>. Shadow mapping <ref type="bibr" target="#b13">[14]</ref> generates shadows from a depth map. Alpha <ref type="bibr">[ 131,</ref> or opacity can also exist in a texture map. Regardless of the final intent, texture mapping is a two step process. First, a texture map of intensities, colors and / or opacities is created. This map is normally a ID or 2D image with 8, 16, 24, or 32 bits per pixel. Then, each vertex of the geometric model is assigned a texture coordinate based on some mapping from 3D Euclidean space into 2D texture space. For example, for models that are basically spherical, a mapping from Cartesian coordinates to latitude / longitude is a viable texture coordinate generator. During scan conversion, the graphics hardware or software interpolates the texture coordinates using the same scheme used for vertex colors and normals. For polygonal models, the interpolation is usually linear. The interpolated texture coordinate becomes an index into the texture map. The actual texture value can be interpolated from neighboring pixels using nearest-neighbor or bi-linear interpolation. Heckbert <ref type="bibr" target="#b8">[8]</ref> surveys texture mapping and describes a number of important issues including texture coordinate generation and aliasing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Boolean Textures</head><p>Texture mapping algorithms can be characterized by a model (or texture map) and an index (or texture coordinate). o Geometric textures model reflectance of surfaces, indexed by geometry. o A bump map models roughness, indexed by geometry.</p><p>0 An environment map models mirror reflections, indexed by direction of reflection. 0 A shadow map models light source obscurity, indexed by location of a point.</p><p>The boolean textures introduced in this paper model inside I outside relations, indexed by distance from a surface. The boolean texture map contains colors, intensities and opacities that vary with distance from the clipping surfaces. First we describe planar clipping with one-dimensional boolean textures and later extend the technique to higher order surfaces and texture dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Texture Coordinate Generation</head><p>The implicit equation of a plane located at (a, b, c) with unit normal N = (nx, n,,, n,) is:</p><formula xml:id="formula_0">F(x,y,z) = n,x + nyy + n,z -(an, + bn, + zn,)</formula><p>The plane partitions space onto two half-spaces, one on the side of the normal, the other on the opposite side. Evaluation of F(x, y, z) at any point produces a value &lt; 0, = 0, or &gt; 0. Points that lie inside the half-space created by the plane have values F(x,y,z) &lt; 0; points on the planar surface, F(x, y, z) = 0; and for points outside, F(x, y, z) &gt; 0 . Also, for a plane, the value of IF(x, y, z)l is the Euclidean distance of the point (x, y, z) from the plane and the sign of the result tells on which side of the plane the point resides. For each point in our geometric model, we calculate this signed distance, transform it into valid texture coordinate values, and assign the result as the texture coordinate for the point. Most systems use texture coordinates in the range (0, 1), so we offset the distance by .5 to move the point corresponding to zero distance to the center of this range. Any point inside the plane has a texture coordinate &lt; .5, any outside has a coordinate &gt; .5 and any point on the plane has texture coordinate = .5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Texture Map Generation</head><p>Each point in the geometric model now has a texture coordinate that corresponds to its signed distance from a plane. This coordinate classifies a point as to whether it is inside, on, or outside the planar surface. Similarly, we design a texture map to partition texture space (0,l) into three regions: pixels to the left of center control the color and opacity of points inside the plane, pixels at the center control color and opacity of points on the plane and pixels to the right affect the appearance of points outside the plane. <ref type="figure">Figure 1</ref> shows a boolean intensity texture. This example sets intensity to a value less than 1 for geometric points inside the clipping surface and intensity to one for points outside the surface. With these matching texture coordinates and maps, the polygon scan conversion process interpolates the texture coordinate, uses it to look up a color, and assigns the result to the rendered pixel. If a transition from inside to outside occurs during the scan conversion, the rendered pixels change in appearance from inside pixels to outside pixels. Since we only need to know whether the point is in one of three finite states we can apply nearest neighbor interpolation to construct a pixel value from the texture map. In fact, we only need a three element texture map to accomplish the task! Further, if we include points that are on the surface with those that are inside, we only need a 2 element texture map. -I</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Clipping with Opacity</head><p>The texture map in <ref type="figure">Figure 2</ref> contains opacity. Points inside the plane can be made semi-transparent and other points opaque. Combinations of opacities and intensities for the three regions produce interesting results. <ref type="figure" target="#fig_1">Figure 3</ref> shows the results of applying intensity and opacity boolean textures to a sphere. Here the clipping primitives are two orthogonal planes passing through the center of the sphere.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Extensions to Other Functions</head><p>We can apply the same procedure to any function that distinguishes between inside and outside. The quadrics are a powerful implicit family that have found applications in computer graphics. The quadrics encompass spheres, ellipsoids, cones, and cylinders.  <ref type="figure">F(x, y, 2)</ref>. Since the inside / outside crossing is the same, we can assign this readily calculated value as the texture coordinate. We use the same texture maps as we did for the planar case. The algebraic distance is acceptable for a nearest neighbor texture map interpolation scheme because nearest neighbor does not care how far away the point is from the inside / outside boundary. But, if we use higher order inter-polation schemes for texture determination, we need a more meaningful measure of distance. We can derive the distance between a point and a quadric by finding the intersection of a line with a quadric. From Blinn <ref type="bibr">[l]</ref>, define two points on the line andrepresent all points on the line as a linear combination of these points. For this application, we select PI = (x,y,z, 1) and</p><formula xml:id="formula_1">P2 = PI + n(x,y,z)</formula><p>. N is the normal to the quadric at (x, y, z) and is:</p><formula xml:id="formula_2">- N (x,y,z,l) = 2(x,y7z,1) Q 0 0 [ " 0 0 0 ! I</formula><p>Then, the distance from PI along the normal N(x, y, z) is</p><p>This calculation has about four times the expense of the F(x, y, z) evaluation and should only be used if interpolation other than nearest neighbor is required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Extensions to Multiple Surfaces</head><p>We can extend the boolean textures to multiple planes or quadrics. Texture coordinate assignment is made by taking the maximum IF(x, y, z)l for all surfaces participating in the clip. This models the intersection of the surfaces. The minimum IF(x, y, z)l models the union of the surfaces. In fact, any of the popular implicit modeling [lo] techniques can be used to generate more complicated inside / outside relationships. However, as Rockwood [ 151 points out, blended surfaces require more sophisticated distance measures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Extensions to Multiple Texture Dimensions</head><p>Two-dimensional texture maps provide the opportunity to perform boolean clipping with two surfaces. Here, texture coordinates are independently generated for two implicit surfaces. The relationship between the inside 1 outside functions of the two surfaces is readily described in the 2D texture map. Four regions define the combinations of inside and outside for two surfaces, <ref type="figure">Figure 4</ref>. The transitions between the four regions affect the appearance of edges be-mxll PI -P(a17 PI, 1 1 , (I PI -P(a2, P 2 ) 11) .  <ref type="figure" target="#fig_5">Figure 5</ref> shows the sixteen possible labelings of the 2D boolean texture map. For example, case 2 clips all points that are outside surface A and inside surface B. <ref type="figure">Figure 6</ref> shows the results of applying the sixteen possible combinations of two elliptical cylinders clipping a sphere. In all sixteen cases, once the texture coordinates are calculated, the different clipping schemes are achieved by changing the texture maps. The texture maps also darken the intensity as scan conversion travels from inside pixels to outside pixels.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>0:</head><note type="other">1</note></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Texture Clipping Tool Box</head><p>With an understanding of the basics of boolean textures, we proceed to develop a number of useful tools.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Selective Clipping</head><p>Selectively clipping of objects in a scene produces cutaway views that help show the spatial relations between multiple objects. <ref type="figure">Figure 7</ref> shows a CAD model of a motor. Each part of the motor is clipped with two orthogonal clipping planes.</p><p>Regions inside the intersection of these two planes are transparent. The transition between inside and outside is darkened to outline the intersections. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Telescope</head><p>The telescope uses boolean textures to keep an eye on an interesting feature in a model as the camera moves about the scene. A clipper created from two quadrics, a cylinder and a plane, is placed at the point of interest, pointed towards the camera. As the camera location changes, we transform the quadric, recalculate the texture coordinates and render the new view. We use a texture map that shows all pixels that are outside the cylinder and outside the plane. This clips away all pixels that are inside the cylinder and are not outside the plane. <ref type="figure" target="#fig_7">Figure 8</ref> shows a surgical planning application using the telescope tool. As the view changes, the telescope remains pointed at a tumor on the kidney.</p><p>(See color plates, p . CP-28.) <ref type="figure">Figure 9</ref>. Simulated Ultrasound Surgery. <ref type="figure">Figure 9</ref> shows two views of an ultrasound surgery simulation <ref type="bibr" target="#b5">[6]</ref>. A conical quadric focuses at a tumor on the kidney.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Simulated Surgery</head><p>A geometric model of a cone is rendered in the clipped region. The darkened intersections of the cone and anatomy clearly indicate the regions affected by the ultrasound heat source.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Pseudo-Solid Clipping</head><p>Clipping often reveals the back side of interior surfaces. Such renderings can be confusing. We find it useful to shade the back sides of surfaces with different colors by changing the material properties that we use when the surface normal points away from the viewer. The turbine blade in <ref type="figure" target="#fig_8">Figure 10</ref> has been clipped with 60 clipping planes. The original data was obtained using an industrial CT scanner. Over 1.5 million triangles were created from the 512 by 512 by 300 slices using Marching Cubes <ref type="bibr">[ll]</ref>. Triangle decimation <ref type="bibr" target="#b16">[17]</ref> reduced the triangle count to under 100,000. The resulting blade model was clipped using two boolean textures: one revealing triangles within the intersection of the clipping planes, the other showing triangles outside the planes. Surfaces that border air are metal colored while those bordering metal are colored red. Both renderings in <ref type="figure" target="#fig_8">Figure 10</ref> use the same texture coordinates for vertices. Only the texture map changes for the two views.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Where Am I?</head><p>Exploration of complex models often requires a close up view of internal geometry. Wandering through the zoomed in features of these models, the viewer can lose track of location with respect to the original model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Implementation</head><p>We implemented the boolean textures in an object-oriented visualization system [ 181. The boolean texture map is a procedural texture object that generates the textures described in the paper upon request. Instance variables for map resolution, region appearance, and interpolation scheme permit ready variation of the boolean texture. Two texture coordinate generators, cutqlanes, and cut-quadrics permit clipping with multiple planes and two quadrics. Our objectoriented system keeps track of the last modified time of any object in an application. The visualization pipeline uses these times and only re-evaluates those portions of the pipeline that have changed since the last render operation. If the clipping surface remains unchanged, no texture coordinate computation is required. So, changing the type of boolean clip becomes an inexpensive operation. At this time, only our Silicon Graphics hardware supports textures with opacity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusions</head><p>Boolean textures offer a simple visualization technique for clipping or highlighting portions of geometric models based on their distances from implicit functions. Any function that can distinguish between inside and outside and has a distance metric is a candidate clipper. Texture clipping is not a substitute for geometric clipping, but rather provides an efficient alternative when visualization is the primary objective.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>121 performs arbitrary convex shape clipping with an additional z-buffer. The clipping primitives are rendered into the two z-buffers, maintaining the front and back extremes of clipping volume. Rossignac [ 161 uses a parity checking scanline algorithm to identify and render internal surfaces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 .</head><label>3</label><figDesc>Boolean textures on a sphere.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Q</head><label></label><figDesc>A homogeneous representation of the quadric is convenient to work with: = 1 ; 0 ' 0 0 O I , a cylinder of infinite extent L with radius r , centered at (0, 0,O). 0 , O ) and radius rat a distance d from the apex. Transformation of a quadric produces a quadric using the following relation: Q' = M-IQM-"<ref type="bibr" target="#b3">[4]</ref>. This transformation property makes modeling with quadrics straight forward. Specify the quadric in a convenient zero-centered coordinate system and translate and rotate it into the desired position.Rockwood  [I51 suggests using the value of the function F(x, y, z) as a measure of distance. He calls this measure the algebraic distance of F(x, y, z). The algebraic distance has the same sign as the Euclidean distance but varies as</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>P</head><label></label><figDesc>= a P , + PP2 Then solve the quadratic equation 0 = PQPt 0 = (aP1 + PPJQ(aP, + PPd' 0 = a2(P,QP:) + 2aP(P,QP:) + P2(P2QP:) 0 = Aa2 + 2BaP + CP2 (a,,P1&gt; = ( -B + J B~, A ) &lt;a2,o2) = ( -B -JB~-AC,A)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>~ s o 1 Figure 4 .</head><label>14</label><figDesc>2D Boolean Texture tween the surfaces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .</head><label>5</label><figDesc>Sixteen Boolean Textures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 .Figure 7 .</head><label>67</label><figDesc>Two Cylindrical Clippers Octant cuts on a motor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 .</head><label>8</label><figDesc>Telescope.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 .</head><label>10</label><figDesc>Solid Cuts.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 .</head><label>11</label><figDesc>Overview of an Internal Flythrough.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head></head><label></label><figDesc>Figure 11solves this problem with two views of the model: a close up and an overview. The images on the left use a boolean texture with an elliptical cylinder to clip a hole in the surface of the tur-bine blade. A planar quadric limits the extent of the cylindrical clipper. The sphere within the hole shows the camera location of the close up view on the right. As the location of the close up camera changes, texture coordinates of the overview model are regenerated.(See color plates, p. </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 6 : 7 :</head><label>67</label><figDesc>Two cylindrical clippers Figure Two octant cuts on CI motor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>A telescope focused on a tumor. Simulated ultrasound surgery.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 10 : 28 Figure 1 1 :</head><label>10281</label><figDesc>60 clipping planes. CP-Turbine blade flythrough</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We expect that as texture mapping becomes more available, boolean textures will be the basis for new tools in many visualization systems.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Algebraic Properties of Homogeneous Second Order Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Course Notes: Modelling and Animating with Implicit Suqaces</title>
		<editor>B. Wyvill, J. Bloomenthal</editor>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Texture and Reflection in Computer Generated Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Blinn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">E</forename><surname>Newell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="542" to="547" />
			<date type="published" when="1976-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Simulation of Wrinkled Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="268" to="292" />
			<date type="published" when="1978-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A Generalization of Algebraic Surface Drawing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Blinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">A Subdivision Algorithm for Computer Display of Curved Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Catmull</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1974" />
			<pubPlace>Salt Lake City, UT</pubPlace>
		</imprint>
		<respStmt>
			<orgName>University of Utah</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD Thesis</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Schenck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Hynynen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Watkins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">P</forename><surname>Souza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Jolesz</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982-07" />
			<biblScope unit="page" from="235" to="256" />
		</imprint>
	</monogr>
	<note type="report_type">MR-Guided Fo-3</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ultrasound</forename><surname>Cused</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Surgery</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer Assisted Tomography</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="95" to="965" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Dynamic 3D Illustrations with Visibility Constraints,&quot; in Scientific visualization of Physical Phenomena</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">D</forename><surname>Seligmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991-06" />
			<publisher>SpringerVerlag</publisher>
			<biblScope unit="page" from="525" to="543" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Survey of Texture Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ZEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="56" to="67" />
			<date type="published" when="1986-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">A Starter Toolkit for Modeling with Implicit Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hubl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kleck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Course Notes: Modelling and Animating with Implicit Surfaces</title>
		<editor>B. Wyvill, J. Bloomenthal</editor>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="1990-08" />
			<biblScope unit="volume">9</biblScope>
		</imprint>
	</monogr>
	<note>Modelling Clip: Some More Results</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Scientific Visualization Renderer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lucas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92</meeting>
		<imprint>
			<date type="published" when="1992-10" />
			<biblScope unit="page" from="227" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Compositing Digital Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Porter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="253" to="259" />
			<date type="published" when="1984-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Rendering Antialiased Shadows with Depth Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Reeves</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Salesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="283" to="291" />
			<date type="published" when="1987-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">The Displacement Method for Implicit Blending Surfaces in Solid Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">P</forename><surname>Rockwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="279" to="297" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Interactive Inspection of Solids: Cross-sections and Interferences</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Megahed</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Schneider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Decimation of Triangle Meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="65" to="70" />
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Visage: An Object-Oriented Scientific Visualization System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Montanaro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Volpe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92</meeting>
		<imprint>
			<date type="published" when="1992-10" />
			<biblScope unit="page" from="219" to="226" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Reentrant Polygon Clipping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">E</forename><surname>Sutherland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">W</forename><surname>Hodgman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comm. of the ACM</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1974-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Upstill</surname></persName>
		</author>
		<title level="m">The RenderMan Companion</title>
		<meeting><address><addrLine>Reading, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Addison-Wesley</publisher>
			<date type="published" when="0201" />
			<biblScope unit="page" from="353" to="360" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
