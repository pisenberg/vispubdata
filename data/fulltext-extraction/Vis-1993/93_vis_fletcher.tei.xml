<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Shading for Surface and Volume Visualization on Graphics Workst at ions</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">A</forename><surname>Fletcher</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">CSIRO Division of Information Technology GPO</orgName>
								<address>
									<postBox>Box 664</postBox>
									<postCode>2601</postCode>
									<settlement>Canberra ACT</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Robertson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">CSIRO Division of Information Technology GPO</orgName>
								<address>
									<postBox>Box 664</postBox>
									<postCode>2601</postCode>
									<settlement>Canberra ACT</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Shading for Surface and Volume Visualization on Graphics Workst at ions</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Shading is an effective exploratory visualization tool widely used in scientific visualization. Interactive, OT close to interactive, shading of images offers significant benefit, but is generally too computationally expensive for graphics workstations. A novel method for p r o ding interactive diffuse and specular shading capability on low-cost graphics workstations is described. Application to digital elevation models, iso-surfaces in volumetric images, and colour-coded aspect maps are illustrated and an analysis of artifacts, and of ways of minimising artifacts, is given.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Shading is used widely to depict surface structure in image synthesis, analysis and interpretation. Structural depiction depends on variation of reflected light intensities according to the relationship between surface orientation and illumination direction. It relies on the abdity of the human visual system to abstract shape from a physical or simulated scene illuminated from one or more light source.</p><p>Applications in scientific visualization include attaining a better understanding of data, looking for anomalies, looking for major structural features, assessing gradient structures implicitly, interpreting aspect maps, and depicting iso-surfaces within volumetric data. For example, a geoscientist will often exploit shaded depictions of magnetic or terrain data to look for major structural features indicative of mineralization. Or a geographer will generate aspect maps that encode surface orientation ranges with colour hue for climatic or habitat study. And in medical applications anatomical surfaces are reconstructed from computer aided tomography or magnetic resonance imaging.</p><p>Both diffuse and specular reflection can have important roles in depicting aspects of data structure, and should ideally be available at interactive rates for ex-ploratory visualization. Moving a light source through varying azimuth angles allows different directional emphases to be assessed, while varying elevation angle allows a range of filtering operations to be carried out. For example, overhead illumination from an infinitely distant source is equivalent to a gradient operator, and horizon-grazing illumination is equivalent to the directional pseudo-edge operator, both widely used in image processing for remote sensing applications. The use of more than one light source allows multiple enhancements or explorations, particularly if the lights are differently coloured.</p><p>Although shading is a relatively simple operation, achieving interaction is difficult for large data sets on graphics workstations or personal computers. A screen-sized surface takes several Mflops of computation for Lambertian diffuse reflectance, while specular reflectance models have a higher cost if calculated directly. This is beyond the scope of common desk-top workstations, which may take several seconds or more to calculate shading for an arbitrary image surface, and further time to transfer the result to a graphics window. For interactive shading, we need performance increases of several orders of magnitude.</p><p>High performance workstations using special hardware for polygon-based rendering can achieve interactive rendering speeds for surfaces including only a few polygons (up to a thousand or so), but even these have limited performance on image-base shading operations for empirical surface data or direct volume rendering, which require hundreds of thousands of shading calculations if performed on a per-pixel basis.</p><p>Interactive shading can also be a valuable tool for establishing the shading most appropriate for animation sequences. For example, visualization of volumetric data is computationally expensive, and certainly not interactive for data sets of a size to be of practical use. This means high costs when a sequence has to be regenerated if the shading chosen does not effectively depict the data characteristics of interest. Providing interactive examination of shading on a subset of frames can give significant savings, allowing better use of computational resources.</p><p>A summary of alternative hardware and software look-up table approaches to single light source greyscale terrain relief shading is given in <ref type="bibr" target="#b6">[6]</ref>. This paper generalizes the earlier work and describes a technique for performing multiple light source interactive colour aspect shading on surface and iso-surface volumetric data on low-cost graphics workstations. The approach exploits look-up tables to achieve shading performance that is independent of the data size. It also allows effective use of networked resources by reducing data movements requirements during interactive shading. As a result, a much better human-computer interface is achieved because the applications specialist is more closely coupled to the task required.</p><p>We first describe the basic technique used, and consider perceptual artifacts that may arise. The implementation and application to surfaces and volumes is then described. A fuller analysis of artifacts is then given, and approaches to minimise these artifacts are summarised and illustrated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Look-up table approach</head><p>The information required to shade a pixel on a monochromatic surface comprises the surface normal at that pixel, vectors representing the direction of any light sources and a vector representing the direction of a viewer <ref type="bibr">[l]</ref>. If the viewer and any light sources are assumed to be an infinite distance away from the surface, these vectors will have the same value for every pixel. Thus, to perform shading within these constraints only the value of the surface normal need be stored or calculated for each pixel.</p><p>Let us assume that we have a graphics frame-buffer incorporating a colour look-up Unfortunately, the look-up table approach will not work directly if n is larger than N . A typical value for N is 256 entries. However, we may approximate the look-up table shading process by quantizing the normals appearing in the original surface image to N values or fewer. Several approaches may be taken to quantizing the normals in the image. By taking the closest normal in a sample set to the un-quantized normal, the error may be minimised. By dithering the quantized normals to move errors to high spatial frequencies, perceptual effects may be minimised. Although normal quantization does introduce visible artifacts in the resulting image, these artifacts are often smaller than the artifacts resulting from quantization inherent in the original data. Choosing a sample set of normals used for quantizing a surface is treated in a later section.</p><p>Several different types of surface visualization benefit from this approach. Calculation and quantization of the surface normals in a grid of height values allows relief shading to be performed interactively. Using the quantized-normal image as a texture map to be draped over elevation data values used in a perspective view [9] allows interactive shading of the perspective view. Calculation and quantization of the gradient present around an iso-surface produced from a volume visualization [8] allows interactive shading of a single iso-surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Implementation</head><p>The process of interactive shading proceeds in four stages:</p><p>0 The generation of a sample set of n normals Computation of surface normals in the input image Quantization of surface normals using the sample set Real-time interaction with the lighting parameters of the displayed image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Generation of a set of normals</head><p>Our approach for generation of a sample set of normals is the generation of a fixed set of normals with each normal representing an approximately equal area on a hemisphere, derived from a simulated diffusion process.</p><p>Sample sets in a range of sizes were computed to allow the interactive shading application to coexist with other windows, which also require entries in the hardware colour-map. Each sample set of normals was constructed by placing a uniform random distribution of points on a unit hemisphere and iterating a decaying repulsion of each point from its nearest neighbour until all points were approximately equidistant from their nearest neighbour. The <ref type="bibr">(2, y, z )</ref> coordinates of each point on the hemisphere also represents a unit normal.</p><p>Although this generation method used is not fast, it need only be performed once.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Computation of surface normals</head><p>We have used two classes of surfaces for interactive shading: a grid of height values and a volume isosurface.</p><p>In a grid of height values the surface normal may be approximated by computing the x and y gradients and forming a cross product t o find a vector normal to both. The method used t o determine the gradient can have a significant effect on the appearance of the shaded image, especially if the original data is quantized. In general, using larger pixel neighbourhoods to determine the gradient will result in smoother shading, but will also obscure fine detail.</p><p>This method is not suitable for determining the normals of a volume iso-surface, as it is difficult to compute and would produce undesirable artifacts. An alternative approach is to compute the volume gradient for each pixel on the iso-surface, which is also a surface normal to the iso-surface <ref type="bibr" target="#b2">[2]</ref>. The volume gradient may be computed using the same methods as the surface gradient, except that three gradients in the x, y and z directions must be computed instead of two. Because every iso-surface has two unit normal vectors (one from each side), it is necessary t o reverse the gradient vector if it points away from the viewing direction.</p><p>Using larger pixel neighbourhoods with this method is sometimes also a tradeoff between smooth shading and fine detail. The method we have used to determine the volume iso-surface follows Levoy <ref type="bibr" target="#b3">[3]</ref>, and the volume rendering implementation by VCzina <ref type="bibr" target="#b8">[8]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Quantization of surface normals</head><p>After a surface normal vector N has been calculated for a pixel in the input image, it is necessary to quantize the normal by finding the closest representative Q in the sample set.</p><p>Although the most convenient representation of the surface normal for lighting calculations is as (z,y,z) values in Euclidean space, a convenient way to find-the vector Q from the sample set that is closest to N is to convert N into a pair of angles representing elevation and azimuth. This pair of values may be used as an index into a two-dimensional look-up table which returns the index of Q in the sample set. Thus, an image of surface gradients may be transformed to an image of indices into the sample set of normals. <ref type="figure">Figure 1</ref> shows the distribution of normals around a hemisphere and the structure of the elevation/azimuth look-up table in graphical form. The colours in these figures are a random selection to allow neighbouring quantization domains to be easily distinguished.</p><p>Quantization of normals inevitably introduces some error into the shading process which appear as perceptual artifacts. These errors may be interpreted as errors in the perceived gradient in the shaded image. To reduce these perceptual artifacts, gradient errors in quantized pixels may be negated and propagated to neighbouring pixels, thus reducing the error in averaged regions. The perceptual artifacts resulting from this process have high spatial frequencies and are easily filtered by the human visual system. This process for dithering gradients is similar to the Floyd-Steinberg algorithm for dithering grey-scale images <ref type="bibr" target="#b7">[7]</ref>. <ref type="figure" target="#fig_1">Figures 2 and 3</ref> show two hemispheres shaded to demonstrate the effect of dithering; the first was shaded using the look-up table approach, and the second was shaded by the look-up table approach using dithering. Because the computation and quantization of the normals need only be performed once for each image before interaction commences, this process does not affect interaction rates.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Real-time interaction</head><p>After displaying the quantized-normal index image, we may alter the shading parameters interactively by altering the hardware look-up table entries corresponding to the pixels in the index image. Because only several hundred table entries need to be computed, simple lighting models can be performed even on a computer with moderate power such as a PC. On a more powerful graphics workstation capable of performing at several Mflops, more complex lighting models may be used.</p><p>We outline below a range of lighting implemented using this approach.  <ref type="figure" target="#fig_1">Figures 2 and 3</ref> show the results of using the look-up table approach for Lambertian shading of a hemisphere.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.2">Coloured light source or coloured surface</head><p>Because the only information preserved by a pixel's value during interactive shading is the value of its surface normal, it is not possible to give individual pixels and blue entries in the colour look-up table, it is possible to give the surface or the light source a constant colour. A simple model for combining a coloured surface with a colour light source is to multiply the red, green and blue weights for both.</p><p>For Lambertian shading, it is not possible to distinguish between a coloured light source and a coloured surface. This distinction is important for more complex lighting models. shaded with 256 quantized norcolour properties. However, by weighting the red, green mals</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4.3">Phong shading</head><p>Shiny surfaces can be represented using specular or Phong shading <ref type="bibr">[l]</ref>, in which light is reflected from the surface as if from a mirror. SpecFlar reflections depend on the direction of the viewer, V, and in a perfect reflector with a point light source and apin-hole viewer, specular reflection will only occur if V exactly corresponds with the reflected ray, R. In keeping with the  Because small changes in surface normal can create large changes in the specular reflection, especially if y is large, Phong shading can produce undesirable artifacts when used interactively. However, with moderate values of y and dithering of surface normals, effective displays are still possible.</p><p>Specular reflection differs from diffuse reflection in the interaction between the colours of the light source and the surface. Specular reflections are generally the colour of the light source, whereas diffuse shading is a product of both the surface and light-source colour. Thus, on a coloured surface there may be a difference in the colour of diffuse and specular reflections. This effect may be taken into consideration by providing different colour weights for diffuse and specular components before they are loaded into the colour look-up table.</p><p>When viewing relief-shaded images or volume isosurfaces, the viewing vector is always pointing straight out of the image. However, after draping a quantizednormal surface over a perspective view of an elevation image, the viewing position changes relative to the surface. This must be taken into account when calculating specular reflections for perspective views.</p><p>Due to the extra vector manipulations and the exponentiation by y, specular reflection requires mofe :omputation than diffuse. However, by re-using the N.L dot product obtained in the Lambertian calculation, and assuming that the viewing vector is directly out of the image, a simpler expression may be used. A value of  <ref type="figure" target="#fig_3">Figure 4</ref> shows the result of using the look-up table approach for shading a hemisphere. The surface colour is blue, and the specular reflection is white. <ref type="figure" target="#fig_4">Figure 5</ref> shows the result of using the look-up table approach for shading an iso-surface from a volume (Data courtesy of University of North Carolina).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.4.4</head><p>Because light from different sources adds linearly, it is possible to simulate multiple light sources by computing a look-up table for each and adding them all together to produce a single look-up table.</p><p>A useful application of this technique is the generation of views similar to aspect maps [4]. An aspect map shows the aspect of a slope directly as a hue; the 360" of possible aspects map directly to the 360" colour wheel.</p><p>Some properties of relief shadiig are also kept to preserve both the gradient information and some realism.</p><p>Three light sources spaced 120" degrees apart, one each of red, green and blue, allow variably coloured aspect maps; because of colour mixing, the three light sources provide a different hue for each aspect. Relief shading provides the gradient information.</p><p>The generation of an aspect map using the red, green and blue primaries may emphasize detail in certain aspects over others. This can be investigated by rotating the three light sources used to generate our simulation of an aspect map interactively to determine if some aspect details are more evident at some angles than at others.  <ref type="figure" target="#fig_2">plates, p. CP-3 1.)</ref> and blue light sources, demonstrating that aspect may be distinguished by hue. <ref type="figure" target="#fig_9">Figure 7</ref> shows a shaded image of a filtered terrain surface using the same light-source parameters. <ref type="figure" target="#fig_12">Figure 8</ref> shows a perspective projection of the same data illuminated by two light sources, one from the left and one from the right.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.5">Performance</head><p>As the complexity of the lighting model is increased, performance degrades until the freedom of real-time interaction is lost. <ref type="figure">Figure 9</ref> shows a selection of lighting models together with the speed in look-up table updates per second. The timings were taken on a Decstation 5000/200 workstation. Two sets of timings were taken.</p><p>The local timings were taken with both LUT computation and X-windows display on the same computer; the network timings were taken with LUT computation on a separate computer from the X-windows display, which required transmission of every LUT on the FDDI network. Time for user input was not included, but the motion of a mouse pointer within the image of interest provides the required two degrees of freedom and does not degrade performance substantially.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Artifacts: quantization errors and perception</head><p>Any technique that introduces artifacts risks misleading an interpreter. The trade-off between increase in capacity to interpret due t o the interactive performance, and decrease in capacity t o interpret due to introduced artifacts, may be application dependent. It is therefore important t o be clear about the artifacts that may be introduced, and how they compare with, and possibly interfere with or obfuscate, artifacts from other sources or real data characteristics. There may then be opportunity for reducing the influence of artifacts for some particular purpose such as visualization of structure, emphasizing them for some purpose such as assessing downstream accumulation risks, or choosing representation parameters. This section therefore looks at the artifacts that may be introduced by the shading approach and compares them with other common artifacts. Possible ways of reducing artifacts axe then summarised.</p><p>Data value quantization, resulting in height quantization in planar surfaces or terracing in shaded surfaces, is a common source of artifacts. <ref type="figure">Figure 10</ref> shows a spherical shell, height quantized to 8-bits, and the characteristic terracing effect arising from shading quantized height values and using a smd-kernel gradient estimate  There is lively debate in many fields about whether quantization noise in the data measurement should be smoothed out according to some underlying data model, or whether it should be left evident in the graphical presentation. The problem is exacerbated by potential interference between graphical and data-originated quantization noise. It is thus advantageous to be able to compare different conjectures easily. Because gradients are precomputed in this approach to interactive shading, there is scope for using a range of gradient operators and comparing them by simultaneously interacting with an image incorporating all of them. <ref type="figure">Figure</ref> 11 shows three soil surfaces [5] shaded using the look-up table approach. Gradient estimates based on 2, 4 and 8-neighbour gradient kernels were used for the first three figures, and the fourth was produced using an 8-neighbour gradient kernel and full shading. Clearly the artifacts due to gradient computation can be more visible than those resulting from normal quantization.</p><p>Dithering is a common way to reduce the influence of these artifacts on overall perception of data, as shown in figures 2 and 3.</p><p>For the shading approach described in this paper, there is no_re-ason to limit the accuracy of the computations of N.L, since they involve only n sets of innerproduct computation, well within interactionJates. The limiting noise is thus qua+ation noise in N, and the resulting quantization in N.L.</p><p>We can estimate the sizes of perceptual discontin!ities we expect to generate from the quantization of N. Equal solid angle quantization corresponds to an angle of about n/8 radians, or about 10 degrees for n = 256. This corresponds to a diffuse reflectance difference of between 2% (at an angle of 0" f 10') and 18% (at an angle of 90°f100), with about l0-12% for mid-reflectance levels. This error is evident in <ref type="figure" target="#fig_1">Figure 2</ref>, though less easy to detect in some of the other figures.</p><p>This raises the question of how best the selection of the sample set of normals should be performed. Approaches include equal solid angle, equal base-plane area, equal elevation angle, equal azimuth angle, equal perceived lightness difference under constant rate of an-gular change, equal perceived lightness difference under constant rate of gradient, and perhaps others also. Many of these approaches can be integrated easily within the diffusion model because they are geometrically determined. This makes it easy to change the physical properties of the diffusion process, for example, by giving the particles repulsion weighting according to position on the hemisphere. This provides a very powerful and tunable facility that can be tailored t o a given application or data type, recognising that there may be certain N values that predominate for certain types of application. For example, digital terrain model viewing in hydrology may require smooth depiction of gent_le gradients (requiring preferential resolution for high N, values), while for some data sets steep gradients (low N, values) may be the most important values to show smoothly.</p><p>The use of some data clustering technique could provide a data-dependent quantization. Overall, it may be advantageous t o have a different sample set of normals for different applications. We have not investigated how much the quantization error may be reduced by the use of these techniques. In fact these refinements typically give only a small reduction in quantization noise, by a factor of between 1 and 2, and are in the area of tuning.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Summary and conclusions</head><p>A practical tool for shading surfaces and volumes interactively on low-cost graphics workstations has been described. The technique requires only the simple colourmap look-up table present on almost all colour workstations. The result is of significant benefit for exploratory and analytical visualization, and also allows effective use of networked computational facilities.</p><p>The technique d o w s the use of multiple coloured light sources, producing what is often known as a colourcoded aspect map. The application to volume visualization allows investigation of suitable shading to best depict structures of interest before generation of full animation sequences.</p><p>The method for quantization of surface normals has sufficient flexibility to allow common artifact reduction techniques to be used, and offers the scope for application-dependent and adaptive tuning.</p><p>The overall look-up table approach may offer a general framework for interactive implementation of other operations. It also offers further scope on devices that have per-channel display resolutions, and associated LUTs, deeper than 8-bits. For example, 10-bit displays give a greater range, reducing quantization errors considerably.</p><p>Interactive Shading for Surface and Volume Visualization on Graphics Workstations, P.A. Fletcher and P.K. Robertson, pp. 291-298.     </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>BEST COPY AVAILABLE</head><p>CP-31</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>3. 4 . 1</head><label>41</label><figDesc>Lambertian shading Matte surfaces are represented using diffuse or Lambertian shading [l], in which the intensity of light reflected from a surface is proportional to the cosine of the angle between the light source L and the surface ~i~~~~ 1: Structure of sample set of 256 normals normal N. For unit vectors this cosine is the dot product, N.L. The dot-product requires three multiplications and two additions. Ambient lighting may also be included by adding a constant offset to the computed intensities. Thus, the computation of a 256 element look-up table for Lambertian shading requires approximately 1500 floating-point operations. Even including data type conversion and memory accesses, this computation takes only a few milliseconds on a 1 Mflop computer.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: shaded with 256 quantized norcolour properties. However, by weighting the red, green mals</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Hemisphere shaded with 256 quantized and dithered normals (See color plates, p. CP-3 1.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>LUT Specular shading of a hemisphere real world of non-perfect reflectors, Phong shading performs skading based on the cosine of the angle % b_etween V and R, computed as the dot product V.R, and raised to some power y to produce a sharp cutoff around the specular reflection. As y is increased, the cut-off around the specular reflection is sharpened.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>LUT specular shading of volume iso-surfaces 8 for y provides a good compromise between specular sharpness and perceptual artifacts, and was used for all figures incorporating specular reflections.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6</head><label>6</label><figDesc>shows a hemisphere shaded by red, green Multiple light sources and aspect maps (See color</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>Three light-source LUT shading of a hemisphere LUT aspect shading of a terrain surface</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :Figure 9 :Figure 10 :</head><label>8910</label><figDesc>LUT aspect shading of perspective projection (See color plates. p. CP-3 1.) local flsec # light sources &amp; shading model network flsec LUT update speed in frames per second (f/sec) for a 256 entry LUT on a Decstation 5000/200. Timings for both local interaction and over an FDDI network are shown. 1 l/s, ambient only 1 l/s, diffuse shading 1 l/s, diffuse, specular, coloured 3 l/s. diffuse. mecular. coloured Figure 11: 8-bit soil elevation data set shaded using LUT and 2, 4, and 8 neighbour gradient kernels. The fourth data set is fully shaded using an 8-neighbour gra-Fully-shaded 8-bit hemisphere using a 4neighbour gradient filter (in this case 4-neighbours). Look-up table based shading was not used in this example; thus all the visibleartifacts are due to the gradient computation of the quantized data. Clearly the gradient estimator influences the artifacts. Ideally a gradient estimator would be based on a model of the underlying data generation process. Unfortunately gradient computations are seldom tuned to such a model, and indeed are often inaccessible to applications specialists using visualization packages.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 1 :Figure 5 :</head><label>15</label><figDesc>Structure of sample set of 256 normais LUT specular shading of volume iso-surfaces</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>LUT aspect shading of terrain surface.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 4 :</head><label>4</label><figDesc>LUT specular shading of a blue hemisphere.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 6 :</head><label>6</label><figDesc>Three light-source LUT shading</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8 :</head><label>8</label><figDesc>LUT aspect shading of perspective projection.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>table with N look-up table entries, and that we have an image containing a surface we wish to display. If the image contains n distinct surface normals, and n &lt; N , we may display a shaded representation of the surface using the look</head><label></label><figDesc></figDesc><table><row><cell>light-source and viewer direction vectors.</cell></row><row><cell>The index image, together with the calculated look-</cell></row><row><cell>up table, yield a fully shaded image ready for display.</cell></row><row><cell>Because the value of each pixel is an index into a table of</cell></row><row><cell>surface normals, we may change both the viewing and</cell></row><row><cell>light source direction vectors simply by re-calculating</cell></row><row><cell>the colour look-up table entries.</cell></row><row><cell>A coloured light source may be simulated by giving</cell></row><row><cell>the red, green and blue components different weights</cell></row><row><cell>in the colour look-up table. Because light-sources can</cell></row><row><cell>be combined additively, multiple light sources may be</cell></row><row><cell>simulated by calculating a look-up table for each light</cell></row><row><cell>source and summing them to produce a combined look-</cell></row><row><cell>up table representing the shading resulting from all the</cell></row><row><cell>light-sources simultaneously. If n is small and the num-</cell></row><row><cell>ber of light-sources is limited, the calculation of the</cell></row><row><cell>look-up table may take only several thousand opera-</cell></row><row><cell>tions, which represents only a few milliseconds even on</cell></row><row><cell>mid-range PCs.</cell></row><row><cell>-up</cell></row><row><cell>table.</cell></row><row><cell>There are three stages in the interactive shading of</cell></row><row><cell>an image:</cell></row><row><cell>1. Number each of the n surface normals and assign</cell></row><row><cell>each one a colour look-up table entry.</cell></row><row><cell>2. Transform the image by replacing each pixel with</cell></row><row><cell>the index of its surface normal.</cell></row><row><cell>3. Calculate a look-up table for the image based on</cell></row><row><cell>the associated surface normal vector and the fixed</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Computer Graphics: Principles and Practice</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hughes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Addison Wesley</publisher>
			<pubPlace>Reading. Massachusetts, sec</pubPlace>
		</imprint>
	</monogr>
	<note>ond edition</note>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Advanced Engineering Methematics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Erwin</forename><surname>Kreyszig</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1962" />
			<publisher>John Wiley and Sons</publisher>
			<pubPlace>Ney York</pubPlace>
		</imprint>
	</monogr>
	<note>fourth edition</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">MKS-ASPECT enhances color surface renderings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">Dennison</forename><surname>Harold Moellering</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Strand</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">GIs World</title>
		<imprint>
			<biblScope unit="page" from="30" to="32" />
			<date type="published" when="1991-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualisation of the interaction of the soil surface and crop residue for management of water infiltration and erosion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Moran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vezina</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="40" to="47" />
			<date type="published" when="1993-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Interactive relief shading on graphics workstations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Robertson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">A</forename><surname>Fletcher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Gunn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Third International Conference on CAD and Computer Graphics</title>
		<meeting><address><addrLine>Beijing, China</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Digital Halftoning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Ulichney</surname></persName>
		</author>
		<imprint>
			<publisher>MIT Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Volume rendering on the MasPar MP-1</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vczina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><forename type="middle">A</forename><surname>Fletcher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Robertson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Volume Visualisation</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="3" to="8" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Terrain perspectives on a massively parallel SIMD computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guy</forename><surname>Vczina</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Philip</forename><forename type="middle">K</forename><surname>Robertson</surname></persName>
		</author>
		<editor>N. M. Patrikalakis</editor>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Springer-Verlag</publisher>
		</imprint>
	</monogr>
	<note>Scientific Visualization of Physical Phenomena</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
