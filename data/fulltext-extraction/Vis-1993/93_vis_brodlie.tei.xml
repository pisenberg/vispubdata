<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">GRASPARC -A Problem Solving Environment Integrating Computation and Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<title level="a" type="main">GRASPARC -A Problem Solving Environment Integrating Computation and Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:28+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Visualization has proved an effective tool in the understanding of large data sets in computational science and engineering. There is growing interest today in the development of problem solving environments which integrate both visualization and the computational process which generates the data. The GRASPARCproject has looked at some of the issues involved in creating such an environment. An architecture i s proposed in which tools for computation and visualization can be embedded in a framework which assists in the management of the problem solving process. This framework has an integral data management facility which allows an audit trail of the experiments to be recorded. This design therefore allows not only steering but also backtracking and more complicated problem solving strategies. A number of demonstrator case studies have been implemented.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Visualization has become a key tool in computational science and engineering. The 'firehoses of data' predicted by the NSF Report (McCormick et a1 <ref type="bibr">[lo]</ref>) can now be directed at one of a number of powerful visualization systems, and the scientist can gain an understanding of their data that would not previously have been possible.</p><p>Generally, however, the computation process which generates the data is seen as quite separate from the visualization process which views it. The next challenge is to study how to provide an environment in which the two are combined, and where the scientist Lesley B r a n k i n G r e g Banecki A l a n G a y N A G L t d 0</p><p>xford UK thinks in terms of the overall task of solving a problem, not simply of viewing the results, and in which a distributed computing environment can be exploited. This paper describes the GRASPARC project, which has looked at some of the issues involved in creating such a problem solving environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Visualization and Problem Solving</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Environments -Some Limitations</head><p>We begin by looking at the use of existing visualization systems as problem solving environments.</p><p>Fundamental work by Upson et a1 <ref type="bibr" target="#b12">[14]</ref> and Haber and McNabb <ref type="bibr" target="#b5">[7]</ref> has established a model for data visualization that has underpinned many current software systems. This model decomposes a visualization task into a set of modules; the modules belong to one of four classes: data sources; filtersto refine the data; mapperst o construct an abstract geometrical representation of the data; and renderersto generate an image.</p><p>This modular decomposition is the basis of a number of popular visualization systems: AVS <ref type="bibr" target="#b12">[14]</ref>  <ref type="bibr" target="#b11">[13]</ref>. These all provide a visual programming front end, in which the user can select appropriate modules for an application, connect them together in a network and trigger execution by activating a data source. Data passes through the network of modules, from filters to mappers to renderers, finally generating an imagesee <ref type="figure" target="#fig_1">Figure 1</ref> hence the term dataflow system. Each module is typically controlled by a set of parametersfor example, the threshold value in an isosurface mapping module; user interface widgets associated with each module allow the user to modify these parameter values, and thus adapt interactively the flow of data through the network until a required view is obtained.</p><p>In early versions, the data source modules simply read data from a file and so there was no possibility of a direct link to the computation process which created the data. It was a natural extension however to allow application code, for example Computational Fluid Dynamics (CFD) software, to be incorporated as a 'data source' module. This gives rise to the term application builder, where the visualization system houses both computation and visualizationa complete application. A user interface can be created for the embedded computational code; parameters of the application can be changed interactively allowing a simple form of computational steering (see Marshall et al <ref type="bibr" target="#b7">[9]</ref>, for example)as shown in  Thus such application builders can act as simple problem solving environments. They have necessarily however grown out of visualization systems, rather than be designed from the outset as problem-solving environments. Thus while there is support for carrying out one simulation, or a simple sequence of simulations with different parameter settings, there is typically little or no support for the complex search process that a scientist typically undertakes in modelling some phenomenon. For example, there is generally no data management facility to record the results of one simulation for later comparison; it is difficult to backtrack from one point in a simulation, and restart from an earlier point with some change in parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">The GRASPARC Project</head><p>The GRASPARC project has attempted to work at the outset from a problem solving point of view. We are interested in constructing an environment in which the computational scientist or engineer can 'plug in' the tools they need, and in which there is an integral data management facility to provide an efficient audit trail of the experiments carried out.</p><p>The work has involved a number of strands which are discussed in more detail in the later sections of this paper:</p><p>Reference Model: An overall view of the mathematical modelling process has been developed, in order t o gain a high-level understanding of the processes involved in problem solving.</p><p>Modelling the Search for a Solution: The next level of refinement is to understand the search process undertaken by the scientist in solving a problem. A model has been built which sees the process as a tree structure: the root of the tree represents the start of a series of experiments; a branch is created at some point where a new experiment with different parameters is begun; along any branch are snapshots at which results are recorded and from which new branches can be created. The final tree is the complete audit trail of the set of experiments. The user interface to our system then becomes an interface to this model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Architecture -Components and Framework:</head><p>From an understanding of the problem-solving process, it becomes possible to identify the components needed to provide a good working environment: computation and visualization components provide the tools, but these need to be embedded in a framework that will allow them to work in harmony, and communicate in a way which is transparent to the scientist. Most importantly, there is a need for a data manager to hold the tree data structure which underlies the search process.</p><p>High-quality numerical tools and excellent visualization software already exist, so it is the goal of GRASPARC to provide the framework in which they can be integrated.</p><p>The animation of sequences of images is seen as a fundamental requirement for visualization, and thus we are investigating as part of the project, special-purpose animation hardware.</p><p>Throughout the project we have kept in touch with a range of potential users: computational chemists, meteorologists, fluid dynamicists, and mechanical engineers. These contacts have enabled us to understand the requirements of problem solving environments, and they have provided a source of demonstrator studies which have been used as test-bed for our ideas. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Continuum Layer</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Discrete byer</head><p>The work began by developing an overall view of the mathematical modelling process, through a series of interviews with our user contacts.</p><p>The model is described in terms of a threedimensional structure involving two parallel planes: an Investigator's Plane which holds the cognitive activities associated with problem-solving (such as assimilation of results); and a Simulation Plane which holds the states through which a problem passes en route to solution (see <ref type="figure" target="#fig_3">Figure 2</ref>). The Simulation Plane is subdivided into layers of increasing specificity: the upper layer is the Model Layer in which the problem is expressed in some idealised form; in the middle layer, termed the Continuum Layer, the problem is expressed as a functional specification, say a set of differential equations; the lower layer, the Discrete Layer, contains a discretised formulation of the equations to be solved numerically. Lower layers are invoked as necessary when a solution is not directly available within the present layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Investigator's Plane</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Simulation Plane</head><p>Between the planes lie tools for presentation and interaction. Tools for presentation provide the user with a representation (which may or may not be visual) of what is occurring in the simulation plane, whilst tools for interaction provide the means for influencing the simulation.</p><p>A complete description of the GRASPARC reference model is given by Wright et a1 <ref type="bibr" target="#b13">[15]</ref>. GRASPARC concentrates on the lower layer of the modelnamely, the search for a solution of the numerical simulation.</p><p>The next level of refinement of the GRASPARC model is to understand the search process undertaken by the scientist within the Discrete Layer. But first we describe a simple case study which will help explain this search process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5</head><p>Case Study -Kinetics of Thermally</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Activated Processes</head><p>This is a problem in computational physics, described by <ref type="bibr">Cartling [3]</ref>. A particle is moving in a POtential and connected to a heat bath. The potential has two minima corresponding to the states of the system between which transitions take placethe physicist is interested in how the particle behaves over time, for different strengths of coupling to the heat bath.</p><p>The motion is described by the Fokker-Planck equation:</p><p>where: Initially at time t = 0, the probability distribution is a sharp peak centred on x = -2, v = 0 ; that is, the particle has high probability of being stationary at one minimum of the potential. The other minimum is at x = +2,v = 0. As t increases, so the distribution changes, and will vary depending on the value of p. There is interest in comparing results for different values of ,f3; and in halting a calculation in order to backtrack some time steps to repeat the calculation with a different mesh size to gain greater accuracyboth operations which could not easily be achieved simply by embedding the numerical software in a visualizat ion system.</p><formula xml:id="formula_0">P = P(x,v;t) is</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Modelling the Search for a Solution</head><p>The fundamental concept in GRASPARC is the model of the search process by which a scientist investigates a problem in the Discrete Layer. We see the computational process as an ordered set of events in time. These events might be points at which an intermediate solution can be outputor at which the computation can be interrupted and some parameter changed before restarting. This can be modelled as a tree structure, which we have termed a History D e e (see <ref type="figure" target="#fig_6">Figure 4)</ref>. To understand the History Tree, consider the solution of the Fokker-Planck case study described earlier.</p><p>The scientist will begin solution of the equations with a certain mesh size, and with requests for the solution to be recorded every five seconds, say. These outputs are the events mentioned above. If the solution is visualized as it is calculated, the scientist may spot some feature of interestor notice its absence. This is a signal to halt the computation, and explore this more closely. Rather than go back to the start and repeat the entire calculation at higher accuracy, the scientist would prefer to reload the solution from a few timesteps previous, and resume from there with finer mesh size and more frequent output of results. This is the model of working we aim to support in GRASPARC. The overall set of events for a computational experiment is described as a history tree. The tree will have a set of associated parameters, which specify the experimenthere the Fokker-Planck equations, the potential within which the particle is moving, and so on. Each branch of the tree corresponds to a particular decision by the scientistfor example, to set the time increment for output. Thus each branch will also have an associated set of parameters, specifying the particular options chosen by the scientist at that decision point. Finally each branch consists of a sequence of snapshotsthe individual events along a branch, essentially the iteration steps towards a solu-tion. Data stored at a snapshot may be at different levels of abstraction: either the raw data, or a geometrical representation, or an image representation. Alternatively an event may be recorded as having taken place, but with no actual data stored.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">GRASPARC System Architecture -</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Framework and Components</head><p>The Reference Model has helped identify the scope of the GRASPARC project as providing an environment in which problem solving in the Discrete Layer can be effectively managed. The History Tree has given us a model of the process of searching for a solution. The next step has been to define a basic system architecture, comprising a framework into which different components or tools can be inserted.</p><p>The GRASPARC architecture is shown in <ref type="figure">Figure 5</ref>. The framework provides a support environment for one or more numerical and graphical applications. It consists of the following elements: LJ -I <ref type="figure">Figure 5</ref> : The GRASPARC Architecture</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GRASPARC Management System (GMS):</head><p>Its basic data structure is the History Tree, recording the process by which the scientist is iterating to a solution of the problem. Its function is to accept user commands and formulate these in terms of a basic set of operations on the treefor example, 'create a new branch' or 'visualize a snapshot'. Thus the GMS is essentially a model of the problem solving process as seen by GRASPARC. The output from the model is a set of instructions to the different components in the systemfor example, creating a new branch will generate an instruction to a numeric component to restart from a given point with a new set of parameters.</p><p>The GMS has been designed to allow concurrent processing of the basic set of operationsthus it is possible to 'explore' multiple branches simu It aneously. Thus we see that the History Tree is the funda mental concept around which the GMS, the U1 and the DMS are all organised.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GRASPARC User Interface (UI):</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GRASPARC Application Managers (AM):</head><p>Each numerical or graphical component is attached to the framework by means of an application manager, whose function is to translate data and commands between the native format of the application and a common GRASPARC format. It is the responsibility of the problem solver to develop the AM, but GRASPARC provides tools, guidance and interface definitions.</p><p>An important aspect is the separate data and command highways. Command highways link the AMs to the central GMS; data highways link AMs of components directlyso computational results can be passed on a 'fast track' to the graphical component, or the DMS. This separa tion means that the command highways do not get choked with data, and instructions can be passed rapidly to components.</p><p>A component or its AM can include a user interface to control the setting of parameters for that componentfor example, initial conditions for solution by a numerics component.</p><p>Thus a GRASPARC problem solver will be built by identifying suitable numerical and graphical software for the problem at handthis is seen as the responsibility of the problem owner. These tools are brought into the GRASPARC environment, by connecting them to the framework as described.</p><p>The architecture allows the components to be distributed across different processorsso that the computation components for example can run on a high performance computing node and the graphics components on one or more workstations. Special-purpose animation hardware is being developed by the other partners in the project, Quintek Ltd. This is treated as a graphics component, and connected via an AM as described above. Images are retrieved from the DMS (by selecting from a history tree display of available images), stored in a cache and replayed as requested.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Developing GRASPARC Demonstrators</head><p>As with any research project, the ideas described above have been conceived, formulated and matured as the project has progressed. In order to test the feasibility of the concepts, a number of demonstrators have been constructed during the project.</p><p>The first prototype was built to solve the Fokker-Planck case study mentioned earlier. The numerical component was the SPRINT software; the graphical components were contouring routines, based on the FARB-E software (Preusser    The scientist may wish to experiment with altering the angle of the wedge, or the velocity of the air. During the solution, the scientist may wish to halt the computation, return to an earlier solution time and resume calculation with a finer tolerance, so as to better pinpoint the position of the front.</p><p>This demonstrator was built again using SPRINTbased numerical software, but this time using the dataflow visualization system, AVS <ref type="bibr" target="#b12">[14]</ref>, as the graphical component. The GRASPARC Application Manager which interfaces AVS to the framework, passes a script to AVS so as to automatically generate a suitable network based on the data to be displayedthus shielding the scientist from the workings of AVS itself. The development of this demonstrator was influenced by the CEC ESPRIT project FOCUS, and indeed the user interface software from FOCUS was used directly.  graphical components. In these cases, as in the demonstrators just described, the scientist will be able to exploit the GRASPARC architecture in exploring different solution options in a well managed way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Conclusions and Future W o r k</head><p>GRASPARC has defined a model of a problem solving environment, in which numerical and graphical components can be integrated under a common framework. This framework is based on the History Tree concept, which reflects the search process used by a scientist in reaching an optimal solution to a simula tion. There is an integral data management facility which allows an audit trail to be recorded.</p><p>The study has led us along a number of avenues which are still being explored. For example, the close coupling of computation and visualization raises important issues for direct manipulation of a simulation, and for the accuracy of visual representation.</p><p>Taking direct manipulation first , consider again the Fokker-Planck problem and suppose we overlay the computational mesh on the solution as it is visualized. Rather than globally request a mesh refinement, one can point at particular areas of the mesh where refinement is needed. This requires the input of spatial data back to the simulationa facility rarely provided in current systems.</p><p>As far as accuracy is concerned, we are looking at the ways in which 'functional' information held in the numerical component can be transferred to the graphics component. In conventional systems, the interface is at the level of datawith the graphics system independently recreating the interpolant with consequent loss of accuracy.</p><p>We are still at the early stages of research into problem solving environments. We hope GRASPARC may influence the subsequent development of commercial systemswhether they grow out of existing visualization systems or are developed ab initio.</p><p>The next step is to seek an environment in which a host of tools can be employed, not just numerical and graphical, but also computer algebra, computational geometry and documentation systemsto provide a 'virtual laboratory' for the computational scientist. son year) collaborative project funded jointly by the UK Department of Trade and Industry and the Science and Engineering Research Council. The partners are NAG Ltd, The University of Leeds (School of Computer Studies) and Quintek Ltd.</p><p>Many people have contributed to the thinking behind GRASPARC, and t o its successful management as a project. In particular, we would like to thank Steve Hague of NAG Ltd, who has been a most supportive and effective project manager throughout; and Peter Dew and Martin Berzins of Leeds University, Richard Brankin of NAG Ltd and Pat Mills of Quintek Ltd, who have given invaluable technical direction to the project.</p><p>Others have contributed in many different ways: we would like to thank Victoria Pennington, Justin Ware, Neil Bowers and Gary Stead of Leeds University; Jimmy Brown and Del Cornali of NAG Ltd; and Mark Powell and Phil Copeland, who have worked for Quintek Ltd during the project. We would also like to thank our DTI Project Officer, Dennis Henn, for his unstinting support.</p><p>Finally we must thank the many users who have helped us through discussions and by attendance at workshops, and ensured we retain contact with the real world.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Steering in the Dataflow Environment</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>The GRASPARC Reference Model</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>a probability density function, giving the probability of the particle having position, x , and velocity, U , at time t ; V(x) is the supplied potential (bistable); /3 is a damping factor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 Figure 3 :</head><label>33</label><figDesc>shows the contours of P as time progresses the plume indicates passage of the particle over the potential barrier separating the two minima.START X Fokker-Planck Solution: P ( z , v) for t &gt; 0In the Discrete Layer of our reference model, the problem is formulated as the numerical solution of the Fokker-Planck equation, which in our case is achieved using the SPRINT differential equation software(Berzins et al [2]). The PDE's are discretised in the two space dimensions, generating a set of ODES which are solved by SPRINT.The computational scientist will want to control a number of aspects in solving this problem:,8, the strength of coupling to heat bath 0 mesh size for spatial discretisation 0 frequency of output of results</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 4 :</head><label>4</label><figDesc>The GRASPARC History Tree</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc><ref type="bibr" target="#b10">[12]</ref>), and surface view routines written locallyboth based on an implementation of PHIGS [l], the I S 0 standard for 3D graphics. The system was implemented on a network of Silicon Graphics 4D/240 and Personal IRIS workstations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6</head><label>6</label><figDesc>shows an example from a problem solving session. The scientist is looking at two different concurrent graphical representations of a snapshot. Notice that they have backtracked to an earlier snapshot to create a new branch.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Solving the Fokker-Planck ProblemThe next demonstrator looked at a problem in aeronautics. A wedge is put in the path of a jet of fastmoving air; the flow cannot continue smoothly over the wedge and a shock front develops because the air is necessarily compressed into a smaller space in order to be able to pass the obstructionthe shock front represents a line at which all solution variables change rapidly in spaceseeFigure 7.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>(Figure 7 :</head><label>7</label><figDesc>See color plates, p. Cf-1 1 .) Flow over wedge creating shock front</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 8</head><label>8</label><figDesc>shows a session from this demonstrator. The scientist has selected a snapshot and is changing air speed and tolerance at this time in order to create a new branch.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 8 :</head><label>8</label><figDesc>Solving the Wedge Problem Two further demonstrators are under development from the fields of chemical reaction simulation and planetary motioninvolving different numerical and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>, IRIS Explorer [5], IBM Data Explorer [8], apE [4] and Khoros</head><label></label><figDesc></figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>The GRAS-PARC user interface is likewise modelled on the History Treeindeed it is essentially a representation of the current state of the History Tree as known by the GMS. The scientist thus thinks in terms of a search process with snapshots, branches and trees. A 'tree viewer' displays the structure and allows the scientist to select a snapshot as a new branch point, or to select a sequence of snapshots for visualization.</figDesc><table><row><cell>essentially the History Tree data structure, in</cell><cell></cell></row><row><cell>which the composite types are organised in a</cell><cell></cell></row><row><cell>tree hierarchy.</cell><cell></cell></row><row><cell>A set of logical operations for the storage, ex-</cell><cell></cell></row><row><cell>traction and removal of data from the tree have</cell><cell></cell></row><row><cell>been developed. Note that the GRASPARC</cell><cell></cell></row><row><cell>Management System simply holds a map of the structure of the History Tree -it is the</cell><cell></cell></row><row><cell>Data Management System which holds the ac-</cell><cell></cell></row><row><cell>tual data.</cell><cell></cell></row><row><cell></cell><cell>GRASPARC Data Management System (DMS):</cell></row><row><cell></cell><cell>GRASPARC includes its own dedicated data</cell></row><row><cell></cell><cell>management system, which can be logically</cell></row><row><cell></cell><cell>viewed as a subsidiary function of the G U S -</cell></row><row><cell></cell><cell>PARC Management System.</cell></row><row><cell></cell><cell>It is designed as a layered model. The lowest</cell></row><row><cell></cell><cell>layer, called the physical data layer, contains a</cell></row><row><cell></cell><cell>set of primitive data types (such as reals, inte-</cell></row><row><cell></cell><cell>gers and strings) and has been implemented in</cell></row><row><cell></cell><cell>terms of the Hierarchical Data Format (HDF)</cell></row><row><cell></cell><cell>P11.</cell></row><row><cell></cell><cell>The middle layer, called the composite data</cell></row><row><cell></cell><cell>layer, contains a set of composite types derived</cell></row><row><cell></cell><cell>from the primitive types: such as different mesh</cell></row><row><cell></cell><cell>structures, images, etc. The definition of this</cell></row><row><cell></cell><cell>layer has been influenced by the requirements</cell></row><row><cell></cell><cell>of the case studies examined during the project,</cell></row><row><cell></cell><cell>and also by the datatypes from existing visual-</cell></row><row><cell></cell><cell>ization systems, particularly IBM Data Explorer</cell></row><row><cell></cell><cell>(see Haber et al [SI).</cell></row><row><cell>This is the principal component of the design.</cell><cell>The top layer, called the data model layer, is</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>GRASPARC (GRAphical environment for Supporting PARallel Computing) is a three year (17 per-(See color plates, p. CP-1 1.)</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0" />			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Information processing systems -Computer graphics -Programmer&apos;s Hierarchical Interactive Graphics System -Pari 1 -functional description</title>
		<idno>ISO/IEC 9592/1</idno>
		<imprint>
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Developing software for time-dependent problems using the method of lines and differentialalgebraic integrator s</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Berzins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">M</forename><surname>Dew</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">M</forename><surname>Furzeland</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="375" to="397" />
		</imprint>
	</monogr>
	<note>Applied Nu m erica1 Math ematics</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Kinetics of activated processes from non-stationary solutions of the fokker-planck equation for a bistable potential</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cartling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Chem. Phys</title>
		<imprint>
			<biblScope unit="volume">87</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="2638" to="2648" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A dataflow toolkit for visualizac tion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Dyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">6049</biblScope>
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualization -the second generation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Edwards</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;91 Proceedings</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="298" to="305" />
		</imprint>
	</monogr>
	<note>Image Processing</note>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization idioms : A conceptual model for scientific visualization systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Mcnabb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Scientific Computing</title>
		<editor>B. Shriver G.M. Nielson and L.J. Rosenblum</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="74" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An architecture for a scientific visualization system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Abram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">S</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Epstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">L</forename><surname>Gresh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">P</forename><surname>Mcauliffe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization 92 Proceedings</title>
		<editor>A.E. Kaufman and G.M. Nielson</editor>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="107" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Visualization methods and simulation steering for a 3d turbulence model for lake erie</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Marshall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kempf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Dyer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Yen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A C M SIG-GRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="89" to="97" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Visualization in scientific computing. A CM SIG-GRAPH Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Defanti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">D</forename><surname>Brown</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="volume">21</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Calling Interfaces and Utilities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ncsa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hdf</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
		<respStmt>
			<orgName>National Center for Supercomputer Applications, University of Illinois at Urbana-Champaign</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Algorithm 671 -farb-e-2d: Fill area with bicubics on rectangles -a contour plot program</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Preusser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">C M nansactions on Mathematical Software</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A visual language and software development environment for image processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rasure</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Argiro</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Sauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Imaging Systems and Technology</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The application visualization system : A computational environment for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Faulhaber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Kamins</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Laidlaw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schlegel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vroom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gurwitz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="3" to="42" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Reference model for problem solving in a visual environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wright</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">V</forename><surname>Pennington</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">A</forename><surname>Banecki</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics Workshop on Scientific Visualization</title>
		<meeting>Eurographics Workshop on Scientific Visualization</meeting>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">A data model for scientific visualization with provisions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Lucas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Collins</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
