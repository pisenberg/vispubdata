<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Flow Volumes for Interactive Vector Field Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
							<email>max2@llnl.gov</email>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory Livermore</orgName>
								<address>
									<postCode>9455</postCode>
									<region>California</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barry</forename><surname>Becker</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory Livermore</orgName>
								<address>
									<postCode>9455</postCode>
									<region>California</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory Livermore</orgName>
								<address>
									<postCode>9455</postCode>
									<region>California</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">O</forename><surname>Box</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Lawrence Livermore National Laboratory Livermore</orgName>
								<address>
									<postCode>9455</postCode>
									<region>California</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Flow Volumes for Interactive Vector Field Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:29+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Flow volumes are the volumetric equivalent of stream lines. They provide more information about the vector field being visualized than do stream lines or ribbons. Presented is an efficient method for producing flow volumes, composed of transparently rendered tetrahedra, for use in an interactive system. The problems of rendering, subdivision, sorting, compositing artifacts, and user interaction are dealt with. Eficiency comes from rendering only the volume of the smoke, and using hardware texturing and compositing.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Understanding 3D vector fields is a current challenge for scientific visualization. When the vector field is, or can be interpreted as, a flow velocity, objects can be traced in the flow. For example, particles can be released and advected by the flow to produce animated motion. Stream lines can also be generated as the tracks left behind by the moving particles. Once the position of a moving particle has been computed for each time step, it is trivial to connect successive points by line segments.</p><p>Similarly, if two adjacent streamlines are known, they can be connected by a sequence of triangles to give a ribbon, or stream surface <ref type="bibr" target="#b3">[2]</ref> <ref type="bibr" target="#b11">[9]</ref>. If the two stream lines diverge from each other, Hultquest <ref type="bibr" target="#b4">[3]</ref> gives a method of increasing the number of triangles across the width of the ribbon, in order to maintain a smooth-appearing surface that closely approximates the smooth stream surface. Again, the triangles are rendered efficiently by the graphics hardware. Each time the dimensionality increases, from points to lines to areas, there is an increase in the interpretability of the visual representation, without a proportional increase in computational cost to solve the differential equation for the flow. In this paper, we take this progression one step further, to flow volumes.</p><p>In physical experiments, smoke is often released into a gas flow, or dye into a liquid flow, as an aid to visualiza-tion. The flow past a smoke or dye generator advects the tracer substance into a flow volume, which can be rendered as a semi-transparent volume density. We describe below how this flow volume can be rendered efficiently using graphics hardware. The user can interactively move and size the generating polygon, which is automatically oriented normal to the flow field. As the medium moves through the initial polygon, it becomes colored by the tracer. The result is an image or interactive animation simulating the results of the familiar physical experiments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Volume Rendering</head><p>We divide the flow volume into a collection of tetrahedra, which are rendered by the method of <ref type="bibr">Shirley and Tuchman[lO]</ref>. This method divides the projection of a tetrahedron into up to four triangles. <ref type="figure">Figure 1</ref> shows the two non-degenerate cases, which require three and four triangles respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1</head><p>The vertex marked A in each projection corresponds to a viewing ray segment through the tetrahedron, whose length 1 can be computed from the geometry. The smoke's color and opacity along this ray segment can then be computed by the density emitter model of Sabella <ref type="bibr" target="#b10">[8]</ref>. This model assumes the smoke particles absorb a "differential opacity" fraction T per unit length of the light traversing the ray, and emit or reflect extra light c per unit length. For colored images, c will be wavelength dependent, with red, green, and blue components.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>One can show by integration[4][8] that the opacity a at</head><p>A is 1 -8 , and the color added to the viewing ray is ccrlz. The method of Shirley and Tuchman[lO] is to evaluate the color and opacity once at the "thick" vertex A. The color and opacity are zero at the other "thin" vertices on the profile. Bilinear interpolation (linear on triangles) in the hardware rendering pipeline is used to interpolate the color and opacity across the triangle, and composite each triangle over the background. The linear interpolation of color and opacity causes artifacts, which can reveal the separation of the flow volume into tetrahedral cells. Max et al. <ref type="bibr" target="#b5">[4]</ref> used a software renderer, and computed the necessary exponential at every pixel. However it is possible to use the texture mapping hardware available on some workstations to get an effective exponential per pixel. The quantity ~1 is used as a texture coordinate at each vertex, and the value 1-e-"</p><p>is put in the texture table. The shading system on the Silicon Graphics VGX or Onyx workstation can then use this as the value in compositing each pixel, at the high throughput rate of its parallel pipeline. This technique reduces polygonal artifacts with only a slight degradation of performance (see <ref type="figure">figure 7</ref>). Since it renders the tetrahedra more accurately fewer are needed and hence opacity round-off will be reduced when the relative thickness increases.</p><p>As noted by WilhelmsE 121 the eight bits allowed for representing opacity can lead to problems when compositing many thin volumes consecutively. Color shifting became apparent when the numerical error was greater in one color channel than another. The effects were minor and will mostly disappear if a machine having twelve bits per channel is used.</p><p>Volume rendering is often slow because of the huge number of cells in a typical volume. However, in rendering a flow volume of smoke, only the cells in the small flow volume need be rendered. Everything else is completely transparent, and may be skipped. This makes interactive use possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Sorting</head><p>The compositing scheme of 141 and <ref type="bibr" target="#b10">[8]</ref> requires that the volume cells be composited in back to front order. In general, sorting for the back to front order is a difficult problem. There are easy sorts for special cases such as rectilinear grids, but a flow volume is not rectilinear. Max er al. <ref type="bibr" target="#b5">[4]</ref> propose using a general topological sort of a directed graph, but this method only works if a convex data volume is completely filled with convex cells. Williams[l3] proposes a generalization to non-convex data volumes, but it is not guaranteed to be correct in all cases.-Both these methods can return with failure if a depth order cycle exists.</p><p>In the current interactive system, we avoid sorting by assuming the color of the smoke is uniform, a reasonable assumption for the visual effect we desire. We now explain why we can do this. Consider a pixel, with initial background intensity Fo which is covered in back to front order by cell projections of opacity at=( 1-e-l) and color C=c/z.</p><p>Although the hardware is based on the opacity ai we will use the transparency ti = l-a,=e"' for ease in the denvation. The compositing step to update the frame buffer value F is then</p><p>We will prove by induction that</p><formula xml:id="formula_0">i i j=l j=1 ~i = (n tj)Fo + (1 -n tj)C (2)</formula><p>The initial step, for i=l, follows from the first compositing step, in formula(1). The induction step then assumes (2) is true for i-1, and derives it for i, using formula (1): i The product n j is independent of the order of the factors ti since multiplication is commutative, and we can thus composite the cells in any order without sorting. Nielson <ref type="bibr" target="#b9">[7]</ref> has made a similar observation. This order independence also means that the depth ordcr 01 the smoke trails in the fluid volume is ambiguous in a still lrame. However, with the ability to rotate the scene in real time, the full 3D configuration is revealed.</p><p>In rendering an image, we first scan convert the opaque polygons in the environment into the z buffer. Then, when scan converting the triangles from the projections of the tetrahedra, we use the hardware feature which compares the triangle z with the z buffer to determine whether to composite a pixel, but does not update the z buffer. Thus unsorted smoke can still be hidden by opaque objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>j=1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Adaptive Subdivision in to Tetrahedra</head><p>Some volume cells may have non-planar faces. These faces may become self-intersecting polygons when projected onto the picture plane and hence cause problems in the volume compositing scheme. While such problem cells may be rare in projecting a fixed curvilinear grid, they will be more common in flow volumes, since small scale variation in the velocity field can easily distort the faces. Therefore, we have chosen to decompose the volume into tetrahedra. A method for doing this consistently is the topic of this section.</p><p>Let So be the initial polygon generating the flow volume, and let S, be the surface into which So is canied by the flow, after n time steps. We maintain an approximation of S, by triangles, which are subdivided adaptively, if they become too large or too curved. To construct the layer of volume cells between S , and Sn+l, we use a collection of prisms, with the triangles on S, as a base. Each prism is then subdivided into three tetrahedra.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2</head><p>The subdivision of a prism is specified by choosing one of the two possible diagonals on each of its three quadrilateral faces. For example, the choice of the three diagonals CD, BD, and BF for the prism ABCDEF shown in <ref type="figure">Figure 2</ref> implies that it is subdivided into the three tetrahedra ABCD, BCDF, and BDEF. In order to specify the diagonal choices in a way which is consistent across the common quadrilateral faces between adjacent prisms, we use a direction on each edge of the subdivision of S,, indicated by an arrow on <ref type="figure">Figure 2</ref>. For example, the edge AB on S, is shown with A as its first vertex, so the point D on Sn+l corresponding to A on S , is the first vertex of the diagonal, and B is the second vertex. Of the eight possible choices of direction for the three sides of triangle ABC, six of them, which have a vertex like B with two arrows pointing towards it, define good subdivisions of the prism. The other two, with all the arrows going around in a clockwise or couterclockwise cycle, do not. Therefore, we must con-sistently orient the edges of the triangulation of s, so that no triangle is bounded by a cycle of directed edges. Since every triangulation of a planar region can be built up by adding one-by-one triangles with at least one free side, one can always build up consistent edge orientations by choosing the orientation of the free edge of each new triangle appropriately. Instead of using this method, we maintain the edge orientation incrementally. We start with a trivial orientation of the sides for a triangulation of the initial polygon So, and then maintain consistency as we subdivide adaptively.</p><p>The subdivision of S, is initially copied from the subdivision of S,-l. If an edge is too long, or too poor an approximation to the correct curved edge, we subdivide it into two edges, with orientations consistent with the parent edge. Once all edges have been subdivided, we loop over all triangles, subdividing them consistently. <ref type="figure">Figure 3</ref>, with several representative cases, shows that the directions of the new edges in the subdivision can be chosen to avoid cycles.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 3</head><p>In the center case, when exactly two edges have been subdivided, one of two possible diagonals to a quadrilateral must be chosen, and the shorter one is used.</p><p>The curvature subdivision is based on advecting edge midpoints. Suppose, as in <ref type="figure">Figure 3</ref>, D is the midpoint of edge AB. After n time steps, A, B, and D have moved to points A,, B, and D,. The edge A,B, is subdivided if the angle between the vectors D,-A, and B,-D, becomes too large. On the surface S,, we must still use the actual midpoint of the edge A,B,, in order to assure consistency with the flow volume between S,-1 and S,, But on Sn+l, we can use the advected midpoint Dn+l.</p><p>The actual midpoints of the triangle edges on the subdivision of the initial flat polygon are used on surface So. Every time a new subdivision edge is created on S,, we must estimate its midpoint. For edges like AD in <ref type="figure">Figure 3</ref>, which arise from subdividing a longer edge AB, we quadratically interpolate the midpoint using a parabola through A,,, D,, and B,. For triangle-crossing edges like DC, linear interpolation is used to find the actual midpoint of D,C,. <ref type="figure" target="#fig_0">Figure 4</ref> shows a wire-frame image of curvature-based adaptive tetrahedral subdivision, applied to a divergent flow. The subdivision of the surfaces S, remains good as these surfaces grow and bend, so the flow volume stays accurate. This volume subdivision also effectively subdivides the stream surface ribbons formed from the edges of the generating polygon. Subdivision improves the accuracy of the flow volume by increasing the number of tetrahedra, but makes interaction slow while turned on.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The User Interface</head><p>Having a powerful visualization tool is of little value without a scheme for smoothly interacting with it. We present here some ideas which give the user maximum control over the smoke trail. Flow volume interaction is done by manipulating a 3D cursor, and an editing window containing various control widgets for color, transparency, time step size and count, and other characteristics of the flow volume.</p><p>The cursor consists of a jack manipulator customized from SGI's Inventor package. It is attached to a polygon which is always perpendicular to the vector field. There are six scale knobs, 2 for each major axis through the polygon, that when selected, will scale the size of the cursor. The n sided polygon, which is used as the initial condition for smoke advection, is scaled along with the cursor. When the user clicks on the cursor (but not on a scale knob) three orthogonal translation axes appear. Using the mouse to move the cursor in either direction along one of these axis allows for easy translation in 3D. The Shift and Alt keys may be used to constrain cursor motion to the nearest axis or plane, respectively. The cursor may move anywhere within the domain of the vector field. If a user tries to move beyond those limits the cursor is constrained to the border. For faster interaction the user may choose to have no smoke drawn while the cursor is moving. Even if no smoke is advected, the central polygon is constantly rotating so that its normal remains oriented perpendicular to the direction of the flow. When the mouse button is released the translation axes are removed and a new smoke trail is drawn. Computing and rendering the flow volume is fast enough for smoke to be &amp;awn continuously while the cursor is moving or the scene is rotating.</p><p>The smoke puff option simulates an intermittent smoke generator, by making the opacity depend on a time varying function of the step index n. The puffs blow along in real time, as long as no other parameters change, bunching up where the current is slower. Interaction slows if the number of steps is too high.</p><p>Active along with the cursor is an editing window containing sliders for controlling the length of the time step, the number of time steps used, and the smoke's transparency. A color wheel is used to control the smoke color. Toggle buttons for specifying transparency texture mapping, compressiblehncompressible flows, puff or growing smoke animation, and wire-frame drawing are available. For compressible flows, we make the differential opacity z inversely proportional to the volume of the tetrahedron. The Inventor Scene Viewer already provides menu options for various drawing styles such as dithered or blended iransparency, picking styles, and facilities for customized lighting. All operations of translation, rotation and zooming are handled by a variety of convenient viewers provided by the Scene Viewer.</p><p>The IRIS Inventor Toolkit, a Silicon Graphics C++ environment, was of immense help for speedy prototyping.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results</head><p>Flow volumes offer a more powerful visualization tool than streamlines or ribbons. Its effectiveness is shown by the way it can reveal phenomena the other two methods cannot. If compressible flow is specified, changes in pressure can show up as varied opacity. Vector magnitude changes speed or slow puffs of smoke when that animation option in selected. Diverging or converging flows, turbulence, spiraling, shearing, and splitting as flow moves over solid obstacles, are difficult to represent with a single streamline, but easy for volumes. Scaling of the initial polygon allows you to get all of these benefits whether your focus is global or very local. All these features can be seen at the same interactive rates as lines or ribbons because of the use of hardware and a simple rendering algorithm.</p><p>For a typical flow volume consisting of 1000 tetrahedra, rendering takes about .4 seconds, transforming and rendering .5 seconds, and recomputing then rendering 1 second. Times were approximated on a Silicon Graphics Indigo 2 workstation with Extreme graphics.</p><p>In <ref type="figure" target="#fig_1">Figure 5</ref> we see an example of a hurricane visualized using the system. In it we can see that the wind is moving slowly until the perimeter of the hurricane is reached. Then the velocity increases and the tetrahedra become long and thin. By animating puffs of smoke, varying velocities are more clearly visualized, <ref type="figure">Figure 6</ref> shows the result of making a flow compressible. In this figure opacity corresponds to density of smoke particles. The effect of adding texture mapping to reduce artifacts can be seen by comparing figure 7a which is drawn without texturing to figure 7b which uses texturing to produce the correct exponential at each pixel. Vector fields from electro-magnetics, waveguide simulation, air flow through aerogel material, and a simulated tornado have all been successfully visualized. Each have unique properties which can be explored using this tool.         </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 4 .</head><label>4</label><figDesc>Curvature based adaptive subdivision applied to a divergent flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 5 .</head><label>5</label><figDesc>Visualization of a hurricane in global wind data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 6a .</head><label>6a</label><figDesc>A flow volume in an incompressible medi um.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 6b .</head><label>6b</label><figDesc>The same flow volume, but now we are assuming the medium is compressible.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 7a .</head><label>7a</label><figDesc>Smoke without hardware texture mapping.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7b .</head><label>7b</label><figDesc>Smoke with hardware texture mapping. &amp;e zoior piotes. p CP-3 1 R. Crawfis, pp. 19-24.Figure4: Curvature based adaptive subdivision applied to a divergent flow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :Figure6a:</head><label>5</label><figDesc>Visualization of a hurricane in global wind data. Aflowvolume in an incompressible medium.Figure 6b: The same flow volume, but now we are assuming the medium i s compressible.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7a :</head><label>7a</label><figDesc>Smoke without hardware texture mapping.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7b :</head><label>7b</label><figDesc>Smoke with hardware texture mapping.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was performed under the auspices of the</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>U.S. Department of Energy by Lawrence Livermore National Laboratory under contract number W-7405-ENG-</head></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>48, with specific support from an internal "LDRD re-IEEE computer Society reviewers for comments which improved the paper.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Graphics</surname></persName>
		</author>
		<title level="m">Siggraph &apos;91 Proceedings) pp. search grant. We wish to thank Leonore Max, and the</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="page" from="275" to="284" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visibility Ordering Meshed Polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="103" to="126" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Direct Volume Visualization of Three-Dimensional Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM SIGGRAPH, NY pp</title>
		<editor>Visualization. Kaufman and Lorensen</editor>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="page" from="55" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Visualizing Vector Field Topology in Fluid Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hellman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE CG&amp;A</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">3646</biblScope>
			<date type="published" when="1991-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Constructing Stream Surfaces in Steady 3D Vector Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hultquist</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="171" to="178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Area and Volume Coherence for Efficient Visualization of 3D Scalar Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Crawlis</forename><forename type="middle">R</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="27" to="33" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Viualiziing Wind Velocities by Advecting Cloud Textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">R</forename><surname>Crawfis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
			<publisher>IEEE Computer Society Press</publisher>
			<biblScope unit="page" from="179" to="184" />
			<pubPlace>Los Alamitos CA</pubPlace>
		</imprint>
	</monogr>
	<note>Proceedings of Viualization &apos;92</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Sorting for Polyhedron Compositing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Focus on Scientific Visualization</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">The Volume Rendering Equations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">N</forename><surname>Nielson</surname></persName>
		</author>
		<idno>TR-93-013</idno>
		<imprint>
			<date type="published" when="1993" />
			<pubPlace>Tempe</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Dept. of Computer Science+ Arizona State University</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Rendering Algorithm for Visualizing 3D Scalar Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Sabella</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">88 Proceedings</title>
		<imprint>
			<date type="published" when="1988" />
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="51" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Volume Visualization at the Center for Supercomputing Research and Development</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">H</forename><surname>Neeman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Chapel Hill Workshop on Volume Visualization</title>
		<meeting>the Chapel Hill Workshop on Volume Visualization<address><addrLine>Chapel Hill, NC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="17" to="20" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of North Carolina</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A Polygonal Approach to Direct Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="63" to="70" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Interactive Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Chapel Hill Workshop on Volume Visualization</title>
		<meeting>the Chapel Hill Workshop on Volume Visualization<address><addrLine>Chapel Hill, NC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="page" from="9" to="16" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Science, University of North Carolina</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">A Coherent Projection Approach for Direct Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wilhelms</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Gelder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
