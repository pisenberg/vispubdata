<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Real-Time Incremental Visualization of Dynamic Ultrasound Volumes Using Parallel BSP Trees</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">F</forename><surname>Garrett</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mary</forename><forename type="middle">C</forename><surname>Whitton</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><surname>State</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Real-Time Incremental Visualization of Dynamic Ultrasound Volumes Using Parallel BSP Trees</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>E.1 [Data Structures]: Trees</term>
					<term>I.3.1: [Hardware Architecture]: Threedimensional displays</term>
					<term>I.3.7 [Three-Dimensional Graphics and Realism]: Color</term>
					<term>shading</term>
					<term>shadowing</term>
					<term>and texture and Visible line/surface algorithms</term>
					<term>J.3 [Life and Medical Sciences]: Medical information systems Augmented reality</term>
					<term>ultrasound echography</term>
					<term>3D medical imaging</term>
					<term>BSP tree</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a method for producing real-time volume visualizations of continuously captured, arbitrarily-oriented 2D arrays (slices) of data. Our system constructs a 3D representation on-the-fly from incoming 2D ultrasound slices by modeling and rendering the slices as planar polygons with translucent surface textures. We use binary space partition (BSP) tree data structures to provide non-intersecting, visibility-ordered primitives for accurate opacity accumulation images. New in our system is a method of using parallel, timeshifted BSP trees to efficiently manage the continuously captured ultrasound data and to decrease the variability in image generation time between output frames. This technique i s employed in a functioning real-time augmented reality system that a physician has used to examine human patients prior t o breast biopsy procedures. We expect the technique can be used for real-time visualization of any 2D data being collected from a tracked sensor moving along an arbitrary path.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">I N T R O D U C T I O N</head><p>Ultrasound echography is a popular imaging modality for many medical applications including fetal and cardiological examinations. We are developing an augmented reality system for use in ultrasound-guided needle biopsy of the breast (Plate 1). As the anatomy being examined is inherently three dimensional, the physician would often like to see the data rendered as a volume rather than as the 2D cross-sectional images (slices) generated by most ultrasound machines. Although 3D ultrasound acquisition systems are available commercially, they are not widely used. The 3D systems are problematic for applications such as breast biopsy because the apparatus may obstruct the physician's access to the patient's body. 2D acquisition systems are likely to remain common many years, so it is fruitful to investigate real-time rendering of data from this class of sensors.</p><p>Our goal is to provide the physician with a volume representation of ultrasound data displayed in real time as she scans a patient with a hand-held 2D ultrasound probe. The rendering portion of our system must address three problems: the arbitrary position and orientation of the ultrasound data, the continuous capture of new data that must be combined with older data for display, and the need for real-time operation. Plate 2, showing a hand scanned in a tank of water, illustrates how 3D shape can be recognizably represented in opacity accumulation images of multiple slices. Plate 3 illustrates the challenge of rendering a combination of older and newer data when scanning a moving target, in this case a closed hand opening during the scan.</p><p>A hand-held ultrasound probe can be moved freely with six degrees of freedom. Although each slice is in a known and fixed position relative to the ultrasound probe at the time it i s captured, slices can have arbitrary position and orientation with respect to each other. <ref type="figure" target="#fig_0">Figure 1</ref> shows that slices may intersect and samples may be non-uniformly spaced due t o variations in the speed of probe movement. In contrast, other popular 3D imaging modalities, e.g. CT and MRI, produce parallel slices of data with known geometric relationships between slices. Compositing 2D slices to make a 3D image from data collected with a hand-held ultrasound probe requires properly rendering an irregular array of data after deriving the slice positions and orientations from the (tracked) probe location. The second problem is the real-time, continuous nature of the source data. Accumulating and displaying all the data collected at 30 frames/sec in a scanning session would lead t o uninterpretable images. The system must manage an "active set" of data by continually adding new slices and eliminating older ones. The user should be able to control the number of slices in the active set. The system should also (optionally) visually distinguish older and newer data so that newer data i s emphasized and shape and position changes are more noticeable.</p><p>Third, for real-time augmented reality applications the system must run at a minimum of 10 frames per second in stereo. This constraint made us look beyond traditional volume visualization methods which require computationally expensive data resampling.</p><formula xml:id="formula_0">------------------------------------------------------------------------------------------------------------------------ 1 CB# 3175</formula><p>In <ref type="bibr" target="#b18">[State 1996</ref>] we described an augmented reality system that merges ultrasound rendering with live images of the physical environment. The work reported here enabled the 3D real-time volume visualization in that system, but was described only briefly in that paper. The method is extended and analyzed here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">B A C K G R O U N D</head><p>Our work builds on previous research in volume rendering, ultrasound visualization, and BSP trees. Of particular relevance is research on using textures and hardware texture accelerators to render volumes and research using polygonal primitives t o represent ultrasound slices.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">. 1 Volume Rendering</head><p>Volume rendering methods, like rendering methods in general, can be divided into two categories: backward-mapping methods (e.g., ray casting <ref type="bibr" target="#b21">[Tuy 1984]</ref>, where the image plane is mapped onto the data, and forward-mapping methods (e.g., splatting <ref type="bibr" target="#b22">[Westover 1990</ref>]) where data is mapped to screen space. Most methods require (re)sampling data to a regular 3D grid or compiling adjacency information for irregular grids. Moreover, to render with translucency (e.g., "Levoy rendering" <ref type="bibr" target="#b10">[Levoy 1988</ref>] or simple opacity accumulation), the volume must be sampled in back-to-front or front-to-back order for proper compositing.</p><p>Most computers are not powerful enough to resample and render large, screen-filling datasets (256 3 voxels) at interactive rates (10 Hz or better) but many modern computers do offer hardware acceleration for rendering textured polygons.</p><p>Cullip and Neumann <ref type="bibr" target="#b5">[Cullip 1994</ref>] proposed a simple method for using the texture-rendering capabilities of a Silicon Graphics RealityEngine for volume rendering. Stein, Becker, and Max <ref type="bibr">[Stein 1994</ref>] demonstrate how the volume rendering method of cell projection <ref type="bibr" target="#b15">[Shirley 1990</ref>] can be implemented with hardware-assisted texture mapping. Cabral, Cam, and Foran <ref type="bibr" target="#b2">[Cabral 1994</ref>] provide some of the mathematical foundations for generating volume-rendered images with texture-mapping hardware.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">. Ultrasound Visualization Systems</head><p>Thune and Olstad <ref type="bibr" target="#b20">[Thune 1991</ref>] presented a system for capturing time-varying 3D ultrasound data using a restricted motion (rotation only) ultrasound probe and rendering images off-line. Sakas and Walter <ref type="bibr" target="#b14">[Sakas 1995</ref>] built a system for visualizing 3D ultrasound data, characterized by the use of a motor-driven ultrasound probe, multi-step filtering, and very high visual quality. Their technique includes space-filling interpolation between ultrasound slices during volume reconstruction.</p><p>State, et. al. <ref type="bibr" target="#b16">[State 1994</ref>] generated a sequence of images showing a moving observer's view of a reconstructed volume (a fetus) within a pregnant patient. The researchers collected time-stamped data from a tracker on a freely movable hand-held ultrasound probe, a tracker on the user's head, and images from a head-mounted video camera. The animation, although showing lower volume reconstruction quality than <ref type="bibr" target="#b14">[Sakas 1995</ref>], simulated what a real-time augmented-reality visualization running on a more-powerful future machine might display to a user. Bajura, Fuchs, and Ohbuchi <ref type="bibr" target="#b1">[Bajura 1992</ref>] introduced the concept of rendering ultrasound slices as polygon-like objects in an early real-time augmented reality system. The system displayed intersecting, opaque primitives via z-buffering. The researchers exploited the hardware accelerated sphere primitive of Pixel Planes 5 and approximated a textured polygon b y rendering an array of small, intersecting spheres each centered on a sample point on the ultrasound slice and colored with the value of that sample point. Ohbuchi, Chen, and Fuchs ] developed a system that incrementally resampled and rendered (via ray casting) ultrasound slice data. This work was expanded to a primitive augmented-reality system that ran at near-real-time frame rates (~1Hz) on the Pixel-Planes 5 graphics multicomputer <ref type="bibr" target="#b16">[State 1994</ref><ref type="bibr" target="#b17">, State 1995</ref>]. The present work can best be described as improving on the results of that system by using new rendering algorithms and a different hardware platform to achieve realtime frame rates (10-15 Hz).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">. 3 BSP Trees</head><p>A binary space partition (BSP) tree is a data structure for managing planar polygons in 3D. Intersecting polygons are divided into non-intersecting fragments as the tree is built. The structure can be traversed to produce non-intersecting primitives in low-to-high visibility order for any given viewpoint <ref type="bibr" target="#b6">[Fuchs 1980</ref>]. BSP trees are most appropriate for static geometry with a moving viewpoint; the tree is built once and traversed many times <ref type="bibr" target="#b7">[Fuchs 1983</ref>]. One serious drawback in using BSP trees with a changing data set is that while adding new objects requires only inserting the new primitive(s) into the tree (an inexpensive operation), removing geometry may require rebuilding the entire tree (discussed in greater detail in 4.1). <ref type="bibr" target="#b4">[Chrysanthou 1996</ref>] shows how the rebuilding can sometimes be avoided by recombining the subtrees that remain after a piece of geometry is removed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">. 4 Contribution</head><p>Our work makes two contributions. First, it demonstrates realtime volume representations of sets of arbitrarily oriented slices of ultrasound data using BSP trees and texturing on a standard, commercial high-end graphics workstation. Second, it presents a method of parallel BSP trees to manage a dynamically changing set of ultrasound data and to minimize variation in per-frame BSP tree management times for more consistent overall frame rendering times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RENDERING TEXTURED SLICES</head><p>Ultrasound echography data is captured from the scanner as a live, gray scale video image and is placed in texture memory at the start of the rendering loop in our application. Although the echography data is both generated by the ultrasound machine and captured by our system as 2D imagery, the samples (pixels/texels) are not planar samples. The region actually sampled is nominally wedge shaped (with the thicker end away from the ultrasound probe) due to the spreading characteristics of the sound waves used in echography. Thus each value in the 2D ultrasound image represents contributions from the values through the wedge.</p><p>In the interest of rendering speed, our rendering method does not reconstruct the volume or otherwise address the issue of data values in the space between slices. We model each ultrasound slice as a planar polygon and render it directly, with the ultrasound video image applied to it as a translucent texture. Ultrasound scans often comprise many closely-spaced slices, which diminishes the effect of neglecting inter-slice regions. Thus, although composed only of 2D polygons, our real-time images produce recognizable 3D structures.</p><p>The precise size, shape, position, and orientation of the slice of ultrasound data relative to the ultrasound probe i s predetermined by a one-time calibration procedure <ref type="bibr" target="#b16">[State 1994</ref>]. We track the ultrasound probe with a highly accurate mechanical tracker (FARO Technologies Metrecom IND-1).</p><p>The probe calibration data, combined with the real-time tracking information, gives the 3D position and orientation of each polygon representing an ultrasound slice.</p><p>Proper opacity-accumulation compositing (one of the rendering modes implemented in our system) requires that slice polygons be non-intersecting and be presented in low-to-high visibility order (i.e., if polygon A obscures polygon B from the current viewpoint, B must be rendered before A). We use the BSP tree data structure for the slice polygons because it meets both these requirements.</p><p>We generate our volume representations by rendering polygons from the BSP tree with the appropriate textures applied. Using the various texturing modes of the Silicon Graphics RealityEngine 2 we can duplicate traditional volume rendering algorithms such as opacity accumulation and maximum intensity projection. We also use the texture lookup tables t o adjust the brightness and opacity mappings for better discrimination of the target in our visualization.</p><p>One of the stated goals of the visualization is to provide a method of weighting data by age so that moving targets can be viewed. We implemented our system with exponential agebased attenuation (Plate 3).</p><p>Since the image is completely re-rendered from the BSP tree during every frame, we are able to attenuate slice image intensities and opacities as a rendering effect. Each slice polygon is time-stamped as the slice is captured from the ultrasound system. As each slice is inserted into the BSP tree and split into fragments, the slice's time stamp is propagated to the fragments. During tree traversal for rendering, the time stamps are used to compute each fragment's age and attenuate the polygon's brightness accordingly. The original slice data, stored in texture memory, are not modified.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DUAL BSP TREES</head><p>BSP trees work well for static data sets viewed from dynamically changing viewpoints. Our goal, however, is realtime visualization of the n most recently captured slices from a continuous data stream. This active set of data changes every frame, one new slice arrives and one old slice expires at each time step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">. 1 Continuously Captured Data</head><p>While adding new geometric primitives to a BSP tree requires only inserting the new primitives into the tree, removing a geometric primitive often requires rebuilding the entire sub-tree beneath the nodes that are deleted. As an alternative t o rebuilding, expired slices can be flagged as "invisible" and not rendered during traversal, but such an operation doesn't reduce the number of nodes in the tree. The constantly growing number of nodes causes greater fragmentation of newly-inserted geometry. Inserting into large trees is expensive, so the tree must occasionally be rebuilt to eliminate the expired nodes.</p><p>Despite the drawback of periodic rebuilding, BSP trees are attractive for our application since most of the slice polygons in one frame are present in the next. For example, if the active data set comprises 100 slices, 99% of the contents (99 slices) are displayed in the next frame. It pays to maintain a structure across time steps.</p><p>We solve the problem of deleting and rebuilding b y maintaining two parallel BSP trees, out of phase in time.</p><p>Consider that we want to render the n most recent slices every frame. When we start the system, we initialize an active tree and insert one slice into it in each of the first n-1 frames (time steps) of the system. At frame n-1, we start a replacement tree and insert slices into both trees through frame 2n-2. Note that after the slice insertion at time step 2n-1 the replacement tree will have n slices -the number needed to render the active set.</p><p>Since rendering takes place after insertion, the first tree can be reinitialized at the end of step 2n-2 and the replacement tree becomes the active tree. <ref type="figure" target="#fig_1">Figure 2</ref> illustrates this process for active set size n=4.</p><p>After startup all slices are inserted into both the active and replacement trees. Because of the way the trees overlap, each has a maximum of 2n-2 slices inserted before it is reinitialized. Each tree is active for display for n-1 frames and flags n-2 slices as expired before the trees are swapped and the older tree is reinitialized.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Time</head><p>Step  Except for start-up in steps 1 through 3, the system always displays the 4 most recent samples. After start-up, the active BSP tree switches every third step. The double lines between cells indicate when the trees are reinitialized. It is easy to see that the value of n (the number of slices displayed in each frame) can be changed interactively. If n is increased, we simply delay switching to the replacement tree and continue growing the existing trees to the new values of n and 2n. Decreasing n can be accommodated by switching and starting the replacement tree early.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">. 2 Analysis of Dual BSP Trees</head><p>A major requirement of our real-time system is to have a consistent update rate for the images presented to the user. Using a single BSP tree data structure for a changing data set requires that the tree be rebuilt occasionally. <ref type="figure" target="#fig_2">Figures 3 and 4</ref> show that tree rebuilding (every nth frame after startup) causes spikes in the per-frame tree management time, thus making the frame update rate uneven.</p><p>The dual-tree approach amortizes the cost of rebuilding b y making two insertions per frame: one into the active tree and one into the replacement tree. While each frame time i s slightly longer, this scheme results in more even computational load per frame and a lower upper-limit on the per-frame tree management time.</p><p>The performance data in <ref type="figure" target="#fig_2">Figures 3 and 4</ref> show the time (in milliseconds) required to insert a new slice in the BSP tree for each frame. Slice geometry data were captured from a typical ultrasound scanning session and were used to test the singleand dual-tree systems. The slice set is shown in Plate 4. The dual-tree system operated as described in 4.1. The single-tree system incrementally built a BSP tree to 2n slices, at which point the tree was destroyed and a new tree of size n was built using the original unfragmented slice data. <ref type="figure" target="#fig_2">Figure 3</ref> shows that the maximum insertion time for any one frame was less than 5 ms with the dual-tree scheme but more than 30 ms with the single-tree scheme. <ref type="figure" target="#fig_4">Figure 4</ref>, which reflects the same sequence of tracking data but uses a larger active set, shows maximum times of 10 ms and 130 ms, respectively. In our visualization system, the total time budget to generate a new stereo frame is 100 ms, and managing the BSP tree(s) is only one of many tasks that must be handled. Reducing the maximum insert time from 30% to 5%, or 130% to 10%, of the frame time is a significant improvement i n system performance. The lower variations and lower maximum times of the dual-tree approach are preferable in a real-time system where consistent update rate is important.</p><p>The memory space required by the dual tree system demonstrated in <ref type="figure" target="#fig_2">Figure 3</ref> was only 20% greater than the storage required for the single BSP tree. This increase is negligible, as the overhead of representing slice geometry is tiny compared to the storage required for the textures that embody the ultrasound data. Each node (slice fragment) in the tree contains a list of vertices with texture coordinates, a few scalar properties, and a pointer to a stored texture map. While the geometry for each fragment occupies approximately 200 bytes, each texture occupies 64 kilobytes.</p><p>An issue not fully explored above is the impact of changing the size at which the BSP tree is rebuilt in the single-tree scheme. Here we rebuild after 2n inserts, but we could easily choose t o rebuild after 3n, 1.7n, etc. instead. We sidestep this question for two reasons. First, changing the maximum size of the single tree alters only the average per-frame computation time, not the peak time. The peaks occur at rebuilding time and depend on the minimum tree size (i.e., the size of the active set) rather than the maximum size. Second, a serious exploration of this parameter space would require testing with many more data sets and is not within the scope of this work. We experimented with a few values and found that the average times usually varied by only 5%.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">GENERALIZATION TO b PARALLEL BSP TREES</head><p>In our system we use dual BSP trees, but we also investigated a generalization to b parallel BSP trees. With two trees, just before swapping, the active tree holds 2n-2 slices and the replacement tree holds n-1 (where n is the number of slices t o be shown at any time). With more than two trees, trees are deleted and created more frequently and fewer inserts are made t o any one tree before it is reinitialized (so the maximum size of the trees decreases). <ref type="figure">Figure 5</ref> shows how b trees are managed i n parallel and <ref type="figure">Figure 6</ref> summarizes their characteristics.</p><p>Increasing the number of trees in the system presents a performance tradeoff: an extra insertion must be performed every frame for each tree added, but each additional tree decreases the maximum size any tree is allowed to reach before being deleted. The question is, essentially, whether it is better to have numerous small trees or few larger ones. The answer depends on the nature of the geometry data and how much i t costs to insert it into the trees.     [ <ref type="bibr" target="#b6">Fuchs 1980]</ref> shows that BSP trees can have as many as O(n 3 ) internal nodes (fragments) after n inserts. Insertion time i s roughly proportional to the number of internal nodes; in the worst case, an incoming slice must be checked and split against each fragment in the BSP tree. Geometry data and BSP tree statistics compiled from several ultrasound scans show that, i n our application, BSP trees grow at between O(n) and O(n 2 ) during a typical scan, and that the cost of insertion varies directly but with the internal size of the tree. When the growth is faster than O(n), a system of more than two trees is optimal.</p><p>Again, the growth of the tree depends on the geometric nature of the data. <ref type="figure" target="#fig_6">Figure 7</ref> shows the results for various values of b for a different set of geometry data than used in previous comparisons. The numbers suggest that a choice of b=5 or b=6 (i.e., 5 or 6 parallel BSP trees) is optimal in this case. The geometry data that produced these results, contrived to produce high levels of fragmentation, is shown in Plate 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS AND FUTURE WORK</head><p>We have presented a method and demonstrated a system for incrementally rendering 2D ultrasound data in real time t o create a recognizable visualization of a 3D anatomical target. Small cysts and other imaging targets look three-dimensional; we can see needle tracks in a training phantom (Plate 1).</p><p>Representing 2D ultrasound slices as planar, textured polygons allows us to avoid resampling the data and allows us to take advantage of hardware accelerated texturing in the Silicon Graphics RealityEngine 2 . We chose a BSP data structure t o meet the requirement that primitives be presented in low-tohigh visibility order for proper compositing. We manage the continuous data stream and reduce maximum tree management per frame times via parallel, time-shifted BSP trees.</p><p>Many issues remain. 3D volumetric display of anatomical features in an augmented-reality environment is a new metaphor for physicians. Issues such as number of slices t o display, decay factor for older slices, and user interface need t o be explored.</p><p>Since we do not use space-filling interpolation between ultrasound slices, the intensity and thus the useful visual content of the rendered image varies greatly depending o n whether slices are viewed mostly face-on or mostly edge-on. We need to address this fundamental problem of the 2D primitives we render.</p><p>We continue to work on improvements in image quality.</p><p>Ultrasound images tend to be fairly noisy, exhibiting problems such as speckle and reflection. Improving rendering quality and discernability of the target anatomy while maintaining real-time update rates is the challenge ahead of us.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Intersecting and unevenly spaced ultrasound slices. Lighter shading indicates older slices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Behavior of dual BSP tree with an active set of n=4.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>FrameFigure 3 :</head><label>3</label><figDesc>BSP tree insertion time per frame for single and dual tree systems with an active set of 50 slices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Frame</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>BSP tree insertion time per frame for single and dual tree systems with an active set of 100 slices.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 :Figure 6 :</head><label>56</label><figDesc>Rendering from and maintaining a system of b parallel BSP trees. Characteristics of parallel BSP tree systems.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Average and maximum times per frame to insert geometry into systems of 1-8 trees. The geometry data set used here is different from that used inFigures 3-4and is shown in Plate 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>edu transducer path transducer breast ultrasound slices</head><label></label><figDesc></figDesc><table /><note>Sitterson Hall, Chapel Hill, NC 27599-3175, tel. 919-962-1700 Email: {garrett, fuchs, whitton, state}@cs.unc.</note></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A C K N O W L E D G M E N T S</head><p>We thank David Chen, Arthur Gregory, David Harrison, Mark Livingston, Etta Pisano (MD), and Chris Tector for their help with the system. We thank the anonymous reviewers for their comments and criticism. PIE Medical Equipment B.V. generously provided us with an ultrasound machine. This work was supported in part by ARPA DABT63-93-C-0048. Approved by ARPA for Public Release-Distribution Unlimited. Additional support was provided by the National Science Foundation Science and Technology Center for Computer Graphics and Scientific Visualization (NSF prime contract 8920219).</p><p>Plate 1. Head-mounted display view from an augmented reality system designed to assist a physician with ultrasound-guided needle biopsy of the breast. A cyst aspiration needle has been inserted into a simulated lesion within the breast phantom. The needle is visually aligned with its scanned image. The lesion is the white blob inside the computer-generated opening (red) within the breast.</p><p>Plate 2. Scanning a motionless human hand (left hand, palm up). The wireframe object near the top is the ultrasound probe and the wireframe polygon below it shows the slice imaged most recently. The volume consists of over 100 planar, translucent, textured polygons "emitted" during a 10-second sweep along a U-shaped path.</p><p>Plate 3. Scanning a moving human hand. The sweep started at the wrist and scanned the closed fist; then the hand opened and the probe scanned the fingertips. Polygon intensity is progressively attenuated by age, displaying the (older) fist faintly and the recently-imaged outstretched fingers brightly. This "3D radar" effect depicts decreasing confidence in regions of space that have not been scanned recently. Plate 5. A slice geometry dataset contrived to produce numerous intersections.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">RealityEngine Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kurt</forename><surname>Akeley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<meeting><address><addrLine>Anaheim, CA; New York</addrLine></address></meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="109" to="116" />
		</imprint>
	</monogr>
	<note>Proceedings o f SIGGRAPH &apos;93</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Merging Virtual Objects with the Real World: Seeing Ultrasound Imagery within the Patient</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Bajura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryutarou</forename><surname>Ohbuchi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings o f SIGGRAPH &apos;92</title>
		<meeting>o f SIGGRAPH &apos;92<address><addrLine>Chicago, Illinois</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1992-07-31" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="203" to="209" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Accelerated Volume Rendering and Tomographic Reconstruction Using Texture Mapping Hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m">Symposium on Volume Visualization</title>
		<meeting><address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Shadow Computation for 3D Interaction and Animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yiorgos</forename><surname>Chrysanthou</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996-01" />
		</imprint>
		<respStmt>
			<orgName>University o f London</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. Thesis</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Accelerating Volume Reconstruction With 3D Texture Hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><surname>Cullip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><surname>Neumann</surname></persName>
		</author>
		<idno>TR93-027</idno>
		<imprint>
			<date type="published" when="1994-05" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">On Visible Surface Generation by a Priori Tree Structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Zvi</forename><surname>Kedem</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bruce</forename><surname>Naylor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;80</title>
		<meeting>SIGGRAPH &apos;80</meeting>
		<imprint>
			<date type="published" when="1980-07" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="124" to="133" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Near Real-time Shaded Display of Rigid Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><surname>Abram</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Grant</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;83</title>
		<meeting>SIGGRAPH &apos;83</meeting>
		<imprint>
			<date type="published" when="1983-07" />
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="65" to="72" />
		</imprint>
	</monogr>
	<note>Computer Graphics</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Three-Dimensional Display of Human Organs from Computed Tomograms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabor</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hsun Kao</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Image Processing</title>
		<imprint>
			<biblScope unit="page" from="1" to="21" />
			<date type="published" when="1979" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Time-Dependent Three-Dimensional Intervascular Ultrasound</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jed</forename><surname>Lengyel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Donald</forename><surname>Greenberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Popp</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<meeting><address><addrLine>Los Angeles, CA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="457" to="464" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 95</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualization of 3D Ultrasound Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Todd</forename><surname>Elvins</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="50" to="57" />
			<date type="published" when="1993-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Incremental Volume Reconstruction and Rendering for 3D Ultrasound Imaging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryutaro</forename><surname>Ohbuchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Biomedical Computing</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">1808</biblScope>
			<biblScope unit="page" from="312" to="323" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Incremental Acquisition and Visualization of 3D Ultrasound Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryutarou</forename><surname>Ohbuchi</surname></persName>
		</author>
		<idno>1994-0362</idno>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
	<note type="report_type">Ph.D. Thesis. UNC</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Extracting Surfaces from Fuzzy 3D-Ultrasound Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Georgios</forename><surname>Sakas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Walter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<meeting><address><addrLine>Los Angeles, CA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="465" to="474" />
		</imprint>
	</monogr>
	<note>Proceedings o f SIGGRAPH 95</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">A Polygonal Approach to Direct Scalar Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Peter</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allan</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="63" to="70" />
			<date type="published" when="1990-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Case Study: Observing a Volume Rendered Fetus within a Pregnant Patient</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><surname>State</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Tector</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><surname>Brandt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ryutarou</forename><surname>Ohbuchi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mike</forename><surname>Bajura</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of IEEE Visualization &apos;94</title>
		<meeting>IEEE Visualization &apos;94<address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Interactive Volume Visualization on a Heterogeneous Message-Passing Multicomputer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><surname>State</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><surname>Mcallister</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ulrich</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hong</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Timothy</forename><surname>Cullip</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1995 Symposium on 3D Interactive Graphics</title>
		<meeting>the 1995 Symposium on 3D Interactive Graphics<address><addrLine>Monterrey, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="69" to="74" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Technologies for Augmented-Reality Systems: Realizing Ultrasound-Guided Needle Biopsies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrei</forename><surname>State</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mark</forename><surname>Livingston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Garrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gentaro</forename><surname>Hirota</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Mary</forename><surname>Whitton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Etta</forename><surname>Pisano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series</title>
		<meeting><address><addrLine>New Orleans, Lousiana</addrLine></address></meeting>
		<imprint>
			<publisher>ACM SIGGRAPH</publisher>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH 96</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Sorting and Hardware Assisted Rendering for Volume Visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Clifford</forename><forename type="middle">M</forename><surname>Stein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Barry</forename><surname>Becker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of 1994 Symposium o n Volume Visualization</title>
		<meeting>1994 Symposium o n Volume Visualization<address><addrLine>Washington, DC</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="83" to="89" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Visualizing 4-D Medical Ultrasound Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nils</forename><surname>Thune</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bjørn</forename><surname>Olstad</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 1991</title>
		<meeting>Visualization 1991<address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="page" from="210" to="215" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Direct 2-D Display of 3-D Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Heang</forename><surname>Tuy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><forename type="middle">Tan</forename><surname>Tuy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="29" to="33" />
			<date type="published" when="1984-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Footprint Evaluation for Volume Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lee</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;90</title>
		<meeting>SIGGRAPH &apos;90</meeting>
		<imprint>
			<date type="published" when="1990-08" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="367" to="376" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Three-Dimensional Reconstruction and Enhancement of Arbitrarily Oriented and Positioned 2D Medical Ultrasonic Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Watkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Baer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mathur</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hakim</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Diouf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Nuwayhid</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Khalife</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Canadian Electrical and Computer Engineering</title>
		<imprint>
			<biblScope unit="page" from="1188" to="1195" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
	<note>Proceedings</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
