<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Temporal Continuity of Levels of Detail in Delaunay Triangulated Terrain</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Cohen-Or</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel-Aviv University</orgName>
								<address>
									<addrLine>Ramat-Aviv</addrLine>
									<postCode>69978</postCode>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Yishay</forename><surname>Levanoni</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel-Aviv University</orgName>
								<address>
									<addrLine>Ramat-Aviv</addrLine>
									<postCode>69978</postCode>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Temporal Continuity of Levels of Detail in Delaunay Triangulated Terrain</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>The representation of a scene at different levels of detail is necessary to achieve real-time rendering. In aerial views only part of the scene that is close to the viewing point needs to be displayed with a high level of detail, while more distant parts can be displayed with a low level of detail. However, when the sequence of images is generated and displayed in real-time, the transition between different levels of detail causes noticeable temporal aliasing. In this paper, we propose a method, based on object blending, that visually softens the transition between two levels of Delaunay triangulation. We present an algorithm that establishes, in an offline process, a correspondence between two given polygonal objects. The correspondence enables on-line blending between two representations of an object, so that one representation (level of detail) progressively evolves into the other.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Terrain data is used by many computer graphics applications, including flight simulators. Terrain data is represented by a height field, which is a set of height samples in a rectangular grid. For rendering purposes it is convenient to model a height field as a collection of disjoint triangles. Such a representation is called a triangulated irregular network (TIN).</p><p>If the application requires photo-realistic visualization of a terrain, then millions of triangles are needed. In applications such as flight simulators, a real-time rendering of the terrain is needed. Even with recent progress in graphics hardware performance, it is impossible to achieve this with such a large number of triangles. Efficient use of the number of triangles that are fed into the geometric pipeline is an important consideration <ref type="bibr" target="#b10">[12]</ref>. Clipping out triangles which fall out of the viewing pyramid is necessary, but far from satisfactory, since at a distance the viewing pyramid extends and covers huge areas. Other culling techniques which are effective for indoor walk-through <ref type="bibr" target="#b14">[16]</ref> are not effective for outdoor scenes. Fortunately, a realistic image of the terrain is only needed for that part of the terrain that is close to the viewing point. A model can be represented by different levels of detail <ref type="bibr" target="#b15">[17,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b11">13]</ref>. Low levels approximate the model more coarsely with fewer details, while higher levels contain finer details. The appropriate level is rendered according to the distance of the terrain section from the view point. Since coarse approximations contain less triangles, a large terrain area can be rendered faster with no visible penalty.</p><p>However, true real-time rendering of levels of detail causes a noticeable temporal aliasing when the transition between different levels is sharp. The aliasing effect is less noticeable if the difference between adjacent levels is small or if the transition occurs far enough from the viewpoint, so that the gap between the two representations is not visible. Since storage space is limited, the number of levels of detail that can be employed is limited. Therefore, the transition between levels of detail must be handled in a way that appears to be smooth, so that the temporal alias effect will not be noticed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">RELATED WORK</head><p>Earlier research dealt with the problem of minimizing the number of triangles needed to approximate the terrain with minimal error. Heckbert and Garland <ref type="bibr" target="#b8">[10]</ref> give an extensive survey of works of this kind. Two basic methods were researched. The first, the decimation algorithm, starts with a triangulation of the entire height field, and successively removes vertices that meet certain criteria, until the desired levels of approximation are obtained. For example, Schroeder, Zarge and Lorensen <ref type="bibr" target="#b12">[14]</ref> use local geometry and topology to remove vertices that pass a distance or angle criteria. The second approximation method is the greedy insertion method, where the algorithm begins with a simple triangulation of the height field, and successively inserts input points that pass certain criteria, until the desired level of approximation is achieved. For example, Heckbert and Garland <ref type="bibr" target="#b7">[9]</ref> successively insert the point with the maximal error in the current approximation.</p><p>Further research concentrated on rendering a terrain in different levels of detail using a hierarchical representation <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b11">13]</ref>. Parts of the terrain that are close to the view point are rendered using a fine level of detail, while parts of the terrain that are farther away from the view point are rendered using a coarser level of detail. There are two approaches to this problem. The first, is a tree hierarchy, which starts with a triangulation of a small subset of points, and then successively creates finer levels by inserting new data points inside existing triangles and re-triangulating them. The disadvantage of this method is that there are many sliver triangles (thin triangles with sharp angles) in the more detailed levels. The second approach uses Delaunay triangulation at each level of detail in order to avoid sharp triangles. However, since this method does not have a tree hierarchy, it is difficult to combine parts from different levels of detail in the same scene. A survey is given by De Floriani et al. <ref type="bibr" target="#b2">[3]</ref>. De Berg and Dobrindt <ref type="bibr" target="#b0">[1]</ref> proposed a hierarchy of levels of detail that uses Delaunay triangulation at each level. It is the first method that uses Delaunay triangulation, and also allows different levels of detail to be combine in the same scene. This technique achieves spatial continuity of the terrain for each rendered picture.</p><p>The above work, like most others in this field, have not dealt with temporal continuity. In <ref type="bibr" target="#b13">[15]</ref> a TIN-morphing is suggested to blend between two levels of detail, where the terrain is represented by a hierarchical irregular rectangular mesh. However, a novel hierarchical Delaunay representation and an associated rendering method is called for, that guarantees both spatial and temporal continuity in Delaunay triangulated terrain. <ref type="figure">Figure 1</ref>: One dimensional profiles of a terrain at two different times. The dotted lines mark the point of transition from a finer to a coarser level of detail. The temporal aliasing effect appears at the moment the area between the dotted lines changes its level of detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Overview of the method</head><p>A collection of n data points in a plane, each with its own elevation value, is given. This set of points represents the terrain and is triangulated to form a continuous representation. To render a triangulated representation efficiently, a level of detail (LOD) is required to be structured hierarchically. The terrain should have spatial continuity, that is, the combination of different levels of detail should be continuous (with no gaps or holes). In addition, triangles with sharp angles (slivers) should be avoided in all levels of the hierarchy. In other words, a Delaunay triangulation is required. Apart from spatial continuity, the rendering should also guarantee temporal continuity. That is, when the terrain is rendered relative to a moving view point, the transition between different levels of detail does not cause a noticeable aliasing effect. The temporal aliasing effect is illustrated in <ref type="figure">Figure 1</ref>. The figure shows one dimensional terrain profiles of a terrain at two different times. Both profiles contain parts from two levels of detail. The dotted lines mark the point of transition from a fine to a coarser level of detail. The aliasing effect appears at the moment the area between the dotted lines changes its level of detail.</p><p>Culling the hidden parts of the terrain is needed to avoid scanning the entire representation for every frame, since usually only a small part of the terrain is visible in a single frame. By culling those parts of the terrain which fall outside the viewing pyramid, most of the geometry can be quickly rejected. This significantly reduces the load on the graphic pipeline. Thus, it is necessary that the terrain representation inherently enables a fast culling mechanism.</p><p>We propose a hierarchy which partitions each level of detail into polygonal objects. A polygonal object is a terrain patch with its own local Delaunay triangulation, where the union of triangles of each level is a Delaunay triangulation of the complete set of vertices of that level. This hierarchy is represented as a tree which enables fast culling by a top down traversal of the tree. In Section 2 we elaborate on the hierarchical representation, its properties, and its construction.</p><p>In Section 3 we propose a technique to blend the representation of adjacent levels of the tree. In an off-line process, a correspondence between two adjacent levels of detail is defined. Once the correspondence is established, a soft transition between the levels of detail is applied by blending the corresponding vertices. The intermediate representation does not have more triangles than the detailed level has. This is achieved by moving the existing vertices of one level towards the existing vertices of the other level.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">THE TERRAIN REPRESENTATION</head><p>A tree is the most suitable representation for our problem. It allows to render the terrain with the correct level of detail using a top down traversal of the tree. It offers a fast culling mechanism of the hidden <ref type="tableref> 12345678901234567 12345678901234567 <ref type="figure">Figure 2</ref>: An example of a simple polygon in two different levels of detail. The shaded polygon on the right is the parent of five triangles on the left, and is formed by the removal of a single vertex.  All the objects which have one or more triangles in a shared hole are combined into a single object of the next level. Objects of which none of their triangles belong to a hole, remain in the next level. Let</p><p>Ii be the set of vertices of level i and Ji the subset of Ii which is removed to define Ii+1. Then Ii+1 = Ii Ji.</p><p>The critical point is to construct the levels such that the union of the triangles at every level is a Delaunay triangulation. This is achieved using the De Berg and Dobrindt method <ref type="bibr" target="#b0">[1]</ref>. They proposed restricting the selection of vertices J to be removed from I such that if p is selected (p 2 J) then all the adjacent vertices qk of p are not selected (qk <ref type="bibr" target="#b5">6</ref>    <ref type="tableref> 123 123 The edges of the polygon remain in the next level (see <ref type="figure">Figure 2</ref> where the fixed vertices and edges are highlighted in bold). These polygons can be used as object elements in our representation.</p><p>However, we have extended their method and relaxed their constraint so as to obtain only a small number of levels of detail (three to four levels), in order to minimize the storage space used. We relax the constraint that the vertices selected for the subset J are pairwise non adjacent. In this way we can remove more vertices and reduce the number of detail levels (see <ref type="figure" target="#fig_1">Figure 4)</ref>.</p><p>A set of adjacent vertices can be removed and the polygonal hole created by their removal defines an object. The hole is retriangulated to form the object of the next level (see <ref type="figure" target="#fig_0">Figure 3</ref>). Note that in order to preserve the Delaunay criteria, the vertices of the hole are removed one by one, and after every deletion, the hole is retriangulated using the Delaunay criteria. The resulting triangulation is indeed Delaunay, since a removal of a vertex, and retriangulating its hole preserves the Delaunay criteria <ref type="bibr" target="#b0">[1]</ref>.</p><p>To construct the different levels of detail we need to choose a criteria for selecting the subsets Ji to be removed from the set Ii. Specifically, we select a set of vertices whose distance-to-plane measure is minimal <ref type="bibr" target="#b12">[14]</ref>. The distance-to-plane measure is defined as the distance between the selected point and the average plane formed by the cycle of triangles surrounding the point. Using this criteria minimizes the error introduced by removing the point. The number of vertices in the selected set is determined according to the desired number of levels of detail. We restrict the selection of the vertices so that the ratio between the x and y extents of the bounding rectangle of the object is no larger than two. This restriction avoids long and thin objects.</p><p>Removing the vertices in the subset J from the current set of points creates holes in the triangulation. The removal of a single vertex creates a polygon-shaped hole, consisting of the triangles incident to the vertex. Since we permit the vertices in J to be mutually adjacent, adjacent polygonal holes are merged into a single polygonal hole. To obtain the Delaunay triangulation of the new level, the vertices of J are deleted one by one. After every deletion, the polygonal hole for that vertex is re-triangulated using the Delaunay triangulation.</p><p>It is important to emphasis that the hierarchical representation we propose has a tree structure, rather than a general graph <ref type="bibr" target="#b0">[1]</ref>. In <ref type="bibr" target="#b0">[1]</ref> triangles from different detail levels are combined by defining an intermediate level between every two successive levels. The nodes of this level correspond to the star-shaped polygons which are the union of triangles incident to the vertices to be removed. Trian-  that comprise the polygon. This graph has a tree structure since a polygon node corresponds to the triangles of all its descendant nodes and not only of its adjacent level. Note that when a vertex is removed, all the nodes which correspond to the triangles incident to it are combined into a single node. See the example in <ref type="figure" target="#fig_2">Figure  5</ref> where the shaded polygon includes triangles originating in early levels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RENDERING OF THE TERRAIN</head><p>The distance of an object from the viewing point determines the level of detail in which the object is displayed. When generating a new frame, the tree is traversed top down, starting from the top level objects, which have the coarsest level of detail. The visibility of each object is tested against the viewing pyramid and its level of detail is determined. If the object is visible but not in the correct level of detail, its children are recursively traversed. The recursive traversal is terminated whenever a visible object is detected and displayed at the appropriate level of detail. The viewing pyramid is partitioned into radial or or elliptical zones of different levels of detail. To soften the transition between the zones, transition zones are defined in which intermediate objects are rendered. An intermediate object is a blend of two polygonal objects representing the same area at two different levels of detail. The blended object is created by establishing a correspondence between the vertices of the two polygonal objects it corresponds to and interpolating them. Since the two polygonal objects have a different number of triangles and a different number of vertices, there is no straightforward definition for the vertex correspondence.</p><p>A naive way to implement the blending would be to create a merged topology of the polygonal objects, and map (project) it to the surface of the two original objects. This creates two new objects that have the same shape as the two original objects and share a common topology. Merging the two original topologies can be done by combining the edges of the two objects; new vertices are defined where they intersect, and new triangles are created accordingly <ref type="bibr" target="#b9">[11]</ref> (see <ref type="figure">Figure 6</ref>). The blending is done by interpolating the heights of corresponding pairs of vertices.</p><p>The problem with this approach is that the intermediate object has more triangles than the original detailed object, while our initial motivation was to decrease the number of triangles. In the following we present a technique to overcome this. We propose a blending <ref type="figure">Figure 8</ref>: The two stages of the blending procedure for a polygonal object with one interior vertex. The upper row illustrates the first stage. The bottom right polygon is the coarser object. Note that its triangles do not share a common vertex with the finer object (the top left).</p><p>method that does not increase the number of triangles. We describe a simple case, followed by a more general case.</p><p>Assume that a polygonal object is a star-shaped hole created by removing a single vertex q. Let A denote the original detailed object (see <ref type="figure">Figure 7)</ref>, and B the original coarse object. If all the triangles of object B have a single common vertex p, then the blending procedure is very simple. The coordinates of p are linearly interpolated with the coordinates of q. This causes q to slowly travel from q to p pulling the triangles of A to coincide with the triangles of B. If one of the vertices of A is blind from p then edges might intersect. Thus, it necessary to select a vertex p from the kernel of the polygon, or in other works, a vertex that sees all the vertices of A. Only in very rare cases no such vertex exists <ref type="bibr" target="#b1">[2]</ref>. Nevertheless, if this special case exists, it can be detected and avoided. Unfortunately, the Delaunay triangles of the coarser object do not necessarily have a single common point (see <ref type="figure">Figure 8</ref>). To deal with this more complex case we propose a two-stage blending procedure. In the first stage we get rid of the interior vertex by interpolating it with one of the exterior vertices (see <ref type="figure">Figure 8)</ref>, as in the simple case. After the first stage is completed we are left with an intermediate object with no interior vertices, but the interior edges do not share a common vertex. However, the intermediate object now has the same number of vertices as the coarse object, although the interior edges are not the same (see <ref type="figure">Figure 8</ref>). Since the intermediate source object and the coarse target object agree on the external edges, we say that the two objects have the same shape but with a different configuration of triangles, where only the target object has the Delaunay configuration. Thus, in the second stage, some of the edges of the source object should be dislocated to agree with the target edges.</p><p>Aside for the external edges, the source and target objects may agree on some internal edges. These common internal edges can define a subdivision of the source and the target objects into pairs of subobjects. If a pair of subobjects has the same configuration, blending is complete. Otherwise the source subobjects are slowly blended into the target subobjects (see <ref type="figure">Figure 8</ref>) . This blending stage is similar to the first stage, but the corresponding pair of vertices are both exterior vertices. In the second stage the subobjects blending is applied in parallel. The blending procedure continues recursively until we are left with the Delaunay configuration of the target object (see <ref type="figure">Figure 8)</ref>.</p><p>In the general case we consider a polygonal object hole created by the removal of multiple vertices (see <ref type="figure">Figure 9</ref>). We pose a restriction on the polygonal object, that all the interior vertices in the finer object are directly connected to an exterior vertex. This restriction guarantees that after applying the first stage the intermediate objects have no interior vertices. Thus, in the case of multiple interior vertices, only the first stage differs since no interior vertices exist after they are moved towards the exterior, and the second <ref type="figure">Figure 9</ref>: The two stages of the blending procedure for a polygonal object with multiple interior vertices. stage can proceed as defined above. The basic difference in the first stage is that all the interior vertices are simultaneously moved towards the exterior vertices (see <ref type="figure">Figure 9</ref>). Thus, a correspondence is established between the interior and the exterior vertices. The target exterior vertex is selected by a combination of two heuristics. The first attempts to maximize the number of interior incident edges emanating from the selected vertex, in order to maximize the similarity of the two subobjects. The second attempts to minimize the distance between the target and the source vertices to minimize the visual temporal movements during the blend. A pseudo-code of the off-line correspondence algorithm is given in <ref type="figure" target="#fig_5">Figure 10</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">RESULTS</head><p>The proposed hierarchy and blending algorithm were implemented in C++ on a PC-Pentium 120MHZ with 16MB memory. We used the Greenland terrain database [8] which contains 115; 000 points. We decimated the database down to 19; 000 points to consist of 36;927 triangles. The second level contains 9;883 points and 40;000 triangles, and the coarsest level contains 3;795 points and 8;374 triangles only. The image was rendered using Renderware library over Windows 95. The average number of triangles rendered per image is 5;000. The average frame rate is 10 frames per second.</p><p>The effect of the blend cannot be demonstrated in a single image nor in a series of images. However, <ref type="figure">Figure 12</ref> illustrates the soft transition between two levels of detail. The images are a 2D projection of a 20 by 20 portion of an elevation map, that was taken from the Greenland terrain database. Two levels of detail are combined in the images into a single terrain. The fine level of detail is composed of 400 points and 722 triangles, while the coarse level is composed of 240 points and 402 triangles. The map is partitioned into 33 polygonal objects. A 3D view of this map is illustrated in <ref type="figure">Figure 11</ref>. The partition of the terrain between the two levels is with respect to the distance to the viewing point. As the viewing point approaches, the partition changes and the terrain is softly transformed accordingly. The viewing point moves from the right side of the map to the left side. Note that the bold edges in the figure mark the static edges, while the thin edges are in a transition from a coarse to a fine level of detail</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">CONCLUDING REMARKS</head><p>We have presented a technique to visually soften the transition between levels of detail in Delaunay triangulated terrain. We introduced a hierarchy which partitions each level of detail into polygonal objects. The polygonal object is a terrain patch with its own local Delaunay triangulation, where the union of triangles of each level is a Delaunay triangulation of the complete set of vertices of that level. We have suggested a technique that smoothly blends between two adjacent levels of detail without creating more triangles.  The soft transition guarantees spatial and temporal Continuity in the levels of details.</p><p>We are attempting to extend the technique to deal with 3D polyhedra. This requires the triangulation of 3D holes which are not necessarily flat, since the vertices connected to a vertex are not always coplanar.  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>An example of an ancestor polygonal object and its descendants in two successive levels of detail. The shaded polygon on the right is the parent of twelve triangles and is formed by the removal of three vertices parts of the terrain by pruning the hidden top level objects. The nodes of the tree are polygonal objects each of which consists of a number of triangles. The union of the triangles of an object covers the union of the triangles of its descendant nodes in the tree, in general, and the triangles of its children, in particular.The leaves of the tree are the objects of the finest levels of detail, namelly a single triangle. The union of the triangles of the finest level is a Delaunay triangulation of the initial set of points I0. The objects of the next level are generated by examining the polygonal shaped holes created by removing a subset J0 of vertices from I0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :</head><label>4</label><figDesc>A hierarchy of three levels of detail. The shaded polygons illustrate a path in the tree.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :</head><label>5</label><figDesc>Three levels of detail. The shaded polygon (on the right) includes triangles originating from the removal of vertices of the finer level (on the left). a removed vertex p remain fixed and form a star-shaped polygon.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>gles from levels i and i + 1 can intersect only if they belong to the same star-shaped polygon. Their intermediate levels guarantee that triangles from different levels do not intersect. This representation does not have a tree structure because the intermediate level nodes correspond to polygons of only two successive levels, and an intermediate node of levels i; i + 1 can have multiple ancestor nodes in level i + 1 ; i+ 2 . In our representation the star-shaped polygons are the nodes of the tree. Each node contains the list of triangles</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>A general intermediate object. The marked points are the intersection points of edges from the two objects. A simple blend. The fine object in (a), and the coarse object in (c). An intermediate blended object in the middle (b).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 10 :</head><label>10</label><figDesc>The off-line correspondence procedure.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 11 :Figure 12 :</head><label>1112</label><figDesc>A 2020 3D model. The terrain combines two levels of detail. The viewing point moves from left to the right of the terrain. The 20 20 Delaunay map of the previous figure. The viewing point moves from left to the right of the terrain. The bold edges mark the static edges, while the thin edges are in a transition from a coarse to a fine level of detail.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 13 :</head><label>13</label><figDesc>A 100 by 100 model. The full video sequence (in mpeg) is available at http://www.math.tau.ac.il/daniel/Yishay/ delaunay.html.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>2 J). Thus, all the vertices adjacent to</figDesc><table><row><cell>123456789 123456789 123456789 123456789 123456789 123456789 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 12345678 12345678 12345678 12345678 12345678 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 123456789012 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 1234567 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456789012345 123456 123456 123456 123456 123456 123456 123456 123456 123456 123456 123456 123456</cell><cellcell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Algorithm EstablishCorresponence(Obj SourceObj, Obj TargetObj) for all interior vertices pi 2 SourceObj do select an exterior target vertex qi 2 SourceObj; Modify SourceObj by moving all pi to qi; Partition SourceObj and TargetObj into subobjects Sk and Tk; for all Sk do if Sk 6 = Tk do for all vertices pl 2 Sk which do not agree with the corresponding ql 2 Tk do select an exterior target vertex x 2 Tk such that x and pl share an edge and that by interpolating x to ql, the new configuration approaches Tk.</figDesc><table /><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">ACKNOWLEDGEMENTS</head><p>We thank Timc Ltd. for supporting this research with workstations and software for the implementation of the Delaunay hierarchy and the object blending.</p><p>We are grateful to Mark De Berg for his invaluable advice and useful comments. Thanks also to Amira Solomovici for her comments on an early draft of this paper.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Also available as Utrecht University tech report</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">De</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dobrindt</surname></persName>
		</author>
		<idno>UU-CS-1995-12</idno>
		<ptr target="URL=ftp://ftp.cs.ruu.nl/pub/RUU/CS/techreps/CS-1995" />
	</analytic>
	<monogr>
		<title level="m">Proc. 11th Annual ACM Symp. on Computational Geometry</title>
		<meeting>11th Annual ACM Symp. on Computational Geometry<address><addrLine>Vancouver, B.C.</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
	<note>On levels of detail in terrains</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">De</forename><surname>Berg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996-03" />
		</imprint>
	</monogr>
	<note>Personal communication</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Hierarchical terrain models: Survey and formalization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Marzano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. ACM Sympos. Applied Comput</title>
		<imprint>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A pyramidal data structure for triangle-based surface description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">De</forename><surname>Floriani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="67" to="68" />
			<date type="published" when="1989-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">NPSNET: Hierarchical data structures for real-time three-dimensional visual simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename><surname>Falby</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Zyda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Pratt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Mackey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="65" to="69" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Continuous Terrain Level of Detail for Visual Simulation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Ferguson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Economy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>Kelly</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">P</forename><surname>Ramos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1990 Image V Conference</title>
		<meeting>the 1990 Image V Conference</meeting>
		<imprint>
			<date type="published" when="1990-06" />
			<biblScope unit="page" from="144" to="151" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Sequin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computers Graphics (SIGGRAPH &apos;93 Proceedings)</title>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Fast Polygonal Approximation of Terrains and Height Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<idno>CMU-CS-95-181</idno>
		<imprint>
			<date type="published" when="1995-08" />
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Survey of Surface Approximation Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<imprint/>
		<respStmt>
			<orgName>Computer Science Department, Carnegie Mellon University. To apepar</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Shape transformation for polyhedral objects Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Kent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Parent</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="47" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Iris performer: A high performance multiprocessing toolkit for real-time 3D graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rohlf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="page" from="381" to="394" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Hierarchical triangulation using cartographic coherence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Scarlators</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Pavlidis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphical Models and Image Processing</title>
		<imprint>
			<date type="published" when="1992" />
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page" from="147" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Decimation of triangle meshes Computer Graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An algorithm for continuous resolution polygonalizations of a discrete surface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Taylor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>Barret</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics interface &apos;94</title>
		<meeting>Graphics interface &apos;94</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="33" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Visibility preprocessing for interactive walk-throughs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Teller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Sequin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="61" to="69" />
			<date type="published" when="1991-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Simplification of objects rendered by polygonal approximations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Dehaemer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jr</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Zyda</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="175" to="184" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
