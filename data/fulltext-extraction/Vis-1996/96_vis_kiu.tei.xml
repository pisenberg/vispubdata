<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-Frequency Noise for LIC</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming-Hoe</forename><surname>Kiu</surname></persName>
							<email>kiu@erc.msstate.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Electrical Engineering</orgName>
								<orgName type="institution">Mississippi State University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
							<email>banks@cs.msstate.edu</email>
							<affiliation key="aff1">
								<orgName type="department">Dapartment of Computer Science</orgName>
								<orgName type="institution">Mississippi State University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Multi-Frequency Noise for LIC</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:34+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We present a way to visualize a flow field using Line Integral Convolution (LIC) with a multi-frequency noise texture. A broad range of feature sizes can enhance a user&apos;s perception of the magnitudes and direction of the flow. In addition, the multiple scales of feature size help a user clarify the motion of the flow in an animation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>In the field of scientific visualization, Line Integral Convolution [1] is used to create an image of streaks to show the flow-direction in a vector field. LIC convolves a white-noise image with a filter function aligned with an underlying vector field. This method avoids the problems of over-crowding that can occur when explicitlydrawn streamlines converge in an image; LIC preserves the overall density of bright and dark streaks. This paper discribes how to adjust the spatial frequency (and hence the feature size) of the noise image so that the resulting LIC image makes long, fat streaks in areas of high velocity and short thin streaks in areas of low velocity. To stretch a blob in both the perpendicular and tangent directions to the flow, we could apply a 2D filter to the image, which is slow. Instead, we can adjust the noise image as a pre-computation step. We vary the spatial frequency in the noise image according to the magnitude of the corresponding vectors in the vector field. A varying-width 1D filter kernel then blurs the noise image tangentially to the flow. A length-varying convolution filter may be applied in computational space to achieve uniform-length in the physical domain <ref type="bibr" target="#b0">[2]</ref>. Both van Wijk and Forssell noted that a LIC texture, applied to a surface, can undergo undesirable stretching. The inverse Jacobian matrix must be applied to preserve the spatial frequency of the original texture. We were led to wonder: what spatial frequencies should have been in the original texture to begin with? Section 2 presents our solution.</p><p>To give the image a sense of flow, periodic motion filters may be applied to the filter kernels to create _______________________________________________________________ animations [1] <ref type="bibr" target="#b0">[2]</ref>. With this technique the streaks do not actually move; instead they periodically cycle in intensity over a short spatial scale. The effect is rather like marquee lights whose pattern of blinking produces the effect of motion. Alternatively, one can advect the LIC image (or the noise image that generates it) by letting pixel values following streamlines of the vector field. Explicit advection of pixels leaves gaps when adjacent pixels follow diverging streamlines; a better approach is to trace a streamline backwards through a given pixel in order to determine which location (several time-steps ago) contained the color that should arrive at the pixel at a certain moment <ref type="bibr" target="#b5">[7]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Multi-frequency LIC</head><p>This section addresses the problem of how to create a noise image so that the resulting LIC image reflects the magnitude as well as the direction of the vector field. We construct the original noise image as a multi-frequency texture. The frequencies in the noise image depend on the velocity magnitudes in the vector field. We choose the noise frequency to be inversely proportional to the velocity magnitude to satisfy two desires. (1) We would like an area with high velocity to have a noise function of lower spatial frequency so that we will get the effect of motion-blur in a static image. (2) When we animate the image, we want to avoid aliasing regions of high velocity. Thus these regions must contain relatively long features. Filtering a high-frequency texture over a long kernel tends to produce uniformly-grey pixels. We are led therefore to use low-frequency textures together with long filter kernels in areas of high velocity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Constructing Multi-frequency Noise</head><p>It is simple to construct a multi-frequency noise image based on a high-frequency original. The randimg program on Silicon Graphics workstations is provides a convenient off-the-shelf tool for creating a white-noise image of a desired size. We first construct a high-frequency noise image the same size as the vector field's grid. We lower the frequency by applying a Gaussian filter of width w to the original. A useful range of w is between 0.5 and 8 for a 300x300 vector field. Larger values produce large blobs which become even longer streaks after LIC is applied. Since the filtered noise images lose contrast, we normalize their histograms to match that of the original image <ref type="bibr" target="#b2">[4]</ref>. Then we generate a sequence of image masks according to differ-    ent intervals of the velocity magnitude. The masks correspond to the pixels for which the velocity magnitude lies in a particular range. We use the masks to composite the several noise images into a single multi-frequency image. The boundaries of the masks would themselves be visible in final image unless the masks are blurred to produce a smooth transition between the regions of different frequencies (a 10-pixel box filter was used for the images in this paper). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>= =</head><p>arises naturally as an approximation to a boundary layer flow over a flat plate. We show the process for combining four noise frequencies. On the left is a schematic diagram indicating the vector field. The middle column shows the four components of masked noise that are assembled to produce the final noise image. The slow part of the flow occupies a thin layer near the bottom boundary of the vector field. The thin white layer of the corresponding mask serves to select the portion of the highfrequency noise image in the same location. The other three masks capture regions of noise that correspond to successive intervals of velocity magnitude. The four masked-noise images are simply summed to produce the final multi-frequency noise texture. <ref type="figure" target="#fig_1">Figure 2</ref> compares the result of using just a single frequency noise image as an input to LIC versus using multi-frequency noise.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Applying LIC to the Image</head><p>Line Integral Convolution is performed by repeatedly convolving a filter function with the noise image at points along streamlines to produce a new intensity image.</p><p>We used a convolution kernel of varying length l, where l is proportional to the velocity magnitude of the point in the vector field. <ref type="figure" target="#fig_0">Fig. 1b</ref> shows the Line Integral Convolution operation ( . ) applied the noise image and the vector field V defined above. The streamlines are all horizontal for this vector field, to LIC produces horizontal streaks. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>= =</head><p>where c is a constant. The lowest velocity occurs at the center. The radial vector field is defined at each point p by the formula</p><formula xml:id="formula_0">U(p) + (c * ||p||) p Å„ (c ||p||)</formula><p>where c is a constant (equal to half the length of the square image). In all of these simple examples, the fea-ture size varies according to the magnitude of the vector field.</p><p>How well does this strategy of mapping large features to large velocities work on empirical data from real vector fields? The fourth example shows multi-frequency noise derived from a more complex vector field: the Pacific Ocean's surface velocity <ref type="figure">(Figure 4)</ref>. In <ref type="figure">figure  4</ref> we used 8 noise levels and a convolution kernel of up <ref type="figure">Fig 4b:</ref> Multi-frequency noise image for Pacific Ocean flow (left) using 8 noise levels. The LIC image (right) uses a filter length that ranges from 5 pixels (for the smallest velocities) to 40 pixels (for the largest velocities) both forward to produce variable-resolution streaks along streamlines. to 80 pixels forward and backward. For isotropic turbulence (such as we see in the mid-Pacific), the fixed reference frame of the earth's surface yields ocean velocities that tend to increase as the size of the coherent structures in the flow increases. The situation is reversed, however, in the neighborhood of an obstacle to the flow. The flow becomes squeezed smaller and faster, causing a subsequent stretching of coherent structures. We are not aware of any simple justification why velocity should correlate with feature size, even in homogeneous turbulence. It is more likely that feature size should depend on a derived quantity (like shear) that is invariant under changes in the velocity's reference frame. Nonetheless, we observe that in this turbulent flow the small eddies generally have low velocities and the large eddies and currents have large velocities. The underlying multi-frequency noise image exploits this correlation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Animating the Images</head><p>For the image to show the direction of the flow, we must animate it through time. We trace back the streamline, using the Runge-Kutta method, in the reversedirection of the vector field to determine the proper intensity for a pixel at a given time step <ref type="bibr" target="#b5">[7]</ref>. The integration step-size at a point p is proportional to the velocity there. This has the natural effect of scaling a short, slow-moving feature at p to become a long, fastmoving feature when it arrives at a point q further downstream. Notice, however, that diverging flows and shear flows can change the width of a feature as it advects downstream. We do not know of any simple solution that remedies this behavior. The problem is somewhat hidden in animated single-frequency noise images that use pixel-sized features. Larger features do not simultaneously retain both their length and width scales as they advect in a generic flow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Image boundary</head><p>The values are duplicated from the other side of the graph A problem with applying LIC near boundaries is that the kernel is truncated when a streamline leaves the domain of the vector field. We address this boundary problem by duplicating the rest of the kernel with the value from the other side of the kernel.</p><p>A problem with reverse integration for animating the flow is that the boundaries and critical points prevent the streamline integration from progressing. Our solution is to reverse the sense of integration at such a boundary. Therefore, the spatial features of the LIC image are preserved throughout the time domain, at least along the streamlines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>Multi-frequency noise images provide a helpful starting point in building a vector-field visualization based on Line Integral Convolution (LIC). The variable size of the features in the initial noise image can be adjusted to roughly match the size of the coherent structures in an actual isotropic flow. The magnitude of the vector field provides masks from which frequency components are selected and assembled into a single multifrequency noise image. The magnitude of the vector field also determines the length of the filter kernel applied by LIC along streamlines. The technique has been demonstrated on a model of Pacific Ocean surface flow. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">References</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig 1 :</head><label>1</label><figDesc>Construction of a multi-frequency noise image (far right) for a 2D vector field (far left).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 :</head><label>2</label><figDesc>LIC image created using single-frequency noise (top) and multi-frequency noise (bottom).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>=</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 1</head><label>1</label><figDesc>illustrates the process of constructing a multi-frequency noise image for a vector fieldV(x, y) + ( y Ç¸ , 0)where V is the velocity at p(x, y). Such a vector fieldFig 3a:LIC image of a circular vector field using single-frequency noise (top row) and multi-frequency noise (bottom row). Faster motion is shown by larger (lower-frequency) blobs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3</head><label>3</label><figDesc>shows the technique applied to two more vector fields.Figure 3a uses a circular vector field, which is defined as W(x, y) + (* y, x) c Fig 3b: LIC image of a radial vector field. Singlefrequency noise (top row) versus multi-frequency noise (bottom row). Faster motion is shown by larger blobs.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig 4a :</head><label>4a</label><figDesc>Single frequency noise image for Pacific Ocean flow (left). The LIC image (right) uses a filter kernel length of 40 pixels both forward and backward to produce thin streaks along streamlines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig 5 :</head><label>5</label><figDesc>Wrap-around of the filter kernel.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>[ 1 ]Fig 6 :</head><label>16</label><figDesc>Brian Cabral and Leith Leedom, ''Imaging Vector Fields Using Line Integral Convolution," SIGGRAPH 93, pp. 263-270. Backward-tracing of streamlines produces animation of noise texture. Backward-tracing reverses, however, when a boundary or singularity is encountered. The noise image is reflected after each such bounce occurs.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Visualizing Flow Over Curvilinear Grid Surfaces Using Line Integral Convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lisa</forename><forename type="middle">K</forename><surname>Forssell</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">94</biblScope>
			<biblScope unit="page" from="240" to="247" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Using Line Integral Convolution for Flow Visualization: Curvilinear Grids, Variable-Speed Animation, and Unsteady Flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lisa</forename><surname>Forssell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Scott</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="133" to="141" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Spot Noise</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Jarke Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 91</title>
		<imprint>
			<biblScope unit="page" from="309" to="318" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">An Image Synthesizer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ken</forename><surname>Perlin</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">85</biblScope>
			<biblScope unit="page" from="287" to="289" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ken</forename><surname>Perlin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>''hypertexture</surname></persName>
		</author>
		<imprint>
			<biblScope unit="volume">89</biblScope>
			<biblScope unit="page" from="252" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualizing Wind Velocities by Advecting Cloud Textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Nelson</forename><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Roger</forename><surname>Crawfis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dean</forename><surname>Williams</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization 92</title>
		<imprint>
			<biblScope unit="page" from="179" to="183" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
