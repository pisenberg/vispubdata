<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Contour Blending Using Warp-Guided Distance Field Interpolation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Cohen-Or</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel-Aviv University</orgName>
								<address>
									<addrLine>Ramat-Aviv</addrLine>
									<postCode>69978</postCode>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Levin</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel-Aviv University</orgName>
								<address>
									<addrLine>Ramat-Aviv</addrLine>
									<postCode>69978</postCode>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amira</forename><surname>Solomovici</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel-Aviv University</orgName>
								<address>
									<addrLine>Ramat-Aviv</addrLine>
									<postCode>69978</postCode>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Contour Blending Using Warp-Guided Distance Field Interpolation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Shape-blending</term>
					<term>Interpolation</term>
					<term>Shape Reconstruction</term>
					<term>Radial Basis functions</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Given (n 1)-dimensional parallel cross-sections of an ndimensional body, one would like to reconstruct the n-dimensional body. The method based on Distance Field Interpolation (DFI) gives a robust solution to this problem in its ability to deal with any topology in any dimension. Still this method may give undesired solutions to the problem if the changes from one cross-section to the next are significant relative to the size of the details in the cross-sections. In this work we consider the problem of solid reconstruction from contours, which can also be considered as a contour blending or contour morphing problem, where the third dimension is time. The method presented is based on interpolation of the distance field, guided by a warp function which is controlled by a set of corresponding anchor points. Some rules for defining a smooth leastdistorting warp function are given. To reduce the distortion of the intermediate shapes, the warp function is decomposed into a rigid rotational part and an elastic part. The distance field interpolation method is modified so that the interpolation is guided by the warp function. The advantage of the new approach is that it is capable of blending between contours having different topological genus, and no correspondence between the geometric primitives should be established. The desired general correspondence is defined by the user in terms of a relatively small number of anchor points.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The problem of reconstructing an n-dimensional body from its (n 1)-dimensional cross-sections appears in many applications, from biomedical imaging to 2D and 3D animation. In animation the problem can also be viewed as a contour blending problem, where the third dimension is time. Namely, the continuous evolution of a source contour, through intermediate contours, into a target contour. Techniques that transform one object into another have gained widespread use in recent years. These techniques, known as metamorphosis, morphing or blending techniques, involve the creation of a smooth transition between two given key objects.</p><p>One of the research challenges in this area is to design nearly automatic blending algorithms, which incorporate the minimal human intervention needed and yet, succeed in producing satisfactory results. Most forms of such manual intervention are based on the idea of defining a transformation between the two objects by manipulating only a finite and hopefully small set of parameters. From these specifications, mathematical techniques are used for extending the transformation to the whole object domain.</p><p>A variety of solutions have been proposed for the twodimensional problem, where blending is applied to images (imagebased methods) <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b11">12]</ref>, to volumes (volume-based methods) <ref type="figure" target="#fig_4">Figure 1</ref>: The problem of reconstructing a body from cross-sections can also be viewed as a contour blending problem, where the third dimension is time. <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b12">13]</ref>, or to 2D objects, such as polygons (object-based methods) <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b6">7]</ref>. Image-based morphing involves the specification of a suitable transformation between the two given images, often referred to as warping. This essentially aligns the two images, or in other words, describes the displacement the image pixels undergo during morphing, and then cross-dissolving (blending) the values (e.g., color) assigned to corresponding pixels. When the morphed objects are polygons, the morphing consists of generating some sort of correspondence between the geometric features of the representation, known as the vertex correspondence problem <ref type="bibr" target="#b10">[11]</ref>, and then interpolating the positions of the corresponding features along some predetermined path, known as the vertex path problem <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b18">19]</ref>.</p><p>The problem of 2D shape blending can also be considered as a problem of body reconstruction from cross-sections <ref type="bibr" target="#b17">[18]</ref>, as demonstrated in <ref type="figure" target="#fig_4">Figure 1</ref>. Some reconstruction methods use bivariate interpolation after finding a correspondence between the contours of the cross-sections. When the cross-sections are not dense, they may exhibit significant differences in the geometry and topology of the boundary contours. A method that easily handles that issue is the Distance Field Interpolation (DFI) presented and analyzed in <ref type="bibr" target="#b13">[14]</ref>. The DFI is a general set-valued interpolation method for the reconstruction of an n-dimensional model from a sequence of its (n 1)-dimensional cross-sections. It uses a univariate interpolation of the distance field, and works for cross-sections of different topological genus in any dimension. The method is also defined in a discrete space and generates intermediate discrete contours of arbitrary complexity, as can be seen in <ref type="bibr">Figures 7 and 6.</ref> The blending technique presented in this paper is based on the DFI method. However, it is extended in the sense that the interpolation, and thus the blended contour, follow a warp transformation guided by means of a user-defined control. The control is defined by a point-to-point correspondence between prescribed anchor points on the given intermediate cross-sections. To achieve least-distorted in-between shapes, we decomposed the warp transformation W into a rigid (rotation and translation) transformation and an elastic transformation, which are separately interpolated. The rigid-elastic decomposition of the warp function, and its particular interpolation are so chosen to minimize the distortion of the intermediate contours. The rigid part performs the general positional changes, while the fine details are slowly changed by the elastic part.</p><p>Payne and Toga <ref type="bibr" target="#b14">[15]</ref> used a distance-field volumetric representation of 3D biomedical objects. Their technique consists of crossdissolving the distance values of each voxel and then reconstructing the intermediate surfaces out of the intermediate distance-field. However, no warping or correspondence has been established between the source and the target object. This lack of control over the blending process often yields poor results. We present a method that uses the distance-field blend but in addition establishes a pointto-point warp function between the two models, that can be seen as a way of enforcing topological correspondence and geometrical properties. This paper, however, deals explicitly with contour blending but its principles are naturally extended from 2D space (contours) to 3D (surfaces) and to hyper-surfaces in higher dimensions.</p><p>In Section 2 we review the DFI method for multi-dimensional reconstruction from cross-sections. The warp function, its decomposition and parameterization, are introduced in Section 3. In Sections 4 and 5 we describe some implementation details and discuss the results. We conclude with a summary and suggestions for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">DISTANCE FIELD INTERPOLATION FOR RECONSTRUCTION OF n-DIMENSIONAL MODELS</head><p>Reconstruction of 3D objects from cross-sections is of major importance in many applications, particularly in biomedical imaging. One class of reconstruction methods builds a polygonal surface by assuming the cross-sections consist of closed polygonal contours <ref type="bibr" target="#b2">[3]</ref>. Another class of methods uses a volumetric approach. The entire volume (3D voxel array) is reconstructed from the gray levels of the cross-sections. The missing data is reconstructed by some interpolation of the gray values of the cross-sections. The surface is then defined and reconstructed by iso-surfacing methods. These methods do suffer from discontinuities in the reconstructed surface, as the example given in <ref type="figure" target="#fig_0">Figure 2</ref> shows, and thus, do not yield smooth transformations.</p><p>The method of DFI presented in <ref type="bibr" target="#b13">[14]</ref> achieves better reconstruction of the surface by interpolating distance values rather than gray values. This method has been adapted successfully in biomedical reconstruction applications (see e.g. <ref type="bibr" target="#b8">[9]</ref>, <ref type="bibr" target="#b14">[15]</ref>).</p><p>The DFI method can be described in terms of n-dimensional surface reconstruction from (n 1)-dimensional cross-sections (n &gt; 1 ). Consider a solid object IR n , discretized or not.</p><p>Given a finite set of (n 1)-dimensional cross-sections of the object, t j = fx = ( x 1 ; : : : ; x n 1 )j( x 1 ; : : : ; x n 1 ; t j )2 g; t 0 &lt; t 1 : : :&lt;t M ;</p><p>(1) we would like to reconstruct . Throughout the paper we use lower indices for numbering entities and upper indices to denote the components of a vector. Let us define the distance fields at the levels t0; t 1 : : : t M . For x = ( x 1 : : :</p><formula xml:id="formula_0">x n 1 ) D t j ( x ) = dist(x; @t j ) if x 2 t j dist(x; @t j ) otherwise ,<label>(2)</label></formula><p>where @t j denotes the boundary of t j , and dist denotes the Euclidean distance in IR n 1 . Now, using univariate interpolation (with respect to the parameter t) we interpolate, between the cross-sections, the distance values of points having the same first n 1 coordinates. The resulting interpolant approximates the n 1 Euclidean distance between y = ( x 1 ; : : : ; x n 1 ; t )and @t = @ jyn=t.</p><p>Once this approximated distance field is available, the surface of the object can be determined by the zero points of the distance field, or, in the discretized version, by the boundary between the positive and negative valued lattice points, while the volume itself (its interior) is defined as the set of all negative valued points.</p><p>Formally, the DFI method defines an approximated domain e as follows: For y = ( x 1 ; : : : ; x n 1 ; t )we first define the interpolant dx(t) (x = ( x 1 : : : x n 1 ) ) by univariate interpolation of the</p><formula xml:id="formula_1">values fDt j (x)g M j=0 . Now, e = f y j d x ( t ) 0 g :<label>(3)</label></formula><p>For more details on the choice of the interpolation method, and for approximation rate analysis see <ref type="bibr" target="#b13">[14]</ref>.</p><p>Clearly, this method can be used for contour blending, where the problem of matching and interpolating the deformations of 2D objects can be viewed as a 3D shape reconstruction. The DFI tool is insufficient, in general, but it works well provided that the 2D objects are not too different, and that they are properly aligned. The approach taken in this work to overcome this restriction is the combination of DFI with a proper warp transformation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">WARP-GUIDED DFI BLENDING</head><p>Let us consider for simplicity the blending of two objects, S = 0 and T = 1 . DFI gives us a method of blending by interpolating (linearly) between the distance functions D0 and D1, as described in Section 2. We call this blending process the no-warp DFI blending. No-warp DFI blending is quite restricted, and may produce unsatisfactory results. To demonstrate this, consider the case when T is just a rotation of S, and S is just a thin rod. No-warp DFI blending at t = 1 2 gives either a very small object, or an empty object, which is not the naturally-expected result. On the other hand, no-warp DFI blending works nicely if S is a thin rod and T is just the rod S without its middle third.</p><p>Consider now the possibility that T is obtained by a transformation (warp) of S, i.e., T = W1(S). Further, let us assume that T gradually evolves from S, through a continuum of objects Wt(S),</p><p>where fWtg t2[0;1] are smooth transformations, smoothly changing with t, and W0 I is the identity transformation. In such a case the blending can be defined by the warp itself; this is pure-warp blending. Pure-warp blending is very restricted, as it does not allow changes in the genus of the objects.</p><p>We now hybridize the two different methods into a more powerful tool. The first step of the hybrid method is to find a smooth warp fWtg t2[0;1] such that W1(S) T in some chosen sense. Then the DFI method is applied, now guided by the warp fWtg. Note that the warp is operating in IR n 1 and the interpolation of the distance field is performed along the n th dimension. As stated above, we first find a smooth warp fWtg t2[0;1] such that W1(0) 1 :</p><p>In addition, we use the two signed distance functions D0 and D1 as defined by Eq. <ref type="formula" target="#formula_0">2</ref>. For x = ( x 1 ; : : : ; x n 1 )we then interpolate the values D0(W0(x)) and D1(W1(x)) with respect to the parameter t, denoting the interpolant dx(t). The approximated domain e defined by the hybrid warped DFI procedure is e = f y = ( W t ( x ) ; t )jd x ( t )0g:</p><p>The way we choose to define the approximated warp Wt is derived from several applications. We are given N points fp0;ig N i=1 in the source domain and their corresponding target points fp1;ig N i=1 . Later we refer to these points as anchor points. The warp is to be determined so that W1(p0;i) = p 1 ;i ; 1 i N : <ref type="bibr" target="#b5">(6)</ref> The warp function maps the source (level zero) anchor points to their corresponding target (level one) points, while other points in the source domain comply to those constraints. A warp defined by anchor points is attractive because it is naturally applicable in any dimension. However, other tools for higher dimensions are also possible <ref type="bibr" target="#b12">[13]</ref>. From the user point of view, this method is intuitive and very easy to handle. It also has the advantage of being robust and very stable in the sense that the results are not very sensitive to small perturbations in the anchor points.</p><p>We now define the warp transformation based on anchor points for the case n = 3 , i.e., the cross-sections are in IR 2 . As stated earlier in the introduction, to achieve control over the shapes of the in-between objects, the warp transformation Wt is decomposed into a rigid part and an elastic part. To explain the motivation here, let us view a very simple case: Consider the blending of two objects in IR 2 , S = 0 and T = 1 , where T = RS and R is a rotation in angle . There are two obvious options for defining a warp Wt. One is the linear interpolation warp Wt = ( 1 t ) I + tR. The other is the linear rotation warp Wt = Rt. Both warps vary smoothly from the identity I at t = 0 to R at t = 1 . However, the second option is the preferable one since it is an isometry for any t, i.e., non-distorting. Now consider the case where T is obtained from S by a rotation R, a translation c, and an elastic transformation E, i.e., T = E(RS +c). In the following we will choose the rotation R and the translation c so that E is as close as possible to I, in some sense (see <ref type="figure" target="#fig_1">Figure 3)</ref>. The warp Wt is defined by</p><p>Wt(x) = ((1 t)I + tE)(Rtx + tc) ; x 2 I R 2 : Next, we will describe how to obtain the rotation, the translation and the elastic transformation.</p><p>We start with given sets of pair anchor points in IR <ref type="bibr" target="#b1">2</ref>  Imagine that the transformed points fRp0;i + cg are connected by identical elastic springs to the corresponding points fp1;ig. The form Q represents the elastic energy of this system, and the rigid transformation which minimizes Q, brings 0 to an equilibrium position in the springs' system.</p><p>The above least-squares fitting problem of the two sets of anchor points in IR 2 is solved using an explicit algorithm, which involves the singular value decomposition (SVD) of a 22 matrix ( <ref type="bibr" target="#b1">[2]</ref>). As a result, we obtain a 22 rotation matrix, R = R, and a translation vector c. The warp transformation in the 2D case is defined by Wt(x) = E t ( R ( t ) x + c ( t )) ;</p><p>with Et = ( 1 t ) I + tE ; (t) = t ; c(t) = tc :</p><p>Once we have computed the rigid transformation, we move on to calculating the elastic transformation. In accordance with Equations (6) and (9), we look for a transformation E, in general a nonlinear transformation, E : IR 2 ! IR 2 , such that E(Rp0;i + c) = p 1 ;i ; 1 i N :</p><p>This is a multivariate scattered data interpolation problem, which we suggest solving by Radial Basis Functions, abbreviated RBF <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b0">1]</ref>. In IR 2 this means solving two interpolation problems in IR 2 , for each component of the vector equation <ref type="bibr" target="#b10">(11)</ref>.</p><p>Radial basis functions have proven to be an effective tool in multivariate interpolation problems of scattered data. Given the scat- we look for an interpolatory function S(x) of the form</p><formula xml:id="formula_8">S(x) = N X i =1 aig (k x xi k) ; (12)</formula><p>where k k denotes the usual Euclidean norm on IR d and g : IR + ! IR. A function of this type is usually referred to as a pure radial sum. Using radial functions reflects the fact that the scattered data has no preferred orientation. Other multivariate approximations, generalizing the univariate splines, use augmented radial sums, where the sum in Eq. <ref type="formula">12</ref>is augmented by a low degree polynomial. Our discussion is mainly concerned with the two-dimensional case (d = 2 ). We define the elastic transforma-</p><formula xml:id="formula_9">tion E : IR 2 ! IR 2 as E(q) = L ( q ) + Z ( q ) (13)</formula><p>where L is a linear transformation and Z is of the form Z(q) = ( S 1 ( q ) ; S 2 ( q ))</p><p>where Sk(q) = P N i =1 a k i g(kq qik), for 1 k 2, q = (q 1 ; q 2 )2I R 2 ,g:I R + !I Ris a univariate function, k k is the Euclidean norm on IR 2 , and fqig for i = 1 ; 2 ; : : : ; Nare the source anchor points after the rigid transformation has been applied to them.</p><p>The above definition of the transformation E, includes a linear part L. This linear part is added because pure radial sums often yield poor approximation of the transformation for points away from the anchor points. Moreover, the linear part is natural here since we would like to reconstruct exactly those transformations E which are affine, and especially the identity transformation.</p><p>A proper choice of g is also important. Choosing g as a function with a fast decay, for example, the Gaussian g(r) = exp( r 2 = 2 ) with a small , results in a finer local influence of the radial part, which can be used to obtain different effects for various parts of the object. Another choice is g(r) = r 2 log(r), which has a global effect <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b15">16]</ref>. In the following we describe the computation of the elastic warp in IR 2 .</p><p>After computing the rigid part, namely, the rotation R, and the translation c, the elastic mapping E is defined by the following N interpolation conditions: E(Rp0;i + c) E(qi) = p 1 ;i yi ; i = 1 ; : : : ; N ; <ref type="bibr" target="#b14">(15)</ref> where qi = ( q <ref type="bibr" target="#b0">1</ref> i ; q 2 i ) T , and yi = ( y 1 i ; y 2 i ) T . This interpolation problem is always solvable if we use an augmented radial approximation (with a properly chosen g) of the form</p><formula xml:id="formula_11">E(q) = N X i =1</formula><p>aig (kq qik) + Aq + 3;</p><p>where</p><formula xml:id="formula_13">A = ( 1 ; 2 ) T , a i 2I R 2 , 1iN , T 2I R 2 , 1` 3 .</formula><p>Thus, E is determined by N +3coefficients in IR 2 . The computation of these coefficients involves the solution of two square linear systems of size N + 3 each, where N conditions are derived by the interpolation requirements, as defined in <ref type="bibr" target="#b14">(15)</ref>, and the additional compatibility conditions are</p><formula xml:id="formula_14">N X i=1 a k i = N X i=1 a k i q 1 i = N X i=1</formula><p>a k i q 2 i = 0 ; k = 1 ; 2 :</p><p>These conditions guarantee that the transformation is affine reducible, i.e., the transformation is purely affine whenever possible. The system of equations for the vectors of unknowns uk = (a k 1 ; :::;a k N ) T and vk = ( k 1 ; k 2 ; k 3 ) T , k=1,2, is</p><p>Guk + Hvk=bk H T uk= 0 ; <ref type="bibr" target="#b16">(17)</ref> where bk = ( y k i ; 1 g , 1iN .</p><p>Now that the warp transformation Wt is fully defined, the warped DFI approximation can be obtained by applying the definition of Eq. (5). In the following section we describe the application of the method in a discrete environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">IMPLEMENTATION DETAILS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">2D Distance Transform</head><p>Given a two-dimensional object, described by its boundary contour, its 2D distance field is generated by first rasterizing the contour into a binary discrete image consisting of binary valued pixels. Feature pixels are defined as those which either intersect the boundary of the object (i.e., the 2D contour) or are contained within it. Assume now that the feature pixels are contained in a rectangular discrete image at a certain resolution. Given a binary 2D discrete image, we convert it into a distance field image by applying to it a 2D discrete distance transform, as introduced in <ref type="bibr" target="#b4">[5]</ref>. This distance transform assigns to each non-feature pixel the distance to its nearest feature pixel, while the feature pixels are assigned the value zero.</p><p>However, for our application, this basic computation of the distance transform needs to be extended to evaluate the distances of the feature pixels as well as the non-feature pixels, as defined by Eq. (2). To match this definition, we switch the roles of the feature and the non-feature pixels, and repeat the distance transform to compute a second distance field image, containing the distances of the feature pixels to the nearest non-feature pixel. All the positive distance values in the second distance field are negated, and the two discrete distance fields are combined (by discarding the zero valued distances in both images), to yield the representation of Eq. (2).</p><p>The source and the target 2D shapes to be blended are represented as discrete Distance Field images (DF-images). Constructing the intermediate object essentially requires us to generate its discrete DF-image, out of which its boundary can be extracted using an edge-detector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">The Discrete Blending Procedure</head><p>In this section we present the blending procedure used to generate the intermediate DF-image in a discrete representation. The formal definition of the warped DFI method is given in Eq. <ref type="bibr" target="#b4">(5)</ref>. However, the implementation of this formula in a discrete environment is not straightforward, and involves an additional discretization approximation. For clarity, let us consider the procedure for the case of two 2D objects, S = 0 and T = 1 . As explained in the introduction, the blending procedure combines two simultaneous processes: warping and cross-dissolving. The warp mapping is determined by the mapping of the anchor points, while the cross-dissolving is performed by interpolating the distance values of corresponding pixels. We combine two backward mappings, as described below with respect to <ref type="figure" target="#fig_5">Figure 4</ref>, in order to perform this process.</p><p>Let D0 and D1 be the two DF-images of the source and the target objects, respectively, and let us denote the DF-image of the desired intermediate object Dt . We assume that all these DF-images and the anchor points are contained within a finite set X of IR <ref type="bibr" target="#b1">2</ref> .</p><p>Constructing the intermediate DF-image Dt requires evaluation of the correct distance value to be associated with each of the pixels at level t. The first step of this process is to apply the warp transformation Wt, as defined in Eq. <ref type="formula" target="#formula_5">9</ref>, to the source anchor points, in order to find the location of the anchor points in the intermediate level. These points are denoted fmi Wt(p0;i)g N i=1 . In the next step, for any pixel at level t we want to find the corresponding pixels at levels 0 and 1. This is done using the two backward mappings B1 and B2, such that B1 ; B 2 : X ! I R 2 , and B1(mi) = p 0 ;i ; B 2 ( m i ) = p 1 ;i ; i = 1 ; : : : ; N :</p><p>It is important to note here that while B1 is the inverse of Wt at the anchor points, this does not necessarily hold for other points.</p><p>Finding B1 and B2 is done by the process described in the previous section.</p><p>Once B1 and B2 are available, Dt is generated as follows: For each pixel p 2 X, the distance value Dt(p) is evaluated by Dt(p) = ( 1 t ) D 0 ( B 1 ( p )) + tD1(B2(p)); <ref type="bibr" target="#b18">(19)</ref> where the discrete distance functions D0 and D1 are extended to X by bilinear interpolation. Hence, the two distance values of the corresponding pixels at levels 0 and 1 are interpolated linearly. For some pixels p 2 X, it may occur that either B1(p) or B2(p) is not in X, in which case we assign an approximated distance value to this point, by adding the distance from this point to the distance value of its nearest pixel in X. To speed up the computation, the bilinear interpolation can be applied only to distance values which are close to zero, since this is where the boundary is located, and avoided elsewhere.</p><p>Figures 6, 7 and 8 show three sequences of blending between 2D contours. The algorithm is given either a set of two images of the two contours, as in <ref type="figure" target="#fig_7">Figures 6 and 7</ref>, or as in <ref type="figure">Figure 8</ref>, where the black pixels are interpreted as the object, and the contour is the boundary of the object. We then apply a 2D distance transform to the images. <ref type="figure" target="#fig_6">Figure 5</ref> demonstrates the warp-guided DFI process, where the source and target distance fields are warped one towards the other, and then interpolated to produce the intermediate distance field. We implemented the algorithm on an SGI R4400 machine. The computation of each of the two distance field takes less than one second, on an image of size 256 2 . An edge-detector is then used to reconstruct the contours from the warped Distance Field images.</p><p>The anchor points are marked on the source (top left) and the target (bottom right) objects of these three sequences <ref type="figure" target="#fig_7">(Figures 6 -8</ref>). As can be seen in <ref type="figure" target="#fig_7">Figures 6 and 7</ref>, the rigid part of the transformation dominates the overall transformation, so that the source object is rotated to match the general position of the target object, while the finer features, like the front legs of the dinosaur in <ref type="figure" target="#fig_8">Figure  7</ref>, slowly evolve to their corresponding features by the elastic part. The fact that blending can be applied to objects having a different number of connectivity components is demonstrated in <ref type="figure">Figure 8</ref>, where two cocks are blended into a deer.</p><p>We examined two choices of radial basis functions for computing the elastic warp. The Gaussian function g(r) = exp( r 2 = 2 ) is used in <ref type="figure" target="#fig_7">Figures 6 and 7</ref>, with 3 = 3 0 pixels in images of size 256 2 . The thin-plate-spline basis function g(r) = r 2 log(r) is used for the example in <ref type="figure">Figure 8</ref>. For more details on the choice of radial functions, see <ref type="bibr" target="#b0">[1]</ref>. For a comparison of run-times using radial basis functions transformations, see <ref type="bibr" target="#b15">[16]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>The paper presents a method of blending between two (or more) 2D objects having boundary contours of general topology using extended distance field interpolation. The blend of the contour is guided by linked control points which define a warp function. The warp function is decomposed into a rigid part and an elastic part in order to reduce the distortion of intermediate models. The rigid transformation serves as an approximation to the overall warp transformation, which yields better control over the path of the inbetween shape throughout the blend. The advantage of this approach is that it can deal with most general object representations, and no correspondence between the models' geometric primitives (e.g., vertices) need be established. The desired general correspondence is defined by the user in terms of a relatively small number of anchor points. These points may be manually defined by the user or automatically defined by matching features in the cross-sections. Moreover, the input objects need not necessarily have the same representation or the same topological genus, and can have a different number of connectivity components.</p><p>Since the algorithm focuses on the precise localization of the boundary contour of the objects, the boundary length and the area of the intermediate objects vary very smoothly and monotonically and the intermediate contours are not distorted by high-frequency features. This is mainly because the distance values to the boundary change smoothly during the transformation. In addition, the method presented here allows an intuitive and simple manual intervention of the user who can control the blend process by prescribing a small number of anchor points.</p><p>The presented method can be extended to allow even more flexibility in controlling the blending process. It can use a different function of the time parameter t at different regions, thus achieving control over the speed of the blending in different parts of the objects. Extensions to 3D surfaces are currently being investigated.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 2 :</head><label>2</label><figDesc>Reconstruction of a 3D object out of three equally spaced 2D horizontal cross-sections. (a)-(c) The three cross-sections. (d) Reconstructed 3D object from the gray-level interpolation values, after applying thresholding. (e) Reconstructed 3D object from the distance-field interpolation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 :</head><label>3</label><figDesc>The rigid part minimizes the work of the elastic part. (a) The blending with the rigid transformation, and (b), without it.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>, fp0;ig N i=1 and fp1;ig N i=1 . The rigid part of the transformation is defined by the rotation R and the translation c, which minimize</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>tered d-dimensional data (xi; F i ) ; x i 2 I R d ; F i 2 I R ; i = 1 ; 2 ; : : : ; N ;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>1 ;</head><label>1</label><figDesc>:::;y k N ) T , G = f g(kqi qjk) g N i;j=1 and H is an N 3 matrix with an i-th row fq 1 i ; q 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>The transformations involved in the generation of Dt. Wt maps the anchor points and B1 and B1 backmap the distance values.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Warp-Guided DFI. (a) The source Distance Field warped towards the target. (c) The target Distance Field warped towards the source. (b) The intermediate interpolated Distance Field. The contours are highlighted in white and the distances appear in absolute values.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 6 :</head><label>6</label><figDesc>2D blending between a cock and a duck.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 7 :</head><label>7</label><figDesc>2D blending between a dinosaur and a lion.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOLEDGMENTS</head><p>The authors would like to thank Gershon Elber and Nur Arad for providing many helpful comments on early drafts.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Image Warping using Few Anchor Points and Radial Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Arad</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Reisfeld</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="35" to="46" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Least-Squares Fitting of Two 3-D Point Sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">S</forename><surname>Arun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D</forename><surname>Blostein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. On Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="698" to="700" />
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Piecewise Linear Interpolation between Polygonal Slices</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Barequet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sharir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision, Graphics and Image Processing: Image Understanding</title>
		<meeting><address><addrLine>Stony Brook, NY</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-01" />
			<biblScope unit="volume">63</biblScope>
			<biblScope unit="page" from="93" to="102" />
		</imprint>
	</monogr>
	<note>Proc. 10th Ann. ACM Symp. on Computational Geometry</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Feature-based Image Metamorphosis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Beier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Neely</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;92 Proceedings)</title>
		<editor>Edwin E. Catmull</editor>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Distance Transformations in Digital Images</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Borgefors</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Vision, Graphics, and Image Processing</title>
		<imprint>
			<date type="published" when="1986-06" />
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page" from="344" to="371" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Interpolation and Approximation by Radial and Related Functions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Dyn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Approximation Theory VI</title>
		<editor>L.L. Schumaker C.K. Chui and J.D. Ward</editor>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="211" to="234" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Polygon Morphing Using a Multiresolution Representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Goldstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface &apos;95</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Wavelet-based Volume Morphing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;94</title>
		<editor>D. Bergeron and A. Kaufman</editor>
		<meeting>Visualization &apos;94</meeting>
		<imprint>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="85" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Shape-Based Interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">T</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Bucholtz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="69" to="79" />
			<date type="published" when="1992-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Scheduled Fourier Volume Morphing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;92 Proceedings)</title>
		<editor>Edwin E. Catmull</editor>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="43" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Shape Transformation for Polyhedral Objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">R</forename><surname>Kent</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Carlson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Parent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="47" to="54" />
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Image Metamorphosis Using Snakes and Free Form Deformations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">Y</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">Y</forename><surname>Chwa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">Y</forename><surname>Shin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wolberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;95</title>
		<meeting>SIGGRAPH &apos;95</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="439" to="448" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Feature-Based Volume Metamorphosis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lerios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Garfinkle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;95</title>
		<meeting>SIGGRAPH &apos;95</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="449" to="456" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Multidimensional Reconstruction by Set-valued Approximation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Levin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IMA J.Numerical Analysis</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="173" to="184" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Distance Field Manipulation of Surface Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Payne</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W</forename><surname>Toga</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="65" to="71" />
			<date type="published" when="1992-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Image Warping with Scattered Data Interpolation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Ruprecht</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Muller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="37" to="43" />
			<date type="published" when="1995-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">2-D Shape Blending: An Intrinsic Solution to the Vertex Path Problem</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">W</forename><surname>Sederberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Mu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;93</title>
		<meeting>SIGGRAPH &apos;93</meeting>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="15" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">A Physically Based Approach to 2D Shape Blending</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">W</forename><surname>Sederberg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Greenwood</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH &apos;92</title>
		<meeting>SIGGRAPH &apos;92</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992-06" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="25" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Shape Blending Using the Star-Skeleton Representation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Shapira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Rappoport</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="44" to="50" />
			<date type="published" when="1995-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Digital Image Warping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Wolberg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>IEEE Computer Society Press</publisher>
			<pubPlace>Washington, DC</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">2D blending between two cocks and a deer. Note that the source and the target objects have a different topological genus</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
