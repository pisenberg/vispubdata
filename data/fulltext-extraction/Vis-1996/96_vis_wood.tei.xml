<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Visualization Over The World Wide Web And Its Application To Environmental Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jason</forename><surname>Wood</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Leeds</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ken</forename><surname>Brodlie</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Leeds</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Helen</forename><surname>Wright</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Leeds</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Visualization Over The World Wide Web And Its Application To Environmental Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:34+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>This paper explores the way in which data visualization systems, in particular modular visualization environments, can be used over the World Wide Web. The conventional approach is for the publisher of the data to be responsible also for creating the visualization, and posting it as an image on the Web. This leaves the viewer in a passive role, with no opportunity to analyse the data in any way. We look at different scenarios that occur as we transfer more responsibility for the creation of the visualization to the viewer, allowing visualization to be used for analysis as well as presentation. We have implemented one particular scenario, where the publisher mounts the raw data on the Web, and the viewer accesses this data through a modular visualization environment-in this case IRIS Explorer. The visualization system is hosted by the publisher, but its fine control is the responsibility of the viewer. The picture is returned to the viewer as VRML, for exploration via a VRML viewer such as Webspace. We have applied this to air quality data which is posted on the Web hourly: through our system, the viewer selects what data to look at (i.e. species of pollutant, location, time period) and how to look at it-at any time and from anywhere on the web.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>The World Wide Web has revolutionalised the way we access information. Sources of data can remain with the originator, or publisher, and the receiver, or viewer, of the data can access it conveniently over the Internet, using a Web browser such as Mosaic or Netscape. This model of working allows the publisher to keep the information continuously up to date, so the viewer gets data that is current at the time of query. An obvious attraction of the Web is that the data may be in pictorial form: images for example have been a central part of the Web from its inception. Indeed the scientific community has been quick to exploit the potential of the Web for marketing and promotion, and research groups are now able to present their work as multimedia documents, with images and animations of their results. However this surely is only the start. These images and video clips are passive, a posteriori views of the research, in which the visualization is created by the publisher of the data and the viewer merely looks at the pictures as though leafing through a book. The medium of the Web offers far greater opportunities. There is scope for active participation by the viewer in the way data is visualized. Indeed we need to provide this if we are to use visualization on the Web as an analysis tool, rather than just as a tool for the presentation of results. In this paper, we look at some of the possibilities that are available. We begin in section 2 with a very simple reference model in which there are two 'players': the publisher of the data, and the viewer of the data. Different scenarios arise according to who has the responsibility for creating the visualization: the conventional Web model gives the publisher responsibility, but it is possible to allocate responsibility to the viewer, or there can be a shared responsibility. Section 3 describes the implementation using IRIS Explorer of the shared responsibility case: the publisher posts the data, and provides a visualization framework, but delegates precise control to the viewer. In section 4 we apply this technology to the visual monitoring of environmental information, allowing interested parties to view pollution data at any time, at any place. In section 5 we conclude with thoughts on other applications of these ideas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">A REFERENCE MODEL FOR VISUALIZATION OVER THE WEB</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Visualization Reference Model</head><p>The reference model which has underpinned much of modern scientific visualization is that proposed by Upson et al <ref type="bibr" target="#b10">[11]</ref> and Haber and McNabb <ref type="bibr" target="#b5">[6]</ref>. This model sees the visualization process as a pipeline, in which a source of data is fed in, and successively filtered, mapped and rendered to create a final image. The filter process selects the data of interest -perhaps a cross-section; the map process creates an abstract geometrical representation of the data -perhaps a contour map; and the render process takes the 3D geometry from the map process, and applies lighting, shading and projection to create an image. This pipeline is shown in <ref type="figure" target="#fig_0">Figure 1</ref> it has of course proved the implementation model for the family of dataflow visualization systems, or Modular Visualization Environments (MVEs) that includes AVS, IRIS Explorer, IBM Data Explorer and Khoros (see <ref type="bibr" target="#b2">[3]</ref> for an overview).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Data</head><p>Image F R M Publisher Viewer This model can help us understand visualization over the Web: the data clearly begins with the publisher; the image clearly ends with the viewer; but different scenarios occur when we consider who has responsibility for the intermediate processes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Scenario 1 -Publisher creates the visualization as an image</head><p>This is the status quo on the Web. The person with the information creates a visual representation and posts it as an image, or as a video sequence, on the Web. The viewer can study this, either directly from the browser, or via a helper application such as xv or an mpeg player. This scenario is shown in <ref type="figure">Figure 2</ref>, with the interpretation in terms of the reference model alongside. Already the limitations of this approach are being criticised: images are often large in size, and when they arrive, they are 'dead': the viewer has little opportunity to manipulate them. This leads naturally to the next scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Scenario 2 -Publisher creates the visualization as a 3D model</head><p>There is much current interest in VRML, which allows the publisher to create a 3D model rather than an image; the viewer can now render the model as they wish, with the chance to walkthrough in 3D space. This is a significant advance (though only paralleling the development of computer graphics itself in the 1960-1970 era). This scenario is illustrated in <ref type="figure">Figure 3</ref>. The publisher provides VRML, and the viewer looks at this using a browser such as Webspace. These two scenarios allow the viewer to see the results, largely as they are seen by the publisher. Admittedly, in the VRML case, the viewer has much more freedom to explore -but the abstract model of the data has been fixed in both cases by the information provider.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Scenario 3 -The viewer creates the visualization</head><p>A different scenario occurs when the viewer has the responsibility for the visualization. <ref type="figure">Figure 4</ref> shows the publisher posting the raw data on the Web: the viewer accesses the data and uses a visualization system, say an MVE such as IRIS Explorer, as the helper application to investigate the data.</p><p>In terms of the visualization reference model, the entire pipeline moves to the viewer. This approach has a number of advantages:</p><p>• the viewer has full freedom to explore the data • the data can not only be visualized, but also subjected to statistical analysis and some disadvantages:</p><p>• the viewer must have suitable visualization software and the knowledge of how to use it • the viewer must have the processing power available to run the visualization system There are further problems. There is no standard for visualization -different packages use different data models. Do we agree on one visualization system for the Web and ask data originators to provide data to the data format for that system -for example, the IRIS Explorer lattice and pyramid datatypes; or the AVS field datatype? A possible solution is to allow a number of data formats as secondary MIME types -this is the strategy being followed by molecular chemists who have proposed a Chemistry MIME type <ref type="bibr" target="#b11">[12]</ref>. This accepts that there are a range of formats in common use, such as pdb for example, and includes them as secondary types. One system using this MIME mechanism is FASTtrek from NASA Ames Research Centre <ref type="bibr" target="#b3">[4]</ref>. Here a platform dependent (SGI) visualization system is provided which is started as a helper application when an object of the particular mime type is encountered. This system allows local visualization of data  <ref type="figure">Figure 3</ref> : Scenario 2. Getting 3D Objects across the WWW provided in the appropriate format using a number of possible techniques. Added to this is the capability to run collaborative sessions and to play back visualizations created by others by means of a script. Thus in terms of the reference model FASTtreks correspond essentially to <ref type="figure">Figure 4</ref>, but the scripts (provided by the publisher) set up an initial framework for the visualization that executes in the viewer's environment; once this framework is set up, the viewer may then take control. This system still encounters the previously mentioned disadvantages of this scenario.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.5">Scenario 4 -Publisher creates visualization framework, viewer chooses the options</head><p>The previous scenarios have given responsibility for the creation of the visualization either to the publisher (scenarios 1 and 2) or to the viewer (scenario 3). In both cases there are drawbacks: leaving it to the publisher is very inflexible, and inhibits the viewer; yet giving entire responsibility to the viewer imposes serious requirements on the computing power and expertise available at the receiving end. Of course this is just another facet of the ongoing debate on whether computer processing should be centralised and results delivered as a network service -or whether processing power should be distributed to the end-user.</p><p>There is a compromise solution, offering in some senses the best of both worlds, in which publisher and viewer share the responsibility. We suppose the publisher provides the processing power and the basic visualization framework appropriate for the data concerned, but we give the viewer responsibility for the fine control of the options within that framework. <ref type="figure">Figure 5</ref> shows this scenario: the pipeline runs on a server associated with the publisher, but control of that pipeline resides with the viewer. Note that the render responsibility resides entirely with the viewer (as in scenario 2), with VRML being delivered by the publisher. Thus the viewer of the data controls the visualization. Notice the complexity of the visualization software remains with the publisher -the user interface can be a simple form in which options are selected and passed to the server. Indeed in the next section, we describe an implementation of this scenario in terms of IRIS Explorer. An example of this scenario was created by Ang et al <ref type="bibr" target="#b0">[1]</ref> but centred around a custom volume visualization package called VIS. This was very closely coupled to their extended Mosaic WWW browser and other integrated tools for volume visualization. It allows the user to specify a view point and a number of parameters that it sends to the server which renders the scene and returns the image to the browser. This system covers a </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">A VISUALIZATION WEB SERVER</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Visualization Server Architecture</head><p>Our aim then is to use the model of scenario 4 to develop a system architecture for a visualization web server. The data and the visualization framework will reside with the publisher -we shall assume now that this framework is to be provided by one of the family of MVEs. IRIS Explorer <ref type="bibr" target="#b4">[5]</ref> was used in this implementation, but the same system architecture would apply to almost any MVE. The viewer will drive the visualization from a standard Web browser -their visualization requests will be delivered to the server, the 3D abstract model created as directed, and this model returned to the viewer as VRML. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Implementation Using IRIS Explorer</head><p>Firstly a form is created by the publisher that contains the parameters that may be set by the viewer. Obviously this form will be particular to the data service being offered. Once the viewer has set the values they require the form is submitted and the web server passes the information to a Common Gateway Interface (CGI) script which runs at the publisher's site. This script contacts the visualization server and passes on the values selected by the viewer. This server is then able to generate the appropriate scripting commands to drive the visualization system to create the requested visualization. In the case of IRIS Explorer, this involves generating Skm commands. These can set parameters of modules in an Explorer dataflow network, or map, that has been created previously by the publisher. Indeed it is possible to allow simple configuration of the map 'on-the-fly' by including switch modules whose values can be set by the viewer through the form interface. The final output from the IRIS Explorer map will be geometry data, which is passed back to the CGI script. This script then processes this geometry data to build a VRML scene which is returned to the viewer. Subsequent alterations may be made to the values by the viewer and the form re-submitted to the system to allow further investigation of the data. IRIS Explorer is an attractive vehicle for this architecture, for a number of reasons:</p><p>• it can be driven by a script as well as by visual programming • its geometry processing is based on Open Inventor, whose file format is the basis of VRML. <ref type="figure" target="#fig_2">Figure 6</ref> shows this architecture with its realisation in terms of IRIS Explorer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">APPLICATION TO ENVIRONMENTAL DATA</head><p>Pollution data is of interest to us all -to the general public and especially those with illnesses triggered by poor air quality; and to the scientists who are seeking to understand the causes of pollution, and predict its future levels. In the UK, the National Atmospheric Emission Inventory (NAEI) is funded by the Department of the Environment to estimate and monitor emissions of a wide range of air pollutants. Measurements are made at a number of selected sites located throughout the UK. The pollutants monitored include those which have a global impact -the 'greenhouse' gases: carbon dioxide, methane and nitrous oxide; and those which have a more local effect, such as photochemical pollution (ground level ozone) and acid deposition (acid rain): sulphur dioxide, nitrogen oxides, carbon monoxide and ammonia; plus metals such as lead, and other pollutants such as pesticides. The data is sent from the observation points to the National Environmental Technology Centre at Culham, in Oxfordshire, who make the collected data publicly available on an hourly basis on their Web site <ref type="bibr" target="#b12">[13]</ref>. This provides an important archive of environmental data. It is largely in numeric form. However some of the data has been processed into simple graphs, and these made available as GIF images. For example, <ref type="figure" target="#fig_3">Figure 7</ref> shows the concentration of Benzene recorded in Liverpool over a 6 week period (Provisional Data). In terms of our reference model, this corresponds to scenario 1 <ref type="figure">(Figure 2</ref>) -the visualization is created by the publisher, the viewer plays only a passive role. The requirements are surely much greater.</p><p>Certainly a visualization of the data is central. But the viewer -whether general public or scientist -wants the freedom to select the data to be visualized, and also how it is to be visualized. Moreover they want to be able to look at today's data -not wait a week until the next set of images are created. The technology outlined in the previous section allows us to achieve this. We have built a prototype pollution visualizer which makes the NAEI data available in pictorial form -at any time, and from anywhere on the Web. The user points their browser at a Web page that hosts the 'Air Quality Data Visualization' service, and enters via a forms interface the species of pollutant, the location and the time period of interest. These selections allow different correlations to be examined: one species at a series of locations over a period of time; or several species at the same location. The visualization can be a simple 1D plot (as provided before, but now with the user in control of data selection) -or more valuably, a 2D plot of concentrations against time and location or species. Once the selection is made, the relevant dataset is retrieved, and IRIS Explorer fired up with a map which will create an appropriate view of the data. The resulting geometry is output as VRML, and passed back to the user as described in the previous section. Some example output is shown here where the user has selected from the forms interface to view Ozone data from London covering the 25 day period from June 1st 0 hours to June 25th 23 hours using a 1 day period on the x-axis. Two views are possible: a block chart <ref type="figure" target="#fig_4">(Figure 8)</ref>, with pillars indicating the discrete data readings; or a smooth surface view ( <ref type="figure" target="#fig_5">Figure 9</ref>) which often gives a better visualization of trends in the data. The 2D plots are returned as 3D geometry, whose view can be manipulated by the user -to look from behind for example. A problem occurs with missing data values. It is important to show these as missing, but also important that they do not distort the view of the data that is available. Our solution has been to assign a value by interpolation (using the NAG Library implementation -E01SAF / E01SBF -of the Renka and Cline scattered data modelling algorithm <ref type="bibr" target="#b8">[9]</ref>) to any location with missing data: this gives a consistent geometry. At the rendering stage, the missing values are highlighted by assigning transparency to the surface in the areas of missing data. In this way, the visualization of the smooth surface is not unduly affected by the missing data. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>CONCLUSIONS AND FUTURE WORK</head><p>We have described a number of scenarios in which visualization and the Web can interact. These lead to architectures which basically differ according to who has the responsibility for creating the visualization:</p><p>• the publisher of the data • the viewer of the data • shared responsibility -the publisher creates the framework, the viewer controls the final visualization. We have implemented an instance of the third architecture, using IRIS Explorer as the base visualization system hosted by the publisher, driven by controls operated by the viewer across the Web. We have described one application of the technology -to environmental data. However it is clear that this is a generic approach which can be applied to a variety of public information databases. The visualization is simply a filter placed between the raw data and the viewer. There are obvious applications to economic data, to meteorological data, to transport data, and so on -virtually any data posted on the Web could be accompanied by a visualization filter in this way. A by-product of this work is that we have provided a very simple interface to a visualization system. Thus the system has value for novice users, and in the teaching of visualization. Students can be shielded from the intricacies of dataflow networks, and left to focus on the different visualization techniques <ref type="bibr" target="#b1">[2]</ref>. In our specific example, we used the NAG Renka and Cline interpolation software to fill out missing values. More generally, interpolation is a fundamental operation in visualizationtypically we look at a model of the data rather than the data itself, and it is interpolation (explicit or implicit) that gives us the model. In a visualization web service, one might usefully provide a range of interpolation methods, so that a user could experiment with different techniques. Good reviews of interpolation for scientific visualization, based on scattered data are <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. The present form-based interface is simple, but limiting. A more advanced way of providing the user with interfaces would be to use Java <ref type="bibr" target="#b13">[14]</ref>, a platform independent programming language. Programs, called applets, are created in Java which can be pulled across the web and executed locally within the user's browser. This would allow us to extend the essentially 'dead' forms interface into an active interface that locally processes information provided by the user and only sends back to the visualization server the required information for the visualization. This would greatly reduce the number of interactions between browser and server to drive the visualization. A further step is to develop an 'intelligent' interface, which infers from a description of the data the type of visualization that might be appropriate (see for example, the thesis of Stead <ref type="bibr" target="#b9">[10]</ref>). So far, we have assumed that the data and the visualization framework are closely coupled, both the responsibility of the publisher. However the ideas of the previous paragraph allow us to envisage a separation. The publisher provides only the data and a description of it in a meta-language, and posts as a URL; the viewer selects the data and its description by pointing their browser at it; this is passed to a general WWW visualization server -somewhere on the Web -which takes the data and returns the visualization. We now have three players: the publisher, the viewer, and the intelligent visualization system. Finally, the Web offers great opportunities for collaborative computing. We have only described a very simple form of collaboration here: the publisher posts the data, for one or more viewers to pick up and study individually. The potential is much greater:</p><p>• several viewers could collaborate on the study of the data (VRML version 2 will allow the scenarios 2 and 4, for example, to be extended in this way.) • the viewers could report their results back to each other, by posting their visualizations as VRML files on the Web -in particular, this allows feedback to the publisher Other work on collaborative visualization can be embedded within these architectures -for example, the COVISA project which has developed a collaborative version of IRIS Explorer, could be integrated within scenario 3 above.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Visualization Pipeline</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Scenario 3. Visualizing data from across the WWW Scenario 4. Requesting Visualization across the WWW specific field of visualization and relies on the user having the extended browser. With respect to the reference model, this puts the line between R and Image with the user having some control over M and R.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 6 :</head><label>6</label><figDesc>Visualization Web Server</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 7 :</head><label>7</label><figDesc>Current data display method. (Provisional Data.)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 8 :</head><label>8</label><figDesc>Histogram View of Ozone from 3 sites in London. (Provisional Data)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 9 :</head><label>9</label><figDesc>Surface View of Ozone from 3 sites in London. (Provisional Data)</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">jason@dcre.leeds.ac.uk 2 kwb@scs.leeds.ac.uk 3 helenw@dcre.leeds.ac.uk 4 School of Computer Studies, University of Leeds, Leeds, LS2 9JT. UK. +44 113 2335430</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>We would like to thank a number of people who have helped us in this work with data, inspiration and funding! In particular, we wish to thank Brian Kelly, of the Netskills project at the University of Newcastle; Joel Smith of the University of Leeds for his help with the environmental data; Trevor Davies and Geoff Broughton of AEA Technology; John Tubby of Leeds Environment Department; and Jeremy Walton of NAG Ltd. This work was carried out under the EPSRC-funded COVISA project at the University of Leeds, which is looking at different aspects of collaborative visualization.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Integrated Control of Distributed Volume Visualization Through the World Wide Web</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C S</forename><surname>Ang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D C</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M D</forename><surname>Boyle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization 94 Conference</title>
		<meeting>IEEE Visualization 94 Conference</meeting>
		<imprint>
			<date type="published" when="1994-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Scientific visualization: Some novel approaches to learning</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J D</forename><surname>K W Brodlie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Wright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCSE/SIGCUE Conference</title>
		<meeting>ACM SIGCSE/SIGCUE Conference<address><addrLine>Barcelona</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Modular Visualization Environments: Past, Present and Future</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Cameron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="3" to="4" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interactive Visualization of Computational Fluid Dynamics Using Mosaic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Clucas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Second International WWW Conference &apos;94</title>
		<meeting>Second International WWW Conference &apos;94<address><addrLine>Chicago</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">IRIS Explorer: A Framework for Investigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Foulser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="13" to="16" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Visualization idioms: A conceptual model for scientific visualization systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R B</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D A</forename><surname>Mcnabb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Scientific Computing</title>
		<editor>B Shriver, G M Neilson and L Rosenblum</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="74" to="93" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualization and modeling of scattered multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Lane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="47" to="92" />
			<date type="published" when="1991-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Scattered Data Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="page" from="60" to="70" />
			<date type="published" when="1993-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A triangle-based C1 interpolation method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R J Renka</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A K</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Rocky Mountain Journal of Mathematics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Simplifying the visualization process</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G A</forename><surname>Stead</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
		<respStmt>
			<orgName>University of Leeds</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">The Application Visualization System: A computational environment for scientific visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Upson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="30" to="42" />
			<date type="published" when="1989" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Chemical applications of the web</title>
		<ptr target="http://chem.leeds.ac.uk/novel.html" />
		<imprint>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Air quality information home page</title>
		<ptr target="http://www.aeat.co.uk/netcen/airqual/welcome.html" />
		<imprint>
			<publisher>WWW</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">"</forename><surname>Www</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Java</surname></persName>
		</author>
		<ptr target="http://www.sun.com/sun-on-net/java/java.html" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
