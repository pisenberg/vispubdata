<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">VizLinter: A Linter and Fixer Framework for Data Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Qing</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Fuling</forename><surname>Sun</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Xinyue</forename><surname>Xu</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zui</forename><surname>Chen</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jiazhe</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Nan</forename><surname>Cao</surname></persName>
						</author>
						<title level="a" type="main">VizLinter: A Linter and Fixer Framework for Data Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">EC9365E756B4AACD7553D18AE622C93F</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.1" ident="GROBID" when="2022-06-13T13:51+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Fig. <ref type="figure" target="#fig_1">1</ref>. Four example cases of VizLinter. In each case, the chart on the left is the original visualization with errors, and the chart on the right is the one modified by VizLinter.</p><p>Abstract-Despite the rising popularity of automated visualization tools, existing systems tend to provide direct results which do not always fit the input data or meet visualization requirements. Therefore, additional specification adjustments are still required in real-world use cases. However, manual adjustments are difficult since most users do not necessarily possess adequate skills or visualization knowledge. Even experienced users might create imperfect visualizations that involve chart construction errors. We present a framework, VizLinter, to help users detect flaws and rectify already-built but defective visualizations. The framework consists of two components, (1) a visualization linter, which applies well-recognized principles to inspect the legitimacy of rendered visualizations, and (2) a visualization fixer, which automatically corrects the detected violations according to the linter. We implement the framework into an online editor prototype based on Vega-Lite specifications. To further evaluate the system, we conduct an in-lab user study. The results prove its effectiveness and efficiency in identifying and fixing errors for data visualizations.</p><p>Index Terms-Visualization Linting, Automated Visualization Design, Visualization Optimization</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Visualization tools, such as business intelligence software and programming toolkit, have gained plenty of users as visualization becomes popular across various domains <ref type="bibr" target="#b26">[27]</ref>. Common visualization tools often require users to set specifications of visualizations either through programming syntax or user interfaces. However, these operations demand users to have solid background knowledge in data analysis and visualization development. The rising demand for creating ap-  <ref type="bibr" target="#b62">[62]</ref>, intended tasks <ref type="bibr" target="#b12">[13]</ref>, and user behaviors <ref type="bibr" target="#b19">[20]</ref>. Machine-learning-based systems learn relationships between data and the corresponding legitimate visualizations directly <ref type="bibr" target="#b23">[24]</ref>. Although current recommendation systems are capable of fast-forwarding source data into proper visualizations, they are not always compatible with input data or the visualization requirements due to the limitation of fixed encoding rules and training data. Therefore, manual specifications are inevitable in practice. However, since users of automated systems tend to have inadequate expertise, it is difficult for them to make manual changes while following well-established visual design rationales.</p><p>Although manual adjustments are required when automated results cannot fulfill user needs, few existing works are capable of detecting errors and suggesting corrections for manual inputs. Some prior works are able to highlight problems <ref type="bibr" target="#b22">[23,</ref><ref type="bibr" target="#b24">25]</ref> or to lint, that is, flagging errors in the code for visualizations <ref type="bibr" target="#b33">[34]</ref>, but they do not provide any solutions to the detected problems. Other works concentrate on auto-completing user input specifications and recommending optimal alternatives by resolving predefined constraints in an end-to-end manner <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b36">37]</ref>. However, they do not present any explanations or suggestions on how to fix imperfect visualizations.</p><p>Therefore, programmatic solutions are still absent to detect breached visualization principles and resolve the violations with optimum operations. To remedy this absence, we construct a linter, which originally represents static code analysis tools to flag bugs or issues in the programming code, to detect violated rules in the visualization using Answer Set Programming (ASP) <ref type="bibr" target="#b30">[31]</ref>, a declarative constraint programming language which allows us to model high-level design knowledge into logical facts. An ASP program consists of Prolog-style rules a :-L_1, L_2, not L_3, not L_4., where a is the head of the rule and L_i are literals. The rule states that the head a is derived if L_1 and L_2 are true while L_3 and L_4 cannot be true. Specifically, the head of each rule in VizLinter is the rule id in the rule base and corresponding parameters, and each literal represents an attribute of the visualization. ASP enables easy maintenance and iteration on the rule base <ref type="bibr" target="#b10">[11]</ref>, currently refined from the Draco knowledge base <ref type="bibr" target="#b36">[37]</ref>. After violated rules are detected, we formulate a fixer for the broken rules using linear optimization with a designated reward function.</p><p>In this paper, we propose a novel linter and fixer framework for data visualization. It detects infringed rules in visualizations and provides solutions to those broken rules by optimizing through linear programming. We implement our framework for Vega-Lite-based visualizations, as Vega-Lite is a widely used language in the visualization community. Our implementation follows the pipeline as shown in Fig. <ref type="figure" target="#fig_0">2</ref>. It first translates input Vega-Lite specifications into ASP facts. The linter then checks against the facts via an ASP solver and detects the violated principles. Next, the fixer performs the action selected by the optimization algorithm and resolves the broken rules. To demonstrate the usefulness of the proposed framework, we develop a prototype and conduct a user study to assess its efficacy. According to the feedback, our framework is confirmed as helpful by providing ad-hoc prompts and solutions during the creation of visualizations. It can benefit not only business intelligence tool users but also more skilled practitioners and researchers. It is considered as accessible for many existing tools and systems to adapt as an extension and to assist direct development in Vega-Lite coding syntax. Besides, the study results indicate the pedagogical value of our framework as users are able to learn visualization specification rules through the interaction. While the current functionality is already valuable as an automatic error detection and correction tool, it is expected to lint and fix aesthetic or semantic-related issues as well in the next iterations. To summarize, our contributions are as follows:</p><p>• A linter-and-fixer framework. We present a novel linter-and-fixer framework for data visualization, which can examine for erroneous specifications and resolve them automatically. • A visualization linter. We refine the design principle constraints in Draco <ref type="bibr" target="#b36">[37]</ref> as a concrete rule base and construct a visualization linter to detect violations using ASP. • A visualization fixer. Using our proposed reward function and the operation transition costs from GraphScape <ref type="bibr" target="#b28">[29]</ref>, we formulate an optimization algorithm using linear programming to fix the violated rules detected by the linter. • A user study. We evaluate the effectiveness of our framework through a user study on the prototype system. Through the study, we validate the effectiveness of our framework in practice and collect instructive reflections for future improvement.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>In this section, we draw on prior work on recommendation systems, linting, and optimization models for visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Recommendation Systems for Visualization</head><p>Visualization recommendation systems accommodate users by performing the heavy-lifting jobs, such as data analysis and insight ex-traction. They can automatically generate and suggest visualizations for a given dataset. Earlier studies tend to recommend visualizations based on predefined rules. They derive rules from statistical features <ref type="bibr" target="#b45">[46,</ref><ref type="bibr" target="#b54">54,</ref><ref type="bibr" target="#b61">61]</ref>, visual effectiveness measures <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b13">14]</ref>, and user behaviors <ref type="bibr" target="#b19">[20]</ref> or tasks <ref type="bibr" target="#b42">[43]</ref>. Recent works benefit from machine learning and other algorithms <ref type="bibr" target="#b64">[64]</ref>. VizML automatically infers five design choices for input datasets using a machine learning algorithm derived from data characteristics <ref type="bibr" target="#b23">[24]</ref>. ClustMe, developed by Abbas et al., ranks cluster patterns of monochrome scatterplots using a perceptual visual quality measure to match human judgment <ref type="bibr" target="#b1">[2]</ref>. Shi et al. present a sequencing model that recommends optimal sequences for different tasks <ref type="bibr" target="#b46">[47]</ref>. Kim et al. introduce a directed-graph model for visualization sequence recommendation based on chart similarity <ref type="bibr" target="#b28">[29]</ref>.</p><p>Our framework presents a solution to amend visualization with flaws compared to these studies on fast-forwarding visualization recommendation. It allows users to decide if they want to adopt the recommended adjustment and has more pedagogical value. Although our framework is also rule-based, we model our rulesets using Answer Set Programming. Therefore, unlike traditional rule-based recommendation systems whose rule bases are immutable, our framework allows timely updates and modifications on the rules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Linting for Visualization</head><p>The idea of linting is borrowed from computer science, which means static code analysis tools to flag bugs or errors in the programming code. Recently, linting has been applied beyond traditional programming languages. Before being applied in visualization, the concept of linting has been used in data wrangling as a validation approach to eliminate errors in provided datasets. CheckCell <ref type="bibr" target="#b4">[5]</ref>, ExceLint <ref type="bibr" target="#b3">[4]</ref>, and Uni-Detect <ref type="bibr" target="#b55">[55]</ref> undertake data validation errors in tabular data. Muslu et al. <ref type="bibr" target="#b39">[40]</ref> and Brachmann et al. <ref type="bibr" target="#b9">[10]</ref> furthermore consider potential problems with data curation and large data sets. Since data wrangling is an important procedure in creating visualizations, works on data linting are also valuable for later research on visualization linting. Meanwhile, in the visualization field, the verification and evaluation of visualizations are also highly relevant to visualization linting. Kirby and Silva emphasize the significance of verifying the accuracy of visualization techniques <ref type="bibr" target="#b29">[30]</ref>. Prior works undertake the evaluation of visual quality, algorithm performance, and user experience of visualization with different approaches <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b25">26]</ref>. The idea of "visual linting" was first introduced by McNutt and Kindlmann to apply linting in visualization <ref type="bibr" target="#b33">[34]</ref>. They define visualization lint as a framework, that takes in a visualization or its production code, evaluates whether it will pass, and explain why it fails. Their linter targets only readability-related problems in charts, those causing charts difficult for humans to observe <ref type="bibr" target="#b33">[34]</ref>. Our work, instead, focuses on errors that make charts illegal or prevent them from rendering properly, rather than aesthetic problems such as readability issues of a valid visualization. After linting being introduced into visualization, some research takes on different perspectives to study the application of linting in visualization. In Metamorphic VegaLite Analyzer, metamorphic testing is applied to validate if a visualization can properly represent the input data <ref type="bibr" target="#b34">[35]</ref>. However, they do not pay special attention to critical errors. Besides, due to reliance on bootstrapping and other statistical techniques, Metamorphic VegaLite Analyzer tends to show limited performance in terms of speed. Since our framework uses Answer Set Programming for rule inspection, which involves less computation, it is able to detect errors without latency.</p><p>More recently, Hopkins et al. design and evaluate VisuaLint, which displays five chart construction errors in visualization using sketchy annotations instead of conventional cues in text messages <ref type="bibr" target="#b22">[23]</ref>. While the works mentioned above share some similar design considerations with our work, they focus more on the design-and readability-related issues, without any suggestions or functions to help users correct existing errors in the visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Optimization for Visualization</head><p>Visualizations are usually not perfect upon generation due to various factors, such as data volumes or display sizes. Therefore, optimization can help visualizations accommodate different situations and remain good quality. Since data quality has a significant impact on the quality of visualization, some research focuses on the data preparation for visualization. For example, Wen and Zhou provide a model to dynamically derive a set of optimal data transformations for the target visualization <ref type="bibr" target="#b59">[59]</ref>. Many other works concentrate on the optimization of charts directly. Some target problems for specific types of charts. Ellis and Dix focus on clutter reduction in parallel coordinates using sampling techniques <ref type="bibr" target="#b15">[16]</ref>. Trutschl et al. also tackle point occlusion issues in parallel coordinates but using a self-organized map instead <ref type="bibr" target="#b53">[53]</ref>. Wang et al. improve multi-class scatterplot by optimizing color assignment for class separation <ref type="bibr" target="#b56">[56]</ref>. Heer and Agrawala develop multi-scale banking, enhancing the visual perception of segment orientations in line charts <ref type="bibr" target="#b20">[21]</ref>. Byron and Wattenberg present a wiggle-minimizing method to optimize the overall shapes of stacked graphs <ref type="bibr" target="#b11">[12]</ref>. Tang et al. develop an authoring tool for storyline visualization, PlotThread, which consists of an AI agent to optimize the layout <ref type="bibr" target="#b49">[50]</ref>. Existing research also covers the optimization for pixel-based charts <ref type="bibr" target="#b27">[28]</ref>, radial charts <ref type="bibr" target="#b50">[51]</ref>, node-link diagrams <ref type="bibr" target="#b57">[57]</ref>, matrices <ref type="bibr" target="#b5">[6]</ref>, treemaps <ref type="bibr" target="#b47">[48]</ref>, geographical maps <ref type="bibr" target="#b7">[8]</ref>, and text-based charts <ref type="bibr" target="#b44">[45]</ref>. Other research resolves general issues regardless of chart types. Draco is a constraint-based system to score visualizations based on the violations against design rules and recommend the top-scored candidate <ref type="bibr" target="#b36">[37]</ref>. Lin et al. contribute Dziban extending on Draco, which additionally optimizes the synthesized charts to accord with the anchor charts <ref type="bibr" target="#b31">[32]</ref>. Wu et al. address the responsive display issues of SVG-based visualization on mobile screens using reinforcement learning <ref type="bibr" target="#b63">[63]</ref>.</p><p>However, while previous work could suggest optimal visualizations, they are not able to optimize erroneous visualizations with violated design rules, especially when violations prevent charts from compiling. The target of our work is to provide common solutions to various types of visualizations. Specifically, the ideal framework is aimed to improve a given visualization by revising the incorrect specifications. Moreover, to provide the most efficient modification, we adapt the transition cost collected in GraphScape <ref type="bibr" target="#b28">[29]</ref>. A detailed description of the proposed algorithm is presented in Section 4.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DESIGN REQUIREMENTS</head><p>In this section, we collect the common issues that practitioners have encountered and summarize the design goals accordingly.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Common Issues in Visualizations</head><p>To better understand the common issues that practitioners encounter and what kind of assistance might be helpful, we conducted semi-structured interviews with two experts. One is an experienced visualization researcher who has ten-year programming experience and visualization knowledge; the other is the team leader of a data intelligence department in a well-established IT company. Both experts have practical experience in developing data visualization systems for various domains such as business intelligence and social network analysis. In the interviews, the experts noted that creating a visualization requires specifying marks and channels, the two primary components of visual encoding <ref type="bibr" target="#b6">[7]</ref>. However, simply declaring marks and channels will not guarantee a successful encoding. The complex conditions behind it, such as data characteristics, can lead to failed visualizations if not compatible with stated specifications. We frame the issues within high-level visualization grammars, such as Tableau/Polaris <ref type="bibr" target="#b48">[49]</ref> and Vega-Lite <ref type="bibr" target="#b43">[44]</ref>. These high-level grammars are favored in exploratory visualization due to the preference of conciseness over expressiveness <ref type="bibr" target="#b21">[22]</ref>. In high-level visualization grammars, declarations of marks and encoding channels are required to create visualizations for a given data set. Declaration of marks is to specify the mark type (e.g., point or line) for the visualization. Declaration of encoding channels includes the specification of the expressed data field (column) and how it is expressed: whether using size or color channel and if any data transformation (e.g., binning, aggregation, logging, scale) or visual transformation (e.g., stacking) are applied. Consequently, four common issues are categorized from the expert interviews and previous literature related to visualization principles <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b32">33,</ref><ref type="bibr" target="#b38">39,</ref><ref type="bibr" target="#b58">58]</ref> and visualization grammar <ref type="bibr" target="#b60">[60]</ref>. I1. Incompatibility issues within each encoding channel. Withinencoding issues illustrate illegal mapping between the selected data field (column) and the encoding channel <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b38">39]</ref>. They can lead to failed visualizations when, for instance, a wrong data type is declared, a chosen encoding channel is incompatible with the selected column, or a chosen aggregation is incompatible with the selected column. I2. Incompatibility issues across multiple encoding channels. Even if each individual encoding is correct, the visualization can still be problematic due to conflicts across encoding channels <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b60">60]</ref>. One possible cause is that an encoding specification is not compatible with another. It can be attributed to situations such as duplicated usage of the same channel or identical columns used in both axes. I3. Incompatibility issues between encoding channels and marks. Potential failures can occur when the chosen mark is not compatible with the selected encoding channel <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b38">39]</ref>, for example, when the size channel is chosen with marks other than points or text. I4. Typo issues. It is natural for humans to make illegal declarations or typo errors during manual input. However, any minor typo mistakes can prevent a visualization from valid rendering.</p><p>According to the above issues, we refine a collection of 41 rules fundamental to construct legitimate charts. In this paper, we regard a chart as invalid or illegal once it violates one or more rules of the four common issue categories, and possibly fails to render. Illegal chart specifications differentiate from "readability-related" problems mentioned by McNutt et al. <ref type="bibr" target="#b33">[34]</ref> in that they may prevent charts from rendering or presenting correct data. However, "readability-related" problems focus on charts rendered successfully with correct data presentation, while other issues, such as a lack of title or annotation or misuse of colors, occur. Such issues are more related to the aesthetics aspect of visualizations, which are excluded in our current work. While our current coverage intersects with the one defined by Hopkins et al. <ref type="bibr" target="#b22">[23]</ref>, we do not take the issues regarding dual-axis, legends, and ineffective colors into account since the primary focus of this paper is the legibility of visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Design Goals</head><p>Apart from the common issues in visualization, we also interviewed the experts on how they would utilize external support to help find and modify existing issues. Three design goals are thus derived as follows. G1. Facilitate visualization developers with error indicators. Our primary target users are visualization developers with inadequate expe-rience and skilled developers who want to improve their efficiency and accuracy. For those users, concurrent error disclosure could speed up the development process, especially when they are not able to detect problems. Therefore, we need to offer developers the option to see what and where errors are in the specification. In our framework design, this consideration resolves to a linter that inspects errors in visualizations and displays details of the errors. G2. Automate the fixing operations on detected errors. Error indicators alone cannot fully speed up development or ensure correctness because it still takes time and effort to seek solutions for the errors. When making manual adjustments, developers may choose operations in a roundabout way. Consequently, we design a fixer to tackle the problem in the most efficient way. We regard the best solution as the one that involves fewer actions while fixing more errors. In Section 4.2, we present the reward function and the corresponding optimization algorithm based on this logic. G3. Support easy integration and iteration. Many existing business intelligence tools or visualization systems are built on standard visualization grammars. Consequently, we design the liner and the fixer with grammar-based visualization specifications as input. Since Vega-Lite is a standard grammar in visualization research, we use it as the basic data input into our framework. Besides, we choose to form the linter using Answer Set Programming (ASP) so that the ruleset can be easily updated according to different scenarios or domains <ref type="bibr" target="#b10">[11]</ref>. Moreover, the fabrication of our linter-and-fixer framework can serve as design guidance for existing tools and systems with similar functionalities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">THE VIZLINTER FRAMEWORK</head><p>Guided by the design goals summarized in Section 3.2, we design and illustrate the pipeline of the framework in Fig. <ref type="figure" target="#fig_0">2</ref>. First, the user inputs a piece of visualization specifications (in our implementation, the inputs are in Vega-Lite JSON format). The framework then transforms the specifications into a list of facts that ASP can handle (G3). Next, the linter built upon ASP examines the facts and detects violations. The corresponding errors are highlighted in the original specifications (G1). For the fixer part, by applying linear optimization programming, it automatically selects an optimal set of operations that resolve the detected violations (G2). Finally, the solutions are translated back to a refined piece of Vega-Lite JSON specifications. In this section, we first present the construction of the linter, including the constraints and the answer sets we developed. Then, we describe the algorithm, the reward, and the cost functions used to build the fixer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Visualization Linter</head><p>The linter is made up of two components, a set of predefined rules visualization should obey and an Answer Set Programming (ASP) solver detecting contravened rules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.1">Linting Rules</head><p>A visualization linter, borrowing the concept of "linting" from computer science, is a tool built on a collection of rules that should be obeyed. It functions similarly to traditional linting tools in programming, such as ESLint <ref type="bibr" target="#b0">[1]</ref>. Like ESLint, VizLinter also examines the violation of rules; however, visualization linting rules include not only syntax errors but also visualization principles. Consequently, the coverage of the ruleset is a determinant of the performance of the linter. The essential principles, which any legal visualization should adhere to, fabricate the basic ruleset for our linter's structure. We refine a collection of 41 rules according to the common issues summarized in Section 3.1 and embed them in the linter.</p><p>In order to minimize human efforts and potential errors caused by user input, we directly parse data range and cardinality from original data sets. Consequently, some rules related to user input about data properties in Draco are not considered in our collection. Some rules defined in Draco have identical coverage or one's coverage subsets another. In this case, we discard rules with duplicated coverage and keep rules that cover more cases. Besides, we simplify some complex constraints by breaking them down into more straightforward rules in the fixer. For instance, in Draco, a constraint requiring stack to come along with a discrete color channel is divided into three distinct rules: one takes care of the absence of color channel when no encoding channel is specified; one deals with the absence of color channel when size is specified as an encoding channel; the third handles when a non-discrete color channel is used. Such decomposition aids in the development of a coherent ruleset and the assignment of resolving operations. Finally, we elaborate a collection of 41 rules as the linter's initial rule base, with a complete list available online 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.2">ASP for Linting</head><p>We follow the same approach as in Draco to formulate visualization principles using ASP since it enables us to construct a stable model for our rule base. When there is a need to introduce new rules or update the complete ruleset for specific use cases, one can simply add or rewrite the constraints for the intended purposes and not have to re-construct the whole framework again.</p><p>Atoms, literals, and rules are the three building blocks for ASP programming <ref type="bibr" target="#b10">[11]</ref>. Atoms are the elementary propositions that may be true or false; literals are atoms A or not A; rules are formed by atoms as a :-L_1, L_2, not L_3, not L_4., where a is the head of these rules and L_i are literals. If all literals are true, then the head a is derived; otherwise, a is not established. Particularly, if a rule has only the head but no literal, such as a :-., it is called a fact, indicating that the head is unconditionally true, and such a rule can be abbreviated as a. On the contrary, a headless rule, such as :-L_1, L_2. without head a in the rule, is regarded as a constraint, which means L_1 and L_2 cannot be true at the same time.</p><p>In the linter, we present the refined visualization rules in the rule format of ASP. For example, the rule hard(bin_and_aggregate,C) :bin(E,_), aggregate(E,_), channel(E,C). points to encoding E with channel C using both bin and aggregate. In this rule, a predicate hard with two parameters, the rule id bin_and_aggregate and the channel C, is used to express the violation. Channel C indicates in which encoding channel that the rule is violated. Differently, hard constraints in Draco are modeled as a set of headless rules, that is, constraints of ASP, preventing the automatic generation of illegal visualizations that violate these constraints, rather than detecting any violations from the given visualization.</p><p>The first step in our linter's process is to translate visualization specifications (Vega-Lite JSON in our case) into ASP programs of facts (rules without literals), characterizing how the given visualization is formed. We develop the translator based on Draco to extract the attributes such as mark type, encodings, and their properties. We also incorporate additional functionalities, such as automatically detecting fieldtype from data. Based on the translated visualization facts and the defined ruleset, we run an ASP solver to find out rules whose literals are all satisfied by the facts, in other words, the errors in the visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Visualization Fixer</head><p>After acknowledging problems in the visualization, it is still difficult and time-consuming for inexperienced developers to understand the meaning of each linted problem and modify the visualization specification. To better facilitate visualization developers, we propose an optimization algorithm to automatically provide optimal solutions to the detected issues in a given visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.1">Actions for Rules</head><p>To validate the legitimacy, we invited two visualization experts to define feasible actions to solve each rule. In Table <ref type="table" target="#tab_1">1</ref>, all embedded actions are listed with a detailed explanation of what they can do with the visualization. Because each rule can correspond with several declarations in the specification, breaking the conditions for its establishment is the most effective way to resolve it. For example, if an encoding misuses the log scale, one can remove the log scale in the encoding or even change the encoded data field to another quantitative data field. Following such methodology, each rule has at least one feasible action and a maximum of five actions, where a rule is established corresponding to several different situations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.2">Score of Action</head><p>In single-problem cases, it is straightforward to find a solution. However, in situations where there are multiple problems, potential solutions are rarely unique. To find the optimal action sets to resolve the violated rules, we construct an optimization algorithm that considers the reward and the cost of actions. We define each action's reward as its contribution to the visualization, that is, how many problems in the visualization can be solved after completing it. The reward is composed of two parts. First, we evaluate the proportion of problems solved in the visualization:</p><formula xml:id="formula_0">reward + (a) = |R i − R i+1 | |R i |<label>(1)</label></formula><p>where R i and R i+1 represent the violated rulesets of visualization before and after the specific action a. Here we use the relative complement of R i with respect to R i+1 to represent the solved problems. However, there are occasions where such actions can bring unintended consequences, one of which is violating new rules. For example, a visualization violating the rule that x-axis and y-axis cannot perform count aggregation simultaneously has two possible actions, removing count aggregation from the x-axis or y-axis. However, suppose the channel where the aggregation is removed happens to have no declared data field. A newly violated rule will then derive that an encoding channel should declare the data field or use count aggregation.</p><formula xml:id="formula_1">reward − (a) = |R i+1 − R i | |R i+1 |<label>(2)</label></formula><p>In this case, we punish the action a by the proportion discrepancy between R i+1 and R i to show the new violated rules caused by it. Hence, the overall reward of an action a is computed by subtracting its input from its side effect. To concentrate on the positive effect of an action, we set the default weight w = 0.05 to tolerate the side effects brought by an action.</p><formula xml:id="formula_2">reward(a) = reward + (a) − w × reward − (a)<label>(3)</label></formula><p>When making corrections, actions modify visualizations in different ways. The transition cost for the action, adapted from GraphScape <ref type="bibr" target="#b28">[29]</ref>, is defined to model the changes between visualization V i and V i+1 resulting from the action. If multiple actions can solve an error in the visualization, then the action with the lowest transition cost is the best solution for the problem.</p><formula xml:id="formula_3">cost(a) = transition_cost(V i ,V i+1 )<label>(4)</label></formula><p>The overall score of an action is measured by its reward and cost. After trials during experiments, we set the default weight α = 0.8, β = 0.2 to encourage the following algorithm to pay more attention to the benefits of actions:</p><formula xml:id="formula_4">score(a) = α × reward(a) − β × cost(a) (5)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.3">Optimization Algorithm</head><p>After calculating the scores of all candidate actions for rectifying a given visualization, the next problem to consider is which sequence and combination of actions can fix the errors with optimal scores. Assume that a visualization has n broken rules r 1 , r 2 ,...,rn. Each rule r i has m i candidate actions a i,1 , a i,2 ,...,a i,mi , implying that this rule has m i possible solutions. Meanwhile, each action a i, j has its corresponding score calculated by Formula 5. In the algorithm, we set the candidate action a i, j as a binary variable to indicate whether to select it eventually.</p><p>Therefore, our problem can be converted into a Binary Integer Programming(BIP) problem as:</p><formula xml:id="formula_5">maximize n ∑ i mi ∑ j score(a i, j ) × a i, j (6a) subject to mi ∑ j=1 a i, j = 1, i ∈ {1,...,n}<label>(6b)</label></formula><p>a i, j = ax,y, if a i, j and ax,y are equivalent actions (6c) The above programming objective is to maximize the accumulative score of all candidate actions taken to fix the flawed visualization. To prevent redundant operations, Constraints 6b guarantee that one rule is fixed by only one of its candidate actions; therefore, the sum of the assigned value of actions from one rule can only be one. Since each rule's candidate actions are defined respectively as mentioned in Sec. 4.2.1, there may be equivalent actions in different rules, that is, actions with identical names (e.g., REMOVE_AGGREGATE) performing in the same encoding (e.g., x). Constraints 6c ensure that any two equivalent candidate actions selected by different rules should be assigned with the same value, i.e., picking up identical actions simultaneously or discarding both. It is used to eliminate situations where a rule r 2 uses a different solution when the problem could have been solved by using the adopted action of another rule r 1 . Constraints 6d restrict values of all actions a i, j to be either 0 or 1, indicating the status of not being selected or being selected respectively. Hence, the objective function 6a is determined solely by the scores of the adopted actions.</p><formula xml:id="formula_6">a i, j ∈ {0,</formula><p>By providing a list of candidate actions, we address the above BIP problem by finding the optimal action set with the highest accumulative scores. BIP is an NP-Complete problem, whose solution can be found using the Branch-and-Cut algorithm <ref type="bibr" target="#b40">[41]</ref> or various well-established solvers such as SCIP <ref type="bibr" target="#b2">[3]</ref> and CBC <ref type="bibr" target="#b16">[17]</ref>. We utilize the Python package PuLP <ref type="bibr" target="#b35">[36]</ref> to solve the BIP problem in our implementation. PuLP is a widely-used linear programming API for defining problems and invoking multiple external solvers. We conduct all optimization using Python 3.7 with PuLP 2.4 with the default CBC solver on a computer equipped with 2.4 GHz Intel Core i5 and 16GB RAM. All the testing cases for our problem can be solved within seconds.</p><p>The above optimization has a relatively good performance, especially when all the violated rules in the visualization and their corresponding candidate actions are independent. However, in some testing cases, candidate action aα of rule rα helped to fix the issue brought by rule r β , which was also solved by action a β adopted by the optimization algorithm. When defining each rule's feasible actions as its possible solutions, the experts only consider the rule itself, regardless of the co-occurrence of other rules. Therefore, cases occur when a rule is solved by a non-predetermined action. To address such an issue, we update constraints 6b by expanding candidate actions of Rule r i with the actions of other rules that also contribute to solving r i as described in Algorithm 1. We then solve the BIP model with the updated constraints. In the optimization result, no more redundant actions are recommended, providing users with simple and straightforward fixing suggestions. in Fig. <ref type="figure" target="#fig_1">1(a-After</ref>). One rule of I3 type is violated in Fig. <ref type="figure" target="#fig_1">1(b-Before</ref>), where mark type point is not suitable to depict data with stacking. Changing the chart type by modifying mark type to bar corrects the visualization, recommended by VizLinter. Fig. <ref type="figure" target="#fig_1">1(c</ref>) and Fig. <ref type="figure" target="#fig_1">1(d</ref>) visualize data about daily weather reports from the seattle-weather dataset. Fig. <ref type="figure" target="#fig_1">1(c</ref>) before modification misuses the size channel with the data field temp_min containing negative values (I1) and performs log transformation incorrectly in the y-axis encoded the data field temp_max holding negative values (I1). VizLinter removes the log transformation in the y-axis and substitutes the size channel with the color channel. For the visualization of Fig. <ref type="figure" target="#fig_1">1(d)</ref>, both x-axis and y-axis execute count aggregation. As a result, only a single bar is visualized (I2). VizLinter discards the aggregation on the x-axis to represent the number of appearances of different weather types.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">IMPLEMENTATION</head><p>Following the framework described above, we develop a Python package, vega-lite-linter 3 , which embeds a function lint() to detect errors in Vega-Lite syntax and a function fix() to provide the optimal solutions with the fewest steps. By automatically detecting and resolving errors, vega-lite-linter enables visualization developers to build accurate charts quickly in Python. Meanwhile, fix() provides alternative actions that can resolve each rule and ranks them in the order of scores calculated by Formula 5. Users can refer to this action list and choose the solutions to fulfill their own needs.</p><p>Based on the above package, we then create a web prototype 4 with the Python backend, as shown in Fig. <ref type="figure" target="#fig_2">3</ref>, so that it is easily accessible to any Vega-Lite developer to build and validate visualizations. We customize the interface to better serve the framework, referring to the original Vega-Lite Online Editor <ref type="bibr" target="#b43">[44]</ref>. In addition to the basic code editing panel and chart render panel, we integrate a prompt panel for the linting and fixing functions of VizLinter as shown in Fig. <ref type="figure" target="#fig_2">3(d)</ref>. When clicking the "Inspect Specs" button, any violated rules of the current visualization specification will be shown. Users can correct the specification on their own according to the description of violated rules or check our suggested actions by clicking the "Suggest Revision" button. Users can click the "Preview" button to preview the automatic modification result. The corresponding revised specification will show up in the code panel. "Accept" and "Reject" buttons are provided for users to approve then apply or reject the revisions. Meanwhile, the chart panel will render the visualization with the revised specification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EVALUATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">User Study</head><p>The user study examined the effectiveness of the proposed framework. Specifically, we invited the participants to use VizLinter and asked whether they agreed with the issues identified by VizLinter and the corresponding solutions. After the study, we analyzed and discussed both the quantitative and qualitative results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Participants</head><p>We invited 20 participants with visualization experience to take part in our study. Twelve of them are from a technology and financial services company (four females and eight males), whose daily work involves developing visualizations with business intelligence tools. The other 8 participants are visualization researchers (six females and two males). The participants' ages range from 23 to 30 (M = 25.6, SD = 2.0).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.2">Preparation</head><p>We prepared 15 flawed visualizations in Vega-Lite JSON format using the three sample datasets from Vega-lite, including cars, airports, and seattle-weather. Among these visualizations, five included one error, five two errors, and the rest contained three errors. There were 25 distinct rules involved in these cases, covering 61% of those in our framework's rule base. We developed a user study system adapted from the VizLinter prototype, whose interface was split into two panels to enable direct comparisons. The left panel presented the original Vega-Lite specification with flawed visualization in a read-only mode. The editable code panel on the right was provided for participants to revise and edit on their own, with the corresponding visualization rendered simultaneously. After participants finished revising each question, they were encouraged to click "Inspect Specs" and "Suggest Revision" to view the linter detected violations and the fixer's suggestion by VizLinter. If participants agreed on the suggestions, they could click "Accept Suggestion" to apply the advised actions on the original visualization automatically. After accepting the fixer's suggestion, participants were still allowed to edit the revised visualization further.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Procedure</head><p>The study started with a twenty-minute training session about Vega-Lite grammars. We also introduced the four categories of common issues (I1 ∼ I4) within visualizations and a demo case of the upcoming tasks. To verify they understood the instructions, we asked them to try the test questions and answered their questions regarding the user study. Each participant was then given 15 flawed visualizations with the original Vega-Lite specifications. The participants were asked to find out the errors and fix them according to their visualization knowledge and experience. Their revisions in the Vega-Lite specifications were highlighted in green on the editable code panel, and the mutated lines in the original specification were highlighted in red on the original code panel. When the participants completed the task or felt stuck, they were asked to use the linter and the fixer functions of our system. Two questions were then asked: (1) whether they acknowledged the detected errors by the linter and the proposed solutions by the fixer, and (2) whether they would like to make further edits on the improved chart. After each participant finished all the tasks, we conducted a brief interview to collect feedback on general user experience, effectiveness, and suggestions for our VizLinter framework.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Analysis &amp; Results</head><p>We obtained participants' revisions and their acceptance decisions for each suggestion provided by VizLinter, as well as their completion time of each question and the correction rate. We first analyzed the effectiveness and efficiency of our framework by computing the completion time, the correction rate, and the acceptance rate. Then, we summarized their feedback from interviews to further evaluate the prototype system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.1">Quantitative Analysis</head><p>Completion Time. It took the participants 97.7 seconds on average to find and fix errors in each visualization (SD = 28.1). The corresponding mean completion time for correction of the different number of errors (one, two, and three) in the visualization was 101.3 seconds (SD = 23.0), 93.8 seconds (SD = 27.9), and 98.1 seconds (SD = 32.1), respectively. Contrary to our expectations, the error fixing time did not increase with the number of errors alone. Instead, it was related to the difficulty of figuring out solutions and the complexity of manipulating the specification as well. For example, adding a new encoding channel resulted in more steps than simply modifying the aggregation function within an encoding.</p><p>Correction Rate. We inspected the edited specifications and recorded the number of remaining issues after user revision to calculate the correction rate. The average correction for all the questions was 77% (SD = 19.7%).We also calculated the average correction rate of four types of common issues. Rules related to issues within each encoding channel (I1) had a 75.2% (SD = 22.7%) correction rate, while the average correction rate of those related to issues across multiple encoding channels (I2) was 70.8% (SD = 20.8%). Rules related to issues between encoding channels and marks (I3) gained an average correction rate of 82.5% (SD = 14.4%), and typo issues (I4) reached 90% (SD = 5%) in average correction rate. The latter two types of errors in VizLinter seemed easier to resolve than the first two, potentially because some details inside encoding channels were more difficult to be noticed or fixed.</p><p>We summarized some cases that the participants failed to correct and analyzed their causes. A typical case is when participants did not notice the error and could not figure out feasible solutions based on their knowledge. For example, Question 2 was corrected by only four participants, where a rule "Use at most 20 categorical colors in the visualization" was violated. Some participants did not recognize this problem due to unawareness of the corresponding design principle or habitual neglect of color overuse in their daily practice. While some participants noticed this error, they still failed to resolve it. This is due to the difficulty of manipulating encoding channels, as optimizing color encoding is also an important research topic for effective visualization design <ref type="bibr" target="#b56">[56]</ref>. Another rule, "Channel size is not suitable for data with negative values," involved in Question 8 and Question 14, also led to low correction rates because only some participants realized that it was illegal to encode size channel for negative data. Among the rules embedded in VizLinter, some violations do not intervene with visualization rendering due to built-in exception handling of Vega and Vega-Lite. One example is shown in Fig. <ref type="figure" target="#fig_2">3</ref>, where two rules "use log scale with non-discrete data" and "use valid aggregation, including count, mean, min, etc." were violated, but the visualization rendering was not affected by the invalid log scale. Such errors could only be found in the codes and sometimes were ignored by the participants. We believe that specifications with unnecessary declarations would be error-prone in creating visualizations. Hence, VizLinter can facilitate users to identify errors that are not obviously reflected in the rendered visualizations.</p><p>Acceptance Rate. The average acceptance rate was 90% (SD = 14.2%), indicating that most of the suggestions were adopted. For those recommended solutions with a low acceptance rate, there were four types of scenarios. First, some violated rules were questioned by a few participants. For example, some participants disagreed with the rule requiring the y-axis to start from zero in bar charts. Consequently, no action was taken for this violation. Second, after comparing the revision by VizLinter and by themselves, some participants favored their own revisions. For example, one case shown in Fig. <ref type="figure" target="#fig_3">4</ref>(a) involved two violated rules: "Mark bar, tick, line, and area require some continuous variables on x-or y-axis" and "Use both binning and aggregation on the data at the same time is illegal." VizLinter's one-step fixer suggestion was to remove the bin operation on the y-axis shown in Fig. <ref type="figure" target="#fig_3">4(b)</ref>. While some participants made the same choice as VizLinter, others attempted different solutions and rejected the suggestion provided by VizLinter. A common alternative was to remove the bin operation of both x-and y-axis and to change the mark type from bar to line (Fig. <ref type="figure" target="#fig_3">4(c</ref>)) or point (Fig. <ref type="figure" target="#fig_3">4(d)</ref>), then to discard the aggregation on the y-axis to depict the distribution (Fig. <ref type="figure" target="#fig_3">4(e)</ref>). Another interesting result from one developer was to ignore the former rule and only remove the aggregation on the x-axis, as shown in Fig. <ref type="figure" target="#fig_3">4(f)</ref>. "I did see such kind of chart at work," explained the participant. For the same visualization with flaws, VizLinter and the participants sometimes gave different solutions for revising the specification to correct the chart. Since the participants' revisions are influenced by their preferences in visualization, it is difficult to evaluate these subjective choices. However, in future studies, it might be possible to assess the revisions based on design considerations such as aesthetics. Third, some recommended actions were regarded as neglecting user intents, therefore rejected by some participants. For example, in Question 12, the encoding specification broke three rules by binning and aggregating simultaneously on nominal data: "Only use binning on quantitative or ordinal data," "Nominal data cannot be aggregated," and "Use both binning and aggregation on the data at the same time is illegal." The fixer recommended RE-MOVE_AGGREGATE and CHANGE_FIELD to correct the violations. On the contrary, the participants took the REMOVE_AGGREGATE and REMOVE_BIN actions to fix the errors to avoid changing the original data mapping. However, this combination broke the framework's constraint that only one candidate action for each rule could be selected since REMOVE_AGGREGATE and REMOVE_BIN were both candidates for the rule "Use both binning and aggregation on the data at the same time is illegal." This case indicates one limitation of VizLinter as it takes only one candidate action for a single rule other than combinational actions. The last cause for rejection was that some participants believed there were other solutions outside of the action scope to fix the problem. For example, the suggested revision for Question 2 mentioned above was to remove the whole color encoding since it was not suitable to describe the nominal data over 20 categories. Though it was the best option within the current scope, some participants argued the chart after applying this action was still not good enough, even if it did meet the basic design principles, "I expect another chart type or more aggregation on the color channel instead of deleting it."</p><p>After reviewing the edited specifications, we discovered new errors after human revisions. While some revisions partially or fully correct the original problems, new errors were introduced into the visualizations. Twenty-three of all the 300 chart modifications (15 questions × 20 participants) violated rules that did not appear in the original problems. This result illustrates our VizLinter framework's advantage over manual adjustments in that it prevents new problems after modifications to the original specifications.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2.2">Qualitative Analysis</head><p>To further evaluate the usability of VizLinter, we interviewed the participants after the completion of all the tasks.</p><p>Overall Performance. All the participants agreed that VizLinter was helpful as it could automatically find errors in visualizations and provide suggestions to fix them. One participant commented, "for those who are not familiar with the visualization guidelines, it is challenging to make a legitimate visualization on their own. Tools as VizLinter would really help a lot." In terms of efficiency, all the participants responded that VizLinter saved a lot of time and made it possible to revise a chart with a single click. They appreciated its efficiency and commented, "this really helps me save time, especially when I attempt to create charts with unfamiliar datasets."</p><p>Instructive Value. Some participants mentioned that VizLinter could help quickly learn visual design guidelines during the linting and fixing process. One participant said, "when I employ this tool, I can pick up a lot of visualization principles which I used to neglect." Another participant noted, "this tool expands my ideas, helps me think out of the box and offers some options for modification." Suggestions. In spite of the above positive feedback, we also summarize and discuss the suggestions from the participants. • Consider user intent. Recommended solutions for visualizations by VizLinter usually result in minimal changes, but they do not always match users' expectations. When the number of revision actions is not a concern, users often have different ideas for making corrections. More than half of the participants pointed out that user intent should be considered. One participant said, "I would like to see the tool taking more user intentions into account and suggest more revision options to choose from." Another participant suggested inferring user intents from the initial chart with errors or user modifications. • Consider semantic meaning. Some participants expected a more intelligent tool that can understand the semantics of the data field to better revise the chart. One participant mentioned, "I found that VizLinter cannot detect whether the semantics in the chart is It would be better if the could provide more revision suggestions based on the semantic meaning of data." • Add more visual principles. Some participants suggested that more rules could be integrated into VizLinter. For example, rules to detect missing values or outliers can be added to ensure the validity of the rendered visualization. Rules regarding visual aesthetics are also desired, "some visual guidelines on aesthetics could be added to help make the charts more visually pleasing."</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">DISCUSSION</head><p>In this section, we discuss the potential use scenarios of the VizLinter framework, as well as current limitations to guide future research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Potential Use Scenarios</head><p>VizLinter for other grammars. In this work, we utilize Vega-Lite as the visualization specification syntax. In the future work, VizLinter can incorporate other popular visualization grammars such as D3.js, ggplot2, and Matplotlib. One way of doing so is to translate onwardand-backward between Vega-Lite and other specification languages.</p><p>Another solution is to implement various versions of VizLinter respectively to suit different grammars. In practice, a BI tool with over 100,000 users for the tech company Ant Group has already adapted VizLinter into its visualization library in Javascript 5 and configured its internal design guidelines into the linter to meet user needs. This case proves the adaptability of VizLinter in other programming languages.</p><p>VizLinter in BI tools. The framework of VizLinter can be applied in business intelligent tools. Although most BI tools provide drag-anddrop interactions for users to build visualizations without coding, some wrong actions may affect the correct representation of the information, such as mapping data to an inappropriate channel or applying the wrong data transformation. Embedding VizLinter in BI tools could save time for digging into design guidelines, which is especially handy for inexperienced users who need to create visualizations quickly. The BI tool mentioned above has received positive feedback in practice, which enables users to find out optimal configurations quickly. Furthermore, VizLinter can serve as a collaborative visualization design system, ensuring that various visualizations built by different users in multiple views are consistent and compatible <ref type="bibr" target="#b41">[42]</ref>. For example, linting tools could remind users to pay attention to set margins or encode with specific color palettes following the homogeneous design guidelines.</p><p>VizLinter for education. During the interview, many participants felt surprised that VizLinter helped them recognize design guidelines of visualization, some of which were overlooked occasionally. Consequently, one of the potential applications of VizLinter is an auxiliary teaching tool for visualization education. Novices could use VizLinter 5 https://ava.antv.vision/en/docs/guide/chart-linter/intro to verify whether the visualizations they create violate any design guidelines. During the trial-and-error process, one can obtain visualization knowledge gradually, which also echos the pedagogical value of ES-Lint <ref type="bibr" target="#b52">[52]</ref>. VizLinter can be valuable for studying visualization design guidelines, while instructors could also benefit from the automatically linting function to make quick judgment when checking assignments.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Limitations and Future Work</head><p>We summarize several limitations mentioned during interviews and found in the design and implementation process and propose future work directions.</p><p>Explain the violated rules in more expressive ways. Currently, violated rules detected by the linter are only displayed in plain text. When interviewing the participants about the functionalities of VizLinter, more details about the rules were reported as desired, such as in-depth descriptions and graphical demonstration of the rules. In the future, it is necessary to explain each rule in more detail, including complete documentation and examples of typical documents and don'ts illustrated with code and graphics.</p><p>Extend the coverage of rule categories. All the four types of rules covered in VizLinter focus on basic construction errors of visualizations. In the current stage, guidelines regarding perceptual expressiveness or visual encoding effectiveness have not been considered. Due to subjective considerations, there is no clear right or wrong judgment for such errors. Hence, more pilot studies should be conducted before applying subjective guidelines to VizLinter. In the adapted version for the tech company mentioned earlier, some soft rules configured by the domain experts were applied. In the next step, we plan to collect and evaluate different categories of rules, covering expressiveness, aesthetic or stylistic issues, to enrich the capability of VizLinter.</p><p>Enrich system configurations and user interaction. The current design of the framework restrains the capability of error handling to the principles included in the rule base. However, in practice, it can be more helpful if the rule base allows extension. Therefore, in the next step, we consider making the rules user-configurable so that VizLinter can fit in different scenarios. One implementation of VizLinter is the web editor with linting and fixing functions, where limited interactions were provided. It is not intuitive enough for users to refer each rule to its corresponding coding snippets when the broken rules are listed in a separate panel. How to present the errors and the linkage among rules, codes, and visualization will be one of the future works of VizLinter.</p><p>Employ more state-of-art research to resolve performance issues. Currently, the scopes of design rules and actions in VizLinter are relatively small, where input cases can be solved within seconds. It is undeniable that, with the progress of development, the ever-growing rule base and action space would increase the execution time of VizLinter. Keep improving the framework for better performance utilizing state-or-art research <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b17">18,</ref><ref type="bibr" target="#b37">38]</ref> is worth further studies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">CONCLUSION</head><p>We present VizLinter, a framework for automatically detecting flaws in visualizations and suggesting revisions, consisting of a visualization linter and a visualization fixer. The visualization linter employs design guidelines collected from prior research and incorporates Answer Set Programming to identify issues of the input visualizations. The visualization fixer resolves the detected violations by the linter and automatically suggests revisions by formulating the problem as a binary integer programming problem. A prototype of VizLinter is implemented as an online Vega-Lite editor, showing how developers can use VizLinter to create visualization without flaws. An in-lab user study was also conducted to evaluate the effectiveness and efficiency of VizLinter. The results showed that VizLinter could help users identifying and fixing errors. In future work, we plan to extend the current framework with larger coverage of rules, more system configurations and user interactions, and to employ it in broader application scenarios.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. The pipeline of VizLinter includes two key modules: the linter and the fixer. Given the visualization specification with errors, it goes through the linter and the fixer to get the revised specification.</figDesc><graphic coords="3,53.75,49.25,171.38,104.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1</head><label>1</label><figDesc>shows four examples of how VizLinter detects issues in the visualization (shown as Before) and then corrects them (shown as After). The data used in the examples are from the sample dataset of Vega-Lite 2 . Fig. 1(a) and Fig. 1(b) are built based on the car dataset, including records of cars and their basic properties. The original visualization of Fig. 1(a-Before) depicts the relationship of Horsepower, Miles_per_Gallon of cars and their Origin, where the size channel is not compatible with the nominal data field Origin (I1). VizLinter rectifies it by changing the size channel to the color channel as shown 2 https://vega.github.io/vega-datasets/</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. The interface of prototype consists of four views: (a) the code editor with highlighted differences from the original Vega-Lite JSON, (b) the optimized chart after revision, (c) the original chart before revision, and (d) the toggles (and detailed messages) of the linter, the fixer and its modification preview.</figDesc><graphic coords="7,83.51,192.05,104.43,71.66" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. One case from the user study: (a) the original visualization with errors; (b) the suggested modification result made by VizLinter; (c),(d),(e),(f) four modificated results by different participants.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>the research interest in developing automated systems to recommend and build expressive and efficient visualizations, especially for users with limited expertise. Most existing automated systems are either rule-based or machine-learning-based. Rule-based systems program visual encoding principles into rule sets to automate the generation of visualizations. They can recommend visualizations based on input data characteristics</figDesc><table><row><cell>• Qing Chen, Fuling Sun, Xinyue Xu, Zui Chen, and Nan Cao are with</cell></row><row><cell>Intelligent Big Data Visualization Lab at Tongji University.</cell></row><row><cell>E-mails: jane.qing.chen@gmail.com, {fulingsun, xuxinyue}@tongji.edu.cn,</cell></row></table><note>{zuic10a, nan.cao}@gmail.com. Nan Cao is the corresponding author. • Jiazhe Wang is with Ant Group. Email: jiazhe.wjz@antgroup.com Manuscript received xx xxx. 201x; accepted xx xxx. 201x. Date of Publication xx xxx. 201x; date of current version xx xxx. 201x. For information on obtaining reprints of this article, please send e-mail to: reprints@ieee.org. Digital Object Identifier: xx.xxxx/TVCG.201x.xxxxxxx propriate visualizations triggers</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 .</head><label>1</label><figDesc>Action Space of Action Meaning Mark CHANGE_MARK Change the mark type for the visualization. -baseline in the scaled domain of the encoding channel. REMOVE_ZERO Waive the zero-baseline requirement in the scaled domain of the encoding channel. CORRECT_MARK Change the illegal mark type to the closest correct one. CORRECT_CHANNEL Change the illegal channel to the closest correct one. CORRECT_TYPE Change the illegal data type to the correct one according to data values. CORRECT_AGGREGATE Change the illegal aggregation function to the closest correct one. CORRECT_BIN Change the illegal bin number to the correct one.</figDesc><table><row><cell></cell><cell>ADD_CHANNEL</cell><cell>Add one encoding channel in the visualization.</cell></row><row><cell></cell><cell>CHANGE_CHANNEL</cell><cell>Change the encoding channel in the visualization.</cell></row><row><cell></cell><cell>REMOVE_CHANNEL</cell><cell>Remove the encoding channel in the visualization.</cell></row><row><cell>Encoding</cell><cell>ADD_FIELD</cell><cell>Add data field in the encoding channel.</cell></row><row><cell></cell><cell>CHANGE_FIELD</cell><cell>Change the data field used in the encoding channel.</cell></row><row><cell></cell><cell>REMOVE_FIELD</cell><cell>Remove the data field declared in the encoding channel.</cell></row><row><cell></cell><cell>CHANGE_TYPE</cell><cell>Change the type of the encoding channel.</cell></row><row><cell></cell><cell>BIN</cell><cell>Discretize data values of the encoding channel into a set of bins.</cell></row><row><cell></cell><cell>REMOVE_BIN</cell><cell>Discard data binning in the encoding channel.</cell></row><row><cell></cell><cell>AGGREGATE</cell><cell>Perform aggregation on data values in the encoding channel.</cell></row><row><cell>Transformation</cell><cell>CHANGE_AGGREGATE</cell><cell>Change aggregation function on the data values in the encoding channel.</cell></row><row><cell></cell><cell>REMOVE_AGGREGATE</cell><cell>Remove aggregation on data values in the encoding channel.</cell></row><row><cell></cell><cell>STACK</cell><cell>Stack data values in the encoding channel.</cell></row><row><cell></cell><cell>REMOVE_STACK</cell><cell>Remove stacking on data values in the encoding channel.</cell></row><row><cell></cell><cell>LOG</cell><cell>Apply logarithmic transformation on data values in the encoding channel.</cell></row><row><cell cols="3">REMOVE_LOG ZERO Require a zeroTypo Correction Remove logarithmic transformation on data values in the encoding channel. Scale</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>Update Candidate Actions of Each Rule Input :action α, original violated ruleset R i , violated ruleset R i+1 after performing action α, candidate actions A of each rule Output :updated A /* Traverse each rule r that action α has solved */ 1 for r in R i − R i+1 do</figDesc><table><row><cell></cell><cell>/* Retrieve candidate action list of rule r</cell><cell>*/</cell></row><row><cell>2</cell><cell>A ← A(r);</cell></row><row><cell>3</cell><cell>if α / ∈ A then</cell></row><row><cell>4</cell><cell>update A by adding α in A;</cell></row><row><cell>5</cell><cell>end</cell></row><row><cell>6 end</cell><cell></cell></row><row><cell cols="2">7 return A;</cell></row></table><note>1}, i ∈ {1,...,n} j∈ {1,...,m i } (6d)</note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">https://github.com/VizLinter/VizLinter-rules</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3">http://vegalite-linter.idvxlab.com/ 4 http://vizlinter.idvxlab.com/</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was supported in part by the National Natural Science Foundation of China 62072338, 6200070909.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>Eslint</surname></persName>
		</author>
		<ptr target="https://eslint.org/" />
		<imprint>
			<date type="published" when="2021-03">March-2021</date>
			<biblScope unit="volume">25</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">ClustMe: A Visual Quality Measure for Ranking Monochrome Scatterplots based on Cluster Patterns</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Abbas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Aupetit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sedlmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Bensmail</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.13684</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="225" to="236" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Scip: solving constraint integer programs</title>
		<author>
			<persName><forename type="first">T</forename><surname>Achterberg</surname></persName>
		</author>
		<idno type="DOI">10.1007/s12532-008-0001-1</idno>
	</analytic>
	<monogr>
		<title level="j">Mathematical Programming Computation</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="41" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">ExceLint: automatically finding spreadsheet formula errors</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Barowy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Berger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zorn</surname></persName>
		</author>
		<idno type="DOI">10.1145/3276518</idno>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the ACM on Programming Languages</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="2018-10">Oct. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">CheckCell: data debugging for spreadsheets</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">W</forename><surname>Barowy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Gochev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">D</forename><surname>Berger</surname></persName>
		</author>
		<idno type="DOI">10.1145/2714064.2660207</idno>
	</analytic>
	<monogr>
		<title level="j">ACM SIGPLAN Notices</title>
		<imprint>
			<biblScope unit="volume">49</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page" from="507" to="523" />
			<date type="published" when="2014-10">Oct. 2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Matrix Reordering Methods for Table and Network Visualization</title>
		<author>
			<persName><forename type="first">M</forename><surname>Behrisch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Bach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Henry Riche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Schreck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-D</forename><surname>Fekete</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12935</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="693" to="716" />
			<date type="published" when="2016-06">June 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Semiology of graphics: diagrams, networks, maps</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bertin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Berg</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>ESRI Press : Distributed by Ingram Publisher Services</publisher>
			<pubPlace>Redlands, Calif</pubPlace>
		</imprint>
	</monogr>
	<note>1st ed.</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">See What You Know: Analyzing Data Distribution to Improve Density Map Visualization. Eurographics/ IEEE-VGTC Symposium on Visualization</title>
		<author>
			<persName><forename type="first">E</forename><surname>Bertini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Girolamo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Santucci</surname></persName>
		</author>
		<idno type="DOI">10.2312/VISSYM/EUROVIS07/163-170</idno>
		<imprint>
			<date type="published" when="2007">2007</date>
			<biblScope unit="page" from="163" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Borkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">A</forename><surname>Vo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Bylinskii</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Isola</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Sunkavalli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oliva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.234</idno>
		<title level="m">What Makes a Visualization Memorable? IEEE Transactions on Visualization and Computer Graphics</title>
				<imprint>
			<date type="published" when="2013-12">Dec. 2013</date>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="2306" to="2315" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Data Debugging and Exploration with Vizier</title>
		<author>
			<persName><forename type="first">M</forename><surname>Brachmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bautista</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Castelo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Freire</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Glavic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Kennedy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Müeller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Rampin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Spoth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<idno type="DOI">10.1145/3299869.3320246</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 International Conference on Management of Data, SIGMOD&apos;19</title>
				<meeting>the 2019 International Conference on Management of Data, SIGMOD&apos;19<address><addrLine>Amsterdam, Netherlands</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2019-06">June 2019</date>
			<biblScope unit="page" from="1877" to="1880" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Answer set programming at a glance</title>
		<author>
			<persName><forename type="first">G</forename><surname>Brewka</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Eiter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Truszczyński</surname></persName>
		</author>
		<idno>doi: 10. 1145/2043174.2043195</idno>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="92" to="103" />
			<date type="published" when="2011-12">Dec. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Stacked Graphs -Geometry Aesthetics</title>
		<author>
			<persName><forename type="first">L</forename><surname>Byron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wattenberg</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2008.166</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1245" to="1252" />
			<date type="published" when="2008-11">Nov. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Task-analytic approach to the automated design of graphic presentations</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">M</forename><surname>Casner</surname></persName>
		</author>
		<idno type="DOI">10.1145/108360.108361</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="111" to="151" />
			<date type="published" when="1991-04">Apr. 1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Graphical Perception: Theory, Experimentation, and Application to the Development of Graphical Methods</title>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Mcgill</surname></persName>
		</author>
		<idno type="DOI">10.1080/01621459.1984.10478080</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">387</biblScope>
			<biblScope unit="page" from="531" to="554" />
			<date type="published" when="1984-09">Sept. 1984</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Overcoming the grounding bottleneck due to constraints in asp solving: Constraints become propagators</title>
		<author>
			<persName><forename type="first">B</forename><surname>Cuteri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Dodaro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ricca</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Schüller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Twenty-Ninth International Joint Conference on Artificial Intelligence (IJCAI&apos;20)</title>
				<meeting>the Twenty-Ninth International Joint Conference on Artificial Intelligence (IJCAI&apos;20)</meeting>
		<imprint>
			<biblScope unit="page">2020</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Enabling Automatic Clutter Reduction in Parallel Coordinate Plots</title>
		<author>
			<persName><forename type="first">G</forename><surname>Ellis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Dix</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2006.138</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="717" to="724" />
			<date type="published" when="2006-09">Sept. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Cbc user guide</title>
		<author>
			<persName><forename type="first">J</forename><surname>Forrest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lougee-Heimer</surname></persName>
		</author>
		<idno>doi: 10.1287/ EDUC.1053.0020</idno>
	</analytic>
	<monogr>
		<title level="m">Emerging theory, methods, and applications</title>
				<imprint>
			<publisher>INFORMS</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="257" to="277" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Multi-shot asp solving with clingo</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gebser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Kaminski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kaufmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Schaub</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theory and Practice of Logic Programming</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="82" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Visualization model validation via inline replication</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gotz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Borland</surname></persName>
		</author>
		<idno type="DOI">10.1177/1473871618821747</idno>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="405" to="425" />
			<date type="published" when="2019-10">Oct. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Behavior-driven visualization recommendation</title>
		<author>
			<persName><forename type="first">D</forename><surname>Gotz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Wen</surname></persName>
		</author>
		<idno type="DOI">10.1145/1502650.1502695</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 14th International Conference on Intelligent User Interfaces, IUI&apos;09</title>
				<meeting>the 14th International Conference on Intelligent User Interfaces, IUI&apos;09<address><addrLine>Sanibel Island, Florida, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2009-02">Feb. 2009</date>
			<biblScope unit="page" from="315" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Multi-Scale Banking to 45 Degrees</title>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Agrawala</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2006.163</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="701" to="708" />
			<date type="published" when="2006-09">Sept. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Interactive Dynamics for Visual Analysis: A taxonomy of tools that support the fluent and flexible use of visualizations</title>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<idno type="DOI">10.1145/2133416.2146416</idno>
	</analytic>
	<monogr>
		<title level="j">Queue</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="30" to="55" />
			<date type="published" when="2012-02">Feb. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">VisuaLint: Sketchy In Situ Annotations of Chart Construction Errors</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">K</forename><surname>Hopkins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Correll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.13975</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="219" to="228" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">VizML: A Machine Learning Approach to Visualization Recommendation</title>
		<author>
			<persName><forename type="first">K</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Bakker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kraska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hidalgo</surname></persName>
		</author>
		<idno type="DOI">10.1145/3290605.3300358</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, CHI&apos;19</title>
				<meeting>the 2019 CHI Conference on Human Factors in Computing Systems, CHI&apos;19<address><addrLine>Glasgow, Scotland Uk</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2019-05">May 2019</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">The Data Linter: Lightweight Automated Sanity Checking for ML Data Sets</title>
		<author>
			<persName><forename type="first">N</forename><surname>Hynes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sculley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Terry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 31st Conference on Neural Information Processing Systems, NIPS&apos;17</title>
				<meeting>the 31st Conference on Neural Information Processing Systems, NIPS&apos;17<address><addrLine>Long Beach, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">A Systematic Review on the Practice of Evaluating Visualization</title>
		<author>
			<persName><forename type="first">T</forename><surname>Isenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Isenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sedlmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.126</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2818" to="2827" />
			<date type="published" when="2013-12">Dec. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Enterprise Data Analysis and Visualization: An Interview Study</title>
		<author>
			<persName><forename type="first">S</forename><surname>Kandel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Paepcke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">M</forename><surname>Hellerstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2012.219</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2917" to="2926" />
			<date type="published" when="2012-12">Dec. 2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Designing pixel-oriented visualization techniques: theory and applications</title>
		<author>
			<persName><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.841121</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="59" to="78" />
			<date type="published" when="2000-03">Mar. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">GraphScape: A Model for Automated Reasoning about Visualization Similarity and Sequencing</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Kim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hullman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno>doi: 10.1145/ 3025453.3025866</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2017 CHI Conference on Human Factors in Computing Systems, CHI&apos;17</title>
				<meeting>the 2017 CHI Conference on Human Factors in Computing Systems, CHI&apos;17<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2017-05">May 2017</date>
			<biblScope unit="page" from="2628" to="2638" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">The need for verifiable visualization</title>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">M</forename><surname>Kirby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Silva</surname></persName>
		</author>
		<idno>doi: 10. 1109/MCG.2008.103</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="78" to="83" />
			<date type="published" when="2008-10">Oct. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">What is answer set programming?</title>
		<author>
			<persName><forename type="first">V</forename><surname>Lifschitz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 23rd national conference on Artificial intelligence</title>
				<meeting>the 23rd national conference on Artificial intelligence<address><addrLine>Chicago, Illinois</addrLine></address></meeting>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="2008-07">July 2008</date>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="1594" to="1597" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Dziban: Balancing Agency &amp; Automation in Visualization Design via Anchored Recommendations</title>
		<author>
			<persName><forename type="first">H</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1145/3313831.3376880</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems, CHI&apos;20</title>
				<meeting>the 2020 CHI Conference on Human Factors in Computing Systems, CHI&apos;20<address><addrLine>Honolulu, HI, USA</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2020-04">Apr. 2020</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">Automating the design of graphical presentations of relational information</title>
		<author>
			<persName><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
		<idno type="DOI">10.1145/22949.22950</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="110" to="141" />
			<date type="published" when="1986-04">Apr. 1986</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Linting for Visualization: Towards a Practical Automated Visualization Guidance System</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mcnutt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VisGuides: 2nd Workshop on the Creation, Curation, Critique and Conditioning of Principles and Guidelines in Visualization</title>
				<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">Association for Computing Machinery</title>
		<author>
			<persName><forename type="first">A</forename><surname>Mcnutt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Correll</surname></persName>
		</author>
		<idno type="DOI">10.1145/3313831.3376420</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2020 CHI Conference on Human Factors in Computing Systems, CHI&apos;20</title>
				<meeting>the 2020 CHI Conference on Human Factors in Computing Systems, CHI&apos;20<address><addrLine>Honolulu, HI, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2020-04">Apr. 2020</date>
			<biblScope unit="page" from="1" to="16" />
		</imprint>
	</monogr>
	<note>Surfacing Visualization Mirages</note>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
		<title level="m" type="main">Pulp: a linear programming toolkit for python</title>
		<author>
			<persName><forename type="first">S</forename><surname>Mitchell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Osullivan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Dunning</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page">65</biblScope>
			<pubPlace>Auckland, New Zealand</pubPlace>
		</imprint>
		<respStmt>
			<orgName>The University of Auckland</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">Formalizing Visualization Design Knowledge as Constraints: Actionable and Extensible Models in Draco</title>
		<author>
			<persName><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">L</forename><surname>Nelson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Howe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2018.2865240</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="438" to="448" />
			<date type="published" when="2019-01">Jan. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Branch-andbound algorithms: A survey of recent advances in searching, branching, and pruning</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Morrison</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">H</forename><surname>Jacobson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Sauppe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">C</forename><surname>Sewell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Optimization</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="79" to="102" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Visualization Analysis and Design</title>
		<author>
			<persName><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
			<publisher>CRC Press</publisher>
			<biblScope unit="page">1105776954</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Preventing data errors with continuous testing</title>
		<author>
			<persName><forename type="first">K</forename><surname>Muşlu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Brun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Meliou</surname></persName>
		</author>
		<idno type="DOI">10.1145/2771783.2771792</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2015 International Symposium on Software Testing and Analysis</title>
				<meeting>the 2015 International Symposium on Software Testing and Analysis<address><addrLine>Baltimore, MD, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015-07">July 2015</date>
			<biblScope unit="page" from="373" to="384" />
		</imprint>
	</monogr>
	<note>Association for Computing Machinery</note>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">A branch-and-cut algorithm for the resolution of large-scale symmetric traveling salesman problems</title>
		<author>
			<persName><forename type="first">M</forename><surname>Padberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Rinaldi</surname></persName>
		</author>
		<idno type="DOI">10.1137/1033004</idno>
	</analytic>
	<monogr>
		<title level="j">SIAM review</title>
		<imprint>
			<biblScope unit="volume">33</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="60" to="100" />
			<date type="published" when="1991">1991</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Keeping multiple views consistent: Constraints, validations, and exceptions in visualization authoring</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hullman</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2017.2744198</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="468" to="477" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">Task-based effectiveness of basic visualizations</title>
		<author>
			<persName><forename type="first">B</forename><surname>Saket</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Endert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Demiralp</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2829750</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="2505" to="2512" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Vega-Lite: A Grammar of Interactive Graphics</title>
		<author>
			<persName><forename type="first">A</forename><surname>Satyanarayan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2599030</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="341" to="350" />
			<date type="published" when="2017-01">Jan. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">On the Beauty and Usability of Tag Clouds</title>
		<author>
			<persName><forename type="first">C</forename><surname>Seifert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Kump</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Kienreich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Granitzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Granitzer</surname></persName>
		</author>
		<idno type="DOI">10.1109/IV.2008.89</idno>
	</analytic>
	<monogr>
		<title level="m">12th International Conference Information Visualisation</title>
				<meeting><address><addrLine>London, UK</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008-07">2008. July 2008</date>
			<biblScope unit="page" from="17" to="25" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">A Rank-by-Feature Framework for Interactive Exploration of Multidimensional Data</title>
		<author>
			<persName><forename type="first">J</forename><surname>Seo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
		<idno type="DOI">10.1057/palgrave.ivs.9500091</idno>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="96" to="113" />
			<date type="published" when="2005-06">June 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">Task-oriented optimal sequencing of visualization charts</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Cao</surname></persName>
		</author>
		<idno type="DOI">10.1109/VDS48975.2019.8973383</idno>
	</analytic>
	<monogr>
		<title level="m">2019 IEEE Visualization in Data Science (VDS)</title>
				<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="58" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Stable Treemaps via Local Moves</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sondag</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Speckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Verbeek</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2017.2745140</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="729" to="738" />
			<date type="published" when="2018-01">Jan. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Polaris: A System for Query, Analysis, and Visualization of Multidimensional Relational Databases</title>
		<author>
			<persName><forename type="first">C</forename><surname>Stolte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.981851</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="52" to="65" />
			<date type="published" when="2002-01">Jan. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Plotthread: Creating expressive storyline visualizations using reinforcement learning</title>
		<author>
			<persName><forename type="first">T</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Knittel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Koch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ren</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ertl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wu</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2020.3030467</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="294" to="303" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">Combining automated analysis and visualization techniques for effective exploration of high-dimensional data</title>
		<author>
			<persName><forename type="first">A</forename><surname>Tatu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Albuquerque</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Eisemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Schneidewind</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Theisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Magnork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Keim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2009 IEEE Symposium on Visual Analytics Science and Technology</title>
				<imprint>
			<biblScope unit="page" from="59" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title/>
		<idno type="DOI">10.1109/VAST.2009.5332628</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">The adoption of javascript linters in practice: A case study on eslint</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">F</forename><surname>Tómasdóttir</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Aniche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Van Deursen</surname></persName>
		</author>
		<idno type="DOI">10.1109/TSE.2018.2871058</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">46</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="863" to="891" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">Intelligently resolving point occlusion</title>
		<author>
			<persName><forename type="first">M</forename><surname>Trutschl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Cvek</surname></persName>
		</author>
		<idno type="DOI">10.1109/INFVIS.2003.1249018</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Information Visualization</title>
				<imprint>
			<publisher>IEEE Cat</publisher>
			<date type="published" when="2003-10">2003. Oct. 2003</date>
			<biblScope unit="page" from="131" to="136" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">SeeDB: Efficient Data-Driven Visualization Recommendations to Support Visual Analytics</title>
		<author>
			<persName><forename type="first">M</forename><surname>Vartak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Rahman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Madden</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Parameswaran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Polyzotis</surname></persName>
		</author>
		<idno type="DOI">10.14778/2831360.2831371</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the VLDB Endowment International Conference on Very Large Data Bases</title>
				<meeting>the VLDB Endowment International Conference on Very Large Data Bases</meeting>
		<imprint>
			<date type="published" when="2015-09">Sept. 2015</date>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="page" from="2182" to="2193" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Uni-Detect: A Unified Approach to Automated Error Detection in Tables</title>
		<author>
			<persName><forename type="first">P</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>He</surname></persName>
		</author>
		<idno>doi: 10. 1145/3299869.3319855</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 2019 International Conference on Management of Data, SIGMOD&apos;19</title>
				<meeting>the 2019 International Conference on Management of Data, SIGMOD&apos;19<address><addrLine>Amsterdam, Netherlands</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2019-06">June 2019</date>
			<biblScope unit="page" from="811" to="828" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b56">
	<analytic>
		<title level="a" type="main">Optimizing Color Assignment for Perception of Class Separability in Multiclass Scatterplots</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Ge</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sedlmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2018.2864912</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="820" to="829" />
			<date type="published" when="2019-01">Jan. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b57">
	<analytic>
		<title level="a" type="main">Revisiting Stress Majorization as a Unified Framework for Interactive Constrained Graph Visualization</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C.-W</forename><surname>Fu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Sedlmair</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Deussen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2017.2745919</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="489" to="499" />
			<date type="published" when="2018-01">Jan. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b58">
	<monogr>
		<title level="m" type="main">Information visualization: perception for design. Interactive technologies</title>
		<author>
			<persName><forename type="first">C</forename><surname>Ware</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013</date>
			<publisher>Morgan Kaufmann</publisher>
			<pubPlace>Waltham, MA</pubPlace>
		</imprint>
	</monogr>
	<note>3rd ed.</note>
</biblStruct>

<biblStruct xml:id="b59">
	<analytic>
		<title level="a" type="main">An optimization-based approach to dynamic data transformation for smart visualization</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">X</forename><surname>Zhou</surname></persName>
		</author>
		<idno type="DOI">10.1145/1378773.1378784</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13th International Conference on Intelligent User Interfaces, IUI&apos;08</title>
				<meeting>the 13th International Conference on Intelligent User Interfaces, IUI&apos;08<address><addrLine>Gran Canaria, Spain</addrLine></address></meeting>
		<imprint>
			<publisher>Association for Computing Machinery</publisher>
			<date type="published" when="2008-01">Jan. 2008</date>
			<biblScope unit="page" from="70" to="79" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b60">
	<analytic>
		<title level="a" type="main">The grammar of graphics</title>
		<author>
			<persName><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Wills</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Statistics and computing</title>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
	<note>2nd ed.</note>
</biblStruct>

<biblStruct xml:id="b61">
	<analytic>
		<title level="a" type="main">AutoVis: automatic visualization</title>
		<author>
			<persName><forename type="first">G</forename><surname>Wills</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<idno type="DOI">10.1057/ivs.2008.27</idno>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="47" to="69" />
			<date type="published" when="2010-03">Mar. 2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b62">
	<analytic>
		<title level="a" type="main">Voyager: Exploratory Analysis via Faceted Browsing of Visualization Recommendations</title>
		<author>
			<persName><forename type="first">K</forename><surname>Wongsuphasawat</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Anand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mackinlay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Howe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2015.2467191</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="649" to="658" />
			<date type="published" when="2016-01">Jan. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b63">
	<analytic>
		<title level="a" type="main">Mobilevisfixer: Tailoring web visualizations for mobile phones leveraging an explainable reinforcement learning framework</title>
		<author>
			<persName><forename type="first">A</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Tong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Isenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2020.3030423</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="464" to="474" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b64">
	<monogr>
		<author>
			<persName><forename type="first">A</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Shu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Moritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2102.01330</idno>
		<title level="m">Survey on artificial intelligence approaches for visualization data</title>
				<imprint>
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
