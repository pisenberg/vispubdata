<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SPEULER: Semantics-preserving Euler Diagrams</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Rebecca</forename><surname>Kehlbeck</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jochen</forename><forename type="middle">G</forename><surname>Örtler</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Yunhai</forename><surname>Wang</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Oliver</forename><surname>Deussen</surname></persName>
						</author>
						<title level="a" type="main">SPEULER: Semantics-preserving Euler Diagrams</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">BC1B6CA5AA656580319384C572656A6F</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.1" ident="GROBID" when="2022-06-13T13:54+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Euler diagrams</term>
					<term>Venn diagrams</term>
					<term>set visualization</term>
					<term>layout algorithm</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Creating comprehensible visualizations of highly overlapping set-typed data is a challenging task due to its complexity. To facilitate insights into set connectivity and to leverage semantic relations between intersections, we propose a fast two-step layout technique for Euler diagrams that are both well-matched and well-formed. Our method conforms to established form guidelines for Euler diagrams regarding semantics, aesthetics, and readability. First, we establish an initial ordering of the data, which we then use to incrementally create a planar, connected, and monotone dual graph representation. In the next step, the graph is transformed into a circular layout that maintains the semantics and yields simple Euler diagrams with smooth curves. When the data cannot be represented by simple diagrams, our algorithm always falls back to a solution that is not well-formed but still well-matched, whereas previous methods often fail to produce expected results. We show the usefulness of our method for visualizing set-typed data using examples from text analysis and infographics. Furthermore, we discuss the characteristics of our approach and evaluate our method against state-of-the-art methods.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B IG</head><p>G R E A T SMA LL (c) Well-matched result using our method Fig. <ref type="figure">1</ref>: Venn diagrams are often used to highlight complex interactions of sets. This example from xkcd.com shows which adjectives can be used in combination (a). Using our method, we can recreate this manually created Venn diagram (b). Here, the diagram contains empty intersections. In these cases, Euler diagrams (c) provide a more faithful representation of the data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Set-typed data is ubiquitous across many different research areas, such as multi-label classification <ref type="bibr" target="#b47">[48]</ref> in machine learning, RNA and DNA sequencing <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b33">34]</ref> in computational biology, and topic modeling <ref type="bibr" target="#b5">[6]</ref> in natural language processing. There are two prominent methods to visualize set relations. Venn diagrams <ref type="bibr" target="#b45">[46]</ref> show all possible relations between sets. In contrast, Euler diagrams <ref type="bibr" target="#b15">[16]</ref> only depict non-empty relations. Many special-purpose visualizations have been developed for set-specific tasks <ref type="bibr" target="#b1">[2]</ref>. Still, traditional Venn and Euler diagrams remain an essential tool for showing set intersections because they are easy to read, familiar to most users, and can incorporate data points directly. As such, they are often part of larger systems, such as UpSet <ref type="bibr" target="#b23">[24]</ref>.</p><p>Due to their combinatorial nature, the construction of Venn diagrams is straightforward. However, automatically creating Euler diagrams of high quality remains a challenging task, in particular for highly intersecting datasets. An Euler diagram should only include relations that are present in the data and avoid introducing superfluous areas. Further, the diagram should be monotone <ref type="bibr" target="#b7">[8]</ref>. We call Euler diagrams that adhere to these properties semantics-preserving, following the definition of semantics in the domain of linguistics. Accordingly, representing the data faithfully and preserving neighbourhood relations are a part of semantics, as how a set intersection is read depends on its neighbours. An example result of our method and the impact of the above-mentioned properties is shown in Fig. <ref type="figure">1c</ref>. The Euler diagram on the right has lost the symmetry of the Venn diagram (Fig. <ref type="figure">1b</ref>) but represents the data faithfully.</p><p>First, we introduce and formalize the properties of Euler diagrams. Next, we propose a two-step algorithm for constructing such diagrams efficiently. The first step computes the Euler dual, a graph representation of the diagram. The second step creates the Euler diagram, whose curves follow guidelines <ref type="bibr" target="#b4">[5]</ref> for creating intuitive Euler diagrams. We show the usefulness and characteristics of our algorithm on three examples from different domains and compare our method to previous work. In summary, the main contributions of this paper are:</p><p>• SPEULER, a novel method for constructing semantics-preserving Euler diagrams that yield fast and reliable results.</p><p>• Extensive analysis of existing construction methods and how they relate to properties of the Euler diagrams.</p><p>• Three examples from different domains that show the characteristics and potential of our approach.</p><p>• An extensive evaluation based on established guidelines of Euler diagrams and direct comparison to state-of-the-art methods.</p><p>Before we go into the previous work that is related to our method, we want to introduce important properties and concepts of Euler diagrams that will help to understand the subsequent sections. Formally, an Euler diagram is a set of smooth, closed Jordan curves that represent the different sets <ref type="bibr" target="#b11">[12]</ref>. Together, these curves comprise various areas in the drawing that represent the intersections of the sets. All set relations that exist in the data can be described by the abstract description-a list of the existing intersections. Euler diagrams can exhibit several different properties that directly influence their appearance and effectiveness in visualizing information. The two most important properties are well-formedness and well-matchedness, as defined by Chow <ref type="bibr" target="#b11">[12]</ref>.</p><p>Properties An Euler diagram is well-formed, if it is simple (i.e. at most, two curves meet at any given point and there is no concurrency), and exactly a single curve represents each set. In a well-matched Euler diagram, all intersections are correctly represented, thereby retaining the semantics from the original data: each intersection is represented only once, and the diagram does not contain areas of intersections that are not part of the abstract description. Alsallakh et al. <ref type="bibr" target="#b1">[2]</ref> discuss different properties of algorithms for Euler diagrams and their connection to well-formedness. However, there is no such discussion for the wellmatchedness and the interplay between both properties, which plays a big role in the effectiveness of the diagram <ref type="bibr" target="#b18">[19]</ref>. The two properties are visualized in Fig. <ref type="figure" target="#fig_0">2</ref>, which shows a Venn diagram with 4 curves and their 16 intersections. We use uppercase letters to refer to a curve or all nodes that participate in a set, and lowercase letters to refer to specific intersections, which are faces (also called zones) in the diagram. We will revisit this simple example throughout the next sections to help showcase our method. Fig. <ref type="figure" target="#fig_0">2</ref> shows the visual differences of adhering to only one or both of these two properties for the same data. Each zone is marked with its respective intersection. As can be observed in Fig. <ref type="figure" target="#fig_2">2a</ref>, all four curves intersect on the lower-left corner, resulting in concurrent lines. By creating a well-matched and well-formed diagram, this can be avoided (Fig. <ref type="figure" target="#fig_2">2b</ref>). It is important to note that many abstract descriptions exist, for which both properties cannot be satisfied at the same time, requiring a trade-off. However, as analyzed by Chow <ref type="bibr" target="#b11">[12]</ref>, it is currently not possible to infer for a given abstract description if it is possible to maintain both properties. If a trade-off has to be made, we adhere to the guidance of the work by Chapman et al. <ref type="bibr" target="#b9">[10]</ref>, which concludes that users prefer well-matched diagrams over well-formed ones. As a result, in these cases, our algorithm always produces well-matched diagrams while minimizing the violations of well-formedness.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Euler Dual</head><p>A key concept that frequently shows up in construction algorithms is modeling the Euler diagram as a graph. Instead of thinking about the Euler diagram as a set of curves, it can be modeled directly as an edge-labeled graph, called the Euler graph. In this representation, each intersection of the curves is represented by a node, and each curve segment is represented by a link, labeled with the respective curve of the underlying original Euler diagram. Instead of creating the Euler diagram directly from the data using curves, it is also possible to indirectly create it by constructing the Euler dual of the Euler graph. Each node in the Euler dual represents a face of the Euler graph, and neighboring zones are represented by linked nodes in the Euler dual. However, in theory, all nodes that differ by one set could be linked in the dual-a graph that contains all possible links is therefore called the super dual. The rank of a node in the Euler dual equals the number of sets participating in that intersection. We can find an ordered representation of the Euler dual by grouping all nodes of the dual that have the same rank. The resulting graph is the rank-based Euler dual. Fig. <ref type="figure" target="#fig_2">2c</ref> and Fig. <ref type="figure" target="#fig_2">2d</ref> show the respective rank-based duals of Fig. <ref type="figure" target="#fig_2">2a</ref> and Fig. <ref type="figure" target="#fig_2">2b</ref>-the non-pairwise intersection of Fig. <ref type="figure" target="#fig_2">2a</ref> is equal to the face ABCD in Fig. <ref type="figure" target="#fig_2">2c</ref>. In comparison, all the faces of Fig. <ref type="figure" target="#fig_2">2d</ref> are quads-we will explain what this means for the diagram in Section 5. Weston <ref type="bibr" target="#b38">[39]</ref>, or Rodgers <ref type="bibr" target="#b34">[35]</ref>, who focuses on Euler diagrams. Alsallakh et al. <ref type="bibr" target="#b1">[2]</ref> offer a comprehensive survey of set visualizations and group the techniques based on their best-suited tasks: Element tasks, set relation tasks, and element attributes tasks.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RELATED WORK</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Many</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">General Set Visualization</head><p>Alternative approaches to visualize set-typed data are matrix and aggregation-based techniques, such as UpSet <ref type="bibr" target="#b23">[24]</ref> or RadialSets <ref type="bibr" target="#b0">[1]</ref>. These are usually very well suited for element and element attribute tasks. However, they can be verbose to show all set relations at once when the data is complex. For spatial data, such as maps, there are also techniques that focus on highlighting the connections between sets, such as BubbleSets <ref type="bibr" target="#b12">[13]</ref> or KelpFusion <ref type="bibr" target="#b27">[28]</ref>. Most methods are not able to directly encode information of the original data points in a unified visualization. For this task, Venn and Euler diagrams are especially well suited and therefore have been combined with glyphs <ref type="bibr" target="#b28">[29]</ref>, and graphs <ref type="bibr" target="#b31">[32,</ref><ref type="bibr" target="#b39">40]</ref>. Finally, Jacobsen et al. <ref type="bibr" target="#b21">[22]</ref> propose using the metro map metaphor to visualize set relations in their MetroSets technique. The visualization can show individual data points for each set relation, and the layout can be finetuned according to different optimization strategies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Constructing Venn and Euler Diagrams</head><p>Venn diagrams always show all possible set relations, with many different methods for their construction <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b34">35,</ref><ref type="bibr" target="#b37">38,</ref><ref type="bibr" target="#b45">46]</ref>. Euler diagrams are more flexible in this regard, but many construction algorithms are limited to specific abstract descriptions and might produce unexpected results <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b16">17,</ref><ref type="bibr" target="#b29">30,</ref><ref type="bibr" target="#b35">36,</ref><ref type="bibr" target="#b41">42]</ref>.</p><p>Inductive methods construct diagrams by adding one curve at a time. Venn himself proposed an inductive method to create diagrams for any amount of curves. Edwards later proposed an alternative inductive construction method that creates diagrams by projecting the curves onto a sphere <ref type="bibr" target="#b14">[15]</ref>. This method always creates diagrams that are well-formed and well-matched. However, for a larger number of sets, the result becomes hard to understand as the area of new zones becomes smaller and smaller. Other methods focus on the creation of simple, convex Venn diagrams, e.g., Mamakani et al. <ref type="bibr" target="#b25">[26]</ref>, which are aesthetically more pleasing. Ruskey et al. <ref type="bibr" target="#b37">[38]</ref> use a general Venn construction method to analyze methods that create symmetric Venn diagrams. nVenn <ref type="bibr" target="#b32">[33]</ref>, a recently developed area-preserving Euler-like visualization technique, allows users to get a compact overview, even for larger set counts. They use a conventional Venn construction algorithm <ref type="bibr" target="#b37">[38]</ref> as its initial layout and adapts it using a force-directed optimization. It heavily relies on the initial positioning and parameters of the force-directed strategy.</p><p>If the given dataset does not cover all possible set relations, Venn diagrams produce additional (unwanted) zones, and the diagram is not well-matched. For diagrams that are not well-matched, there is a discrepancy between the semantically correct representation of the abstract description and the visualization. Oftentimes, this problem is solved using shading to mark such additional faces <ref type="bibr" target="#b43">[44,</ref><ref type="bibr" target="#b45">46]</ref>. In any case, this encodes unnecessary information that the reader has to process. A solution to this mismatch is well-matched Euler diagrams.</p><p>By design, methods that create Euler diagrams are usually wellmatched. Their drawback, however, is that they often cannot make any guarantee about the aesthetics of the diagrams, i.e., their wellformedness. Results might contain crossings, concurrent curves, and non-smooth shapes. To alleviate this problem, Stapleton et al. <ref type="bibr" target="#b43">[44]</ref> proposed an inductive method to create (semi) well-formed Euler diagrams using circles. Such diagrams weaken the constraints of the well-formedness and allow curve labels to be used multiple times. A current hindrance in the application of Euler diagrams is that most methods only produce expected results for certain datasets. Users do not know beforehand which method will produce well-formed or wellmatched diagrams or if it will produce a valid result at all. Existing implementations often fail silently without producing any results or create unwanted zones without communicating this to the user.</p><p>It is challenging to create a well-formed and well-matched diagram for any abstract description because of the intricate interplay between the different properties. Therefore, many construction methods that only optimize for one property often cannot make guarantees for the others. This can be seen in Table <ref type="table" target="#tab_1">1</ref>. Usually, an Euler diagram is either directly constructed via curves or indirectly through an intermediate representation, which is then transformed into the Euler diagram. Examples are constructions using the Euler dual, Euler graph, connectivity graph, closeness graph, or intersection graph. Based on the surveys by Ruskey <ref type="bibr" target="#b38">[39]</ref>, Rodgers et al. <ref type="bibr" target="#b34">[35]</ref>, and Alsallakh et al. <ref type="bibr" target="#b1">[2]</ref>, we created Table <ref type="table" target="#tab_1">1</ref>, in which we compare different properties of Euler and Venn construction methods.</p><p>It should be noted that the properties of the final Euler diagram highly depend on the used construction steps as well as the properties of the intermediate representations. As we can observe from the table, direct construction methods usually produce well-formed diagrams, as they directly model the curves. This means the produced curves are usually constrained heavily, for example, by only using circles. As a trade-off, they only produce Venn diagrams or introduce unwanted zones for higher set counts. Alternatively, indirect methods only create the exact intersections needed and then transform the graph to the diagram but fail to create well-formed diagrams from them. Some methods try to transform non-well-formed diagrams into more aesthetic ones, but doing this in hindsight is often not possible. Examples can be found in <ref type="bibr" target="#b35">[36,</ref><ref type="bibr" target="#b42">[43]</ref><ref type="bibr" target="#b43">[44]</ref><ref type="bibr" target="#b44">[45]</ref>. There is only a single approach that allows for the creation of Euler diagrams of any amount of curves that are both wellmatched and well-formed. Flower et al. <ref type="bibr" target="#b16">[17]</ref> propose an initial sketch of a solution but do not propose a general implementation. They resort to heuristics to create solutions for less than 5 curves. There are two main differences between our algorithm and the approach by Flower et al. <ref type="bibr" target="#b16">[17]</ref>: They do not use the rank-based dual as an intermediate, and they cannot fall back to a sub-optimal solution when no well-formed and well-matched result exists.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Evaluation of Euler Diagrams</head><p>As mentioned previously, the properties of Euler diagrams can be generally divided into well-matched and well-formed diagrams. However, there are many more properties that influence the semantics (e.g., monotonicity) and the aesthetics (e.g., shape, color, and symmetry). A general overview is given by Blake et al. <ref type="bibr" target="#b4">[5]</ref>, which introduces different guidelines that good Euler diagrams should adhere to. They directly compare real-word examples with adapted diagrams, which follow their proposed guidelines. Comparing both, such diagrams improve user comprehension. However, it is still unknown which of the guides might have a larger impact, and how they might influence each other.</p><p>There are several studies that analyze the readability of well-matched vs. well-formed diagrams <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b46">47]</ref>. Chapman et al. <ref type="bibr" target="#b9">[10]</ref> compare various types of set diagrams and found that linear diagrams outperform all other methods, followed by unshaded Euler diagrams. They explain their results by the well-matchedness of those approaches, combined with well-formedness as a secondary influence. Rodgers et al. <ref type="bibr" target="#b36">[37]</ref> evaluate methods that combine the Euler diagram with a graph of the datapoints. As their results are not consistent with previous studies of the same methods, they suggest that this might be due to them using datapoint specific tasks, whereas the previous studies used intersection related tasks. They conclude that for graph specific tasks, the properties that we summarize as "semantics preserving" may explain why some methods perform better than others. Wallinger et al. <ref type="bibr" target="#b46">[47]</ref> compare Euler diagrams with MetroSets and LineSets for set-related tasks.</p><p>To conclude: it is still an open problem to design and implement an algorithm that produces well-matched and well-formed Euler diagrams for any amount of curves if the abstract description allows for it. Generating Euler diagrams with specific properties was also identified as an open problem by Alsallakh et al. <ref type="bibr" target="#b1">[2]</ref>. Depending on the existing relations in the data, some properties are impossible to guarantee. We therefore propose a semantics-preserving construction method that generates Euler diagrams for any amount of curves. It creates well-matched and well-formed diagrams if allowed for by the data. If not, we retain the well-matchedness and relax as few individual properties as possible that infringe the well-formedness. In (d) we create the final curve for each set using splines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">OVERVIEW</head><p>Our method constructs Euler diagrams for a given list of sets and their intersections-the abstract description. For example, the three sets {A, B,C} can have relations { / 0, a, b, c, ab, bc, ac, abc}, where we abbreviate the zone A ∩ B ∩ C with abc. However, in real-world data usually not all intersections are realized, for example, the intersection ac could be missing. For some abstract descriptions, it is possible to find well-matched and well-formed diagrams. However, there are also many configurations where this is not possible-in these cases our algorithm yields well-matched diagrams, while minimizing the violations of the well-formedness property. We provide further discussion on the influence of the abstract description on these properties in Section 8.</p><p>Our algorithm consists of four main steps, see also Fig. <ref type="figure" target="#fig_1">3</ref>. Starting from the abstract description (Fig. <ref type="figure" target="#fig_1">3a</ref>), we first find the appropriate order in which we place each set. Our algorithm then iteratively grows the graph based on this order while ensuring that new nodes conform to the well-formed property. After finding the connected, planar rankbased Euler dual (Fig. <ref type="figure" target="#fig_1">3b</ref>), our algorithm arranges the nodes in a circular layout (Fig. <ref type="figure" target="#fig_1">3c</ref>), which we then use to draw the curves that correspond to each set. Because of the properties of the dual, it is possible to generate a planar Euler diagram (Fig. <ref type="figure" target="#fig_1">3d</ref>) from this circular layout. We use smooth curves to create compact and simple shapes. In contrast to other techniques, we guarantee a semantic match between the data and the final diagram. In addition, by creating mostly simple set curves and diagrams, we support the readability of the diagram, avoiding unnecessary crossings and concurrency of curves.</p><p>To demonstrate the usefulness and evaluate the characteristics of our algorithm, we implemented a prototype in JavaScript and D3 1 . This implementation also allows stepping through the individual steps of our algorithm. The prototype shows exemplary abstract descriptions that can be found in the paper, as well as different interactions that support set-related tasks such as visual identification of subsets and hovering. The implementation of our prototype, together with the example datasets, can be found online 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">RANK-BASED EULER DUAL</head><p>We already introduced the rank of an intersection in Section 2, which is the number of its involved or participating sets. In the context of the Euler dual, we will call these intersections nodes. For example, the node a has rank 1, while node ab has rank 2. In the rank-based Euler dual, there can only be a link from a node with rank r to a node with rank r + 1. This means that with each link, an additional set gets added to the intersection. In the example above, this is the set b, which we call the color of a link. By definition, a link always has a single distinct color. Accordingly, we color the links in the figures containing Euler duals throughout this paper. Our goal is to draw Euler diagrams with minimal violations of the well-formedness property. As we create our diagram using the dual, we need to find the equivalent property in the dual that guarantees a well-formed result-the faces of the dual. A face in the Euler dual is an area that is enclosed by links and nodes. Monotone faces are enclosed by exactly four links that have two alternating colors. It is also important to note that by this definition, monotone faces always span exactly three ranks in the Euler dual. Monotone faces are essential for well-formedness, as they limit how many curves can intersect at a given face-this directly corresponds to how simple the final Euler diagram will be. Fig. <ref type="figure" target="#fig_0">2</ref> shows an example of a monotone and a non-monotone face. Our goal is therefore to remove possible links and reorder the nodes across all ranks until we are left with a connected, crossing-free and monotone version of the dual. Computing the rank-based dual can be structured into three parts: First, we group the nodes and decide in which order these groups should be placed (lines 2-3). Second, we look at each of the groups and sort the nodes by rank, and improve the sorting using consecutive ones sequences (Section 5.2) and distance to the previous set group (lines 5-8). Finally, we place each node so that it maximizes the number of monotone faces while linking them to the already existing nodes in the graph, removing unwanted crossings (lines 13-19). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Grouping by Participating Sets</head><p>As described in the previous section, each node has one or more participating sets. To create the dual, we start by separating these nodes into groups (line 13). We first sort the sets by the lowest rank of each set, and the number of nodes they participate in (line 18). In practice, this means that sets that contain nodes with lower ranks such as a are considered first. We then iterate over the individual sets and group nodes that extend the nodes of the previous set with the current set (set extension) in the previously computed order. An example of this can be seen in Fig. <ref type="figure" target="#fig_3">4a</ref>: Nodes are arranged vertically by rank and the different colors represent the resulting groups from each extension step. The numbers for each node describe the order in which nodes are added to the groups. Grouping the nodes using the extension of each set gives us a general order in which nodes are inserted into the dual graph. For each group, nodes are inserted in a rank-based order. Meaning nodes that have a lower rank are placed first. However, this on its own is not enough. If we were to insert the nodes in the order determined only by their rank and grouping order, the resulting dual will not be planar. This can be seen in Fig. <ref type="figure" target="#fig_3">4b</ref>. Here, we are currently inserting the nodes from the red set with rank 2. If we naively insert and connect nodes, each node of the rank is connected to all nodes in the rank above using all possible links. Therefore, we need to establish the correct order for the nodes within a group, and the correct subset of links, which we will discuss next.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Consecutive Ones Sequences</head><p>To determine the order of nodes within a group we need to introduce the concept of consecutive ones (CO). Imagine the following scenario: Given an adjacency matrix of a graph, this graph has the consecutive ones property, if we can reorder the rows of the adjacency matrix so that all 1s in the columns are consecutive. This property was defined by Booth, and is true for graphs that have a planar embedding <ref type="bibr" target="#b6">[7]</ref>. A consecutive ones sequence is then a group of consecutive nodes. As we want to create planar duals, we can use this property in our construction algorithm. Remember our goal is to insert nodes into the Euler dual so that as many monotone faces as possible are created. We do not need to realize all possible links between nodes. The only thing that we need to ensure is that the resulting graph is planar and connected. In the rank-based dual, it suffices to ensure the CO property for neighboring ranks. As there are more links in the abstract description than we need for the Euler dual, there are also multiple potential CO sequences, from which we choose the CO sequence that maximizes the number of monotone faces.</p><p>If we think back to the overall goal, which is to maximize monotone faces, we can see that the longer the consecutive ones sequence is, the more monotone faces are closed and created, when inserting the corresponding node. Therefore, we change the order of the nodes on each rank, so that nodes with longer CO sequences are placed before nodes with shorter consecutive ones sequences. If the length of COs is equal, we further sort the nodes by their respective twins in the previous group, without the current set, and sort them by their distance to the closest CO sequence of length 1 of the current group in the rank above (dist twin in line 8) In the example of Fig. <ref type="figure" target="#fig_3">4c</ref>, we can see that by reordering the nodes so that we first place node 12 and 9 , and then node 10 , the nodes 12 and 9 will not produce crossings anymore.</p><p>However, as shown in Fig. <ref type="figure" target="#fig_3">4c</ref>, some crossings still remain. To adhere to the CO property, all possible CO sequences of a node have to be reduced to a single CO sequence. For example node 10 has two possible parents nodes in the rank above-nodes 2 and 8 . The latter two are not adjacent, as they generate two CO sequences. So, to insert 10 , we have to choose one of the two.</p><p>For each CO sequence and for each possible position in the current rank, we calculate a set of attributes that helps to make the decision where to place it. These attributes consider the length of the CO sequence, and the change in #monotone Faces and #crossings (line 8). We collect these attributes across the CO sequences and the possible positions of the node in a list. As an example, a new node might destroy an existing face, if we place it inside the face. Because the newly inserted node has to be connected to the next rank, a crossing will appear, and the #monotone faces decreases. After we have sorted the list accordingly, we insert the node at the current best position (line 18), resolve crossings (line <ref type="bibr" target="#b18">19)</ref>, and move on to the next node. Returning to our previous example, which can be observed in Fig. <ref type="figure" target="#fig_3">4d</ref>, the CO sequence d is chosen, because this way no previously created face is destroyed. This is because the node 8 has already been inserted in the rank above, and has created an open space between the nodes 12 and 9 . We therefore insert the node 10 into this open space, keeping existing monotone faces intact.</p><p>Once all nodes of the current rank have been placed, we continue on to the next rank. If we have placed all nodes of the current group, we move on to the next set, get all its nodes, sort the nodes on each rank, and insert the nodes, rank by rank. Using this method, it is possible to create Euler duals that are connected, planar and contain only monotone faces. We will discuss problematic cases, where this is not possible, in Section 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CIRCULAR LAYOUT OF THE EULER DIAGRAM</head><p>Based on the rank-based Euler dual, we can create the curves of the final Euler diagram. We do this by first removing the empty set and then arranging the nodes in a circular layout (Fig. <ref type="figure" target="#fig_1">3c</ref>). At the center of this layout is the intersection with the largest rank, which is usually the full-set. The other nodes are placed on rings around the center, depending on their rank. Using this layout, we then devise a strategy to draw smooth curves that result in the final diagram (Fig. <ref type="figure" target="#fig_1">3d</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Circular Layout</head><p>To guarantee a good distribution of nodes on each ring, we need to place the nodes at well-defined distances to each other. The rank with the largest number of nodes-usually the middle rank-is placed first to guarantee an overlap-free and well-distributed result. Rings are then placed outwards and inwards of this rank. The radii are chosen so that there is still enough space in the inner rings for all nodes, while the outer rings are not too distant from each other. Distributing nodes evenly on each ring can result in clutter in the ranks above and below. Therefore, we place nodes so that enough space is reserved for their children and parents. Accounting for this, nodes with many children require more space compared to nodes with only a few children. This approach is similar to the layout of radial trees, but with the tree growing in both directions. The circular layout is then used to create the final Venn diagram. Fig. <ref type="figure">5a</ref> shows the circular distribution of the Euler dual from Fig. <ref type="figure" target="#fig_2">2c</ref>. On each ring, the nodes are well-distributed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Drawing Curves</head><p>To create an Euler diagram from the dual, the simplest approach would be to use the convex hull of the nodes for each set to create a closed shape. However, such a curve would not consider the nodes outside of the current set. This results in closed curves that create many unwanted zones and a very uneven distribution of areas across the faces. This is clearly not well-matched and decreases readability.</p><p>Therefore, we developed an approach to directly control the curve of each set by introducing additional virtual nodes that act as control points for its shape. We call these nodes gate nodes. They lie on the same circular path as the intersection nodes but are distributed so that they always lie at the midpoint between two nodes on the ring (Fig. <ref type="figure">5b</ref>, dark gray circles). When we move between ranks, we cross different circular paths in the circular layout, depending on the ranks of the current and following link. As we want to control the shape, we define where this crossing is allowed to happen: only at a gate node position. Due to the properties of the circular graph, which is still a dual of the Euler diagram, we can then create a set curve by finding the order of the links of each set and connecting the midpoints of the links with the gate nodes. This generates a path that moves between the rings, "cutting" the dual graph into two disconnected components.</p><p>Using the gate nodes in combination with the midpoints of the links in their respective link order, we create a mostly compact, closed curve for each set. Additionally, we can control the shape of the curve by using different interpolation strategies and adapting the link-mid point. We achieved the best curve results using Catmull-Rom splines. Fig. <ref type="figure">5b</ref> shows a circular graph with the shape of a set defined by intersection link midpoints and gate nodes. Even though we use splines in our approach to maximize the smoothness, it would be possible to constrain the curve further to generate curves that can only use diagonal, rectangular, or octagonal lines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Concurrency</head><p>Euler duals that only consist of monotone faces will only have pairwise crossings in the diagram. However, if we have a non-monotone face, this is not the case. Instead, we will create non-pairwise crossings. Curves that use the same gate nodes to cross a ring will produce a concurrent curve segment. To retain a well-matched diagram, we control the curves, which avoids creating unwanted zones. This means that for concurrent segments, each curve is offset according to the order in which they enter the concurrent segment. As the Catmull-Rom interpolation cannot handle straight line segments easily, we instead split the curve into different segments and add additional points to create segments that are concurrent. This can be observed in the bottom left part of Fig. <ref type="figure">5b</ref>. If the concurrency is not a straight line but instead happens on the outside of the diagram, we create the curve normally but offset the curves as previously explained. These are then combined with normal curve segments to create the final closed smooth shape for each set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">EVALUATION</head><p>We directly compare our method to several other state-of-the-art approaches across three different datasets. Many older set visualization techniques are not made publicly available <ref type="bibr" target="#b42">[43,</ref><ref type="bibr" target="#b46">47]</ref>, so it is not possible to compare ourselves directly to them, or they only work on a very limited amount of set curves <ref type="bibr" target="#b30">[31]</ref>. We evaluate our method against ven-nEuler <ref type="bibr" target="#b48">[49]</ref>, EulerR <ref type="bibr" target="#b22">[23]</ref>, SetNet <ref type="bibr" target="#b36">[37]</ref>, nVenn <ref type="bibr" target="#b32">[33]</ref>, and MetroSets <ref type="bibr" target="#b21">[22]</ref>. Fig. <ref type="figure">5</ref>: To define the shape of the Euler diagram, we order the links for each set along the circles and shape them with gate nodes-shown here as grey dots-between the intersection nodes. This enables us to fine tune their shapes.</p><p>vennEuler, EulerR, and SetNet only allow circles as curves, whereas nVenn allows for arbitrarily shaped curves. MetroSets are conceptually different from the other techniques as they only produce the Euler graph as an output. Therefore, we only compared them based on criteria that can be applied to the lines of the graph, such as line intersections, concurrency and overall compactness. Some of these approaches also have an additional weight parameter for each intersection that is used to create area-proportionate diagrams. Because such factors skew the comparison, we used an equal weight for all set intersections in these methods to unbias the individual areas. MetroSets allow to directly show data points-examples can be seen in Fig. <ref type="figure" target="#fig_6">7b</ref> and Fig. <ref type="figure">6f</ref>. This is not supported by other methods, including ours. To overcome this, the datapoints in Fig. <ref type="figure" target="#fig_6">7</ref> and Fig. <ref type="figure">1</ref> were added manually. As datasets, we chose three examples from different domains: topic modeling and info-graphics. These datasets show a wide variety in their structure, as well as the kind of datapoints that can be overlayed on top of the diagram. We will discuss the results according to well-matchedness, well-formedness, as well as additional properties that we are going to introduce in the next section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Guidelines for Euler diagrams</head><p>We base our evaluation on the guidelines proposed by Blake et al. <ref type="bibr" target="#b4">[5]</ref>. They define 10 different measures which can be used to judge the quality of Euler diagrams, ranked by their importance. There are three properties that we will not discuss in detail: Diverging lines, orientation, and color. Diverging lines are not applicable, and orientation is not considered by any method presented. It can also easily be changed by rotating the visualization. In order to strengthen the comparability of the methods we changed the color and style of all evaluated works to match ours. As Blake et al. <ref type="bibr" target="#b4">[5]</ref> found that only outlines are preferred, we refrain from filling the curves. Some of the measures, such as well-matchedness (P1) and well-formedness (P2), have already been defined in Section 2. The others will be described briefly. They all relate to the form of the diagram but are not captured in the notion of well-formedness.</p><p>Curve Guidelines The Compactness (P3) defines how close a shape is to a perfect circle. Blake et al. <ref type="bibr" target="#b4">[5]</ref> call this property shape, as they only consider circles. This is closely connected to the convexity of a shape, and there are further studies on the general understanding of convex vs. non-convex shapes <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b40">41]</ref>. In general, they conclude that convexity allows users to finish set-related tasks faster, albeit it might make individual curves harder to distinguish. Smooth curves (P4) are preferred by users and result in diagrams that are easier to read.</p><p>Diagram Guidelines Symmetry (P5) can also be beneficial if the curves are as symmetric as possible while retaining the features that distinguish individual faces. This property measures the similarity across all shapes in a uniform way. Circular approaches will always retain perfect symmetry, while more relaxed shapes might produce symmetric, pseudo-symmetric, or non-symmetric results. If the diagram is symmetric, finding a given intersection face can be challenging because Fig. <ref type="figure">6</ref>: Comparing relevant previous works for Euler diagrams of a topic modeling dataset. Problems in the results are marked: these can either be not well-formed (P2), not well-matched (P1), or create zones that only have very little area (P7). Our method produces a result that does not destroy the well-formed and well-matched properties. The areas of the zones are distributed evenly and the shape is compact. many faces will have a similar shape. Therefore shape discrimination (P6) is another important property, which defines the uniqueness of individual faces, and allows for effective search tasks. Zone area equality (P7) measures the area of each face in relation to the other faces. In general, for Euler diagrams that are not area-preserving, the area of each zone should be as similar as possible. Area-preserving Euler diagrams, in contrast, try to adapt the size of faces to be equal to a property, for example, to the number of contained data points (cardinality). Infringing this property means that users might misinterpret the difference in size as a difference in the cardinality of the face.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Topic Modeling</head><p>Using latent Dirichlet allocation <ref type="bibr" target="#b5">[6]</ref>, a common topic modeling algorithm, we extracted 5 topics from a political debate. The result of such a topic modeling algorithm is usually a list of keywords that describe each topic, together with their probability of belonging to said topic. We filter keywords to retain words for many combinations of topics while still creating an interesting abstract description that has a well-matched and well-formed diagram.</p><p>One common problem of topic modeling results is that it is very hard to visually compare them just using their descriptive keywords. Often words are attributed to multiple topics, but just representing them as a list, one cannot easily discern this. These words, however, might be of special interest to the user. They might describe all the topics very well, in which case the topics might be very similar to each other, or they might be general "common" words that should not be considered by the topic model algorithm, as they reduce the descriptiveness. In this section, we only show the resulting curves; the full diagram including the words can be found in the supplemental material. Fig. <ref type="figure">6</ref> shows the results for the above dataset across all methods. For easier comparison, we have highlighted problematic zones in the respective diagrams, which result from infringements of the well-matchedness (P1), well-formedness (P2), and area-equality (P7) properties. Only a subset of the infringements is shown, as the diagrams might otherwise become unreadable. Some approaches are very similar (vennEuler and EulerR), while others diverge substantially.</p><p>Most methods preserve the abstract description faithfully (P1). However, both EulerR and nVenn create intersections that do not appear in the abstract description. nVenn even realizes some relations with multiple faces, that appear in different parts of the visualization. Regarding well-formedness (P2), we can observe that all circular visualizations (b-d) are simple. However, this comes at a cost: SetNet creates duplicate curves for E, while the other two approaches are not well-matched. nVenn and MetrosSets are not simple, as they contain non-pairwise crossings and concurrency. vennEuler, SetNet, and EulerR use circles and are therefore perfectly compact (P3). But nVenn also produces relatively compact shapes. MetroSets, on the other hand, produce a very spread out intersection graph that does not fit into a compact shape. All results that produce Euler diagrams create smooth curves (P4). Symmetry is not considered in any of the related work (P5). Circular methods create zones that are easily distinguishable, whereas the zones produced by nVenn are very similar to each other. As MetroSets only create intersection nodes, no real shape is created that can be considered here (P6). All of EulerR, VennEuler, SetNet, and nVenn create very small zones that are difficult to recognize (P7).</p><p>Our method produces a both well-matched (P1) and well-formed (P2) result. The resulting shapes are mostly compact (P3). As we use curve interpolation, the produced curves are smooth (P4). In our method, some curves retain their symmetry at least partly (P5). However, because of this, the zones are also more similar, affecting how easy they are to distinguish (P6). The area of the zones remains relatively equal across all ranks (P7). In summary, our method retains the guidelines better than all other related works, except for zone discrimination, where we lie between nVenn and vennEuler/EulerR. Most important, the result is a well-matched and well-formed diagram. MetroSets is well-matched, the visualization requires a lot of space to show all the data points (b). Therefore, we introduced a discontinuity between Costa Rica and Colombia. SetNet introduces unwanted zones, as a does not contain any data points (c). Our diagram has only a single concurrency and is well-matched (d).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Size Venn Diagram</head><p>As a second example, we show a Venn diagram published on xkcd.com 3 in Fig. <ref type="figure">1a</ref>, that describes possible combinations of words in combination with five different adjectives: little, large, small, great, and big. The original visualization uses a 5-Venn diagram to show which words can occur together with these adjectives. However, there are some combinations for which no words were specified, such as little, large and great.</p><p>We can recreate the symmetric 5-Venn diagram used by the author using our algorithm, as can be seen in Fig. <ref type="figure">1b</ref>. The words for each relation are added manually on top of the generated layout. This gives us the direct equivalent to the hand-made Euler diagram by the author. Then, we can remove the empty intersections and instead create a wellmatched (P1) Euler diagram. In this case, the result is not well-formed (P2), so we retain minimal concurrency as well as one non-pairwise intersection. The resulting curves are mostly compact (P3) and smooth (P4). As only a few relations are empty, the diagram retains its high symmetry (P5), but in turn, many zones are similarly shaped (P6). The area is evenly distributed across the zones (P7). A comparison across the related works can be found in the supplemental material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.4">Supranational Caribbean Bodies</head><p>We recreate another info-graphic visualization published on Wikipedia commons 4 , where countries are grouped by organizations. In this case, we look at all Caribbean countries that are contained in Supranational Caribbean Bodies. There are three different bodies: the Association of Caribbean States, the Caribbean Community, and the Organization of Eastern Caribbean States. However, not all intersections between the three exist, as there are no countries for some relations. The original visualization uses a 3-Venn diagram to visualize the relations. Existing relations are filled with flags that represent each country. This makes the visualization quite large, as a lot of space is needed to visualize the empty intersections, even though no data is shown.</p><p>As an additional comparison, we show how SetNet and MetroSets visualize this data set. In Fig. <ref type="figure" target="#fig_6">7c</ref>, we can observe that SetNet does not always preserve well-matchedness (P1), as an empty zone is created. SetNet handles this by placing red dots inside faces that are part of the abstract description. Since we already show the flags of the countries that belong to each intersection directly, we chose to omit this in our recreation. MetroSets (Fig. <ref type="figure" target="#fig_6">7b</ref>) shows all the data points, in this case countries, directly in the visualization. However, the visualization needs a lot of space, as lines extend outwards, resulting in a non-compact shape (P3).</p><p>Using our technique, we can visualize the relations as a well-matched (P1) Euler diagram. The diagram has concurrency, as some bodies do not contain countries that are only in this body, and is therefore not well-formed (P2). Curves are compact (P3) and smooth (P4). The symmetry is limited (P5), but still the zones are similar (P6). The area 3 By RANDALL MUNROE at https://xkcd.com/2122 cbn 4 By WDCF at https://w.wiki/39HJ cba  is evenly distributed across the zones (P7). Our visualization allows the reader to immediately see that there are four relations in total. The central intersection is shared for all three bodies, while there is a single relation that has outer concurrency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">DISCUSSION AND FUTURE WORK</head><p>First, we will discuss runtime, problematic abstract descriptions, and alternative construction methods. Then we will further analyze the influence of design decisions on the aesthetics of the visualization.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Runtime</head><p>We performed experiments to compare the runtime of our approach to two other state-of-the-art methods. Because of its optimization strategy, MetroSets does not scale well with the number of nodes and increases in quadratic time <ref type="bibr" target="#b21">[22]</ref>. SetNet extends the iCircles <ref type="bibr" target="#b43">[44]</ref> algorithm and runs in polynomial time. For lower node counts, our algorithm has similar runtime (n = 64, 0.072s) to SetNet (n = 64, 0.14s), whereas MetroSets is a bit slower (n = 64, 2s) 5 . For larger number of intersection nodes, we can still achieve fast results (n = 1024, 27.48s). Our approach is a greedy algorithm that uses grouping and reordering to reduce the search space of possible positions for a new node. This allows us to avoid complex optimization strategies, making the output deterministic.</p><p>From our experiments, we expect our algorithm to run in polynomial time with the grouping of nodes (Section 5.1) as the limiting factor. However, we hope to prove stronger bounds for this in future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Problematic Abstract Descriptions</head><p>As we have discussed before in Section 2, the layout of an Euler diagram strongly depends on the abstract description, and in particular, if there exists a well-formed solution for it. Our method handles this by relaxing the well-formedness properties if otherwise no such diagram can be found while guaranteeing the well-matchedness property. In contrast, other related works, such as eulerR, vennEuler, nVenn, or sometimes even SetNet, fail silently for these abstract descriptions or, arguably worse, create diagrams that are not well-matched. As we rate well-matchedness above all other attributes, this usually means for problematic abstract descriptions that we create non-monotone faces. An example of this is shown in Fig. <ref type="figure" target="#fig_8">8</ref>. If there is no common intersection for all sets, all sets will intersect in the center of the diagram and cause a non-pairwise intersection(Fig. <ref type="figure" target="#fig_8">8b</ref>). If there is no monotone connection between the empty set and the lowest-ranked nodes, the outer curve will have concurrent curves, as can be seen in Fig. <ref type="figure" target="#fig_6">7d</ref>.</p><p>There is one aspect of abstract description that we have not considered so far: In some cases, it can happen that the resulting diagram as a whole could be disconnected, or only some sets will have a disconnect, meaning nodes cannot be connected via a strong monotone link to at least one parent node and one child node. These datasets can currently not be visualized in our tool. We plan to remove this limitation in future work, by having special solutions for these disconnected components, for example, separation of the nodes so that each disconnected component is visualized by its own curve or concurrency on the rings, similar to the method of collapsing faces by Chow <ref type="bibr" target="#b10">[11]</ref>.</p><p>Finally, we want to point out that although our algorithm always produces a valid well-matched result, so far we have not proven that this result is optimal with respect to minimal violations of the wellformedness property. We also aim to pursue this in future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Alternative Construction Methods</head><p>Initially, we also tried alternative construction methods for Euler diagrams. We adapted the backtracking algorithm that Mamakani et al. <ref type="bibr" target="#b25">[26]</ref> proposed for finding symmetric Venn diagrams to handle arbitrary Euler diagrams. The basic idea behind this technique is to find suitable crossings by permuting the order of curves. We used this approach to investigate the proportion of abstract descriptions for which well-formed diagrams exist. The number of possible intersections grows drastically with each additional set: For n = 4 there are 65K+ combinations-for n = 5 there are already 4M+ possible combinations. Furthermore, we only consider descriptions where each node has at least one incoming and one outgoing link, all sets have a common source as well as sink, and the empty set always exists. As described in Section 8.2, these are the abstract descriptions for which the diagram is connected and monotone. This lowers the combinations significantly to 3152 for n = 4. Using the modified backtracking, we found that for n = 4, only 125 out of the 3152 combinations have monotone diagrams (3,96 %). In the rest of the cases, the backtracking approach would find no solution at all. The reason for this is simple: Backtracking cannot readily find sub-optimal solutions, which motivates our proposed method. By allowing non-monotone faces as the last resort, our approach always yields a valid Euler diagram.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.4">Design Considerations</head><p>Curves When we create the diagram using our method, we use customized splines to create a single, smooth curve for each set. We have also performed experiments using convex hulls and linear polyhulls for drawing curves, but these approaches cannot guarantee wellformedness, which is why we chose Catmull-Rom curves. In particular, we segment the curve into parts and use different strategies depending on what kind of curve segment occurs. There are three different types of segments: regular segments, U-turn segments, and concurrent segments. This differentiation allows us to be flexible in our choice of interpolation strategies, and we can control the smoothness of the curve by adapting the number of control points. For instances where concurrency cannot be avoided, we tried different approaches to mitigate it, e.g., concurrent lines or thinner lines so that equal line width is retained. Another approach would be dashed stroke segments with alternating colors.</p><p>Another interesting consideration is how to visualize the individual intersections. We show the curves without filled-in areas <ref type="bibr" target="#b4">[5]</ref>. The problem with filling the areas of the curves is that, because of blending, each intersection will have a unique color that is not part of the original color set. With increasing number of sets, the visual difference between these colors decreases, which makes it hard to distinguish the intersections. Methods have been developed to alleviate these effects <ref type="bibr" target="#b1">[2]</ref>, but we consider their application out of the scope for this paper.</p><p>A limitation of using Catmull-Rom curves is that for large abstract descriptions, curves might become complex and non-convex, which might have a negative impact on the readability of the diagram. This effect can already be observed Fig. <ref type="figure">1c</ref>, and it increases for highlyintersecting datasets, which can also be seen in the supplementary. Solutions to this problem could either be to directly adapt the Euler dual by reordering nodes, or to post-process the faces of the diagram by optimizing the convexity of their outline.</p><p>Area-proportionate Diagrams Cardinality is an important characteristic that is inherent to the data, if it exists in a given dataset. Currently, our method does not incorporate information about the cardinality of set intersection nodes. In the future, we plan to integrate a method to adapt the zones to given data point weights, creating areaproportionate diagrams, and fill these zones automatically with data points. This will also remove a current limitation of our tool, as it does not scale with large number of datapoints in a single zone.</p><p>Symmetry Another factor that influences the aesthetics of the diagram is symmetry, which many approaches do not retain. However, we believe that symmetry is an important aspect to investigate with regard to user engagement. Symmetric objects are often perceived as more aesthetic <ref type="bibr" target="#b8">[9]</ref>, especially so rotational symmetry <ref type="bibr" target="#b24">[25]</ref>. However, striving for symmetry goes against the guidelines by Blake et al. <ref type="bibr" target="#b4">[5]</ref>, which we introduced in Section 7.1, as symmetry leads to zones that are visually very similar to another. These violate the shape discrimination property (P6) and can hinder user-understanding. An extreme example of this is nVenn. Ultimately, we believe that this is a trade-off that has to be made depending on the goal of the visualization. For efficiency, the diagram should be simple and easy to read. If, on the other hand, the goal is to achieve an aesthetic representation, a more symmetric result can be chosen, based on user preference. By default, our method creates well-matched diagrams. Depending on the task, it can also make sense to draw empty intersections to emphasize the absence of instances. An example of this can be seen in Fig. <ref type="figure">1b</ref>.</p><p>Using our method, it is also possible to create well-matched and well-formed Venn diagrams for any number of curves very fast. This is because of the inductive nature of Venn diagrams. Because each new set in a Venn diagram doubles the number of nodes, we can simply for each rank inverse the order of the nodes in the rank before, extend the nodes using the new set, and insert the nodes and links. However, currently some artifacts appear at higher set counts (n ≥ 8). This is because the space of the individual faces is compressed a lot. We plan to improve our curve interpolation to handle Venn diagrams with more curves. The current problems can be observed in the supplementary material. A more difficult problem is creating symmetric Venn diagrams. Currently, we are able to create symmetric Venn diagrams for 5 and 7 sets by constricting the number of children a node can have. This influences the insertion strategy so that CO sequences are preferred that have fewer children while still maximizing monotone faces. It is still an open problem to find simple symmetric Venn diagrams for any prime number of sets, and the largest to be produced is a 13-Venn diagram <ref type="bibr" target="#b26">[27]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION</head><p>We have presented SPEULER, a novel approach to create well-matched Euler diagrams that focuses on creating mostly simple, planar, and connected solutions. The visualization of highly connected sets is a challenging problem, as the number of possible intersections increases exponentially with the number of sets. Our solution is fast and can scale to a large number of intersection nodes. We imagine our technique and accompanying visualization to be used as a part of larger a system that gives a brief and intuitive overview of set-typed data.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: (a) A well-matched diagram and (b) an additionally well-formed diagram. Well-matched diagrams may exhibit concurrent curves and points where more than two curves intersect, e.g., the intersection of curves ABCD. On the other hand, well-formed diagrams do not have these problems and only have pairwise intersections, e.g., AB. (c) and (d) show the ranked-based duals for (a) and (b). The concurrency surfaces as face ABCD in (c). The well-formed diagram instead only contains faces with 4 surrounding links. We will explain the impact of this in Section 5.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 :</head><label>3</label><figDesc>Fig.3: Overview of our method: After finding all set intersections that exist in the dataset (a), the rank-based Euler dual is created from the abstract description (b). The graph is then transformed to be circular, and nodes are arranged in a well-distributed manner across several rings (c). In (d) we create the final curve for each set using splines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>2 G</head><label>2</label><figDesc>1 D3: https://www.d3js.org 2 https://github.com/RKehlbeck/spEuler Algorithm 1: Dual construction algorithm 1 function createDual(nodes[]) ← group nodes by extended set and rank 3 G ← sort G by rank(G i 0 ) and len(G i ) 4 forall S in G do 5 R ← group S by rank 6 forall r of R do 7 cos ← Calculate COs for r 8 r ← sort r by len(cos) and dist twin 9 forall n of r do 10 list ← [] 11 forall co of cos n do 12 forall possible position p of co do 13 pp ← {len(co), #mono, #cross} 14 list.push(pp)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: Creating the Euler dual: (a) shows the initial order of nodes and their respective groups. (b) Simply inserting the nodes with this initial order results in a dual that is non-planar. (c) We first remove crossings by changing the insertion order. (d) We finalize the graph by choosing the consecutive ones sequence which does not destroy monotone faces. The final result is a planar graph.</figDesc><graphic coords="5,54.00,49.50,513.01,129.09" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 :</head><label>7</label><figDesc>Fig.7: Here, we show a dataset of infographics concerning different supranational Caribbean bodies and their contained countries (a). While MetroSets is well-matched, the visualization requires a lot of space to show all the data points (b). Therefore, we introduced a discontinuity between Costa Rica and Colombia. SetNet introduces unwanted zones, as a does not contain any data points (c). Our diagram has only a single concurrency and is well-matched (d).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 8 :</head><label>8</label><figDesc>Fig. 8: Examples with problematic abstract descriptions: (a) nonmonotone faces will result in complex Euler diagrams. (b) If there is no shared intersection on the highest rank, a non-pairwise intersection will appear in the center of the diagram.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>• R. Kehlbeck, J. Görtler, O. Deussen are with the University of Konstanz, Germany. Email: firstname.lastname@uni-konstanz.de • Yunhai Wang is with Shandong University, China. Email: cloudseawang@gmail.com • Oliver Deussen and Yunhai Wang are joint corresponding authors Manuscript received xx xxx. 201x; accepted xx xxx. 201x. Date of Publication xx xxx. 201x; date of current version xx xxx. 201x. For information on obtaining reprints of this article, please send e-mail to: reprints@ieee.org.</figDesc><table /><note>Digital Object Identifier: xx.xxxx/TVCG.201x.xxxxxxx</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1 :</head><label>1</label><figDesc>Details of different construction methods for any amount of curves and their properties.</figDesc><table><row><cell>Method</cell><cell>Construction</cell><cell>Any relation</cell><cell>Well-matched</cell><cell>Well-formed</cell><cell>Monotonicity</cell><cell>simple</cell><cell>Duplicate curves</cell><cell>Non-pairwise intersections</cell></row><row><cell>SCD [38] / nVenn [33]</cell><cell>Euler dual</cell><cell>yes</cell><cell>no</cell><cell>no</cell><cell>yes</cell><cell>no</cell><cell>no</cell><cell>yes</cell></row><row><cell>Stapleton [44]/ Rodgers [37]</cell><cell>direct</cell><cell>yes</cell><cell>no</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell></row><row><cell>Venn [46]</cell><cell>direct</cell><cell>yes</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>no</cell></row><row><cell>Edwards [15]</cell><cell>direct</cell><cell>yes</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>no</cell></row><row><cell>vennEuler [49]</cell><cell>direct</cell><cell>no</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>no</cell></row><row><cell>eulerr [23]</cell><cell>direct</cell><cell>no</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>no</cell></row><row><cell>Chow-Ruskey [11]</cell><cell>Euler dual</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>yes</cell><cell>no</cell><cell>no</cell><cell>yes</cell></row><row><cell>Simonetto [43]</cell><cell>Intersection graph</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell></row><row><cell>MetroSets [22]</cell><cell>hypergraph</cell><cell>yes</cell><cell>yes</cell><cell>no</cell><cell>no</cell><cell>-</cell><cell>-</cell><cell>yes</cell></row><row><cell>Flower [17, 18] *</cell><cell>Euler dual</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell></row><row><cell>Our method</cell><cell>Euler dual</cell><cell>no</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>yes</cell><cell>no</cell></row><row><cell cols="3">* Note: The authors only provide a rough sketch of their method.</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5">All experiments were run on a desktop PC with an Intel i5-8400 CPU.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was supported by the German Research Foundation (DFG) within project KE 740/17-2 of the FOR2111 "Questions at the Interfaces" as well as Project-ID 251654672 -TRR 161 "Quantitative methods for visual computing". We would further like to thank Matthias Albrecht for help during the implementation and Patrick Paetzold for valuable feedback during the revision process.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Radial sets: Interactive visual analysis of large overlapping sets</title>
		<author>
			<persName><forename type="first">B</forename><surname>Alsallakh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Aigner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Miksch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.184</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2496" to="2505" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visual methods for analyzing probabilistic classification data</title>
		<author>
			<persName><forename type="first">B</forename><surname>Alsallakh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hanbury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Miksch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rauber</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346660</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1703" to="1712" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A new drawing for simple Venn diagrams based on algebraic construction</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bannier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Bodin</surname></persName>
		</author>
		<idno type="DOI">10.20382/JOCG.V8I1A8</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">2017</biblScope>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Processing convexity and concavity along a 2-d contour: figure-ground, structural shape, and attention</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bertamini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wagemans</surname></persName>
		</author>
		<idno type="DOI">10.3758/s13423-012-0347-2</idno>
	</analytic>
	<monogr>
		<title level="j">Psychonomic Bulletin &amp; Review</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="191" to="207" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The impact of topological and graphical choices on the perception of Euler diagrams</title>
		<author>
			<persName><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Stapleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howse</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.ins.2015.05.020</idno>
	</analytic>
	<monogr>
		<title level="j">Information Sciences</title>
		<imprint>
			<biblScope unit="volume">330</biblScope>
			<biblScope unit="page" from="455" to="482" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Latent dirichlet allocation</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Blei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">Y</forename><surname>Ng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">I</forename><surname>Jordan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="page" from="993" to="1022" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Testing for the consecutive ones property, interval graphs, and graph planarity using pq-tree algorithms</title>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">S</forename><surname>Booth</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">S</forename><surname>Lueker</surname></persName>
		</author>
		<idno type="DOI">10.1016/S0022-0000(76)80045-1</idno>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="335" to="379" />
			<date type="published" when="1976">1976</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Symmetric monotone venn diagrams with seven curves</title>
		<author>
			<persName><forename type="first">T</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Mamakani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ruskey</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-13122-632</idno>
	</analytic>
	<monogr>
		<title level="m">5th Int. Conf. FUN 2010</title>
				<meeting><address><addrLine>Berlin Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="331" to="342" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The effect of aesthetic on the usability of data visualization</title>
		<author>
			<persName><forename type="first">N</forename><surname>Cawthon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">V</forename><surname>Moere</surname></persName>
		</author>
		<idno type="DOI">10.1109/iv.2007.147</idno>
	</analytic>
	<monogr>
		<title level="m">11th International Conference Information Visualization (IV &apos;07)</title>
				<imprint>
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visualizing sets: An empirical comparison of diagram types</title>
		<author>
			<persName><forename type="first">P</forename><surname>Chapman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Stapleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Micallef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Blake</surname></persName>
		</author>
		<idno>doi: 10. 1007/978-3-662-44043-8 18</idno>
	</analytic>
	<monogr>
		<title level="m">Diagrammatic Representation and Inference</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="volume">8578</biblScope>
			<biblScope unit="page" from="146" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Towards a general solution to drawing areaproportional Euler diagrams</title>
		<author>
			<persName><forename type="first">S</forename><surname>Chow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ruskey</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.entcs.2005.02.017</idno>
	</analytic>
	<monogr>
		<title level="j">Electron. Notes Theor. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">134</biblScope>
			<biblScope unit="page" from="3" to="18" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Generating and drawing area-proportional Euler and Venn diagrams</title>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">C</forename><surname>Chow</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
		<respStmt>
			<orgName>University of Victoria</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Bubble sets: Revealing set relations with isocontours over existing visualizations</title>
		<author>
			<persName><forename type="first">C</forename><surname>Collins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Penn</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2009.122</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1009" to="1016" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">The banana (musa acuminata) genome and the evolution of monocotyledonous plants</title>
		<author>
			<persName><forename type="first">A</forename><surname>Hont</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Denoeud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-M</forename><surname>Aury</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F.-C</forename><surname>Baurens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Carreel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Garsmeur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Noel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bocs</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Droc</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Rouard</surname></persName>
		</author>
		<idno type="DOI">10.1038/nature11241</idno>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">488</biblScope>
			<biblScope unit="issue">7410</biblScope>
			<biblScope unit="page" from="213" to="217" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Venn diagrams for many sets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Edwards</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">New Scientist</title>
		<imprint>
			<biblScope unit="volume">121</biblScope>
			<biblScope unit="page" from="51" to="56" />
			<date type="published" when="1646">1646. 1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Lettres a une princesse d&apos;Allemagne. St. Petersbourg</title>
		<author>
			<persName><forename type="first">L</forename><surname>Euler</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page">1768</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Euler diagram generation</title>
		<author>
			<persName><forename type="first">J</forename><surname>Flower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howse</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jvlc.2008.01.004</idno>
	</analytic>
	<monogr>
		<title level="j">J. Vis. Lang. Comput</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="675" to="694" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Generating Euler diagrams</title>
		<author>
			<persName><forename type="first">J</forename><surname>Flower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howse</surname></persName>
		</author>
		<idno type="DOI">10.1007/3-540-46037-36</idno>
	</analytic>
	<monogr>
		<title level="m">Diagrammatic Representation and Inference, Second International Conference</title>
				<meeting><address><addrLine>Callaway Gardens, GA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2002-04-18">2002. April 18-20, 2002. 2002</date>
			<biblScope unit="volume">2317</biblScope>
			<biblScope unit="page" from="61" to="75" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Effective diagrammatic communication: Syntactic, semantic and pragmatic issues</title>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">A</forename><surname>Gurr</surname></persName>
		</author>
		<idno>doi: 10. 1006/jvlc.1999.0130</idno>
	</analytic>
	<monogr>
		<title level="j">J. Vis. Lang. Comput</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="317" to="342" />
			<date type="published" when="1999">1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A brave new world of rna-binding proteins</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">W</forename><surname>Hentze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Castello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Schwarzl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Preiss</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature Reviews Molecular Cell Biology</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page">327</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Concavities as basic features in visual search: Evidence from search asymmetries</title>
		<author>
			<persName><forename type="first">J</forename><surname>Hulleman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Winkel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Boselie</surname></persName>
		</author>
		<idno type="DOI">10.3758/bf03212069</idno>
	</analytic>
	<monogr>
		<title level="j">Perception &amp; Psychophysics</title>
		<imprint>
			<biblScope unit="volume">62</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="162" to="174" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">MetroSets: Visualizing sets as metro maps</title>
		<author>
			<persName><forename type="first">B</forename><surname>Jacobsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wallinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kobourov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nollenburg</surname></persName>
		</author>
		<idno>doi: 10. 1109/tvcg.2020.3030475</idno>
	</analytic>
	<monogr>
		<title level="j">TVCG</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="1257" to="1267" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">eulerr: Area-Proportional Euler and Venn Diagrams with Ellipses</title>
		<author>
			<persName><forename type="first">J</forename><surname>Larsson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note>R package version 6.1.0</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Upset: Visualization of intersecting sets</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lex</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Gehlenborg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Strobelt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vuillemot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Pfister</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2014.2346248</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="1983" to="1992" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Symmetry perception and affective responses: A combined EEG/EMG study</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Makin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">M</forename><surname>Wilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Pecchinenda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bertamini</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.neuropsychologia.2012.10.003</idno>
	</analytic>
	<monogr>
		<title level="j">Neuropsychologia</title>
		<imprint>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="issue">14</biblScope>
			<biblScope unit="page" from="3250" to="3261" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Generating simple convex Venn diagrams</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mamakani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><forename type="middle">J</forename><surname>Myrvold</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ruskey</surname></persName>
		</author>
		<idno>doi: 10.1016/j. jda.2012.04.013</idno>
	</analytic>
	<monogr>
		<title level="j">J. Discrete Algorithms</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="270" to="286" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">New roses: Simple symmetric Venn diagrams with 11 and 13 curves</title>
		<author>
			<persName><forename type="first">K</forename><surname>Mamakani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Ruskey</surname></persName>
		</author>
		<idno type="DOI">10.1007/s00454-014-9605-6</idno>
	</analytic>
	<monogr>
		<title level="j">Discrete &amp; Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="71" to="87" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Kelpfusion: A hybrid set visualization technique</title>
		<author>
			<persName><forename type="first">W</forename><surname>Meulemans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Riche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Speckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Alper</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2013.76</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1846" to="1858" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Assessing the effect of visualizations on bayesian reasoning through crowdsourcing</title>
		<author>
			<persName><forename type="first">L</forename><surname>Micallef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dragicevic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Fekete</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2012.199</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2536" to="2545" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">eulerforce: Force-directed layout for Euler diagrams</title>
		<author>
			<persName><forename type="first">L</forename><surname>Micallef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jvlc.2014.09.002</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages &amp; Computing</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="924" to="934" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">EulerForce: Force-directed layout for Euler diagrams</title>
		<author>
			<persName><forename type="first">L</forename><surname>Micallef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jvlc.2014.09.002</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages &amp; Computing</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="924" to="934" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Drawing graphs in Euler diagrams</title>
		<author>
			<persName><forename type="first">P</forename><surname>Mutton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Flower</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-25931-29</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Diagrammatic Representation and Inference</title>
				<meeting>Diagrammatic Representation and Inference</meeting>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="volume">2980</biblScope>
			<biblScope unit="page" from="66" to="81" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title level="a" type="main">nVenn: generalized, quasi-proportional Venn and Euler diagrams</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">G</forename><surname>Pérez-Silva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Araujo-Voces</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Quesada</surname></persName>
		</author>
		<idno type="DOI">10.1093/bioinformatics/bty109</idno>
	</analytic>
	<monogr>
		<title level="j">Bioinform</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">13</biblScope>
			<biblScope unit="page" from="2322" to="2324" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">High-resolution tads reveal dna sequences underlying genome organization in flies</title>
		<author>
			<persName><forename type="first">F</forename><surname>Ramírez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Bhardwaj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Arrigoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">C</forename><surname>Lam</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Grüning</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Villaveces</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Habermann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Akhtar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Manke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature communications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="15" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">A survey of Euler diagrams</title>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jvlc.2013.08.006</idno>
	</analytic>
	<monogr>
		<title level="j">J. Vis. Lang. Comput</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="134" to="155" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">General Euler diagram generation</title>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Fish</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-87730-16</idno>
	</analytic>
	<monogr>
		<title level="m">Diagrammatic Representation and Inference, 5th International Conference</title>
				<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="volume">5223</biblScope>
			<biblScope unit="page" from="13" to="27" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">A task-based evaluation of combined set and network visualization</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Stapleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Alsallakh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Micallef</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Baker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">J</forename><surname>Thompson</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.ins.2016.05.045</idno>
	</analytic>
	<monogr>
		<title level="j">Inf. Sci</title>
		<imprint>
			<biblScope unit="page" from="58" to="79" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">The search for simple symmetric Venn diagrams</title>
		<author>
			<persName><forename type="first">F</forename><surname>Ruskey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Savage</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wagon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Notices of the AMS</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1304" to="1311" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">A survey of Venn diagrams</title>
		<author>
			<persName><forename type="first">F</forename><surname>Ruskey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Weston</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronic Journal of Combinatorics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">3</biblScope>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">Properties of Euler diagrams and graphs in combination</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sathiyanarayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Stapleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Burton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howse</surname></persName>
		</author>
		<idno>doi: 10. 1109/VLHCC.2014.6883063</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Visual Languages and Human-Centric Computing</title>
				<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="217" to="218" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Shape recognition: convexities, concavities and things in between</title>
		<author>
			<persName><forename type="first">G</forename><surname>Schmidtmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">J</forename><surname>Jennings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">A A</forename><surname>Kingdom</surname></persName>
		</author>
		<idno type="DOI">10.1038/srep17142</idno>
	</analytic>
	<monogr>
		<title level="j">Scientific Reports</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">A simple approach for boundary improvement of Euler diagrams</title>
		<author>
			<persName><forename type="first">P</forename><surname>Simonetto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2015.2467992</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. &amp; Comp. Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="678" to="687" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">An heuristic for the construction of intersection graphs</title>
		<author>
			<persName><forename type="first">P</forename><surname>Simonetto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
		<idno type="DOI">10.1109/IV.2009.30</idno>
	</analytic>
	<monogr>
		<title level="m">13th International Conference Information Visualisation</title>
				<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="673" to="678" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Automatically drawing Euler diagrams with circles</title>
		<author>
			<persName><forename type="first">G</forename><surname>Stapleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Flower</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howse</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jvlc.2012.02.001</idno>
	</analytic>
	<monogr>
		<title level="j">J. Vis. Lang. Comput</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="163" to="193" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Inductively generating euler diagrams</title>
		<author>
			<persName><forename type="first">G</forename><surname>Stapleton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rodgers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Howse</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2010.28</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Vis. Comput. Graph</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="88" to="100" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">On the diagrammatic and mechanical representation of propositions and reasonings</title>
		<author>
			<persName><forename type="first">J</forename><surname>Venn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">59</biblScope>
			<biblScope unit="page" from="1" to="18" />
			<date type="published" when="1880">1880</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<analytic>
		<title level="a" type="main">On the readability of abstract set visualizations</title>
		<author>
			<persName><forename type="first">M</forename><surname>Wallinger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Jacobsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Kobourov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nollenburg</surname></persName>
		</author>
		<idno type="DOI">10.1109/tvcg.2021.3074615</idno>
	</analytic>
	<monogr>
		<title level="j">TVCG</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2821" to="2832" />
			<date type="published" when="2021-06">jun 2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<analytic>
		<title level="a" type="main">Hcp: A flexible cnn framework for multi-label image classification</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wei</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE transactions on pattern analysis and machine intelligence</title>
				<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="page" from="1901" to="1907" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">Exact and approximate area-proportional circular Venn and Euler diagrams</title>
		<author>
			<persName><forename type="first">L</forename><surname>Wilkinson</surname></persName>
		</author>
		<idno type="DOI">10.1109/tvcg.2011.56</idno>
	</analytic>
	<monogr>
		<title level="j">TVCG</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="321" to="331" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
