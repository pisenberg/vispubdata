<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Markus</forename><surname>Wallinger</surname></persName>
							<email>mwallinger@ac.tuwien</email>
						</author>
						<author>
							<persName><forename type="first">T</forename><forename type="middle">U</forename><surname>Wien</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Daniel</forename><surname>Archambault</surname></persName>
							<email>d.w.archambault@swansea.ac.uk</email>
						</author>
						<author>
							<persName><forename type="first">David</forename><surname>Auber</surname></persName>
							<email>auber@labri.fr</email>
						</author>
						<author>
							<persName><forename type="first">Martin</forename><forename type="middle">N</forename><surname>Öllenburg</surname></persName>
							<email>noellenburg@ac.tuwien</email>
						</author>
						<author>
							<persName><forename type="first">Jaakko</forename><surname>Peltonen</surname></persName>
							<email>jaakko.peltonen@tuni.fi</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Swansea University</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution">University of Bordeaux</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Tampere University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Edge-Path Bundling: A Less Ambiguous Edge Bundling Approach</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">084661A9E29F86E855212ECE8F72BFE4</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.1" ident="GROBID" when="2022-06-13T13:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Force-Directed edge bundling aggregates edges well, but overaggregates at the centre of the drawing making it difficult to see patterns in the east-west flow (red bundle). (c) CUBu has a similar drawback at the centre of the map to a lesser degree. (d) Winding Roads divides this structure into several smaller flows, but they may not be necessarily related to graph structure. (e) Edge-Path bundling is able to distinguish between several flows that reflect paths in the underlying graph. (f) When edge direction is considered, the algorithm is able to further subdivide these flows based on direction.</p><p>Abstract-Edge bundling techniques cluster edges with similar attributes (i.e. similarity in direction and proximity) together to reduce the visual clutter. All edge bundling techniques to date implicitly or explicitly cluster groups of individual edges, or parts of them, together based on these attributes. These clusters can result in ambiguous connections that do not exist in the data. Confluent drawings of networks do not have these ambiguities, but require the layout to be computed as part of the bundling process. We devise a new bundling method, Edge-Path bundling, to simplify edge clutter while greatly reducing ambiguities compared to previous bundling techniques. Edge-Path bundling takes a layout as input and clusters each edge along a weighted, shortest path to limit its deviation from a straight line. Edge-Path bundling does not incur independent edge ambiguities typically seen in all edge bundling methods, and the level of bundling can be tuned through shortest path distances, Euclidean distances, and combinations of the two. Also, directed edge bundling naturally emerges from the model. Through metric evaluations, we demonstrate the advantages of Edge-Path bundling over other techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Since its introduction <ref type="bibr" target="#b22">[24]</ref>, edge bundling approaches cluster groups of individual edges together based on similar properties. The original paper required a hierarchy imposed on top of the network, but quickly techniques were developed to bundle edges with shared attributes <ref type="bibr" target="#b34">[36]</ref> (e.g. proximity and movement in the same direction <ref type="bibr" target="#b12">[15,</ref><ref type="bibr" target="#b23">25,</ref><ref type="bibr" target="#b29">31,</ref><ref type="bibr" target="#b44">46]</ref>) (see Fig. <ref type="figure" target="#fig_0">1</ref>). However, all these approaches implicitly or explicitly cluster individual edges, or parts of them (such as their pixels), independent of graph structure. This causes a type of ambiguity shown in Fig. <ref type="figure" target="#fig_1">2</ref>(a) called the independent edge ambiguity: two independent edges can be clustered together leading to the perception of false adjacencies that do not exist in the underlying graph.</p><p>Confluent drawings <ref type="bibr" target="#b13">[16]</ref> considered a very similar problem, and cluster edges based on their participation in bicliques. Therefore, confluent drawings do not suffer from independent edge ambiguities. However, confluent drawings bundle graphs significantly less, leaving much edge clutter on-screen. Also, these approaches compute both the layout of the network and the bundling simultaneously. There have been a number of attempts to relax the strict constraints of confluent drawings to move towards unambiguous bundling <ref type="bibr" target="#b7">[10,</ref><ref type="bibr" target="#b55">57]</ref>, but all approaches still require the layout to be computed alongside the bundling.</p><p>In all such approaches, groups of edges with similar attributes (typically, edge slope and proximity) or parts of them (i.e. their pixels) are bundled together if they are aligned well. However, when clustering these edges, the underlying graph structure is not fully considered. In Fig. <ref type="figure" target="#fig_0">1</ref>, a straight line drawing and three popular bundling approaches are shown. Force-Directed edge bundling <ref type="bibr" target="#b23">[25]</ref> and CUBu <ref type="bibr" target="#b48">[50]</ref> greatly simplify the edge clutter clearly revealing the direction of flows. This is particularly visible in the east-west flows of the network (the red edges) at the centre of the drawing. However, unrelated edges can be pulled together into a bundle causing ambiguity in the patterns of connections. Grid-based techniques, such as Winding Roads <ref type="bibr" target="#b29">[31]</ref>, divide the edges into much smaller bundles, but these bundles can contain unrelated edges. The approach presented in this paper, Edge-Path bundling, bundles edges with shortest paths between their endpoints. Therefore, unrelated edges will not be bundled and all bundles reflect an underlying path in the graph. In the undirected version, it is now clear that the central flow divides into two: one that heads towards the great lakes region and another towards Texas. Further detail is also visible on the east coast and the great lakes region not visible in the other diagrams. Directed Edge-Path bundling reveals that these bundles actually consist of three main streams indicated in red. In the straight line drawing, these flows are somewhat visible, but the pattern is not revealed by any other technique except directed Edge-Path bundling; in particular, the flow from California to Texas divides into three.</p><p>This paper introduces a new approach to edge bundling that does not consider groups of individual edges, their pixels, or bicliques as the primitive for bundling. Instead, given an input layout (i.e. trailsets <ref type="bibr" target="#b34">[36]</ref>), it considers clustering edges with a weighted path as the primitive for bundling. Each long edge in the graph is bundled to a shortest path that exists between the endpoints of the edge (Fig. <ref type="figure" target="#fig_1">2(b</ref>) and 2(c)). By definition, Edge-Path bundling does not suffer from independent edge ambiguities as a path must exist in the graph for the edge to be bundled, but it is far less restrictive than the rules imposed by confluent drawings. Also, the approach naturally expresses both undirected and directed edge bundling without modification to the algorithm. We demonstrate that the approach has more significant bundling when compared to confluent drawings while simultaneously eliminating independent edge ambiguities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Since the introduction of edge bundling by Holten <ref type="bibr" target="#b22">[24]</ref> and confluent drawing by Dickerson et al. <ref type="bibr" target="#b13">[16]</ref> for reducing edge clutter in graph drawings, the research area has been very active and many approaches have been devised by clustering edges, or their pixels, with similar properties together. The current state-of-the-art in edge bundling can incur independent edge ambiguities (Fig. <ref type="figure" target="#fig_1">2(a)</ref>) when aggregating edges into clusters. Confluent drawings restrict the bundling to perfect bicliques to avoid this case, but often the imposed constraints are too strict for significant bundling to occur. Edge-Path bundling devises a necessary rule to have efficient bundling while completely eliminating independent edge ambiguities. Intuitively, when a pair of disconnected edges (u, v) and (w, x) are bundled, a path can appear to exist between (u, x) and (v, w) where a connection does not exist at all. Also, Edge-Path bundling can avoid bundling patterns where there are none. In Fig. <ref type="figure" target="#fig_2">3</ref>, independent edges are placed randomly in the cube and all bundling techniques find a pattern in this graph whereas Edge-Path bundling and confluent drawings do not. Edge-Path bundling does not have this issue as it only bundles edges with weighted paths in a particular layout. Although related to edge bundling, it is a fundamentally different approach that does not neatly fit into any of these categories.</p><p>Edge Bundling. Since the first techniques were described, many bundling techniques have been explored <ref type="bibr" target="#b34">[36]</ref> often inspired by the work on flow maps <ref type="bibr" target="#b40">[42]</ref>. A number of techniques have been proposed, but all techniques have one common primitive: clustering groups of edges together that share similar attributes.</p><p>Edge bundling was introduced to the visualisation community by Holten <ref type="bibr" target="#b22">[24]</ref>. In his seminal work, a hierarchy was superimposed on top of the network, usually via a treemap variant <ref type="bibr" target="#b10">[13,</ref><ref type="bibr" target="#b28">30]</ref>, and the centroids of the cluster hierarchy are used as control points to cluster edges into merging and splitting streams. Soon after, the requirement for a hierarchy was eliminated and replaced by a desired property whereby nearby edges headed in a similar direction with similar length are bundled together. A number of approaches were created with this idea including using a triangular mesh <ref type="bibr" target="#b12">[15]</ref>, grids and quad-trees <ref type="bibr" target="#b29">[31,</ref><ref type="bibr" target="#b35">37]</ref>, force-directed algorithms <ref type="bibr" target="#b23">[25,</ref><ref type="bibr" target="#b38">40]</ref>, force-directed algorithms with edge direction encoded in the force system with compatibility measures (such as connection distance) <ref type="bibr" target="#b43">[45]</ref>, sparse visibility spanners <ref type="bibr" target="#b41">[43]</ref>, and multilevel clustering <ref type="bibr" target="#b19">[21]</ref>. Domain-specific clusters and layouts have been used to help with the bundling process <ref type="bibr" target="#b30">[32,</ref><ref type="bibr" target="#b42">44]</ref> as well as more general clusters <ref type="bibr" target="#b45">[47]</ref>. Image-based <ref type="bibr" target="#b16">[19,</ref><ref type="bibr" target="#b27">29,</ref><ref type="bibr" target="#b33">35,</ref><ref type="bibr" target="#b44">46,</ref><ref type="bibr" target="#b48">50,</ref><ref type="bibr" target="#b52">54]</ref> techniques operate on the pixels of individual edges. These approaches create a density or similarity map computed at pixel level by summing up the contributions of all edges, after which all edges are independently advected upstream along gradients of the map. Bundling has also been used to simplify clusters in parallel coordinate plots <ref type="bibr" target="#b39">[41]</ref>.</p><p>Edge bundling techniques greatly reduce edge clutter by implicitly or explicitly clustering groups of edges or parts of them (i.e. their pixels) and allow visualisation of higher-level flow patterns in the network that otherwise would not be visible. However, all these approaches will suffer from the independent edge ambiguities to a degree. Also, as stated in the survey <ref type="bibr" target="#b34">[36]</ref>, random patterns can be created in data where there are no patterns. In this paper, we seek a compromise: efficient bundling that greatly simplifies the network while completely eliminating independent edge ambiguities. We accomplish this by bundling long edges with a weighted shortest path between their endpoints instead of clustering groups of edges together.</p><p>Confluent Drawings. Confluent drawings are visually similar to edge bundling but, by design, they do not suffer from independent edge ambiguities. The key idea of a confluent bundle is that only bicliques can be bundled, i.e., K n,m subgraphs. This guarantees that all connections implied by a bundle are actually present in the graph. In their orig- No structure is present in this graph and there should be no bundles (See <ref type="bibr" target="#b34">[36]</ref> Figure <ref type="figure" target="#fig_0">19</ref>). Force-directed, Winding Roads and CUBu give the impression of structure in the underlying data when there is none. Edge-Path bundling and confluent drawings do not find bundles.</p><p>inal and theoretically motivated definition, confluent drawings do not permit any edge crossings <ref type="bibr" target="#b13">[16,</ref><ref type="bibr" target="#b26">28]</ref> and as a consequence some graphs do not have a confluent drawing at all. Variations of confluent drawings, such as Δ-confluent <ref type="bibr" target="#b14">[17]</ref> and strict confluent drawings <ref type="bibr" target="#b15">[18,</ref><ref type="bibr" target="#b17">20]</ref>, have been studied from a theoretical point of view, showing mathematical characterizations and the NP-completeness of recognizing graphs that admit certain types of confluent drawings. While most results on confluent drawings do not provide algorithms or implementations, Dickerson et al. <ref type="bibr" target="#b13">[16]</ref> and Hirsch et al. <ref type="bibr" target="#b21">[23]</ref> present and implement some heuristics based on detecting cliques and bicliques in order to introduce confluent bundles. Confluent drawings are based on an abstract graph input and typically solve both the graph layout and the edge bundling in a combined way. Therefore, existing confluent drawing techniques do not readily apply to edge bundling of pre-embedded networks. In this paper, we devise a compromise that is not as strict as confluent layout, but more effectively bundles the network so that higher-level features become visible while reducing topological ambiguities. Hybrid Approaches. A number of papers have used confluent drawing approaches as a basis and have relaxed some of the more restrictive constraints of the approach to achieve greater simplification. Bach et al. <ref type="bibr" target="#b7">[10]</ref> explore ways to produce less ambiguous bundling by relaxing the strict planarity constraint of confluent drawings. Their approach computes a power graph decomposition and uses the resulting hierarchy to both draw and bundle the network. Zheng et al. <ref type="bibr" target="#b55">[57]</ref> extend Bach et al. <ref type="bibr" target="#b7">[10]</ref> to create strict, power-confluent drawings, based on additional constraints that further reduce crossings and ambiguities.</p><p>The two approaches described above were the first attempts to relax some of the constraints of confluent drawings to produce less ambiguous edge bundlings. In this paper, we introduce a new approach with a different primitive, but that finds a similar compromise: greater bundling while completely avoiding independent edge ambiguities.</p><p>Visualisations and Measures of Bundling Quality. Alongside bundling algorithms, significant work has been undertaken to devise metrics to evaluate how well bundling algorithms perform with respect to each other and in general. Metrics have been devised to measure faithfulness <ref type="bibr" target="#b36">[38,</ref><ref type="bibr" target="#b37">39]</ref>, entropy <ref type="bibr" target="#b53">[55]</ref>, geodesic path tendency or distortion from the straight line distance <ref type="bibr" target="#b24">[26]</ref>, and data-ink ratio to quantify simplification <ref type="bibr" target="#b46">[48]</ref>. We use and adapt these metrics in our evaluation.</p><p>Wang et al. <ref type="bibr" target="#b50">[52]</ref> give methods to visualise ambiguities in graph layouts, including bundling. In this approach, alignment in edge direction and proximity, a classic definition for bundling suitability, are used to highlight ambiguities in the graph. Nguyen et al. define the notion of faithfulness in graph visualisation: "the underlying network data and the visual representation are logically consistent" <ref type="bibr" target="#b36">[38]</ref>. Edge bundling ambiguities is used to illustrate faithfulness or lack of it in a representation. Our work, by definition, increases the faithfulness of bundling representation by avoiding certain types of ambiguity.</p><p>Summary. Edge bundling techniques improve graph readability, but suffer from independent edge ambiguities and can introduce patterns where none exist in the underlying data. Confluent drawings and hybrid approaches do not suffer from independent edge ambiguities, but have a lower degree of bundling and compute the drawing of the network as part of the bundling process. Thus, this paper introduces a new bundling primitive (edge to path) and a new bundling algorithm based on this primitive, that produces a more faithful bundling <ref type="bibr" target="#b36">[38]</ref> of a layout.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">EDGE-PATH BUNDLING ALGORITHM</head><p>Algorithm 1 presents the pseudocode for our approach. The method is surprisingly simple and requires only four parameters: the network G = (V, E), a drawing D G of G, a maximum distortion threshold k, and an edge weight factor d. The algorithm creates a local hashset, lock, that indicates when edges will be excluded from bundling by the algorithm. It also uses a second hashset skip which includes edges that will be skipped from shortest path calculations. Initially, all edges in both hashsets are false. The algorithm takes into account the length of an edge in D G to determine its suitability for inclusion in a shortest path: shortest paths that result in shorter detours in Euclidean space are preferred. Therefore, a third hashset stores the weight of each edge which is the Euclidean edge length raised to a power d. The exponent d can be used to tune exclusion of short edges from the bundling.</p><p>As a first step, the edges are sorted in decreasing weight order and then processed in that order. Thus, our algorithm prefers to bundle long edges over short ones. If an edge is locked, the algorithm does not process it. Otherwise, it is excluded from shortest path computations and processed. The first stage of bundling is determining the shortest, weighted path between the endpoints of the edge, excluding the edge itself and previously bundled edges from this calculation. In order to compute this path, we use Dijkstra's algorithm to compute the shortest path that takes the minimum detour from straight line distance. If such a path does not exist or the detour is greater than a distortion threshold of k times the straight line distance, the edge is not bundled and it is reintroduced into shortest path calculations. Otherwise, the edge is bundled and the algorithm uses the vertices along the path in the drawing as control points for the edge. The bundled edge is excluded from all future shortest path calculations as it will be rendered using a curve. As all the edges along the path are now included in an Edge-Path bundle, these edges are locked. Edges along the path should not be bundled as they serve as the control points for one or more bundled edges in the graph, but they still can participate in shortest path calculations to bundle other edges. The final drawing of the network uses these control points to render each edge using a smooth Bézier curve. A smoothing parameter allows the algorithm to control the bundling strength in the final drawing by inserting additional control points along the path. A factor of one places control points on the vertices. Increasing this factor to two places additional control points on the centre of the straight line between two consecutive control points. Higher factors apply this rule recursively.</p><p>Overall, Edge-Path bundling has a worst case time complexity of O(|E| 2 log |V |) as the Dijkstra algorithm (priority queue heap implementation) runs O(|E|) times. However, the distortion threshold k can be used to stop Dijkstra's algorithm once this threshold is exceeded, reducing the chance that this worst case complexity is observed.   <ref type="figure">(v, x</ref>) and there is a path between u and x. When edges are bundled along paths, the viewer could perceive a direct edge between (u, x) if the bundling is strong.</p><formula xml:id="formula_0">Algorithm 1: Edge-Path Bundling Algorithm Input :Graph G = (V, E), input drawing D G ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The Lesser Ambiguities of Edge-Path Bundling</head><p>Although our approach is free of independent edge ambiguities by definition, it is not completely free of ambiguities. We now describe the ambiguities incurred by Edge-Path bundling. It is important to note that the two ambiguities we define here can occur in all other edge bundling methods, but have not been concretely defined previously.</p><p>Path Endpoint Ambiguity. Edge-Path bundling does not create connections between vertices that do not exist in the underlying graph. However, it can produce ambiguities in edge endpoints along a path. Fig. <ref type="figure" target="#fig_3">4</ref> shows this ambiguity. A path exists, by definition between u and x, but it can be difficult to tell if there is a direct connection between u and x in the Edge-Path bundle, depending on bundling strength.</p><p>Edge Crossing Ambiguity. When two edges or bundles cross, there could be an ambiguity if the crossing angle is shallow <ref type="bibr" target="#b25">[27]</ref>. This is a fundamental ambiguity of graph drawing in general, which also affects the unbundled straight-line input drawing D G .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">QUALITY METRICS</head><p>In order to evaluate the edge bundling created by different bundling algorithms, we make use of three quantitative metrics. They measure the amount of clutter reduction using the ink reduction, the distortion of edge lengths in the graph, and the amount of adjacency ambiguity in the bundled layout. This section defines these quality metrics. We remark that no single quality metric can fully judge a bundled layout, but we think that a good bundled layout, which reduces visual clutter but at the same time aims to be faithful to distances and graph topology, will do fairly well on all three metrics. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Ink Reduction</head><p>Let I be the grayscale bitmap image I ∈ {0,...,255} m×n of a bundled graph layout Γ and let I B ∈ {0, 1} m×n be the binarization of I such that</p><formula xml:id="formula_1">I B (i, j) = 1 I(i, j) ≥ δ 0 I(i, j) &lt; δ , (<label>1</label></formula><formula xml:id="formula_2">)</formula><p>where 0 ≤ δ ≤ 255 is a global gray value threshold to consider a pixel occupied. Similarly we define J as the unbundled input grayscale image.</p><p>The ink-reduction of I with respect to J is defined as:</p><formula xml:id="formula_3">ink J (I) = ∑ m i=1 ∑ n j=1 I B (i, j) ∑ m i=1 ∑ n j=1 J B (i, j) . (<label>2</label></formula><formula xml:id="formula_4">)</formula><p>Under the assumption that the bundling reduces the number of pixels occupied by ink, the ink reduction takes a value between 0 and 1 and measures the factor by which the number of pixels occupied in the graph layout is reduced. An ink reduction close to 1 indicates a low degree of bundling, whereas smaller values indicate a higher degree of bundling. It is possible to obtain values larger than 1 if the bundling increases the number of pixels occupied.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Distortion</head><p>Let e = (u, v) ∈ E be an edge in G with Euclidean length of ||u − v|| and let d Γ (u, v) be the length of the curve connecting u and v in the bundled layout Γ. We define the distortion of layout Γ as the average distortion of its edges:</p><formula xml:id="formula_5">dist(Γ) = 1 |E| ∑ (u,v)∈E d Γ (u, v) ||u − v|| (3)</formula><p>The distortion measures the factor by which length of an edge increases in the bundled layout on average. Distortion values near 1 mean that lengths of bundled edges remain close to the Euclidean distance of their endpoints; larger values mean edge bundles have longer detours from straight line distance, making adjacencies harder to read <ref type="bibr" target="#b24">[26]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Ambiguity</head><p>We define an ambiguity metric, inspired by faithfulness <ref type="bibr" target="#b36">[38]</ref>, to measure the number and severity of perceivable false connections in a bundled layout (Fig. <ref type="figure">5</ref>). Let e = (s,t) ∈ E in a bundled layout Γ. We define the set of reachable neighbors of the endpoint s along e as N Γ (s, e) = {v ∈ V | ∃ ambiguous connection from s to v in Γ}; analogously we define N Γ (t, e) for the endpoint t. An ambiguous connection occurs if another edge e = (u, v) intersects or is closer than a distance threshold ε at a point p on e in Γ and the angle at p between e and e is smaller than a threshold θ . Intuitively, edges e and e , locally in p, are difficult to distinguish and thus the endpoint of e , say v, forming the small angle with t is a reachable neighbor in N Γ (s, e), whereas the other endpoint u belongs to N Γ (t, e), independently of (s, v) or (u,t) ∈ E or not.</p><p>The reachable neighbor sets contain some true and false neighbors and we may take this classification based on a graph distance threshold δ ≥ 1: the set of true neighbors is defined as</p><formula xml:id="formula_6">N t Γ (s, e) = {v ∈ N Γ (s, e) | d G (s, v) ≤ δ } and the set of false neighbors as N f Γ (s, e) = N Γ (s, e) \ N t Γ (s, e).</formula><p>Here let d G (s, v) denote the hop distance between s and v in G, i.e., the length of the shortest unweighted path between s and v in G. We can now define the ambiguity of Γ:</p><formula xml:id="formula_7">amb(Γ) = ∑ v∈V ∑ e=(v,w)∈E |N f Γ (v, e)| ∑ v∈V ∑ e=(v,w)∈E |N Γ (v, e)| . (<label>4</label></formula><formula xml:id="formula_8">)</formula><p>This value measures the proportion of false neighbors to all neighbors implied by Γ, with low values corresponding to less ambigous drawings. For δ = 1 the set N t Γ contains only the actual neighbors in edge set E, while δ → ∞ counts all reachable vertices as true neighbors; the remaining false neighbors correspond to vertex pairs in different connected components (i.e. the most ambiguous). Hence for connected graphs, there is some value δ 0 ∈ N for which amb(Γ) drops to zero for all δ ≥ δ 0 . Values for δ &gt; 1 correspond to tolerating ambiguous connections if the endpoints are connected by paths of at most δ edges. We use amb δ (Γ) to denote the ambiguity for a particular value δ .</p><p>This ambiguity measure will count all ambiguities due to shallow edge crossings, independent edge ambiguities (Fig. <ref type="figure" target="#fig_1">2(a)</ref>), and path endpoint ambiguities (Fig. <ref type="figure" target="#fig_3">4</ref>). Thus, Edge-Path bundling will have a non-zero value for this measure. However, in all of the Edge-Path bundling drawings, by definition, there are no independent edge ambiguities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Detecting Edge Ambiguity in a Drawing</head><p>The approach chosen to detect edge ambiguity is based on the premise that nearby edges with a similar direction may mistakenly have their endpoints interchanged, especially edges that are parallel or cross with a small angle. We thus check if edges are spatially close and if the crossing angle is below the threshold θ = 7.5 • , a crossing angle for which empirical evidence <ref type="bibr" target="#b25">[27]</ref> shows a strong negative effect on readability.</p><p>First, the drawing area is divided into a small, square grid. Two edges are considered ambiguous if an ambiguity is detected in at least one cell. Each grid cell is assigned the intersecting edge segments it contains as well as their respective angle. Internally, curved edges are approximated using polylines, leading to two cases. In the first case, a segment ends in or intersects a grid cell and the angle of the segment is assigned. In the second case, where multiple segments of the polyline intersect the grid cell, the mean of the angles is assigned, under the assumption that the grid cell is small enough such that there is no drastic change of direction.</p><p>After this initial assignment, a sliding window processes the cells of the grid. The angles of the assigned segments of an edge are aggregated over all cells in the window which gives us an angle for each edge intersecting the window. Edges are processed in a pairwise manner. Given that two edges intersect the window, the edges must be spatially close. Therefore, the smaller of the two crossing angles is compared to a threshold θ to determine if it is an ambiguity.</p><p>Additionally, we need the set of neighbours for the endpoints of an edge e = (s,t) in the sets N Γ (s, e) and N Γ (t, e). When assigning segments to grid cells we iterate over the segments of an edge from source to target and assign an angle in the range [0, 2π]. This gives enough information to determine the relative position of ambiguous edge segments by comparing their induced angles and deciding if the source vertex of one edge is ambiguous with the source or target vertex of another edge. This is analogously defined for the target vertex.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DATA</head><p>We computed bundled layouts of real and synthetic datasets. The synthetic datasets highlight properties of bundling behaviour. The real world datasets are common in the literature and used for comparison.</p><p>Cubes 1R-4R. We created several synthetic datasets that should capture connections between disconnected components, a common feature in real-world datasets. Vertices (|V | = 100) are evenly distributed into four components which are subsequently randomly embedded inside axis-parallel cubes with fixed side length s. The cubes are positioned top left, top right, bottom left and bottom right with fixed space of 2s between the right edges of the left cubes and the left edges of the right cubes, see Fig. <ref type="figure">6</ref>. We introduce a distance Δ between the bottom edge of the top cubes and the top edge of the bottom cubes. In Cubes 1R and 4R Δ = s/10, which creates space between the cube pairings. In Cubes 2R Δ = 0 and for Cubes 3R Δ = −s/5 which results in overlapping top and bottom cubes. A random spanning tree is used to connect vertices inside their cube component and additional edges are randomly added. In Cubes 1R-3R the left cubes are connected with their right counterpart and in Cubes 4R the components are connected diagonally.</p><p>For connecting the components we added |V |/2 edges randomly. In the directed variation we additionally specify half of the edges going from left to right and the other half from right to left.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cubes 1R</head><p>Cubes 2R Cubes 3R Cubes 4R Fig. <ref type="figure">6</ref>. Illustration of the Cubes 1R-4R datasets.</p><p>Noise. This dataset is based on the observation by Lhuillier et. al <ref type="bibr" target="#b34">[36]</ref> that bundling approaches do bundle without support in the underlying data. Migrations. This dataset <ref type="bibr" target="#b12">[15]</ref> shows migration in the US <ref type="bibr" target="#b47">[49]</ref>  Amazon Subset. This dataset consists of products with edges indicating that they are commonly co-purchased. We randomly filtered edges from the original graph <ref type="bibr" target="#b31">[33,</ref><ref type="bibr" target="#b32">34]</ref>. It has |V | = 192k vertices and |E| = 269k edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENT RENDERING AND BUNDLING ALGORITHMS</head><p>To guarantee a fair comparison between the different systems, we rendered all images of the different bundling results in the same way. First, we computed a bundling with the systems' respective implementation. Then, we extracted the bundled edges as polyline approximations of the curves and used this as input for our own rendering. As some systems required a different scaling of the input layout, we proceeded to scale all bundlings to a fixed width of 1600px while keeping the original aspect ratio. In the standard bundling plot, we used a linewidth of 1px to draw the edges and a diameter of 4px for disks representing vertices. We used this plot to calculate the ink reduction of a bundling approach.</p><p>To give a better impression of the direction of edges in a bundle, we created a second plot where we applied a perceptually uniform colour map <ref type="bibr" target="#b11">[14]</ref> to assign a color to each edge depending on its angle in the straight line drawing. Furthermore, we created plots of the distortion, where we first computed the minimum and maximum distortion over all results of a dataset and applied a sequential colormap <ref type="bibr" target="#b11">[14]</ref> to show an overview of where edges are distorted in a bundling. Finally, as we calculate the ambiguity of edges on a per cell basis, we can convert this to an image. We assign each cell the number of intersecting ambiguous edge-pairs and normalize by the maximum over all results of a dataset to achieve a greyscale image that encodes areas of high ambiguity as white spots. These images can be found in the supplementary material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Bundling Algorithms in the Experiment</head><p>For our experiment, we selected algorithms with available implementations as representatives from major categories of bundling approaches: force-directed bundling, confluent drawings with fixed vertex positions, grid-based approaches, and image-based approaches.</p><p>Force-directed Bundling. We used an implementation in D3.js [2] and set the parameters as specified in <ref type="bibr" target="#b23">[25]</ref> (spring constant K = 0.1, force iterations I = 60, subdivision operation C = 6, initial subdivision points P = 1, increase ratio 2). As the bundling depends on the scale of the input graph, we did not rescale the input layout before bundling.</p><p>For Confluent Drawings. we used an available implementation <ref type="bibr" target="#b2">[5]</ref> based on the results of <ref type="bibr" target="#b7">[10,</ref><ref type="bibr" target="#b55">57]</ref>, which we modified to handle graphs with an embedding. This was realized by removing the layout step of the implementation and replacing it with the following. First, we fixed all vertices of the input layout and embedded the routing vertices in the barycenter of neighbouring input vertices. Afterwards, we iteratively moved the routing vertices towards the the barycenter of their neighbours until the layout converged. Generally, confluent bundling algorithms draw and bundle the graph simultaneously, but our approach requires a drawing as input. This means that these approaches are hampered as they cannot modify the layout.</p><p>Winding Roads. We used the implementation <ref type="bibr" target="#b29">[31]</ref> in Tulip <ref type="bibr" target="#b6">[9]</ref>. KDEEB. We adapted an available implementation [4] of KDEEB <ref type="bibr" target="#b27">[29]</ref>. A comparison with FFTEB <ref type="bibr" target="#b33">[35]</ref> would be preferable, but we were not able to run the implementation. Furthermore, given the computational effort required for our larger experiments we used the GPU implementation which had its parameters fixed by the authors. The layout of the input graph was scaled to the range [0, 1].</p><p>CUBu We used the available implementation <ref type="bibr" target="#b0">[1]</ref> of CUBu <ref type="bibr" target="#b48">[50]</ref>. A medium sized kernel was used while most default settings where kept. We increased relaxation to get smoother lines.</p><p>Divided Edge Bundling. We used an implementation in Matlab [3] of Selassie et al. <ref type="bibr" target="#b43">[45]</ref> for directed edge bundling using default parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Parameter Specification</head><p>As discussed in Sec. 3, we can specify several parameters when computing a bundling. We tested different settings and evaluated the resulting ink reduction, distortion, and ambiguity.</p><p>We found that a maximum distortion factor k ∈ [1.5, 3.0] works well for most of the experiments. A distortion factor of less than 1.5 resulted in very little edge bundling. For the Cubes datasets, a distortion factor above 3.0 resulted in overaggregation with ink reduction &gt; 1. In the US Airlines dataset, when increasing the distortion factor more edges were bundled, but increasing above a factor of 3.0 did not produce more bundling, which can be explained by the fact that most shortest paths are below the distortion threshold already. Images of the effect of this parameter on Airlines are contained in the supplementary material. Ultimately, we used k = 2.0 for all experiments.</p><p>Experiments on the edge weight factor d showed that values of d ∈ {1, 2, 3} work well. Higher values of d penalise long edges from being included in shortest paths used for bundling. A value of d = 2 was chosen for our experiments.</p><p>As our algorithm computes a list of control points for each edge, we can use an integer smoothing parameter to pull the rendered curve towards its control points. A smoothing parameter of 1 would use the original list of control points to calculate the curve. A smoothing parameter of 2 would add an additional control point in the middle of the line between every consecutive pair of control points. Increasing the smoothing factor above 2 results in recursively adding more control points thus creating a tighter bundling. In our experiments, we set the smoothing parameter to 2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">EXPERIMENTS</head><p>We next discuss our experimental results. KDEEB and CUBu are image-based techniques. As it was easier to adjust the kernel size of CUBu, its result images are shown. High resolution images of all algorithms, including KDEEB, are in the supplementary material.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Runtimes</head><p>We used all the cited implementations specified above. As these implementations are written in a variety of languages with some designed to run on the GPU and others the CPU, direct comparison of runtimes is less informative. However, it was important to note that the imagebased techniques, KDEEB and CUBu, have by far the best performance in terms of runtime, processing large graphs in less than a second.</p><p>We report the average runtimes of ten executions for Edge-Path bundling. We implemented our bundling algorithm in C++ and ran it on a machine with Ubuntu 20.04 operating system, AMD <ref type="bibr">Ryzen</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Synthetic Data</head><p>We first discuss the quantitative results on our synthetic data, Cubes as well as the Noise data. By design of the Cubes datasets, there are two disjoint edge sets from left to right, which can potentially be grouped into distinct bundles, but edges from disconnected components should ideally not be mixed. In the Noise data, consisting of disconnected edges, there is nothing to be bundled, topologically speaking. Refer to Table <ref type="table">1</ref> for the scores of the quality metrics and Fig. <ref type="figure" target="#fig_6">7</ref> for the result images. The results for Cubes 1R and 2R were similar to 3R and 4R. Full metric results available in the supplementary material.</p><p>Ink Reduction. Naturally, the ink reduction for Straight Line is 1. KDEEB and CUBu consistently and as expected reduce ink the most on all four Cubes instances. Winding Roads is third and then Force-Directed. The stronger ink reduction of the other approaches comes at the cost of overbundling some edges and creating ambiguities. Confluent and Edge-Path have a relatively low reduction; this is expected as the more graph topology-aware bundling algorithms do not create independent edge ambiguities. Results on Noise are similar (see also Fig. <ref type="figure" target="#fig_2">3</ref>), where KDEEB and CUBu, Winding Roads, and then Force-Directed reduce ink the most. Confluent and Edge-Path do not change the input layout at all, as they never bundle independent edges.</p><p>Distortion. Straight Line, by definition, has a distortion of 1. We report mean and median distortion values. While the mean distortion is generally least for Force-Directed bundling with just a few percent, the median distortion is consistently smallest for Edge-Path, meaning that the majority of edges are unbundled and thus undistorted. Winding Roads is the next best, with CUBu, and KDEEB. Although Confluent has a high mean distortion, its median is 1 indicating it distorts a few edges within the components drastically as the layout cannot be adjusted. The observed distortions in the Noise data is non-existent for Confluent and Edge-Path as there is no bundling. Force-Directed, producing only few and thin bundles, has generally low distortion, followed by Winding Roads, CUBu, and KDEEB.</p><p>Ambiguity The ambiguity scores are lowest for Straight Line as it has no bundling with values of 0.47-0.56 caused by shallow-angle edge crossings only. All bundling algorithms increase the ambiguity with KDEEB, CUBu, and Force-Directed having the largest ambiguity scores followed by Winding Roads and Edge-Path. Confluent has the lowest ambiguity score. Algorithms that produce stronger bundling with more ink reduction often produce more independent edge ambiguities. With increasing δ , Edge-Path becomes the best performing algorithm in terms of ambiguity. As expected, on the Noise data, Confluent and Edge-Path again obtain the same initial ambiguity as Straight Line. Force-Directed has the next lowest ambiguity score followed by Winding Roads and KDEEB.</p><p>Qualitative. Fig. <ref type="figure" target="#fig_6">7</ref> shows our results. On the Cubes datasets, Force-Directed, KDEEB, CUBu and Winding Roads can mix the two independent streams of edges. Confluent does not mix these streams by design, but has a low degree of bundling. Edge-Path bundling bundles within each stream but does not connect the two disconnected streams. This demonstrates that it is able to avoid grouping unrelated edges together.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Real Data</head><p>Tables 2 and 3 show the quality metrics for the real world data and Fig. <ref type="figure">8</ref> through Fig. <ref type="figure" target="#fig_8">11</ref> show the bundled layouts for this data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.1">Airlines</head><p>Ink Reduction. On the (undirected) Airlines dataset, KDEEB achieves the largest ink reduction followed by Winding Roads, CUBu, and Edge-Path. Force-Directed and Confluent achieve the least ink reduction. These scores also match the visual impression of Fig. <ref type="figure">8</ref>. The ink Table <ref type="table">1</ref>. Scores of the quality metrics for the undirected synthetic datasets and all bundling algorithms. Column dist Γ gives mean and median. Columns amb δ are only shown for 1 ≤ δ ≤ 5 if there are non-zero entries. For Noise, all amb δ are equal as the graph consists of independent edges.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cubes 3R</head><p>Cubes 4R Noise ink J dist amb 1 amb 2 amb 3 amb 4 ink J dist amb 1 amb 2 amb 3 amb 4 amb 5 ink J dist amb δ Straight-Line 1.00 1.00 1.00 0.50 0.32 0.08 0.01 1.00 1.00 1.00 0.56 0.37 0.12 0.02 0.00 1.00 1.00 1.00 0.50 Force 0.79 reduction result would be expected as Edge-Path bundling provides a good compromise between ambiguity and visual simplification. Distortion. Force-Directed performs best with Winding Roads and Edge-Path follow in second. For KDEEB, CUBu, and Confluent we observe higher distortions, which is expected due to the strong ink reduction; for Confluent, as stated before, the bundle routing had not been originally designed for pre-embedded graphs.</p><p>Ambiguity. The straight-line layout has an ambiguity score of 0.59 due to shallow edge crossings. Force-Directed achieves the least additional ambiguity, followed by Winding Roads and Edge-Path. KDEEB and CUBu are slightly more ambiguous and the poor edge routing in Confluent lets it score highest on ambiguity. This indicates that Confluent, although having good theoretical ambiguity properties, is not well suited if the vertex positions cannot be adjusted. As δ is increased, all approaches perform similarly and go to zero when δ = 3.</p><p>Winding Roads and Edge-Path provide similar scores and minimise overaggregation. Winding Roads produces smaller bundles, prone to fewer shallow crossings, but these bundles are not necessarily backed by structural paths. Edge-Path bundling produces fewer larger bundles, all of which are backed by graph structure.</p><p>Qualitative. Fig. <ref type="figure">8</ref> shows the results for undirected bundling. Images for directed bundling are available in the supplementary material. The undirected drawings of Force-Directed, CUBu and KDEEB can clarify coarse structure in the drawing. In particular, there is a large bundle headed east-west and some of the structure in the densely populated east coast. Winding Roads is able to divide the large bundles into smaller ones but these do not necessarily correspond to graph structure. Edge-Path bundling clarifies the two distinct streams on the west coast follow different paths in the network eastward with Denver seeming to act as a control point. Also, the bundles on the east coast are four distinct path bundles. These path bundles loosely correspond to four airport hubs: Atlanta, Minneapolis, Detroit, and Dallas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.2">Migrations</head><p>Ink Reduction. For the Migrations dataset (Fig. <ref type="figure" target="#fig_0">1</ref>), KDEEB achieves the best ink reduction, closely followed by Edge-Path and then Winding Roads. CUBu and then Force-Directed are next and finally Confluent. These results match the visual impression of the bundled layouts and are also reflected in the directed Migrations data.</p><p>Distortion. CUBu, Winding Roads, and Edge-Path have the lowest mean distortion scores but very similar medians. Force-Directed and KDEEB follow next. Confluent, as before, scores worst in the distortion metric, which we again attribute to its need to compute a layout simultaneously. These results match our expectations and are similarly observed in the directed Migrations data.</p><p>Ambiguity. The Migrations Straight-Line layout has a high baseline ambiguity of 0.7. All methods produce similar ambiguity scores for δ = 1. Thus, at this value of δ , shallow edge crossings dominate and all are equally ambiguous. However, as δ grows, shallow edge crossings matter less in the measure and bundling disconnected edges increase in importance. We show δ = 1 ...5 and almost immediately, Edge-Path bundling outperforms all approaches. It is competitive with Straight-Line as it is able to pull edges connected at small distances away from edges that are not necessarily connected at small values of δ .</p><p>On the Migrations dataset Edge-Path bundling is a clear winner with high ink reduction, low distortion, and low ambiguity competitive with straight line drawings.</p><p>Qualitative. Fig. <ref type="figure" target="#fig_0">1</ref> shows the undirected bundling approaches on Migrations. Force-Directed and CUBu can present the main east-west direction of flow and the graph structure on the east coast to some degree, but aggregate to a very high degree and can include unrelated edges. Winding Roads further subdivides these bundles, but again some of the structure can be obfuscated by clustering unrelated edges together. Edge-Path only shows flows that are in the underlying graph which are not seen in the other drawings. The east-west flows actually correspond to two distinct paths: one heading northward and one heading towards Texas. On the east coast, the flows are further divided into a smaller number of compact streams that reflect paths in the data.</p><p>Table <ref type="table" target="#tab_5">3</ref> shows the metrics for directed Migrations with similar results. Fig. <ref type="figure">9</ref> compares directed edge bundling using a force-Directed approach to our own. The force directed approach is able to divide out streams heading in different directions as can be seen in the east-west parallel flows across the country and the north-south flows on the east and west coast. However, these patterns contain a number of unrelated edges. In Edge-Path bundling, the east-west flow divides into three parts around Texas with the thickest bundle heading towards the great lakes region. On the east coast, more detail is revealed in the north-south direction. All of this detail depends on the structure of the underlying graph as unrelated edges are not bundled.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.3">Air Traffic</head><p>Ink Reduction. KDEEB performs the best with Winding Roads and Edge-Path in second. There is a large gap between the other approaches and these three algorithms. On the directed datasets, Edge-Path and CUBu outperform force-Directed. Edge-Path bundling aims at bundling well while reducing the amount of ambiguity in the network and therefore it is competitive with top bundling approaches.</p><p>Distortion. Edge-Path bundling ranks fourth only outperforming confluent, but when looking at the median distortion it performs the same as all other approaches. Confluent does not perform well on distortion as it is forced to retain the input layout meaning that bicliques could be separated by large distances. Therefore, on distortion, Edge-Path performs similarly to all approaches. For directed datasets, Edge-Path and CUBu outperform Divided.   Ambiguity. For δ = 1, Force-Directed has the lowest ambiguity with Winding Roads and CUBu in second, followed by Edge-Path. There is less bundling in the force-Directed approach, meaning that it has lower ambiguities. The bundles in Winding Roads are smaller, giving it an advantage in terms of this metric. KDEEB and confluent are not too far away but slightly more ambiguous. With increasing δ , the approaches become comparable rapidly. In the directed case, CUBu and Edge-Path perform similarly with similar findings.</p><p>Qualitative. Fig. <ref type="figure" target="#fig_0">10</ref> shows the results of Force-Directed, CUBu, Winding Roads, and Edge-Path bundling on this global airline dataset. Force-Directed is able to simplify the east-west flows across the Atlantic and Pacific, but only at a high level with many of the edges remaining unaggregated. CUBu is able to simplify these flows, but suffers from some overaggregation. Winding Roads divides these flows into several smaller streams, but these streams may not be reflective of graph structure. Edge-Path bundling provides a compromise between level of bundling and ambiguity. In this image, flows from Europe to South America are a separate yellow bundle, indicating few independent paths. Flights directly across the Atlantic are divided into separate bundles that represent paths in the graph as well as detail in the United States being revealed. Flights in Asia split into a triangle of streams towards Australia with north-south flights being in dependant from flights on the continent. Edge-Path bundling is able to reveal structure in this network that is more faithful to the graph structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3.4">Amazon Subset</head><p>Fig. <ref type="figure" target="#fig_8">11</ref> shows the Amazon Subset using the CUBu rendering style. Images of other algorithms that were able to bundle the graph are in the supplementary material. The dataset was too large for our ambiguity metric, so metric values are not reported. CUBu bundling renders a tree-like pattern whereas Edge-Path does not. Edge-Path bundling takes into account the graph structure (faithfulness <ref type="bibr" target="#b37">[39]</ref>). CUBu has no such guarantee, because it does not take this structure into account. However, the tree-like structure emerges from bundling edges with similar attributes together such as proximity and direction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">DISCUSSION, LIMITATIONS, AND CONCLUSION</head><p>Edge-Path bundling is not without its ambiguities even though it completely eliminates independent edge ambiguities. As shown in Fig. <ref type="figure" target="#fig_3">4</ref>, direct connections between vertices can be ambiguous, but paths between all vertices in the cluster will exist by definition. This edge aggregation is similar to node aggregation strategies <ref type="bibr" target="#b3">[6]</ref><ref type="bibr" target="#b4">[7]</ref><ref type="bibr" target="#b5">[8]</ref><ref type="bibr" target="#b9">12,</ref><ref type="bibr" target="#b20">22,</ref><ref type="bibr" target="#b49">51]</ref>. In visualisations produced by node aggregation strategies, it is impossible to understand how the vertices within the aggregated node connect, only that they are connected; in Edge-Path bundling, we know the bundle is connected and paths exist between all vertices, but specific connections are difficult to read. Interactive techniques, similar to Edgelens <ref type="bibr" target="#b51">[53]</ref>, could be explored to disambiguate this ambiguity. Edge-Path bundles can be more convoluted as they must follow shortest paths in a graph. Detection of these loops would solve this issue but remains future work.</p><p>When bundling directed graphs, Edge-Path bundling can give poor results, since a directed graph may have many forward and backward edges between vertex pairs. This can lead to edges being bundled along the same path in opposite directions. When combined with overplotting, this may result in indistinguishable bundles. Future work could focus on a better routing approach for bundles or avoiding to use the same path in both directions or using a parallel bundling style <ref type="bibr" target="#b48">[50]</ref>. Edge-Path bundling takes a graph and a layout as input to compute the bundled drawing. Interesting future work would be to design layout algorithms that maximise the Edge-Path bundling as part of the layout process.</p><p>Our implementation of Edge-Path bundling has a worst-case complexity of O(|E| 2 log |V |), but still works well on graphs of up to ten thousand edges. For dense networks where |E| approaches |V | 2 , the performance deteriorates. From a theoretical standpoint, finding approximations or algorithms that are faster are of interest. Multilevel bundling <ref type="bibr" target="#b19">[21]</ref>, faster shortest path implementations <ref type="bibr" target="#b8">[11]</ref> or parallelisation <ref type="bibr" target="#b54">[56]</ref> could be applied to improve the practical performance. Similarly, the scalability of the ambiguity metric is an open problem.</p><p>We presented a method for bundling graphs by considering Edge-Path pairs. The resulting drawings do not incur independent edge ambiguities and are more resilient to creating signal through bundling when there is none. Our resulting bundles provide a new compromise between degree of bundling and faithfulness to the graph structure.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Edge bundling of the Migrations dataset. (a) Straight line drawing. (b) Force-Directed edge bundling aggregates edges well, but overaggregates at the centre of the drawing making it difficult to see patterns in the east-west flow (red bundle). (c) CUBu has a similar drawback at the centre of the map to a lesser degree. (d) Winding Roads divides this structure into several smaller flows, but they may not be necessarily related to graph structure. (e) Edge-Path bundling is able to distinguish between several flows that reflect paths in the underlying graph. (f) When edge direction is considered, the algorithm is able to further subdivide these flows based on direction.</figDesc><graphic coords="1,85.43,366.77,223.94,96.26" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Independent edge ambiguity and Edge-Path bundling. (a) Two disconnected edges can be bundled together in edge bundling approaches resulting in false connections between (u, x) and (v, w). (b) Edge-Path bundling avoids this issue by bundling long edges with weighted shortest paths. (c) For directed graphs, directed paths are used.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Bundling of a noise graph. Randomly placed vertices (|V | = 1000) are connected by a perfect matching, resulting in |E| = |V |/2 disconnected edges.No structure is present in this graph and there should be no bundles (See<ref type="bibr" target="#b34">[36]</ref> Figure19). Force-directed, Winding Roads and CUBu give the impression of structure in the underlying data when there is none. Edge-Path bundling and confluent drawings do not find bundles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig.4. Path endpoint ambiguity. A connection exists between (u, w) and (v, x) and there is a path between u and x. When edges are bundled along paths, the viewer could perceive a direct edge between (u, x) if the bundling is strong.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>For the Noise dataset, we embedded |V | = 1000 vertices randomly in a square and connected vertices to form a perfect matching, resulting in |E| = |V |/2 edges and connected components. US Airlines. The US Airlines dataset has been introduced by [25] and is commonly used in bundling publications. The dataset depicts flight paths from source to target airports in the US and has |V | = 235 vertices and |E| = 2101 edges. It has one connected component.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>and consists of a set of trails which we converted into a graph. The directed graph has |V | = 1702 vertices and |E| = 9726 edges. The number of vertices is slightly lower compared to earlier literature (1712) when we converted the trail sets. The undirected graph has |E| = 6487 edges. It has 28 connected components. Air Traffic. This dataset consists of global flights and has |V | = 1533 vertices and |E| = 14825 edges. It has one connected component.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. The Cubes 2R dataset shows the bundling of two connected components. KDEEB, Winding Roads and Force-Directed bundle edges regardless if edges are connected in the data. Confluent drawings and Edge-Path only bundle edges in their respective components.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .Fig. 9 .</head><label>89</label><figDesc>Fig. 8. Airlines (undirected). (a) Input drawing. (b)Force-Directed bundling is able to cluster edges into the major flows, but some overaggregation prevents details from being visualised. (c) CUBu provides a good bundling, but also has overaggregation. (c) Confluent drawings can be imposed on the layout, but as the approach cannot layout the graph bicliques can be distantly located, resulting in suboptimal performance. (e) Winding Roads divides the flows into many streams, but these streams can be unfaithful to graph structure. (f) Edge-Path bundling aggregates edges using weighted paths. The four prominent bundle intersections on the east coast correspond to major airports: Atlanta, Detroit, Minneapolis, and Dallas.</figDesc><graphic coords="8,52.79,158.21,164.66,72.26" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 11 .</head><label>11</label><figDesc>Fig. 11. Edge-Path bundling and CUBu on Amazon Subset. CUBu rendering style is used on both drawings.</figDesc><graphic coords="9,180.11,268.49,110.54,98.06" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>maximum distortion k, edge weight factor d. Output :Control points for an Edge-Path bundled drawing Γ.</figDesc><table><row><cell cols="3">sortedEdges ← sortDescending (E, weight)</cell><cell></cell></row><row><cell>for e ∈ sortedEdges do</cell><cell></cell><cell></cell><cell></cell></row><row><cell>if lock(e) then</cell><cell></cell><cell></cell><cell></cell></row><row><cell>continue</cell><cell></cell><cell></cell><cell></cell></row><row><cell>skip(e) ← True</cell><cell></cell><cell></cell><cell></cell></row><row><cell>s ← source(e)</cell><cell></cell><cell></cell><cell></cell></row><row><cell>t ← target(e)</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">//Dijkstra excluding edges in skip from G</cell></row><row><cell cols="3">p ← dijkstraAlgorithm (G, s, t, weight, skip)</cell><cell></cell></row><row><cell>if p == null then</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">skip(e) ← False</cell><cell></cell><cell></cell></row><row><cell>continue</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="3">if p.length() &gt; k  *  D G .edgeLength(e) then</cell><cell></cell></row><row><cell cols="2">skip(e) ← False</cell><cell></cell><cell></cell></row><row><cell>continue</cell><cell></cell><cell></cell><cell></cell></row><row><cell>for m ∈ p do</cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="2">lock(m) ← True</cell><cell></cell><cell></cell></row><row><cell cols="3">controlPoints(e) ← p.getVertexCoords()</cell><cell></cell></row><row><cell>return controlPoints</cell><cell></cell><cell></cell><cell></cell></row><row><cell>v</cell><cell>x</cell><cell>v</cell><cell>x</cell></row><row><cell>u</cell><cell>w</cell><cell>u</cell><cell>w</cell></row></table><note>for e ∈ E do lock(e) ← False skip(e) ← False weight(e) ← (D G .edgeLength(e)) d</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Fig.5. Consider an edge e with endpoints (s,t). The bundling implies N Γ (s, e) = {t, w, x} and N Γ (t, e) = {s, u, v}. Additionally, there exists an edge with endpoints (u,t) and therefore we would consider u a true neighbour of t resulting in N</figDesc><table><row><cell>v</cell><cell>w</cell><cell>x</cell></row><row><cell>s</cell><cell>u</cell><cell>t</cell></row></table><note>f Γ (s, e) = {w, x} and N f Γ (t, e) = {v}</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>5 5600x CPU and NVidia RTX 3070: Cubes (1-4)R [128ms], Noise [401ms], Airlines [920ms], Migrations [undirected: 10.6s, directed: 15.3s], Air Traffic [49.6s], and Amazon Subset [7.5 hours]. Furthermore, we also report runtimes for bundling the Air Traffic dataset, the largest dataset presented in an image, with CUBu [5ms incl. rendering], KDEEB [45ms], Force-directed [32.5s], Force-directed (divided) [3.2hrs], Winding Roads [7.6s], and Confluent [157s].</figDesc><table /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 2 .</head><label>2</label><figDesc>Scores of the quality metrics for the undirected real-world datasets and all bundling algorithms. Column dist gives mean and median. Columns amb δ are only shown for 1 ≤ δ ≤ 5 if there are non-zero entries. Bold values highlight the best score in each column.</figDesc><table><row><cell></cell><cell cols="2">US Airlines</cell><cell></cell><cell></cell><cell></cell><cell cols="2">Migrations</cell><cell></cell><cell></cell><cell>Air Traffic</cell></row><row><cell>ink J</cell><cell>dist</cell><cell cols="2">amb 1 amb 2</cell><cell>ink J</cell><cell>dist</cell><cell cols="5">amb 1 amb 2 amb 3 amb 4 amb 5</cell><cell>ink J</cell><cell>dist</cell><cell>amb 1 amb 2 amb 3</cell></row><row><cell cols="3">Straight-Line 1.00 1.00 1.00 0.66</cell><cell>0.02</cell><cell cols="3">1.00 1.00 1.00 0.71</cell><cell>0.25</cell><cell>0.06</cell><cell>0.02</cell><cell>0.01</cell><cell>1.00 1.00 1.00 0.74</cell><cell>0.06</cell><cell>0.00</cell></row><row><cell cols="3">Force 0.76 1.03 1.01 0.85</cell><cell>0.03</cell><cell cols="3">0.77 1.10 1.06 0.88</cell><cell>0.34</cell><cell>0.10</cell><cell>0.04</cell><cell>0.02</cell><cell>0.79 1.05 1.02 0.78</cell><cell>0.08</cell><cell>0.00</cell></row><row><cell cols="3">Confluent 0.81 1.29 1.12 0.88</cell><cell>0.02</cell><cell cols="3">0.89 1.40 1.14 0.90</cell><cell>0.31</cell><cell>0.07</cell><cell>0.03</cell><cell>0.02</cell><cell>0.85 1.47 1.28 0.90</cell><cell>0.09</cell><cell>0.00</cell></row><row><cell cols="3">WindingR 0.46 1.06 1.04 0.87</cell><cell>0.03</cell><cell cols="3">0.58 1.06 1.04 0.87</cell><cell>0.34</cell><cell>0.10</cell><cell>0.04</cell><cell>0.03</cell><cell>0.57 1.05 1.04 0.81</cell><cell>0.12</cell><cell>0.01</cell></row><row><cell cols="3">KDEEB 0.30 1.21 1.15 0.90</cell><cell>0.09</cell><cell cols="3">0.52 1.14 1.07 0.92</cell><cell>0.46</cell><cell>0.16</cell><cell>0.07</cell><cell>0.05</cell><cell>0.39 1.05 1.02 0.91</cell><cell>0.23</cell><cell>0.02</cell></row><row><cell cols="3">CUBu 0.61 1.10 1.10 0.89</cell><cell>0.04</cell><cell cols="3">0.68 1.05 1.02 0.90</cell><cell>0.32</cell><cell>0.08</cell><cell>0.03</cell><cell>0.01</cell><cell>0.70 1.00 1.00 0.81</cell><cell>0.13</cell><cell>0.01</cell></row><row><cell cols="3">Edge-Path 0.56 1.08 1.05 0.87</cell><cell>0.04</cell><cell cols="3">0.54 1.07 1.03 0.89</cell><cell>0.24</cell><cell>0.03</cell><cell>0.01</cell><cell>0.01</cell><cell>0.58 1.11 1.08 0.89</cell><cell>0.15</cell><cell>0.01</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 3 .</head><label>3</label><figDesc>Scores of the quality metrics for the directed real-world datasets and the directed bundling algorithms. Column dist gives mean and median. Columns amb δ are only shown for 1 ≤ δ ≤ 5 if there are non-zero entries. Bold values highlight the best score in each column.</figDesc><table><row><cell></cell><cell cols="2">US Airlines</cell><cell></cell><cell></cell><cell></cell><cell cols="2">Migrations</cell><cell></cell><cell>Air Traffic</cell></row><row><cell>ink J</cell><cell>dist</cell><cell cols="2">amb 1 amb 2</cell><cell>ink J</cell><cell>dist</cell><cell cols="4">amb 1 amb 2 amb 3 amb 4 amb 5</cell><cell>ink J</cell><cell>dist</cell><cell>amb 1 amb 2</cell></row><row><cell cols="3">Straight-Line 1.00 1.00 1.00 0.71</cell><cell>0.02</cell><cell cols="3">1.00 1.00 1.00 0.71</cell><cell>0.25</cell><cell>0.06</cell><cell>0.02</cell><cell>0.01</cell><cell>1.00 1.00 1.00 0.74</cell><cell>0.06</cell></row><row><cell cols="3">Divided 0.75 1.08 1.04 0.87</cell><cell>0.03</cell><cell cols="3">0.79 1.11 1.06 0.89</cell><cell>0.34</cell><cell>0.10</cell><cell>0.03</cell><cell>0.02</cell><cell>0.84 1.41 1.39 0.86</cell><cell>0.11</cell></row><row><cell cols="3">CUBu 0.58 1.06 1.04 0.88</cell><cell>0.03</cell><cell cols="3">0.62 1.06 1.02 0.91</cell><cell>0.33</cell><cell>0.08</cell><cell>0.03</cell><cell>0.02</cell><cell>0.75 1.00 1.00 0.79</cell><cell>0.09</cell></row><row><cell cols="3">Edge-Path 0.81 1.07 1.02 0.83</cell><cell>0.01</cell><cell cols="3">0.58 1.08 1.04 0.90</cell><cell>0.25</cell><cell>0.03</cell><cell>0.01</cell><cell>0.01</cell><cell>0.76 1.09 1.05 0.86</cell><cell>0.12</cell></row></table></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We acknowledge funding by the Vienna Science and Technology Fund (WWTF) through project ICT19-035, UKRI EP/V033670/1 and Academy of Finland grant 327352.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title/>
		<author>
			<persName><surname>Cubu -Implementation</surname></persName>
		</author>
		<ptr target="https://webspace.science.uu.nl/˜telea001/InfoVis/CUBu" />
		<imprint>
			<date type="published" when="2021-08">Aug. 2021</date>
			<biblScope unit="volume">5</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<author>
			<persName><surname>Forcebundle</surname></persName>
		</author>
		<title level="m">Online; accessed 5</title>
				<imprint>
			<date type="published" when="2021-08">Aug. 2021</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title/>
		<author>
			<persName><surname>Pconfluent -Github</surname></persName>
		</author>
		<ptr target="https://github.com/jxz12/pconfluent" />
		<imprint>
			<date type="published" when="2021-08">Aug. 2021</date>
		</imprint>
	</monogr>
	<note>Online; accessed 5</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">ASK-GraphView: a large scale graph visualization system</title>
		<author>
			<persName><forename type="first">J</forename><surname>Abello</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Krishnan</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2006.120</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="669" to="676" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">GrouseFlocks: Steerable exploration of graph hierarchy space</title>
		<author>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2008.34</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="900" to="913" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Tugging graphs faster: Efficiently modifying path-preserving hierarchies for browsing paths</title>
		<author>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2010.60</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="276" to="289" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Tulip 5</title>
		<author>
			<persName><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bourqui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Delest</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Lambert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mathiaut</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Melanc ¸on</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Pinaud</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Renoust</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vallet</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-1-4939-7131-2315</idno>
	</analytic>
	<monogr>
		<title level="m">Encyclopedia of Social Network Analysis and Mining</title>
				<editor>
			<persName><forename type="first">R</forename><surname>Alhajj</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Rokne</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="3185" to="3212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Towards unambiguous edge bundling: Investigating confluent drawings for network visualization</title>
		<author>
			<persName><forename type="first">B</forename><surname>Bach</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">H</forename><surname>Riche</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Marriott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Dwyer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2598958</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="541" to="550" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Route planning in transportation networks</title>
		<author>
			<persName><forename type="first">H</forename><surname>Bast</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Delling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Müller-Hannemann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Pajor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sanders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Wagner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">F</forename><surname>Werneck</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-49487-62</idno>
	</analytic>
	<monogr>
		<title level="m">Algorithm Engineering</title>
				<editor>
			<persName><forename type="first">L</forename><surname>Kliemann</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">P</forename><surname>Sanders</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="volume">9220</biblScope>
			<biblScope unit="page" from="19" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visual analysis of large graphs using (x,y)-clustering and hybrid visualizations</title>
		<author>
			<persName><forename type="first">V</forename><surname>Batagelj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">J</forename><surname>Brandenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Didimo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Liotta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Palladino</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Patrignani</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2010.265</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1587" to="1598" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Squarified treemaps</title>
		<author>
			<persName><forename type="first">M</forename><surname>Bruls</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Huizing</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-7091-6783-04</idno>
	</analytic>
	<monogr>
		<title level="m">2nd Joint Eurographics -IEEE TCVG Symposium on Visualization</title>
				<editor>
			<persName><forename type="first">W</forename><forename type="middle">C</forename><surname>De Leeuw</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="33" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The misuse of colour in science communication</title>
		<author>
			<persName><forename type="first">F</forename><surname>Crameri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">E</forename><surname>Shephard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Heron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature communications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="1" to="10" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Geometry-based edge clustering for graph visualization</title>
		<author>
			<persName><forename type="first">W</forename><surname>Cui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2008.135</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="1277" to="1284" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Confluent drawings: Visualizing non-planar diagrams in a planar way</title>
		<author>
			<persName><forename type="first">M</forename><surname>Dickerson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T</forename><surname>Goodrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Meng</surname></persName>
		</author>
		<idno type="DOI">10.7155/jgaa.00099</idno>
	</analytic>
	<monogr>
		<title level="j">J. Graph Algorithms and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="31" to="52" />
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Delta-confluent drawings</title>
		<author>
			<persName><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">T</forename><surname>Goodrich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">Y</forename><surname>Meng</surname></persName>
		</author>
		<idno type="DOI">10.1007/1161805816</idno>
	</analytic>
	<monogr>
		<title level="m">Graph Drawing (GD&apos;05)</title>
				<editor>
			<persName><forename type="first">P</forename><surname>Healy</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">N</forename><surname>Nikolov</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">3843</biblScope>
			<biblScope unit="page" from="165" to="176" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Strict confluent drawing</title>
		<author>
			<persName><forename type="first">D</forename><surname>Eppstein</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Löffler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nöllenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Speckmann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Verbeek</surname></persName>
		</author>
		<idno type="DOI">10.20382/jocg.v7i1a2</idno>
	</analytic>
	<monogr>
		<title level="j">J. Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="22" to="46" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Skeletonbased edge bundling for graph visualization</title>
		<author>
			<persName><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Paulovich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cantareiro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2011.233</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2364" to="2373" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">On strict (outer-) confluent graphs</title>
		<author>
			<persName><forename type="first">H</forename><surname>Förster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ganian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Klute</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Nöllenburg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graph Drawing and Network Visualization (GD&apos;19)</title>
				<editor>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">D</forename><surname>Tóth</surname></persName>
		</editor>
		<imprint>
			<biblScope unit="volume">11904</biblScope>
			<biblScope unit="page" from="147" to="161" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName><surname>Springer</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-030-35802-012</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Multilevel agglomerative edge bundling for visualizing large graphs</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Gansner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>North</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Scheidegger</surname></persName>
		</author>
		<idno>doi: 10.1109/ PACIFICVIS.2011.5742389</idno>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis &apos;11)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="187" to="194" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Simplifying tuggraph using zipping algorithms</title>
		<author>
			<persName><forename type="first">S</forename><surname>Golodetz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Arnab</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Voiculescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Cameron</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.patcog.2020.107257</idno>
	</analytic>
	<monogr>
		<title level="j">Pattern Recognition</title>
		<imprint>
			<biblScope unit="volume">103</biblScope>
			<biblScope unit="page">2020</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Biclique edge cover graphs and confluent drawings</title>
		<author>
			<persName><forename type="first">M</forename><surname>Hirsch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Meijer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Rappaport</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-70904-639</idno>
	</analytic>
	<monogr>
		<title level="m">Graph Drawing (GD&apos;06)</title>
				<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2007">2007</date>
			<biblScope unit="volume">4372</biblScope>
			<biblScope unit="page" from="405" to="416" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Hierarchical edge bundles: Visualization of adjacency relations in hierarchical data</title>
		<author>
			<persName><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2006.147</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="741" to="748" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Force-directed edge bundling for graph visualization</title>
		<author>
			<persName><forename type="first">D</forename><surname>Holten</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<idno>doi: 10. 1111/j.1467-8659.2009.01450.x</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="983" to="990" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">A graph reading behavior: Geodesicpath tendency</title>
		<author>
			<persName><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-H</forename><surname>Hong</surname></persName>
		</author>
		<idno type="DOI">10.1109/PACIFICVIS.2009.4906848</idno>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis&apos;09)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page" from="137" to="144" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Effects of crossing angles</title>
		<author>
			<persName><forename type="first">W</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S.-H</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<idno>doi: 10. 1109/PACIFICVIS.2008.4475457</idno>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis&apos;08)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page" from="41" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Train tracks and confluent drawings</title>
		<author>
			<persName><forename type="first">P</forename><surname>Hui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Pelsmajer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Schaefer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Štefankovič</surname></persName>
		</author>
		<idno>doi: 10.1007/ s00453-006-0165-x</idno>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="page" from="465" to="479" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Graph bundling by kernel density estimation</title>
		<author>
			<persName><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<idno>doi: 10. 1111/j.1467-8659.2012.03079.x</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="865" to="874" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Tree-Maps: A space-filling approach to the visualization of hierarchical information structures</title>
		<author>
			<persName><forename type="first">B</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Shneiderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the 2nd Conference on Visualization &apos;91, VIS &apos;91</title>
				<meeting>of the 2nd Conference on Visualization &apos;91, VIS &apos;91</meeting>
		<imprint>
			<date type="published" when="1991">1991</date>
			<biblScope unit="page" from="284" to="291" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Winding roads: Routing edges into bundles</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lambert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bourqui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Auber</surname></persName>
		</author>
		<idno>doi: 10.1111/j. 1467-8659.2009.01700.x</idno>
	</analytic>
	<monogr>
		<title level="j">Comput. Graph. Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="853" to="862" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Pathway preserving representation of metabolic networks</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lambert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Dubois</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Bourqui</surname></persName>
		</author>
		<idno type="DOI">10.1111/j.1467-8659.2011.01951.x</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">30</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1021" to="1030" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">The dynamics of viral marketing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Adamic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">A</forename><surname>Huberman</surname></persName>
		</author>
		<idno type="DOI">10.1145/1134707.1134732</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings 7th ACM Conference on Electronic Commerce</title>
				<editor>
			<persName><forename type="first">J</forename><surname>Feigenbaum</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Chuang</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">D</forename><forename type="middle">M</forename><surname>Pennock</surname></persName>
		</editor>
		<meeting>7th ACM Conference on Electronic Commerce</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="228" to="237" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Leskovec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Krevl</surname></persName>
		</author>
		<ptr target="http://snap.stanford.edu/data" />
		<title level="m">SNAP Datasets: Stanford large network dataset collection</title>
				<imprint>
			<date type="published" when="2014-06">June 2014</date>
		</imprint>
	</monogr>
	<note>Online</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">FFTEB: edge bundling of huge graphs by the fast fourier transform</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lhuillier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<idno type="DOI">10.1109/PACIFICVIS.2017.8031594</idno>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis&apos;17)</title>
				<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="190" to="199" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">State of the art in edge and trail bundling techniques</title>
		<author>
			<persName><forename type="first">A</forename><surname>Lhuillier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hurter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.13213</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="619" to="645" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Ambiguity-free edge-bundling for interactive graph visualization</title>
		<author>
			<persName><forename type="first">S</forename><surname>Luo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ma</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2011.104</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="810" to="821" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">On the Faithfulness of Graph Visualizations</title>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">H</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hong</surname></persName>
		</author>
		<idno type="DOI">10.1109/PacificVis.2013.6596147</idno>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis&apos;13)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<monogr>
		<title level="m" type="main">Towards faithful graph visualizations</title>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">H</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hong</surname></persName>
		</author>
		<idno>abs/1701.00921</idno>
		<imprint>
			<date type="published" when="2017">2017</date>
			<publisher>CoRR</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title level="a" type="main">TGI-EB: A new framework for edge bundling integrating topology, geometry and importance</title>
		<author>
			<persName><forename type="first">Q</forename><forename type="middle">H</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-25878-713</idno>
	</analytic>
	<monogr>
		<title level="m">Graph Drawing (GD&apos;11)</title>
				<editor>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Van Kreveld</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">B</forename><surname>Speckmann</surname></persName>
		</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2011">2011</date>
			<biblScope unit="volume">7034</biblScope>
			<biblScope unit="page" from="123" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title level="a" type="main">An edge-bundling layout for interactive parallel coordinates</title>
		<author>
			<persName><forename type="first">G</forename><surname>Palmas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bachynskyi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Oulasvirta</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">P</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Weinkauf</surname></persName>
		</author>
		<idno>doi: 10. 1109/PacificVis.2014.40</idno>
	</analytic>
	<monogr>
		<title level="m">Pacific Visualization Symposium (PacificVis&apos;14)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<analytic>
		<title level="a" type="main">Flow map layout</title>
		<author>
			<persName><forename type="first">D</forename><surname>Phan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">B</forename><surname>Yeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Winograd</surname></persName>
		</author>
		<idno type="DOI">10.1109/INFVIS.2005.1532150</idno>
	</analytic>
	<monogr>
		<title level="m">Information Visualization (InfoVis&apos;05)</title>
				<editor>
			<persName><forename type="first">J</forename><forename type="middle">T</forename><surname>Stasko</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">M</forename><forename type="middle">O</forename><surname>Ward</surname></persName>
		</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page" from="219" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Edge routing with ordered bundles</title>
		<author>
			<persName><forename type="first">S</forename><surname>Pupyrev</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Nachmanson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bereg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">E</forename><surname>Holroyd</surname></persName>
		</author>
		<idno>doi: 10. 1016/j.comgeo.2015.10.005</idno>
	</analytic>
	<monogr>
		<title level="j">Computational Geometry</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="page" from="18" to="33" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">The solid* toolset for software visual analytics of program structure and metrics comprehension: From research prototype to product</title>
		<author>
			<persName><forename type="first">D</forename><surname>Reniers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Voinea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.scico.2012.05.002</idno>
	</analytic>
	<monogr>
		<title level="j">Science of Computer Programming</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="page" from="224" to="240" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Divided edge bundling for directional network data</title>
		<author>
			<persName><forename type="first">D</forename><surname>Selassie</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Heller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Heer</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2011.190</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2354" to="2363" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<analytic>
		<title level="a" type="main">Image-based edge bundles: Simplified visualization of large graphs</title>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Ersoy</surname></persName>
		</author>
		<idno>doi: 10 .1111/j.1467-8659.2009.01680.x</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="843" to="852" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Convergent drawing for mutually connected directed graphs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Toeda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Nakazawa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Itoh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Saito</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jvlc.2017.09.004</idno>
	</analytic>
	<monogr>
		<title level="j">J. Visual Languages &amp; Computing</title>
		<imprint>
			<biblScope unit="volume">43</biblScope>
			<biblScope unit="page" from="83" to="90" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b46">
	<monogr>
		<title level="m" type="main">The Visual Display of Quantitative Information</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">R</forename><surname>Tufte</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983">1983</date>
			<publisher>Graphics Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b47">
	<monogr>
		<title level="m" type="main">United States Census Bureau. County-to-county migration flows files: Census</title>
		<imprint>
			<date type="published" when="2000">2000. 2000</date>
		</imprint>
	</monogr>
	<note>Online; accessed 7. Jul. 2021</note>
</biblStruct>

<biblStruct xml:id="b48">
	<analytic>
		<title level="a" type="main">CUBu: universal realtime bundling for large graphs</title>
		<author>
			<persName><forename type="first">M</forename><surname>Van Der Zwan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Codreanu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Telea</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2515611</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2550" to="2563" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b49">
	<analytic>
		<title level="a" type="main">Interactive visualization of small world graphs</title>
		<author>
			<persName><forename type="first">F</forename><surname>Van Ham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<idno type="DOI">10.1109/INFVIS.2004.43</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Information Visualization</title>
				<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="199" to="206" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b50">
	<analytic>
		<title level="a" type="main">AmbiguityVis: visualization of ambiguity in graph layouts</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Archambault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qu</surname></persName>
		</author>
		<idno>doi: 10. 1109/TVCG.2015.2467691</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="359" to="368" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b51">
	<analytic>
		<title level="a" type="main">Edgelens: An interactive method for managing edge congestion in graphs</title>
		<author>
			<persName><forename type="first">N</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Carpendale</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Greenberg</surname></persName>
		</author>
		<idno>doi: 10. 1109/INFVIS.2003.1249008</idno>
	</analytic>
	<monogr>
		<title level="m">Symposium on Information Visualization (InfoVis&apos;03)</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="51" to="58" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b52">
	<analytic>
		<title level="a" type="main">Texture-based edge bundling: A web-based approach for interactively visualizing large graphs</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<idno type="DOI">10.1109/BigData.2015.7364046</idno>
	</analytic>
	<monogr>
		<title level="m">Big Data</title>
				<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="2501" to="2508" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b53">
	<analytic>
		<title level="a" type="main">An information-theoretic framework for evaluating edge bundling visualization</title>
		<author>
			<persName><forename type="first">J</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<idno>doi: 10. 3390/e20090625</idno>
	</analytic>
	<monogr>
		<title level="j">Entropy</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">9</biblScope>
			<biblScope unit="page">625</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b54">
	<analytic>
		<title level="a" type="main">AsynGraph: Maximizing data parallelism for efficient iterative graph processing on gpus</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Liao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Jin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Hu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>He</surname></persName>
		</author>
		<idno>doi: 10. 1145/3416495</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Archit. Code Optim</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page">2020</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b55">
	<analytic>
		<title level="a" type="main">Further towards unambiguous edge bundling: Investigating power-confluent drawings for network visualization</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">X</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Pawar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">F M</forename><surname>Goodman</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2019.2944619</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="2244" to="2249" />
			<date type="published" when="2021">2021</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
