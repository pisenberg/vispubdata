<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Towards a Generative Theory of Diagram Design</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Klaus</forename><surname>Reichenberger</surname></persName>
						</author>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Kamps</surname></persName>
							<email>kamps@darmstadt.gmd.de</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gene</forename><surname>Golovchinskv</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">GMD-Institute for Integrated Publication and Information Systems</orgName>
								<address>
									<addrLine>Dolivostrasse 15</addrLine>
									<postCode>D-64293</postCode>
									<settlement>Darmstadt, Germany { reichen</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Department of Industrial Engiheering</orgName>
								<orgName type="institution">University of Toronto</orgName>
								<address>
									<addrLine>4 Taddle Creek Road</addrLine>
									<postCode>M5S lA4</postCode>
									<settlement>Toronto</settlement>
									<region>Ontario</region>
									<country key="CA">Canada</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Towards a Generative Theory of Diagram Design</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T18:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>In this paper we describe the theoretical background for AVE, an automatic visualization engine for semantic networks. We have a functional notion of aesthetics and therefore understand meaningfulness as a central issue for information visualization. This implies that the diagrams should communicate the characteristics of the data as effectively as possible. In this generative theory of diagram design, we include aspects data characterization, systematic use of graphical means of expression and the combination of graphical means of expression. After giving a brief introduction and an application scenario we discuss these aspects in detail. Finally, a process model of an automatic visualization process is sketched and directions for further research are outlined. In addition to the insight into mechanisms of graphical presentations such a generative theory promises, we are planning to use the resulting presentation engine as a component of a publication environment for electronic publications that is being developed at GMD-IPSI. As a concrete reference work application, we use the Dictionary of Art which will be published by Macmillan Publishers as a print edition of more than 30 volumes this year. Over 6,000 authors and 50 editors have been involved in its conventional publication process over a period of about 15 years.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1: Introduction</head><p>The work described in this article addresses the problem of communicating abstract, conceptual information through diagrams. This technique -often called information design is widely used in publications to convey overview information. We emphasize the term "conceptual information" to distinguish this research effort from the field of scientific visualization, where quantitative data dominate the conceptual, and where the data are often bound to concrete spaces such as maps, body parts etc. On the other hand, diagrams are distinguished from the layout of documents or user interfaces because apart from labels all information is expressed graphically. Conversely, every element of the diagram expresses some information.</p><p>Given such an amount of information, we do not consider it sufficient to offer the users only search facilities on the string level or predcfined hypermedia access structures. Thus, the core of our publication model is a formal representation of the most important concepts and facts in a semantic network. Domain specific concepts are, for example art disciplines that are linked by thesaural relations such as broader term/narrower term. Domain-specific objects other than facts (e.g., persons, locations, dates, etc.) are also interrelated. We treat all such interrelations as representations of facts <ref type="bibr">[Rostek et al 931.</ref> For this comparatively rigorous branch of graphic design, we developed an incomplete, but generative theory and implemented this theory in an algorithm that automatically generates graphical presentations. The maindifference between our approach and others [e.g., Mackinlay 86, <ref type="bibr">Roth &amp;</ref> Hefley 931 is that we do not choose the type of diagram from a predefmed set of graphical languagesor templates, butconstruct each diagram from basic components corresponding to relations rather than to objects. This allows the generation of diagrams of arbitrary type.</p><p>Starting their search on this semantic network rather than on the dictionary articles allows the users to search the dictionary not only for single concepts/objects, but for facts independent of any particular textual expression. The results of the search on the semantic network have to provide as much context as possible when presented. This is especially important if we want to exploit the connectivity of the object network to allow the user to further navigate the search result or use it as a starting point for a new search <ref type="bibr">[Kamps &amp;</ref> Reichenberger 951. The two basic modalities to provide this context -text and graphics -require either the generation of natural language text, or the generation of diagrams, or a combination of the two to present the search results in a coherent way. In the AVE system, the theoretical background of which is described in this article, we restricted ourselves to diagrams only.</p><p>The Dictionary of Art data are manifold. Therefore, our system has to make fundamental design decisions for each presentation: Before details typical for graph layout algorithms (e.g., minimization of edge crossings or symmetry), can be treated, the algorithm has to decide whether there will ical elements connected with lines at all.  <ref type="table" target="#tab_4">I  I  I  I  I  I  I  I  I  I  I  I   1850 1875</ref>  <ref type="bibr">1909 I925 1950 1975</ref> Figure 2: lfthe user wants to know how the werent projrssions in advertising emerged rhe focus of attention is on art disciplines and their development rather &amp;an on persons. In this case, similar infdrmation might be presented like this.   the narrower-term relation among them. The choice of diagram depends on many factors, among them the data to be presented reflecting the user's goal, the cultural context, corporate style guides, the user's perceptual limitations and limitations of the display hardware. In the present work we concentrated mainly on the data to be presented to derive appropriate visualizations.</p><p>This has two main reasons: One is that no other factor is likely to change that often and that drastically during interaction: if the application is a single publication, then cultural context, style guides and presentation limitations will be constant throughout the entire usage, while the data to be presented will change from one question to the next. The other reason is that data is the most determining factor. While different style-guides or presentation liitations typically lead to superficial variations such as more or fewer colors, different choices of colors, a different font etc., different data usually lead to completely different diagrams. What a presentation system might know about the user's goals can ranges from minimal information reflected by the selection of data to a detailed description of concrete tasks. If we know enough about a specific task (e.g., "find the earliest painting of a given set of paintings'* or "find all paintings by William Turner from the same set"), we would probably present only the answer as a list of items rather than generating diagrams that show the entire data set.' We see the benefit of diagrams in that they support a variety of infommtion-extracting tasks on the data. Among those might be tasks that the user was not aware of beforehand or that are easier to perform than to specify abstractly.</p><p>"Supporting a variety of tasks" means for us to offer perceptual operations that correspond to logical ones required by the tasks, thereby providing "quick perceptual ' While, iu car opiuiou, very specific kuowledge of the user's tasks tends to make visualization obsolete and very general knowledge of it is given through the data set, information about the user's goals on au intermediate level (is the user more interested in certain data or aspects of the data than in others, is there a whole class of tasks he wants to perform etc.) would be a valuable input for the generation of meaningful presentations. One example of how this information can be exploited for visualization is given in section 3.2.3.. inferences in place of more difficult logical inferences" <ref type="bibr">[Casner 91,</ref><ref type="bibr">p.121</ref>. In our opinion however, special attention must be paid to -not suggisting perceptual operations that would make no sense on the data in question. What distinguishes the possible operations from those not making sense is the logic of the data. When data is described as being composed of binary relations, their logic can be captured by mathematical properties constraining their connectivity <ref type="bibr">[Kamps &amp; Reichenberger,</ref><ref type="bibr">94b]</ref> In this paper we describe a system that bases its main layout decisions on the logic of the data described in terms of relations and their mathematical properties. We will first define our notion of relations and enumerate the relational properties we consider important for our purpose. Then we will explain how these properties lead to layout decisions and how this approach relates to the distinction between expressiveness and e$ectiveness <ref type="bibr">[Ma&amp;inlay 86al</ref>.</p><p>If Ml = lVI2, then R is called a relation in M (=M2) in which case specific relational properties can be i&amp;ntifkd. These properties we use to describe data are shown below.</p><p>3) R (ir)refexive :</p><formula xml:id="formula_0"># (V x E M:(l)xRx) 3: Theory 4) R (ujsymmetric: o* ('I' x,y E M: xRy S) (w )yRx) 3.1: Some basic concepts concerning Mathematical Relations 5) R rmitivc w (V x,y,z E M: xFty A yRs + vRz)</formula><p>Given two sets Ml and M2, we define a binary relation R as a subset of the Cartesian product of these sets, that is, R C Ml X M2. Binary relations can be characterized using formal properties. The rich classification of binary relations obtained through the combination of relational properties can be exploited to describe their formal semantics. In this section we present and illustrate the set of formal properties used in our approach, and we discuss how these properties are interrelated. Then, we derive a relation type taxonomy that reflects this inter-relatedness. The notation ,xRy' will be used to indicate (x,y) E R, for x E Ml, y E M2; we call (x,y) a relation pair. For each relation R there always exists a cutlverse (inverse) relation R'l C M2 X Ml defined by R-l:= ((y,x) I (x,y) E R}. We can specify the following relational properties: Based on these relational properties, it is possible to define some higher order characteristics for binary relations. A relation R is called an irreflexive order if it is transitive, asymmetric, and irreflexive. It is called an irreflexive tree order if the corresponding graph forms a tree. It is called a strict order if it is both an irreflexive tree order and linear. We distinguish between strict discrete and strict continuous linear orders.</p><formula xml:id="formula_1">6)Rlinecw:~ (V x,y E M:xRyV yRx) 1)Rbipatiite:~ (v XE Ml 3 y E M2:xRy)A (VIE M23 XE Ml:xRy) .~ Crane,</formula><p>We can classify binary relations based on these properties. One possible taxonomy is shown in table 1. Note that the taxonomy is not arbitrary since relational properties are generally interdependent. For example, the asymmetric and transitive properties imply the acyclic property, but the converse is not true. This means that order relations are specific cases of acyclic relations as linear order relations are specific cases of order relations etc.  Note also that this set of relation types is not complete. Other sensible combinations of properties are possible. Thus, an equivalence relation (symmetric, transitive and reflexive) could be used to describe classification results. It is also possible to distinguish more accurately between different types of functions, e.g., functions with qualitative or quantitative ranges, leading to different visualizations. Other properties and combinations are conceivable. However, all these distinctions can be described in the same relational language. Therefore, they can be used to extend the set of relation types, making the data description richer. Nevertheless, the lim ited set of relation types we have chosen is sufficient to explain the rationale behind our visualization approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.2: Translation of the dak structure into graphical means of expression</head><p>The goal of our approach is to generate presentations that suggest those and only those perceptual operations corresponding to meaningful logical ones as determined by the mathematical properties of the relations. In this section we describe how to make the information about connectivity (which we have formalized in the previous section as mathematical properties) directly perceivable in a diagram.</p><p>3.2.1: Expressiveness. In our approach to visualization we also describe diagrams in terms of relations. The basic components of diagrams (e.g., figure 1) can be seen as graphical elements joined by graphical relations. The same formalism used to describe the data relations is used to describe graphical relations. This has the advantage that we can qualify graphical relations with the same mathematical properties used to qualify the data relations. Expressiveness of the visualization is ensured by choosing a graphical relation that matches the data relation's properties.</p><p>To explain our theory, we consider a representative, but not complete, set of graphical element types such as rectangles, triangles, ellipses and text elements as the visual placeholders for data objects. They may have a set of attributes such <ref type="bibr">as position, color, length, height, radius, etc.</ref> Different graphical relations, defined between sets of instances of graphical element types, can then be employed to specify connectivity between data objects. For example the relation arrow may connect graphical elements of arbitrary type to each other. In a similar way we can use the relation inclusion to realize a nesting of graphical elements that have a two dimensional extent. Together with the arrow relation we may also define constraints using other graphical relations to constrain subsets of connected elements. For example, if we require the arrow relation to be transitive, we may define relative position constraints, such as "range element lies to the right of domain element" instead of using arrow alone. Relative position constraints form linear graphical relations and linearity implies transitivity (when element b lies below element a and e lies below b, element e too will invariably lie below a). In terms of perceptual operations: transitivity reveals whether there is a path from element a to element e, and the relative position relation between the elements makes the information easier to perceive because all the arrows point more or less in the same direction.</p><p>If we also require the arrow relation to be asymmetric we have to ensure the non-positional constraint "a is connected to b with exactly one arrow." Finally, we may also require the arrow relation to be irreflexive. This can be realized by the constraint that "no arrow must point to itself'. Together with the three constraints we have just defined, the arrow relation becomes a graphical order relation and thus can be used to visualize arbitrary order relations de-fmed on the data, such as the thesaural relations in <ref type="figure" target="#fig_0">figure 3</ref>.</p><p>From this discussion we see that the arrow relation can be configured to reflect various relational properties and is therefore widely applicable. It can also be used to represent bipartite relations or unique mappings, tree orders or linear orderings if the constraints are appropriately formulated. All data relation types mentioned here can, however, also be visualized using specialized graphical relations.</p><p>In contrast to the arrow relation, the inclusion relation (see <ref type="figure" target="#fig_0">figure 3)</ref> is inherently a tree order. This makes it a very specific graphical relation that can only be used if the data has tree order properties. The same holds for graphical comparability relations, like above/below in figure 6(c) or brighter/darker than (b). Unless accompanied by arrows or lines, they are linear order relations in which elements can always be compared pairwise2. This trivial case of connectivity, where all possible pairs are relation pairs, does not even require to indicate connectivity by a dedicated symbol like a line segment. Instead, the connectivity may be adequately visualized by an ordering of positions in one dimension or an ordering of hue gradations, brightness, etc.</p><p>The graphical relations we have introduced so far reprosent binary relations between sets of graphical elements. However, it is also possible, in the case of unique map-pings, to use graphical elements' attributes instead of representing the data relation in a binary graphical form. This is possible because attributes are uniquely assigned to graphical elements, thereby reflecting the uniqueness of the data 2A more accurate notion of comparability distinguishes between reflexive linear orders (x I; y) and irreflexive linear orders (x c y).</p><p>relation. Thus, the domain objects can be compared perceptually according to their attributes. We have applied this technique in figure 7 where color (texture in b/w reproduction) is used to represent the functional relationship between domain and range objects. There, we visually compose the complex information oRu" into one proposition qualifying object o. As a consequence object u will not appear as an independent graphical element on the screen but will instead lend its distinctive features to the graphical element representing object o. The selection of the attribute type, (i.e., distinctive features), depends on the relation that structures the range. For instance, if we consider unique mapping relations where the range is a set of non-related, that is, qualitative values (e.g., the professions in figure l), the color attribute is a valid visual representation. In the same examples we represented time as lengths of the rectangles. Similarly, we can represent other quantitative data, such as prices as lengths of rectangles or radii of circles since they are also linearly ordered and continuous. A similar attribution mechanism is even possible for bipartite relations if we allow attributes to be se-valued. An example is given in figures 1 and 2. Here, we allow a set of small boxes (an attribute type which we have not listed above) to sit on top of the time bars. We use this set valued graphical attribute to represent the bipartite relations between artists and professions.</p><p>In table 2, we present the translation between the data relation types, given in table 1, and the corresponding graphical relations we have considered so far. Note that the arrow can be used in all cases except the symmetric relation. From the table it becomes clear that several data relations may compete with each other for the same graphical relation. We have to take all this into account when assigning graphical relations to data relations .</p><p>3.2.2: Effectiveness. It can be observed in the examples from the last section that the graphical means of expression differ in their effectiveness of communicating the properties of the data relations. To illustrate this, let us consider figure 6. It seems obvious that the constraints on the positions (c) visualize the linear order property more effectively than do the arrows (a). If we look at the comparisons necessary to determine the position of one element in this linear order or to find its direct predecessor, it is apparent that in (a) we have to follow the line segments in order to extract that information whereas in (c) this is clear at a glance. This and other examples lead to the assumption that specialized  graphical relations for which a certain relational property is inherent indicate that property more directly and more effectively than the general relation arrow that communicates the property only through associated constraints. In addition, it seems that specialized relations reduce the number of graphical symbols needed to communicate a property. Although we cannot prove this generally, associating specialized or characteristic with effective has proven useful for the implementation of the AV E visualization system. There is also another factor of effectiveness to be considered: If we use figure 6 again as an example, the linear order seems to be more effectively communicated through position than through brightness although one graphical relation is as specialized as the other. It would be desirable to model this phenomenon as a ranking of graphical means of expression according to their visual strength but here we run into similar problems that <ref type="bibr">[Ma&amp;inlay 86b</ref>] encounter&amp; A definitive ranking of graphical means of expression requires a theory of visual perception that explains their role in a number of visual tasks -Mackinlay mentions distinction, comparison and selectivity, we would like to add groupingas well as their interdependencies and their influence on the overall appearance of the display. Especially if we consider the interdependencies of the graphical means of expression, for example the influence of size of elements on their perceived brightness, we are looking for nothing less than an integrated theory of perceptual organization in general. Perception literature, e.g., <ref type="bibr">[Sarkar &amp; Boyer 931</ref> assures us that there is no such theory in sight, so any ranking of graphical means of expression cau only be an estimation.</p><p>However, we think that positioning relations play a special role among graphical relations, which might explain the example in <ref type="figure" target="#fig_4">figure 6</ref>. In contrast to all other attributes, a position can only be used once in a diagram. If we use only positioning relations, we can still assign all other attributes the same value, for instance all rectangles can have the same color, the same length, etc. In contrast to that, positions are unique. This means that there cannot be a common default value for positions suggesting that the position of an element is, in a way, less optional and more essential to the object than its other attributes. Furthermore, knowledge of the positions of objects to be compared is a prerequisite for any comparison. The position of an object seems to be closely related to its identity.</p><p>Finally, in addition to effectiveness considerations, preference for certain graphical means of expression is probably one of the most important vehicles for creating a distinctive style. We expect application designers, using this presentation engine as part of au interactive system they are designing, to have some influence here.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3.2.3: Combining Graphical</head><p>Relations. Effectiveness becomes especially important when graphical means of expression have to be combined to form a diagram. This combination is not trivial for various reasons:</p><p>The use of a particular graphical relation in a diagram is not unlimited; most of them may only be used once, some may be used several times but none may be employed an arbitrary number of times.</p><p>They can be mutually exclusive, above all when they visualize overlapping sets of objects. If, for example, some of the objects forming the range of a bipartite relation are also part of a tree order, a conflict may occur. While the visualization of the tree order requires the objects to be displayed as graphical elements that are positioned independently and connected with lines, the preferred visualization of the bipartite relation is to display range elements as attributes and not as independent graphical elements. To prevent or resolve these visualization conflicts, we have to ensure that the most important data relations are translated into the strongest graphical means of expression. We propose the following three criteria to determine the most important data relations: 1) How many mples does a relation have, what is its share of the entire data set? 2) How specific is it according to the relation type hierarchy in table 1, i.e., how well does it organize its share of the data set? 3) Has the user stated a particular interest in this aspect of the data?</p><p>The decision to use a particular set of graphical means of expression is often not sufficient to determine a layout completely. When relative positions, connecting lines (arrows) or inclusion have been chosen, the final positions of the graphical elements representing the domain objects still have to be computed. This is performed by a geometric layout algorithm described in the next section.</p><p>This section described the theoretical foundations of our visualization strategy, including the mathematical formalism and graphical primitives. In the next section, we provide an outline of AVE's process that gives algorithmic insight into the realization of the theory. However, we will describe the algorithm only on a rather abstract level. See [Golovchinsky et al 951 for implementation details.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4: Visualization Algorithm</head><p>The process starts with a query that extracts parts of the semantic network that have to be visualized. This is followed by three main stages: analysis, constraint network generation and geometric layout..</p><p>The analysis starts with a categorization in which the different binary relations are identified and stored together with their relation pairs. Each relation is typed a-priori by one of the relation types that we have introduced in section 3.1. In order to obtain a maximum amount of information about the given data, the type of the relation instance is refined if its data properties allow. Since the graphical resources are limited and vary in effectiveness, the data relations are ranked to reflect their individual importance. The ranking is based on the number of tuples a relation contains and on the relative restrictiveness of relation types.</p><p>We use a network of constraints as a mechanism to detect and to resolve conflicts between competing graphical relations. This network consists of one graphical element for each semantic domain object that needs to be visualized. Which constraints should be applied to which element (e.g. element a should lie above element b or element c should specify the shading hue of element a) is determined by a resource allocation process. The system starts with the preferred resource combination for the highest-ranked relation, then applies the most preferred combination of the nextranked relation, and so on.</p><p>Once the constraint network is calculated, appropriate geometric coordinates must be assigned to all underconstrained nodes. To solve this problem, we describe the geometry of the diagram in terms of three different aesthetic goals. First, when lines or arrows represent connectivity, the spatial distance between graphical elements should mirror the topological distance between the respective domain objects in the network. Second, if relative position is used as a graphical relation, the angles of all arrows that are constrained this way will be adjusted towards imaginary vertical or horizontal lines, depending on the direction of the constraints. Finally, we consider inter-element repulsion as an aesthetic goal. We have implemented a modified spring-model algorithm to compute object positions. Existing spring-model algorithms [e.g., <ref type="bibr">Eades</ref>  This article may create the impression that all we have to do is to describe our data as objects and relations between them and can then translate them straightforwardly into graphical objects and graphical relations. Our work deviates a little from this strategy (and might have to deviate more in the future) in that we do not take the relations and objects always quite as they exist in the database: One such case is the filtering of redundancies, where a relation is shown not by indicating all pairs for which it holds, but the few pairs for which its negation holds. If, for example, the artists in figure 1 were all painters, we would not have to show this information as one of the attribute values. Preferably, we would put this information into the legend where instead of artists and their disciplines we would talk about painters and their additional disciplines.</p><p>This suggests that a visualization cannot be effective, when the underlying facts are not effectively expressed by the given choice of objects and relations. Sometimes the same facts have to be expressed through different objects or different relations or higher concepts to be visualized well.</p><p>Another example could be a relation that is defined to be acyclic and that consists of only source and sink nodes. This relation may be subject to a type conversion from an acyclic relation to a bipartite relation, in which the sources become the domain and the sinks become the range. Still another example could be the values of two attributes that coincide in all cases -due to chance or because they are not independent -where we would tend to collapse the two attributes into a single attribute with more complex values.</p><p>The entire concept of attributes can be seen as a higher construct defined on top of the more basic concepts of objects and relations. Our goal is to gather the elimination of redundancy and the formulation of some facts as attributes into a separate step in the visualization process that searches for structural regularities in the data and uses them to determine the most effective organization of the data to be visualized. Structural regularities are not be limited to the examples mentioned here; for a more detailed discussion see mps &amp; Reichenberger 94a] and [Kosak 941.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5.2: Adding Semantics</head><p>One of the objectives of this approach to information visualization has been to reduce the dependence on semantics in generating visual representations of data. This makes it easier to create an algebra of graphical rules that may be combined to produce our diagrams. However, in some cases our cultural stereotypes exhibit preferences that cannot be derived in principle from the data. For example, we tend to associate blue color with low temperatures and red color with high ones; in some cases we expect numerical data to increase from top to bottom, while in others to decrease in that direction, etc. We will have to represent this knowledge as part of the visualization system in order to take this kind of cultural context into account.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>6: Conclusion</head><p>We have presented a theoretical model for data-driven visualization of semantic networks. Our model constructs diagrams using primitive graphical means of expression. Thus, we avoid the strict categorization of diagrams into different visualizations such as line diagrams or timelines. The core concepts of the model are 1) characterization of the data as binary relations together with their mathematical properties, 2) chamcterization of graphical means of expression in the same way, 3) mapping of data relations onto graphical relations with the same properties, which guarantees expressiveness of the visualization. However, it does not ensure effectiveness. This depends on the different strengths of the graphical relations and their particular combination in one diagram. We believe that this approach can improve diagram construction interaction and empower users to communicate more effectively.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 3 :</head><label>3</label><figDesc>art styles and their ~flerentiation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 :</head><label>4</label><figDesc>Art disciplines in the field of applied arts and</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Use of arrow and relative position for an irrejkxive order, compared to the use of arrows alone</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Use of brightness(b) and use of positions(c) for a linear order compared to the use of arrows(a)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Visualizing objects as attributes</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>irreflexive order relation irreflexive, asymmetric, transitive arrow+relative position, arrow irreflexive tree order irreflexive, asymmetrical, transitive, is tree inclusion, arrow+relative position, arrow strict discrete linear order asymmetrical, transitive, completely equidistant positions, brightness, saturation, connected, discrete domain arrow strict continuous linear asymmetrical, transitive, completely fixed distance, size, brightness, saturation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>In other must decide what kind of diagram is appropriate for the given situation. The possible results, of which we show some examples in figures 1 to 4, are as heterogeneous as the incoming data.</figDesc><table><row><cell></cell><cell></cell><cell></cell><cell>~illustrator</cell></row><row><cell></cell><cell></cell><cell></cell><cell>&amp;iesigner</cell></row><row><cell></cell><cell cols="3">I, I 1850 1875 1900 1925 1950 1975 I I I 1 I I I I I I</cell></row><row><cell cols="4">Figure I: The diagram shows a number of artists, their</cell></row><row><cell cols="4">life spans, ati the art disciplines they practiced. A query</cell></row><row><cell cols="4">the user might have posed to verify, his hypothesis that</cell></row><row><cell cols="4">the beginning of the 20th century saw a specialization of</cell></row><row><cell cols="4">artists into commercial andflee artists.</cell></row><row><cell></cell><cell></cell><cell></cell><cell>1</cell></row><row><cell></cell><cell>0 Herbert Bayer</cell><cell>\</cell><cell>advertising copyeditor</cell></row><row><cell></cell><cell>\-I)Jan Bchichold c1 John Hartfield</cell><cell></cell><cell>display designer</cell></row><row><cell>-</cell><cell>evolvedj?om</cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table I :</head><label>I</label><figDesc></figDesc><table /><note>relation type hierarchy</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell>attribute, arrow</cell></row><row><cell>single attribute, closeness, arrow</cell></row><row><cell>: translation of data relations into graphical relations</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the Proceedings on Information Visualization (INFOVIS '95) 0-8186-7201-3/95 $10.00 © 1995 IEEE</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Drawing Graphs Nicely Using Simulated Annealing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Davidson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Harel</surname></persName>
		</author>
		<idno>CS89-13</idno>
		<imprint>
			<date type="published" when="1989" />
		</imprint>
		<respStmt>
			<orgName>Department of Applied Mathematics and Computer Sciences, Weixman Institute Of Science, Israel</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">A Task-Analytic Approach to the Automated Design of Graphic Presentations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Casner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="111" to="151" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">A Heuristic for Graph Drawing, Congressus Numerantium, 42</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Eades</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1984" />
			<biblScope unit="page" from="149" to="160" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">SFK A Smalltalk Frame Kit. Concepts and Use. Draft User Manual, GMD-IPSI</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Fischer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rostek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Fruchterman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Reingold</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Software Practice and Experience</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">206</biblScope>
			<biblScope unit="page" from="1129" to="1164" />
		</imprint>
	</monogr>
	<note>Graph Drawing by Force-Directed Placement</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Golovchinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Reichenberger</surname></persName>
		</author>
		<title level="m">Subverting Structure: Data-driven Diagram Generation, Visualization 95</title>
		<meeting><address><addrLine>Atlanta, Georgia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Automatic Layout as an Organization Process, Arbeitspapiere der GMD</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Reichenberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nr</title>
		<imprint>
			<biblScope unit="volume">825</biblScope>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Automatic Layout based on Formal Semantics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Reichenberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Workshop on Advanced Visual Interfaces, AVI &apos;94</title>
		<editor>Cartarci, T. et. al..,</editor>
		<meeting>of the Workshop on Advanced Visual Interfaces, AVI &apos;94<address><addrLine>Bari, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="231" to="233" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">A Dialogue Approach to Graphical Information Access</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamps</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Reichenberger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Schuler et al. @is.) Designing User Interfaces for Hypermedia</title>
		<meeting><address><addrLine>Heidelberg</addrLine></address></meeting>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="141" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An Algorithm for General Undirected Graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Kamamda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kawai</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Processing Letters</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="7" to="15" />
			<date type="published" when="1989" />
			<publisher>North Holland</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Automating the Layout of Network Diagrams with Specified Visual Organization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Kosak</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Marks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shieber</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Systems, Man and Cybernetics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">3</biblScope>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Automating the Design of Graphical Presentations of Relational Information</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luenberger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Addison-Wesley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Reading</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Massachusetts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ma&amp;inlay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="110" to="141" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
	<note>Introduction To Linear and Nonlinear Programming</note>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Automatic Design of Graphical Presentations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ma&amp;inlay</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1986" />
			<pubPlace>Stanford</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Dept., Stanford University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Ph.D. dissertation</note>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Weaving a web: the structure and creation of an object network representing an electronic reference work</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rostek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>M&amp;n</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Fischer</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>Electronic Publishing</publisher>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="page" from="495" to="505" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">An Editor&apos;s Workbench for an Art History Reference Work</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rostek</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Mtihr</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Technical Briefing in Proceedings of ECHT &apos;94</title>
		<meeting><address><addrLine>Edinburgh, Scotland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="233" to="238" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Intelligent Multimedia Presentation Systems: Research and Principles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">F</forename><surname>Roth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Hefley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Intelligent Multimedia Interfaces</title>
		<editor>Mark Marbury</editor>
		<imprint>
			<publisher>AAAI Press</publisher>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Perceptual Organization in Computer Vision: A Review and a Proposal for a Classificatory Structure</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Sarkar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">L</forename><surname>Boyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. on Systems, Man and Cybernetics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="382" to="399" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
