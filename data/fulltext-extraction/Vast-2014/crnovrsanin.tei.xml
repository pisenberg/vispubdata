<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A System for Visual Analysis of Radio Signal Data</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Student Member, IEEE</roleName><forename type="first">Tarik</forename><surname>Crnovrsanin</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Muelder</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><roleName>Fellow, IEEE</roleName><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
						</author>
						<title level="a" type="main">A System for Visual Analysis of Radio Signal Data</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:03+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Intelligence Analysis</term>
					<term>Coordinated and Multiple Views</term>
					<term>Time-varying data</term>
					<term>Geographic/Geospatial Visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Analysis of radio transmissions is vital for military defense as it provides valuable information about enemy communication and infrastructure. One challenge to the data analysis task is that there are far too many signals for analysts to go through by hand. Even typical signal meta data (such as frequency band, duration,and geographic location) can be overwhelming. In this paper, we present a system for exploring and analyzing such radio signal meta-data. Our system incorporates several visual representations for signal data, designed for readability and ease of comparison, as well as novel algorithms for extracting and classifying consistent signal patterns. We demonstrate the effectiveness of our system using data collected from real missions with an airborne sensor platform.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The radio frequency spectrum is complex and dense, with thousands of events occurring simultaneously every second in a typical suburban environment. These events can include both authorized and unauthorized frequency usage from the Federal Communications Commission (FCC) perspective, potentially criminal activity from a legal perspective, or even naturally occurring noise phenomena. Differentiation between signals of interest (SOI) and non-signals of interest (NSOI) is important not only for domestic radio frequency use management, but also for military intelligence gathering. For military applications in particular, rapid analysis of such data is vital. However, this classification task is resource intensive because of the wide variety of signaling systems that are both in use now and expected to become available in the future. The wide variance in signals has led to the development of Signal Intelligence (SIGINT) sensors which can capture the information from these signals in real-time.</p><p>The growing use of SIGINT sensors in today's military enterprise dramatically increases the amount of data flowing into Intelligence, Surveillance, and Reconnaissance (ISR) data processing centers. Modern SIGINT sensors ingest nearly all signals in the environment simultaneously and thus produce vast amounts of signal data at an incredible rate. Traditional tools found in ISR processing centers can easily overwhelm an operator who is inundated by the volume of incoming data.</p><p>There are also constraints on the amount of processing that can be done ahead of time. In many situations, signal information is best collected from the air with specialized antennae as a high vantage point reduces line-of-sight blockage and eases moving the signal collection platform to the required location. However, the airborne collection of Radio Frequency (RF) signals puts severe constraints on the size, weight and power of the equipment, and thus the capabilities that can be installed. Dedicated streaming hardware is used to continuously sample measurements of the external characteristics of transmissions, including frequency, signal-to-noise ratio (SNR), bandwidth, up time of the signal, off-time of the signal, and, in a multi-antenna collection system, the direction from which the transmission originates. However, these per-signal measurements are instantaneous, and signals need to be comprised of many such samples. So the additional hardware is often dedicated to compiling these samples into meaningful transmissions. This still leaves the operators with having to sift through innumerable signals in order to find particular higher order</p><p>• Tarik Crnovrsanin is with VIDi @ U. C. Davis: tecrnovr@ucdavis.edu.</p><p>• Chris Muelder is with VIDi @ U. C. Davis: cwmuelder@ucdavis.edu • Kwan-Liu Ma is with VIDi @ U. C. Davis: ma@cs.ucdavis.edu.</p><p>patterns (such as communications) that they might be interested in.</p><p>Analytics can be applied to pull out specific features, but there are numerous analytic methods that could be applied, and the potential for future development of any number of situational analytics. Visual analytics approaches would provide a framework to manage such analytics, allowing analysts to focus on the more important high level tasks. We have developed a system that provides a visual workflow to manage a suite of such analytics by providing summarizations of potentially interesting signal traffic patterns, while still exposing the underlying analytics to extract specific patterns that they might be interested, and enabling the development or application of situationally specific analytic processes. In this manner, our system aims to aid in deriving solid intelligence in near real-time, providing the ability for operators to quickly identify combatants and potential opportunists while discounting allies in time-critical situations.</p><p>Due to the scale of the data and the complex relationships between transmissions, understanding signal data is a nontrivial task. To our knowledge, the visualization community has not substantially explored this type of data. We have developed an interactive visual analysis system to support this task by working closely with expert analysts to obtain constant feedback and to guide the design and development of our system. When talking to analysts, we found that they were particularly interested in answering the following questions:</p><p>• Can we identify communications in the pattern of the signals?</p><p>• Is it possible to discover and locate signal repeaters?</p><p>• How can we guide analysts to signals of interest?</p><p>• What general discovery can we make about the data?</p><p>In this paper, we present a system designed to explore and analyze radio signal data. This system consists of a combination of several visualizations and algorithms that help analysts answer important questions. The contributions of our work are:</p><p>• A new system for visual representations of radio signal data.</p><p>• An interface to manage the workflow of radio signal analytics.</p><p>• A novel algorithm for finding repetitive (digital) signal patterns.</p><p>• Demonstrations of identifying repeaters, communications, and repetitive patterns.</p><p>Most importantly, we have created an effective visual analytics solution to a very important application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IEEE Symposium on Visual Analytics Science and Technology 2014</head><p>November 9-14, Paris, France 978-1-4799-6227-3/14/$31.00 ©2014 IEEE Our work draws from a variety of existing research, including wavelet visualization, communication visualization, geospatial visualization, parallel computation system analysis, and the coefficient of variation. Wavelets analysis Wavelet analysis has a wide range of uses in computer science <ref type="bibr" target="#b9">[10]</ref>. In this section, we focus on its application to signal processing <ref type="bibr" target="#b21">[22]</ref>, which is directly applicable to our work. Miller et al. <ref type="bibr" target="#b18">[19]</ref> applied wavelet transformations to custom digital signals constructed from words within a document. The resulting wavelets are used to analyze the characteristics of the narrative flow in the frequency domain, such as theme changes. Faith et al. <ref type="bibr" target="#b8">[9]</ref> applies wavelets to optical wireless signals and then runs PCA on the resulting wavelets to create a scatterplot visualization. Barford et al. <ref type="bibr" target="#b2">[3]</ref> used wavelets for anomaly detection. The pseudo-spline filter can expose distinct characteristics of each class of anomalies: outages, flash crowds, attacks and measurement failures. Muelder et al. <ref type="bibr" target="#b19">[20]</ref> applies wavelet scalograms to network scan patterns. The resulting wavelets are used to create a graph in which a node is a scan and an edge exists between two nodes if they are highly similar. Our wavelet use is inspired by these works, but differentiated by the discrete nature of the signal data to which our system is tailored to.</p><p>Communication detection There is extensive research on the duration of gaps, pauses and overlaps in conversations <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b12">13,</ref><ref type="bibr" target="#b11">12]</ref> which focuses on person to person communication. Walkie talkie conversations do not share the same characteristics as person to person conversations, but the research provides some good general rules that are applicable to our work. While some existing works discuss analysis of the contents of communication records <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b6">7]</ref>, the data we were working with only consisted of the signals' metadata. However, in situations where the signal contents are available, our system could work in concert with such approaches as our metadata analysis by extracting conversations that such content-based techniques could be applied to.</p><p>Geospatial visualization Visualization of geospatial data (or 'Geovisualization') has been an ongoing research topic for many years <ref type="bibr" target="#b16">[17]</ref>, which has produced many geospatial visualizations and analytics <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2]</ref>. Some approaches focus on the particulars of radio signal data. Han et al. <ref type="bibr" target="#b10">[11]</ref> presented a visual analytics system for the development of signal fingerprinting-based localization systems. Though their approach works with radio signals, it depends on the intricacies of precise, indoor signals, and would not scale up to the size or uncertainty of our data. Wood et al. <ref type="bibr" target="#b26">[27]</ref> apply graph/matrix based techniques to the analysis of pairs of discrete origin and destination locations, such as a communication network could form. However, our data is too noisy for such a discrete technique. Rather, we borrow from techniques for geospatial that can handle uncertainty such as splatting and heat map techniques, as in the works of MacEachren or Thomson <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b24">25]</ref>.</p><p>Parallel computing systems Our signal data visualization problem shares surprising similarities with parallel computing visualization. Each processor, like a frequency band, has a start time and duration for each task, similar to a signal. For instance, Gantt charts <ref type="bibr" target="#b25">[26]</ref> look very similar to frequency versus time plots (which can be seen on the bottom of <ref type="figure" target="#fig_1">Figure 3</ref>). Many scalable performance visualizations <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b20">21]</ref> use techniques that show system resource utilization, the timings and durations of parallel events, or the application executions. These use the aforementioned Gantt charts and other applicable visualizations such as histograms and Kiviat diagrams. Spear et al. <ref type="bibr" target="#b23">[24]</ref> and Landge et al. <ref type="bibr" target="#b15">[16]</ref> focused on node-link diagrams or matrices to display the communication topology. Communication between processes is important as it has direct impact on performance in a parallel environment. Many toolkits combine both types of visualizations.</p><p>Coefficient of variation The coefficient of variation is used in probability theory and statistics as a way to show the variability of the mean in relation to the standard deviation. Xu et al. <ref type="bibr" target="#b27">[28]</ref> proposed a new similarity metric called variation coefficient similarity based on an extension of the Dice and cosine similarity measures. They demonstrated the effectiveness of their metric by comparing it to three other prompt similarity metrics. Though the metric shares the same name as coefficient of variation, it is not the same. Their metric works on a set of vectors and relies on an alpha value. . As the data is loaded, several preprocessing steps are applied. Afterwards, the data is saved in a binary format with the included preprocessing results. The user can either start with the geospatial representation, timeline or calculate one of the analytic methods. The interactive process allows the user to define the scope of his alteration, by specify which views are affected by the interaction. <ref type="figure">Fig. 2</ref>. A signal location is derived from the sensor's location, therefore, an ellipse is drawn to show the error cone (a). A benefit of the error ellipse is it can show us the relative position of the plane (same angle as the larger of the two radius). As the area of the ellipse increases, the opacity is reduced (b). Several ellipses can converge to better approximate a transmitter's location (c).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SYSTEM OVERVIEW</head><p>The overall workflow of our system is shown in <ref type="figure" target="#fig_0">Figure 1</ref>. Data is streamed in from the detection platform and accumulated for our system. Once the data is loaded and goes through the preprocessing step, the user can run one or more of the operations to explore and interact with the views. The system is built around exploration so where the user starts can depend on the task at hand. Depending on if the user is interested in repeaters, communication, digital signals, or a combination, he would run the corresponding algorithms before exploring the results; if the user is interested in geospatial or data specific (timeline) information, then he can start to filter and explore through the views before running any calculations.</p><p>Data Collection The data is collected from an airborne detection platform which continuously ingests detected signals' properties such as their strength, their power, their signal to noise ratio (SNR), and the direction they are coming from relative to the platform. As the collection platform detects these signals, the platform pre-processes them to determine geographic locations and to derive continuous signals from the same location. Since the platform detects transmitters as a directional ray, computing the geospatial information is dependent on both the plane's and transmitter's locations, as well as the orientation of the plane. But due to limits to the sensor's precision, there is an error cone around this ray, and the source of any terrestrial signal would lie somewhere in intersection of this cone on the surface of the earth. For simplicity, this intersection area is approximated by an ellipse, as shown in <ref type="figure">Figure 2</ref>(a). As the distance between the plane and the source increases, this intersection elongates as shown in <ref type="figure">Figure 2</ref>(b), and thus the uncertainty also increases, with an extreme limit when the ray hits the Earth's horizon. Interference, such as terrain or other noise can also affect the size/shape of this ellipse. However, after subsequent analytics show that multiple signals were detected in the same region, overplotting these ellipses can aid in identifying more precisely where the transmitter actually is, as shown in <ref type="figure">Figure 2</ref>(c).</p><p>Once the data is loaded, we also apply another preprocessing step, in order to help reduce noise in the data and pre-compute simple metrics. For instance, signals have a minimum frequency difference so they do not interfere with each other. When a signal is measured, it can have slight variation in frequency but will be within the legal band for that signal. So we use this step to bin frequency bands that are approximately identical. Additionally, the system sorts the data by frequency bands and time. We also compute additional metrics that are useful in later, more complicated analytics, such as the proximity of the plane to the signal. All these calculation and the data are also converted and stored for faster future loads.</p><p>Analytics Our system currently has five implemented analytic methods; four of them designed around specific tasks, plus one for more general exploration and discovery. The repeater algorithm finds signal repeaters by looking for collections of signals that have the same start and duration times. The communication detection algorithm is a rule based approach that tries to find a set of signals that make up a communication pattern based on time between signals and their locations. The windowed variance analytic algorithm finds series of signals that have high variance in temporal duration by applying a coefficient of variation metric. The digital pattern distinction algorithm also uses the coefficient of variation across a sequence of events, in order to separate series of signals that make up a digital patterns that exhibit consistently low variance from the remainder of analog signals. Lastly, the wavelet transformation is for more general analysis instead of a specific task; it samples the data from time windows defined by user parameters, then projects the higher dimensional results of the wavelets to a two dimensional representation using PCA. These analytics were developed to be modular, so that the user can dynamically link up the analytics as desired, or easily implement new analytics.</p><p>Visualizations When creating the visual system we had two goals in mind: keep the visualization intuitive for our expert users, and allow the users to gain insights for making crucial decisions. The visual representations must be kept simple because of the sheer volume of data and associated analysis tasks. Many classification tasks are difficult to compute automatically with certainty, such as determining whether signals are part of a communication, or if they are digital or analog transmissions. Rather than making these decisions completely computationally, we use analytics to compute probabilities that a series of events are one or more of these types of signals. We then plot these candidates and allow the user to inspect and group them as appropriate.</p><p>As <ref type="figure" target="#fig_1">Figure 3</ref> shows, our system has three different views: the main, map and timeline. The main view shows the results of the algorithm methods and can toggle between different outputs and their views. The map view provides geospatial information and a reference point for the results. The timeline allows the user to filter the data based on attributes in the data and also serves as the overview for the data. The signal inset is triggered when an aggregate data point is clicked on and shows the underlying pattern. The workflow panel exposes the data workflow to the user, and enables the user to connect and combine the analytics as desired. If the user is interested in a particular analytic or combination of analytics, he would put the corresponding algorithms into the workflow and link the results to the visualizations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">ANALYTICS METHODS</head><p>In this section we describe algorithms we use. Most identify specific features of interest, such as repeaters or communications, while the wavelet algorithm is more for general exploration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Windowed Variance</head><p>The Windowed Variance analytic was developed to measure how repetitive or consistent the detected signals are. We compute this works by first creating time windows based on user defined parameters: window size and step size, which allows for overlapping windows. We then create lists of events that fall within each window. As long as events either start or end inside the time window, they are included in the calculation. While this does duplicate overlapping events, trimming an event to fit inside the window would introduce variance into sequences which had little to no variance, such as digital signals. This would unfavorably bias the algorithm, so instead we always use the whole signal lengths.</p><p>Once we have the sequences of signals per time window, for each sequence we compute the Coefficient of Variation (CV), defined as the standard deviation divided by the mean, for both the durations of each signal and the gaps between signals. Time windows that have only one or two events are skipped because there is not enough data to calculate the CV for the gap and duration. The run time of this algorithm is Θ(2N): one pass to create the time windows and a second to the calculate the CV. As each band and window is independent, this process is parallelized to make it even more efficient by using threads.</p><p>In this manner, signal patterns of high variance (such as communications) can be separated from those of low variance (such as digital signals). This approach is general enough to handle multiple cases in between these extremes, and provides the spectrum of occurrences to the user in case there are interesting patterns in the middle somewhere. However, if the user is only interested in isolating just the digital signals (or filtering out the digital signals), the DPD algorithm is more focused to that specific task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Digital Pattern Distinction (DPD)</head><p>Digital signals often exhibit an extremely regular pattern of consistent signal durations, whereas analog signals are more varying. That is, we define digital patterns as sets of signals where transmission durations and gaps between transmissions are very consistent. Being able to identify a digital or analog signal pattern can help to reduce the problem set; for instance, communication should generally only consist of analog signals when the conversation is among people.</p><p>While the goal of the Windowed Variance is to determine how consistent or inconsistent patterns are within constant sized windows, the DPD algorithm was designed to detect and classify sequences of highly consistent sequences of arbitrary length, in order to extract the digital patterns specifically. To compute the DPD, for each frequency band, we spawn a thread that iterates over events, keeping track of a running coefficient of variation (CV) for the durations of both the signals and the gaps between them. To avoid having to completely recalculate the mean and standard deviation at each iteration, we use an incremental formulation to compute the CV:</p><formula xml:id="formula_0">E(x n+1 ) = n•E(x n )+x n+1 n+1 E(x 2 n+1 ) = n•E(x 2 n )+x 2 n+1 n+1 σ (x n ) = E(x 2 n ) − (E(x n )) 2 CV = σ E(x n )<label>(1)</label></formula><p>where E(x 0 ) and E(x 2 0 ) are zero and E(x) is the running average. For each event, if both the gap CV and the signal CV are below a threshold then the event is appended to the current sequence, and the algorithm continues on to the next event in the frequency band. If adding the event to the list would exceed the CV's threshold, the algorithm will terminate the current sequence and save the statistical metrics. The algorithm will then continue with the event that it could not add and repeats the process. In this manner, repetitive digital signals will form long sequences of low variance, while analog signals will not. There is no consensus in the literature of a good CV value. We use 10 % because there is a slight variance in duration and gap that can be due to many factors e.g. noise or calibration. The CV can also be changed by the user to fit their needs.</p><p>One constraint of using the CV is that it does not work on interval scales, but since the durations of both the signals and gaps are positive ratio scales, we do not run into this problem. Another potential side effect of this approach is that as more events are added, each new event has less impact on the mean and standard deviation. Thus, a sequence of events could start very regular and gradually become more erratic but still be added to the sequence. As there is some data collection error though, this actually helps in creating longer sequences, even if there is some noise or dropped signals. Even in the case where an event is not captured correctly and a long sequence is split in half, both parts should still have the same CV in both gap and duration and so , and allows the user to filter by that property or by time. The menu control (D) provides additional user controls for the three different views. The color editor (E) is used to create or modify a color gradient and provide histogram of each data property . The algorithm workflow (F) allows the user to visually select the algorithmic methods by directing the flow of data from source to view. The search window (G) gives the user the ability to draw a specific signal pattern and search for it in the results. Previously drawn patterns can also be loaded.</p><p>would still be plotted together. The run time of this algorithm is O(N), and like the Windowed Variance algorithm, it is heavily parallelizable due to the calculation being independent of the frequency band.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Repeater detection</head><p>A repeater is a device that receives one set of signals and rebroadcasts them -often to extend the range between low powered devices or to cross terrain such as hills that would block communication. In our signal data, a repeater shows up as a series of events that have the same start time and duration across at least two different frequencies (i.e. pairs of the initial transmissions and the rebroadcast transmissions).</p><p>To detect these, the repeater algorithm iterates through a sorted list of all events, and groups events that share the same start time and duration as candidate repeated signals (i.e. synchronous events from two or more frequency bands). Then we group candidates with identical frequency bands, as multiple repeated signals on the same frequencies are likely the same repeater. While it is possible for two different repeaters to share some subset of frequency bands, they would generally interfere with each other if they were operating on the same set of frequencies. This process is straightforward since the initial candidates have their events sorted by time. We do not incorporate the geographic information in this computation because of its low precision. Also, it is possible for a repeater to be mobile. And even pairs of signals in which both signals lack good geographic information can be relevant as they can provide insight into the use of the repeater. We group candidates together regardless of the elapsed time between them. By allowing the system to group candidates independent of time, the algorithm can generate several potential scenarios. The best case is that many pairings belong to a single repeater, as having more data improves our chances of triangulating the correct location of the repeater. There is the possibility that two or more repeaters that share frequency bands could get paired together into one repeater. However, this can easy be seen in the map view, as there will be two or more ge-ographic centers. Finally, one limitation to our approach is that it can also group less desired points such as white noise or points with no geographic information. If there are only a few signals grouped in such a way, then the user would likely ignore them. But if the signal count in such a grouping is high, then further investigation could reveal a repeater whose location was not identified with sufficient precision, as it is unlikely for so much noise to group together at random. Even in such cases, where there is not enough information to precisely triangulate the repeater, just knowing that a repeater exists is an important insight that could warrant another flyby to determine its location.</p><p>The most expensive computation here is sorting, which takes O(N • log 2 (N)) where N is the number of elements. Luckily, this step can be avoided when the data is recorded chronologically (as in real-time analysis) or when the data is presorted beforehand. The repeater algorithm itself takes O(N) to find candidates and O(M 2 ) to group the candidates, where M is number of candidates. In large data sets the grouping step can take longer to compute than finding candidates. A potential speed up is that once a candidate is found, we could sort the frequency bands that comprise the candidate, then use the sorted frequency bands as a key that maps to an array. This would take O(M * log(K)), where K is the number of keys and K &lt;&lt; M.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Communication detection</head><p>For communication, we created a rule based algorithm. We looked at several papers on the proper duration of gaps and pauses between communicating individuals. Most of the research, however, is done on conversation that is either over the phone or in person. Since our data is comprised of half-duplex(i.e only one transmit at a time) handheld transceivers, conventional conversation rules do not apply quite as rigorously. Thus we applied some more relaxed rules. First, the duration of each signal in the communication needs to be at least one second. We found this to be reasonable since any confirmation takes more than one second to transmit when following radio transmission etiquette (e.g. "Roger that. Over."). Similarly, we set the maximal gap between each signal to be no more than 30 seconds, as pauses longer than that could signal the end of a conversation. We also require that the initial signals are from different locations, and thus we ignore any signals that do not have positional information. However, due to the precision of the instruments, determining if two signals have the same location is not that straightforward. We consider points to be in the same location if their error ellipses overlap, and different locations otherwise. The communication algorithm runs in O(N). Since the frequency bands are independent, this algorithm can also be heavily parallelized. In our system, we use threading to speed up the process, where each thread is assigned to one frequency band.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Wavelets and Dimensionality Reduction</head><p>One way to look at the data is to analyze patterns of activity according to their similarity. We can define these patterns by treating each frequency band in the data as a time series. Then the sequence of captured signals expresses itself as a square wave in this time series and similar patterns can be detected through frequency analysis. We choose to use wavelet scalograms <ref type="bibr" target="#b19">[20]</ref> both because they are naturally tuned to such square wave patterns (unlike Fourier analysis which works with sinusoids), and because wavelets are rather resistant to phase shifts and noise: similar patterns will have similar wavelet signatures even if the patterns are shifted slightly or parts of the pattern are missing. Conversely, different signals should produce different wavelets.</p><p>While wavelets are often useful in signal processing applications for general frequency analyses, in which the data is continuous, the captured signal data is stored as discrete data made up of events with start times and durations. To generate time series to use in the wavelet scalograms, we first sample the data according to sliding time windows, which are defined by user controlled parameters such as window size, sampling rate and overlap amount. Since the data is sorted temporally within in each frequency band, these windowed time series can be generated in a streaming manner. For each frequency band, we first initialize all sample point values in each window's time series to 0. Then we iterate over the events that intersect temporally with the time window, setting the values in the intersection to 1. Each window's time series now comprises the D 0 array used in the wavelet calculation. The scalogram (µ 0 , µ 1 , ...) we calculate recursively as:</p><formula xml:id="formula_1">D k = (d k,1 , ..., d k,2 n−k ) = ( d k−1,1 +d k−1,2 2 , ..., d k−1,2 n−k −1 +d k−1,2 n−k 2 ) S k = (s k,0 , ..., s k,2 n−k ) = ( |d k−1,1 −d k−1,2 | 2 , ..., |d k−1,2 n−k −1 −d k−1,2 n−k | 2 ) µ k = ∑ S k 2 n−k<label>(2)</label></formula><p>for 0 &lt; k &lt; n (where n is the smallest number large enough for D 0 ). At each recursion the µ values are the mean of the corresponding data series, which approximate the variance at each resolution, and hence at each frequency scale. More complicated wavelets can be calculated by changing the functions used to calculate D k and S k . We found that the basic D k and S k functions above provided sufficient results for our signal data. Though we are generating a significant amount of data from sampling and overlapping, the amount of stored data is only log 2 (n) in size per wavelet. Once we have computed the wavelets, we need a visual representation. Our goal is to place wavelets with similar signatures next to each other, so there are many possible techniques, such as clustering or dimensionality reduction. We chose to use the dimensionality reduction technique known as PCA <ref type="bibr" target="#b14">[15]</ref>, as it is simple, but good at extracting the most prevalent trends in the data. We found that it also arranges the points based on duration and consistency. While more complicated dimensionality reduction techniques exist, PCA produced reasonable results that were sufficient for our analysis.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">VIEWS</head><p>In order to interact with and understand the results of the analytic processes, we use a number of visual representations and interfaces. <ref type="figure">Fig. 4</ref>. A sequence of signals can be represented by plotting them in 1D over time (as in the timeline). The top set of images show this for a single sequence. We devised a line based method, where signals are plotted horizontally and gaps are plotted diagonally. Our method provides easier comparisons between signal event sequences. Small signal durations sequences can be detected (at left) as well as anomalies. On the right, it is hard to see the two overlapping signals in the top image while it is very apparent with our method(bottom image).</p><p>The timeline, which can be seen in <ref type="figure" target="#fig_1">Figure 3</ref>.C, provides a series of simple plots to filter and examine the data. In all timeline plots, the xaxis corresponds to time, while the y-axis is either one of a number of derived values or an attribute from the dataset. For instance, plotting frequency band versus time (as in <ref type="figure" target="#fig_1">Figure 3</ref>.C) produces a Gantt chart that provides a simple and intuitive initial summary of the data set. In this example, the signals are colored via a user defined color map (defined via the color map editor in <ref type="figure" target="#fig_1">Figure 3</ref>.E).</p><p>One derived values that was found helpful is the proximity of the airplane to the signal sources, as closer signals are more detected more precisely. We use two proximity metrics: the first is the standard proximity which we calculate in a similar manner as in <ref type="bibr" target="#b5">[6]</ref> and the second proximity metric divides the signals based on which side of the airplane a signal originated from. This allows us to see when the airplane makes a turn. It also separates entities that look close in proximity space but are on opposite sides of the airplane. While not that relevant to the results shown in this paper, our collaborators found this very helpful in analyzing the behavior of the data collection platform itself.</p><p>The map view provides geospatial reference to the user and is shown in <ref type="figure" target="#fig_1">Figure 3</ref>.A. We use the Google Maps API to generate the background map and plot the points using OpenGL. It was necessary to include the map not just to provide geospatial information but also to help interpret the results from the analytical methods. When a selection is made in the main view, the map view can provide additional functionality depending on which metric is being viewed. For repeaters, we draw lines between pairs of repeated signals. This helps identify which source is the repeater, as a single repeater would link to multiple transmitters. For communications, we draw lines between the initial transmitters and the first responders.</p><p>Sometimes the GPS locations are not accurate and thus showing error ellipses is useful. We map the size of the ellipse to transparency, where the bigger the ellipse the more transparent it becomes, illustrated in <ref type="figure">Figure 2</ref>. This makes accurate GPS information stand out while the less accurate fades away, and having several overlapping big ellipses accumulates to give a better approximate signal location.</p><p>The main view, pictured in <ref type="figure" target="#fig_1">Figure 3</ref>.B, holds the visual results computed by our algorithms. As the points in this plot are aggregations, and not individual signals, we can not employ the same per signal color mappings used in other views. Instead, color is mapped to another selected property, such as the density on screen or the variance of the aggregated data. The axes depend on the analytic. For the wavelet projection, the axes are the first two dimensions of the PCA projection. For Windowed Variance, the axes are the standard deviations of the duration of signals and of the gaps between signals for each time window, on a log scale. For the digital, communication, and repeater algorithms, we map number of associated events to the x-axis and average duration of the events to the y-axis.</p><p>We also added a search window, shown in <ref type="figure" target="#fig_1">Figure 3</ref>.G, which provides the capability to look for a particular signal pattern in conjunction with the wavelet view. The user either draws a pattern in the top segment of the panel or loads a previously saved pattern to commence a search. The system then calculates the wavelet scalogram of the search pattern, and uses the PCA's component matrix to project the search pattern into the wavelet visualization. We use a cross-hair representation as a glyph to help the user identify where in the PCA space the pattern is located, with a circle of a fixed radius around the target pattern to both make the target more easily visible and to indicate neighbors. Results inside the circle are displayed under the search button in the search window, ranked by proximity to the target signal pattern. Saving patterns from one dataset and loading them into another dataset allows the user to see how it is mapped in the different space, which is important since PCA is not consistent between datasets.</p><p>In the signal inset, there are two ways of showing the underlying signal pattern, which is shown in <ref type="figure">Figure 4</ref>. The standard way to visualize signal data is to draw lines that represent the start and end time of each signal on the x-axis. The y-axis splits the window up based on how many sets of signals are portrayed. Our method keeps the same x-axis setup but changes the y-axis so that each sequential event is above the previous one. Then we connect all the signals events forming something similar to a line plot. Steep slopes represent a quick succession of events, while gradual slopes show long pauses between events. One benefit of our method is it provides a visual metaphor for the signal patterns. For instance, digital patterns, on the left in <ref type="figure">Figure  4</ref>, show up as staircases. It can also show anomalies in the data. On the right, we can see that there is two signals overlapping each other, something not apparent in the standard view.</p><p>With a context menu, the user can pick which representation he wants to view. The same point can be viewed in both representations by opening two separate windows. Some patterns might look similar but have different temporal size. To differentiate them, we overlay a timeline and label the temporal spacing. For comparison, the user can either open different signal inset for each point or view multiple points in one signal inset. The viewer selects which method to use. Opening up different insets lets the user look at the general patterns while maintaining the same scale. Placing multiple points in one inset provides one-to-one comparison.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Opacity Tone Mapping</head><p>Our approach renders large amounts of data to the screen, often results in many points or lines overplotting. A common way to resolve this overplot is to make them semitransparent and use alpha blending to combine them. However, this very quickly runs into limitations as the number of elements increases. The standard 8-bit alpha buffer only allows for a maximum overplotting of 256. Furthermore, the opacity has to be set so low that outliers are nearly invisible. In order to keep both the opacity of outliers high and the combined opacity of dense overlap from overflowing the alpha buffer, we utilize opacity scaling techniques similar to <ref type="bibr" target="#b13">[14]</ref>. In our implementation of this technique, we first render to a high precision density buffer D which keeps track of the total amount of overplot and to a high precision color buffer C which blends the input color information with opacity inversely proportional to the density information to result in an average color that is fully opaque. We then combine these buffers with a transfer function to render the final pixels P to the screen. In order to be able to handle many orders of magnitude variance in the data density, we then combine these buffers with a logarithmic transfer function to render the final pixels P to the screen, which is defined as :</p><formula xml:id="formula_2">P x,y = C x,y × o min + (1 − o min ) × log(D x,y ) log(D max ) (3)</formula><p>Where o min is a user defined minimum opacity level and D max is the maximum level of overplotting that occurred. By calculating the final opacity in this manner we guarantee that any outliers will have at least opacity o min , that no overplotting exceeds the maximum opacity and that the system can handle orders of magnitude of overplotting.</p><p>In several views, we alternately use just the density buffer to generate a density heat map, discarding the initial color mapping. As before, we apply a logarithmic transfer function, but then we use the resulting value as a lookup into a 1D color map texture. In this heat map, the pixels are computed as:</p><formula xml:id="formula_3">P x,y = ColorMap log(D x,y ) log(D max ) (4)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPLORATION AND INTERACTION</head><p>We aimed to keep our UI and interaction design as simple as possible. Within the main window, the user can mouse over or click on a point in the main view to create an signal inset that shows the underlying signal pattern(s) that the algorithm used to compute that point. Several of these windows can be opened with a click for comparison. The window can be resized or moved, and each window points back to the aggregated value. For a direct comparison, multiple points can be loaded into one window.</p><p>We use the rectangle and lasso selection in our system. The rectangle selection is used in the timeline while lasso is used in the other two views. In the timeline, the user is interested in a particular range for a given attribute, so it makes sense to use rectangle selection. Lasso selection is used when the selection process is difficult, as is the case in the other views where the user has to sort through multiple points to get the selection he wants.</p><p>The control menu, pictured in <ref type="figure" target="#fig_1">Figure 3</ref>.D, has three tabs. The main tab controls which calculated view is shown, allows minor visualization adjustments, and changes global selection properties such as configuring which operations affect which views (e.g. the user might want to exclude all repeaters from the map but still keep them in the time view). There are three types of selections: filter, highlight, and exclude. The filter and exclude selections have to be handled carefully in algorithms where the data is aggregated. Removal of one signal from within an aggregated group of signals would invalidate or at least change the value of the group's derived metric. To avoid such errors, we simply remove the derived point when this happens. For highlighting, color interactions are applied only to their representation within the detailed signal insets instead of the aggregate point.</p><p>The user can adjust the colors by selecting a premade colormap or by manually changing the colormap, and can select which property to map to each color. The left color wheel provides color selection for the highlighting, and the color legend shows the current color map. The color legend is fully customizable with abilities to add new color or change existing ones. Any changes made to the color legend are saved, even when switching between colormaps. The calculation tab allows parameters to be changed and the algorithms to be queued up. For wavelet calculation, size of time window, sampling and overlap can be set. The last tab is the interface to the time view and controls what attribute is plotted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Algorithm Workflow</head><p>We had two goals in mind when designing the algorithm workflow: easy to use and modular. We achieve these goals by providing the user with a visual metaphor while at the same time making it easy to add new operations to the system. For instance, for a programmer to add a new layout calculation, they would just need to inherit the operation class and fill in the virtual functions to create this new layout. <ref type="figure" target="#fig_1">Figure 3</ref>.F shows the workflow view. The drop down menu adds operation panels. Selecting an operation displays its parameters at the bottom. Each operation has its own rules on how many and which operations it can be connected to. Clicking on another operations links them together. Operations can chain together, feeding the results of one operation as input into others. A link or operation can easily be removed with right click. The view has standard panning, zooming and moving of operations. Any changes are saved and loaded when the system is rebooted. The user can also choose to load a saved workflow or export the current workflow.</p><p>There are two unique operations, the data and output operation. The data operation is the starting point and does not take any input. The output operation grabs the preferred x and y axis of its input. When the compute button is pressed, all outputs are added to the drop-down menu for viewing. There, the user can select which results he wants to see and change x and y variables if he wants.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CASE STUDIES</head><p>To evaluate our system, we provide case studies demonstrating each type of algorithm and their effectiveness. The particular data sets used in this work were collected during test flights of a spectrum measurement detection platform in two geographical areas in the US. The data includes real world environmental noise and large volume of events from NSOIs that make the separation of real transmissions from noise induced transmissions difficult. Each flight generated a large log of transmission events, composed of geospatial information (including uncertainty ellipse), start/end times, signal quality, bandwidth, and Signal to Noise Ratio (SNR).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Repeaters</head><p>In this case, we use our system to explore one of the datasets collected from flight tests performed near the U.S.-Mexico border. We start by applying the repeater detection algorithm, and plotting it in the main view, as shown in <ref type="figure" target="#fig_2">Figure 5</ref>. Since we compute potential candidates, not every point is necessarily a repeater. For instance, some of the selected points do not have enough GPS data to determine whether they are repeaters or not, while others contain noise signals. For instance, there is a large concentration of noise points in the bottom left, as there is a high chance of finding incidental pairs with low count and duration. The points in the regions that extend almost asymptotically along both axes are more likely to be of interest. While this plot is rather skewed, it is these tails that are important, so it would be counter-productive to address this by applying a log-log scale.</p><p>To inspect these results in the map view, we select points from the upper left of the plot, as candidates that have more signal pairs are more likely to be repeaters. By mousing over each point, we can use the signal inset to inspect each pattern. Once a good candidate is found, it can be selected. Then, we draw lines on the map between each pair of events that have the same start time and duration. Ideally, we expect to see star patterns, where several client transmitters are utilizing one central repeater. In <ref type="figure" target="#fig_2">Figure 5</ref>, we show two different repeater candidates. The top candidate has most of the signal pairs pointing to a small region of space, while there are a few pairs that point a bit to right. When looking back at the signal inset we see a large amount of signal pairs and then a long break followed by a couple more signal pairs. This indicates that the first set of signals is the repeater on the left and the small set is either the same repeater moved or more likely a different repeater using the same set of frequency bands. In the bottom candidate, we can see constant stream of signal pairs which all points to a signal region, indicating a highly likely repeater location. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Communications</head><p>This case searched for communication patterns using the communication detection algorithm to extract likely candidates, and plotting the number of transmissions versus the total length of the conversation for each candidate. We found that communication patterns occur less frequently than any of the other patterns. While this could be due to our algorithmic settings being too strict or not inclusive enough, it is also quite possible that there were simply very few conversations occurring when the data was collected. Further verification with ground truth knowledge would be needed to confirm either way.</p><p>As before, we inspect the candidates using the geospatial view. By plotting a line between communication transmitters in series on the map, one would expect the line to simply go back and forth between the communicators as they take turns talking. In <ref type="figure" target="#fig_3">Figure 6</ref>, we see two examples of this representation. By selecting group A, a star pattern is created by one transmitter that is mostly stationary and a number of surrounding transmitters. As there were multiple, temporally distinct conversations, and as one party was stationary, it is possible that this is a 'dispatch'-type communication. Selecting group B reveals a similar nearby pattern that at first would look like the communication comes from many locations, but displaying the error ellipses reveals that it is possible for the communication to simply be between two parties. The combination of the error ellipses better triangulate their locations than any single transmission by itself.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Wavelet Algorithm</head><p>In <ref type="figure" target="#fig_4">Figure 7</ref>, we show the results from the wavelet calculation mapping color to density heat map. We have opened up several signal insets for comparison. The wavelets separate windowed samples of the signal by pattern behavior, with longer duration signals tended towards the right, analog patterns toward the bottom, and digital patterns towards the top. This comes from the wavelet scalograms, in which digital patterns have a sharp spike in one or two dimensions in a scalogram while analog patterns are more even across dimension.</p><p>Wavelets are useful when the user is looking for a general pattern about the dataset. For instance, <ref type="figure" target="#fig_4">Figure 7</ref> show wavelet structure of two different dataset. The image on the bottom has far fewer points in the top region, indicating that it has less long digital-like patterns. A benefit of the wavelets is that the user can filter map and timeline views based on durations or digital and analog behavior.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.4">Repetitive Patterns</head><p>We examine both the DPD algorithm, Windowed Variance and their views. We first start with the Windowed Variance. We set the window size to 60 seconds with no overlap between windows. <ref type="figure" target="#fig_5">Figure 8</ref> shows the results of the Windowed Variance computation. The big cluster of patterns to the top right are analog signal patterns as they have large variation in both gap and duration. However, the striated groups to the left and bottom of the plot are generally digital signals, with low variation in signal length, gaps, or both.</p><p>The Windowed Variance view is useful when the user is looking for a pattern that is not entirely digital. For instance, there might be a series of events that have the same duration but different gap times. By plotting the SD of the gap and duration, the user can quickly decide how much variance to allow in either direction through selection. This gives Windowed Variance an advantage over DPD where it has to be recomputed. Another potential use for the Windowed Variance is to look at analog signal patterns. Just like in the digital selection, the user can decide how much variation to allow.</p><p>We computed the DPD algorithm with a 10% CV. The results are shown in <ref type="figure">Figure 9</ref>. Most digital signals would have high signal counts of low duration. So one unexpected feature of this dataset is that there are several peaks of high signal counts with moderate to high average duration. What is also interesting is that these high average high counts have low frequency bands, as normally digital signals are found in the higher frequency bands. We look at two low frequency bands points and notice that we can triangulate their position. With this piece of information, it would be possible to commence another fly-by to gather more information if warranted.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.5">Combining Approaches</head><p>Our discussion so far has focused on each algorithm separately, and how each one can help the user find a particular pattern or generally explore a dataset. We also have shown how the time view and map view can be used in conjunction with the results to facilitate in the discovery of patterns. However, repeaters, communication and DPD/Windowed Variance can also be combined to find more complex patterns.</p><p>For instance, the user could combine the DPD and repeater algorithms. This would find digital patterns mirrored across multiple frequencies. While this could be a digital signal being retransmitted, it could also be a broadcast from a single source of a digital pattern across multiple frequencies, such as an alert or beacon. First, we would construct our workflow that would go from the data, into the digital algorithm and pipe those results into the repeater algorithm. We filter the map based on candidates we found, as shown in <ref type="figure" target="#fig_0">Figure  10</ref>. Mousing over the points, we notice candidates that have many error ellipses overlapping, indicating very likely candidates as all the signals are coming from the same location, as would indicate a beacon instead of a digital repeater. Zooming in on the candidates reveals that the signals originate from the McClellan airfield. Thus, it is reasonable to deduce that this is an air-control navigational beacon.</p><p>Each combination of algorithms would detect different patterns. A repeater communication would use a repeater to extend the range of a conversation. A common example situation is near mountains where the handheld devices would be communicating over a repeater at the top of the mountain. Digital communication could be two or more machines interfacing with each other. A combination of all three is possible as well: Two machines could be communicating over a repeater to extend the range or broadcast to other frequency bands.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">EXPERT USER COLLABORATION</head><p>This project was aimed at the development of a visual tool for expert analysts to use to derive actionable insights from large data sets of simple raw measurements, with the goals of providing them with highly efficient, interactive analytic methods and an interface that would be intuitive enough for them to learn. As such, throughout the development we worked very closely with expert users in the signal intelligence field, who have extensive experience in working with the airborne signal collection platform and interpreting its results. This interaction directly guided the development of the analytics which directly addressed their questions. And our joint exploration of the data revealed unanticipated applications to detection of hardware issues such as installation or measurement errors, which they used to further the development of the collection platform.</p><p>Due to the specific expertise of the target user base, it was unfeasible to find a sufficient number of users for a formal user study. Also, many potential applications for our system involve sensitive or classified data, so critical evaluation of the analysts' work flows or tool usage is also not viable. However, through regular user tests and feedback from the few expert users we were working with, we were able to informally evaluate the utility and intuitiveness of the tool. Here, we describe examples of their usage of most major components in the system, many of which led to concrete insights.</p><p>The analysts found the tools easy to use. In general, the frequency view was a clear base for the analyst to work from, as the users found it easy to understand. In particular, the time vs frequency view was often the initial view of choice of the signal environment. Previously, the analysts interacted with the data one frequency at a time. The timeline representation made understanding patterns out of a dense environment much easier while retaining the users' mental picture of the data space. The color editor allowed subtle shading within a data type and helped to highlight or exclude outliers visually. Features of the color wheel such as saving of the color wheel settings were found helpful for repeated analysis over several sessions or for collaboration. <ref type="figure">Fig. 9</ref>. The DPD view shows the count in the y-axis and average duration in the x-axis. Normally large counts of digital patterns have short average duration and are found in the higher frequency (blue). In this dataset, there are several high count patterns that have both high average duration and are found lower frequency bands (red).</p><p>The addition of highlighting and filtering greatly improved the expert users exploration of the data set over their previous methods. Rapid selection of different data types and zooming into detail features for more in-depth analysis allowed the analysts to rapidly explore the features of the environment from the macro viewpoint down to detailed perspectives of related events.</p><p>Some of the data analytics (such as communication) often only identified a few events. The ability to see those events within the context of the entire frequency set allowed the users insight into whether the algorithm had selected a true communication channel or not. Because the number of such events may only be a few dozen out of the 500K to 1M events in the data, finding the related events needed to be efficient. Highlighting was sufficient for analytics with about 100 events. Filtering was important with fewer events. A common process was that the fast filtering would be used to remove all nonselected data and then zooming would be used to get closer to the selected data. Restoring all the events was a single button press which would put all the data back in the display. This sequence was intuitive to the users and helped in the rapid validation of low event analytic output.</p><p>The repeater analytic produced interesting results that still needs more analysis. The algorithm required absolute time synchronicity of the events that were put forward as candidates. On zooming into the details of the events, the expert users rapidly hypothesized new analytic algorithms for refined or different results.</p><p>Novel axis definitions in the digital, communication and repeater analysis helped translate the algorithms results into operator-centric understandings. The analytics produced many candidates and the novel axis definitions helped the experts in navigating those candidates, since they related to the experts' understood signal concepts. For example, one axis of the digital detection metric is the signals' mean duration, which lets users utilize their domain knowledge to separate digital signals into different duration subclasses. For the communication analytic the number of events in the communication was used as an axis, which allowed the users to easily distinguish by numbers of interchanges. These flexibilities made exploration of highly likely signals easier for the expert users to select, highlight, filter and map.</p><p>While not one of the original goals, the expert users also found the tool helpful for identification of subtle installation and measurement errors at a macro level. Our tool revealed indicators at the overview level which guided the users to drill down into specific times and measurements from a multi-variable perspective using colorization by data <ref type="figure" target="#fig_0">Fig. 10</ref>. An example of combining algorithmic methods. In this case, we ask the system to find us digital repeaters, a digital signal that spans multiple frequencies. The system presents several candidates. Examining the results, we find two promising clusters. Most of the signals originate from the McClellan airfield.</p><p>type and filtering and selection across the views. Although the data analysis was done on datasets after the flight tests were over, this analysis was able to point to subtle installation issues that were specific to particular frequencies and aircraft flight dynamics. These phenomena were not visible with previous data centric analysis methods as these subtle errors had not been previous hypothesized or analyzed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION</head><p>In this paper we have presented a visual analysis system for exploring and analyzing radio signal meta-data. We showed how the visual representations help analysts identify, understand, and compare different signal patterns. In designing our system, we have developed novel algorithms for quantitative detection of patterns such as digital transmission or communications. We have shown how combinations of such algorithms along with visual interactions can lead to further insights. We have also demonstrated the usefulness of our system, particularly the algorithms and visualizations, with experimental results derived from data collected from actual airborne sensor platform tests. Such a system could only be more powerful when put into the hands of analysts who need to understand intercepted radio transmission patterns in the field, either forensically or in real-time.</p><p>Though the work in this paper has been focusing on exploring offline data, in the future, our system will move towards integration with real-time data collection. Our current analytics aim to be efficient enough for real-time usage, but future situations or additional analytics might necessitate further scaling and acceleration techniques, such as GPU techniques or out-of-core processing capabilities. Incorporating relevant real-time properties such as the location/orientation of the plane could also be relevant in real-time situations. Lastly, the contents of recorded signal data is generally sensitive information, so we only had access to the signal metadata. However, when the signal contents are available, their analysis would be a beneficial subsequent step; our approach can be used to identify sequences of signals that could form a communication, at which point the analyst would apply other communication analysis approaches based on content.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1</head><label>1</label><figDesc>Fig. 1. As the data is loaded, several preprocessing steps are applied. Afterwards, the data is saved in a binary format with the included preprocessing results. The user can either start with the geospatial representation, timeline or calculate one of the analytic methods. The interactive process allows the user to define the scope of his alteration, by specify which views are affected by the interaction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>The system has three primary views (A-C) and several interface tools (D-G). The map view (A) shows the locations of selected signals' sources geospatially. The main view (B) shows the results of the analytic algorithms, and allows the user to inspect or select them. The timeline view directly plots a parameter of the signals over time as lines for the signals' durations (frequency bands shown here)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 5 .</head><label>5</label><figDesc>The repeater candidates algorithm plots the number of signals versus their average duration for each sequence. The plot's density is mapped to color as in a heat map. For many likely candidates (those with high counts), selecting the sequence of signal pairs and plotting it in the map view shows that most of their pairs of matched signals approximately share one end point (within error ellipses) indicating likely locations of repeaters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 6 .</head><label>6</label><figDesc>The communication detection algorithm plots number of transmissions versus the overall duration of the conversation, and investigate two candidates. (a) The star burst pattern represents communications between a number of different places and one central hub, which is likely some sort of dispatch center. (b) The detected communication goes back and forth between two different locations. While the error ellipses are fairly large, their overlap refines the precision of the locations.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 7 .</head><label>7</label><figDesc>The wavelet view plots sequence segments projected down from a high dimensional space. Inspection reveals that sparser patterns ended up towards the left, with more digital-like patterns at the upper right and more analog patterns in the lower right. Different datasets have different distribution of signal types. From the lack of points in mid upper region of the bottom image, it is clear that the top dataset has more digital signals than the bottom dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 8 .</head><label>8</label><figDesc>The Windowed Variance distributes patterns based on their variance in gap and duration. The y-axis is the variance in the gap while the x-axis is the variance in duration. Analog patterns are found in the top right because they have large variance in both gap and duration.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">ACKNOWLEDGMENTS</head><p>This research has been sponsored in part by the Northrop Grumman Corporation, National Science Foundation through grants IIS-1320229 and CCF-1025269, and Department of Energy through grants DE-FC02-06ER25777 and DE-FC02-12ER26072.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Exploratory Analysis of Spatial and Temporal Data: A Systematic Approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Andrienko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Andrienko</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<publisher>Springer-Verlag New York, Inc</publisher>
			<pubPlace>Secaucus, NJ, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Visual analytics of movement: An overview of methods, tools and procedures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">V</forename><surname>Andrienko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Andrienko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Visualization</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="3" to="24" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A signal analysis of network traffic anomalies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Barford</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Plonka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Ron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACM SIGCOMM Workshop, IMW &apos;02</title>
		<meeting>ACM SIGCOMM Workshop, IMW &apos;02</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2002" />
			<biblScope unit="page" from="71" to="82" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Conversation clock: Visualizing audio patterns in co-located groups</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bergstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Karahalios</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of HICSS 2007</title>
		<meeting>HICSS 2007</meeting>
		<imprint>
			<date type="published" when="2007" />
			<biblScope unit="page">78</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Conversation clusters: grouping conversation topics through human-computer dialog</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bergstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Karahalios</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of CHI &apos;09, the SIGCHI Conference on Human Factors in Computing Systems</title>
		<meeting>CHI &apos;09, the SIGCHI Conference on Human Factors in Computing Systems<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="2349" to="2352" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Proximitybased visualization of movement trace data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Crnovrsanin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Muelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">D</forename><surname>Correa</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE VAST</title>
		<imprint>
			<date type="published" when="2009" />
			<biblScope unit="page" from="11" to="18" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualizing conversation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Donath</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Karahalios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Vigas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Computer-Mediated Communication</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="0" to="0" />
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Pause and gap length in faceto-face interaction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Edlund</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Heldner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hirschberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Speech Communication Association</title>
		<imprint>
			<biblScope unit="page" from="2779" to="2782" />
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The use of linear projections in the visual analysis of signals in an indoor optical wireless link</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Faith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Rajbhandari</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of CSNDSP</title>
		<meeting>CSNDSP</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010" />
			<biblScope unit="page" from="576" to="581" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An introduction to wavelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Graps</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computational Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="50" to="61" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A visual analytics system for radio frequency fingerprinting-based localization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Han</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">P</forename><surname>Stuntebeck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Stasko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Abowd</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE VAST</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Detection thresholds for gaps, overlaps, and no-gap-nooverlaps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Heldner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Acoustical Society of America</title>
		<imprint>
			<biblScope unit="volume">130</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="508" to="513" />
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Pauses, gaps and overlaps in conversations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Heldner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Edlund</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Phonetics</title>
		<imprint>
			<biblScope unit="volume">38</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="555" to="568" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Revealing structure within clustered parallel coordinates displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Johansson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Ljung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Jern</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cooper</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of InfoVis &apos;05</title>
		<meeting>InfoVis &apos;05</meeting>
		<imprint>
			<publisher>IEEE Computer Society</publisher>
			<date type="published" when="2005" />
			<biblScope unit="page" from="125" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Principal Component Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">T</forename><surname>Jolliffe</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002-10" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
	<note>second edition</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Visualizing network traffic to understand the performance of massively parallel simulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Landge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Levine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bhatele</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Isaacs</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Gamblin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schulz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">H</forename><surname>Langer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P.-T</forename><surname>Bremer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE TVCG</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="2467" to="2476" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Exploratory cartographic visualization: Advancing the agenda</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Maceachren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M.-J</forename><surname>Kraak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comput. Geosci</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="335" to="343" />
			<date type="published" when="1997-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Visualizing geospatial information uncertainty: What we know and what we need to know</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">M</forename><surname>Maceachren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Robinson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Hopper</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Murray</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gahegan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hetzler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cartography and Geographic Information Science</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="139" to="160" />
			<date type="published" when="2005-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Topic islandstm-a wavelet-based text visualization system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">C</forename><surname>Wong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Brewster</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Foote</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Vis &apos;98</title>
		<meeting>Vis &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="189" to="196" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A visualization methodology for characterization of network scans</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">W</forename><surname>Muelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K.-L</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Bartoletti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of VizSEC &apos;05</title>
		<meeting>VizSEC &apos;05</meeting>
		<imprint>
			<date type="published" when="2005-10" />
			<biblScope unit="page" from="29" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Vampir: Visualization and analysis of MPI resources</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Nagel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Arnold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Weber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Solchenbach</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
			<publisher>Supercomputer</publisher>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="69" to="80" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Wavelets and signal processing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Rioul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Vetterli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Signal Processing Magazine</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="14" to="38" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">The Tau parallel performance system</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">S</forename><surname>Shende</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Malony</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IJHPCA</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page" from="287" to="311" />
			<date type="published" when="2006-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">An approach to creating performance visualizations in a parallel profile analysis tool</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Spear</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">D</forename><surname>Malony</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">W</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Biersdorff</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Shende</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Euro-Par &apos;11, the 2011 international conference on Parallel Processing</title>
		<meeting>Euro-Par &apos;11, the 2011 international conference on Parallel Processing</meeting>
		<imprint>
			<date type="published" when="2012" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="156" to="165" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">A typology for visualizing uncertainty</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Thomson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Hetzler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Maceachren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gahegan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Pavel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2005" />
			<biblScope unit="volume">5669</biblScope>
			<biblScope unit="page" from="146" to="157" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Gantt charts: A centenary appreciation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Wilson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">European Journal of Operational Research</title>
		<imprint>
			<biblScope unit="volume">149</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="430" to="437" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Visualisation of origins, destinations and flows with od maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Wood</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Dykes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Slingsby</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Cartographic Journal</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="117" to="129" />
			<date type="published" when="2010" />
		</imprint>
	</monogr>
	<note>The</note>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">A variation coefficient similarity measure and its application in emergency group decision-making</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Q</forename><surname>Wan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Systems Engineering Procedia</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">0</biblScope>
			<biblScope unit="page" from="119" to="124" />
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Toward scalable performance visualization with</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Zaki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Lusk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Gropp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Swider</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Jumpshot. IJHPCA</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="277" to="288" />
			<date type="published" when="1999-08" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
