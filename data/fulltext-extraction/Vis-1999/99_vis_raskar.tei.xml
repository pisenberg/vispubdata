<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Multi-Projector Displays Using Camera-Based Registration</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ramesh</forename><surname>Raskar</surname></persName>
							<email>raskar@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><forename type="middle">S</forename><surname>Brown</surname></persName>
							<email>mbrown@dcs.uky.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ruigang</forename><surname>Yang</surname></persName>
							<email>ryang@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wei-Chao</forename><surname>Chen</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Welch</surname></persName>
							<email>welch@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Herman</forename><surname>Towles</surname></persName>
							<email>herman@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Brent</forename><surname>Seales</surname></persName>
							<email>seales@dcs.uky.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Henry</forename><surname>Fuchs</surname></persName>
							<email>fuchs@cs.unc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">University of North Carolina at Chapel Hill</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Multi-Projector Displays Using Camera-Based Registration</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>CR Categories: I.3.3 [Computer Graphics]: Picture/Image Generation -Digitizing and scanning, Display algorithms, Viewing algorithms</term>
					<term>I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism -Virtual reality</term>
					<term>I.4.1 [Image Processing and Computer Vision]: Digitization and Image Capture -Imaging geometry, Camera calibration, Sampling, Scanning</term>
					<term>I.4.8 [Image Processing and Computer Vision]: Scene Analysis -Range data, Surface fitting, Tracking</term>
					<term>B.4.2 [Input/Output and Data Communications] Input/Output Devices -Image display display, projection, spatially immersive display, panoramic image display, virtual environments, intensity blending, image-based modeling, depth, calibration, auto-calibration, structured light, camera-based registration</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Conventional projector-based display systems are typically designed around precise and regular configurations of projectors and display surfaces. While this results in rendering simplicity and speed, it also means painstaking construction and ongoing maintenance. In previously published work, we introduced a vision of projector-based displays constructed from a collection of casually-arranged projectors and display surfaces.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we present flexible yet practical methods for realizing this vision, enabling low-cost mega-pixel display systems with large physical dimensions, higher resolution, or both. The techniques afford new opportunities to build personal 3D visualization systems in offices, conference rooms, theaters, or even your living room. As a demonstration of the simplicity and effectiveness of the methods that we continue to perfect, we show in the included video that a 10-year old child can construct and calibrate a two-camera, two-projector, head-tracked display system, all in about 15 minutes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The lure of building a single logical display from a set of individual light projectors is inspired by the promise of very high-resolution displays with large areas of coverage together with affordable components. Such large field of view displays are traditionally created using a well-configured set of projectors so that they do not create keystoning and are physically aligned to match the neighboring projectors. Such panoramic displays for flight simulations, virtual reality and visualization create spectacular imagery <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr">5,</ref><ref type="bibr" target="#b4">6]</ref>. However, the physical construction of these idealized systems requires considerable space and constant attention and adjustment by trained personnel. The large amount of computing/rendering power that is now available and ever increasing allows us to consider a different set of tradeoffs. With additional computation costs, we can design a generalized solution -one that accommodates display in normal rooms using a casual placement of projectors. One central problem to be solved in achieving seamless imagery with multiple projectors is that of geometric registration. Broadly, geometric registration is the alignment of image features on the target display surface across individual light-projector boundaries. Correct registration, together with correct image intensity blending of the overlapped image areas, makes these boundaries visually insignificant, and creates a powerful immersive effect for the viewer. The effect is broken when the panorama contains seams or obvious gaps and overlaps.</p><p>Few panoramic display systems have explored the issue of maintaining compelling geometric registration between overlapping projected images for a moving user. We achieve geometric registration by recovering a 3D representation of the display environment. This includes taking into account three critical components:</p><p>• the configuration of the set of projectors, • the geometry of the display surface, • and the location of the viewer Central to these geometric techniques is the use of cameras to recover the 3D representation and calibrate the system. The projectors and cameras operate together as a tightlycoupled system to recover critical geometric information of the projectors and the entire display surface. The Office of the Future system <ref type="bibr" target="#b5">[7,</ref><ref type="bibr" target="#b6">8]</ref> originally introduced the idea of using cameras to recover 3D displays surfaces and rendering on them. We present new techniques that enable the system to maintain geometric registration and deliver seamless panoramic imagery. <ref type="figure" target="#fig_0">Figure 1</ref> shows the kinds of geometry that our camera-based approach will allow: irregular display surfaces, arbitrarily-positioned (and overlapping) light projectors, and a moving viewer. Our techniques do not require idealized display surface geometry and viewer/projector configurations, although we encompass these special situations, in some cases with improved efficiency.</p><p>The technical presentation begins with an application of computer vision techniques to calibrate the cameras and recover display surface and projector parameters. We then describe a two-pass rendering method for generating a perspectively correct image on an irregular surface. We then detail issues with scaling the system: repeating these procedures for a large number of projectors. The individual steps involved are direct, and yet unavoidable imperfections introduce errors in estimation of recovered parameters and lead to visible artifacts in projector overlaps.</p><p>Our approach provides ways to compensate for the practical geometric errors that, left alone, lead to serious misregistration.</p><p>We introduce a surface mesh unification method to ensure the geometric continuity of the 3D global display surface model across projector boundaries. Finally, to address the relatively small registration errors that inevitably remain after any parametric calibration, we present a new 2D post-rendering warp step.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">BACKGROUND</head><p>A common way to represent the many components of the panoramic display problem is to consider a world coordinate system (WCS) defined in the viewer's physical space to encompass viewer position and a representation of the screen surface. Representations of each of the components of the system are expressed within this WCS: the 3D model to be rendered, models of the light projectors, models of the cameras, and a model of the display surface. At the minimum scale, the problem is to consider a single camera and projector. Scaling the environment means that the number of projectors and cameras are increased in order to obtain higher resolution and larger areas of physical screen coverage. Any method to create a unified display from camera/projector components must be based on the geometric relationships between component models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Geometric Relationships</head><p>The display surface and viewer physical environment defines the WCS, and each projector and camera is modeled as a perspective projection device in the WCS. The perspective transformation relates the 2D pixel coordinates (image pixels for the camera, frame buffer pixels for the projector) to the 3D WCS. Perspective transforms can be represented with a pinhole camera model. The pinhole model includes intrinsic characteristics, such as the image center and the focal length, as well as the extrinsic characteristics, which locate the optical center and 3D orientation of the projective device.</p><p>The full-scale panoramic image display problem is to compute images for the frame buffers of each projector such that the images combine properly on the display surface to produce geometrically correct, seamless imagery for the viewer. When we assume an idealized and completely known geometry for display configuration (all components), the problem of computing the correct imagery for the viewer can be completely specified using two mappings.</p><p>The first mapping uses the geometric relationship among the viewer, 3D model to be rendered, and the display surface to determine the intensity values that must be assigned to each point on the display surface. The second mapping uses the exact relationship between each projector pixel and the display surface point it illuminates in order to assign the appropriate pixel intensities to each projectors' frame buffer.</p><p>When the complete geometry is known exactly, the projections from all the frame buffers illuminate the scene so that the viewer sees the correct imagery and the problem of generating large-scale panoramic imagery is solvable. But an understanding of the geometry is not enough to create a practical system. Challenges arise when large-scale systems are coupled with an inaccurate knowledge of geometry, incomplete or inaccurate camera/projector models, and when performance becomes a concern. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Related Work</head><p>Although the idealized representation of the panoramic display problem can be stated quite directly, the implementation of a real system faces the practical issues of imprecise geometry, aliasing, blending and many sources of misregistration. There are a variety of ways to cope with these issues, and many panoramic displays with and without user head-tracking have been developed. The majority of the systems, such as those from Panoram Technologies [5] and Trimension Systems <ref type="bibr" target="#b3">[4]</ref>, create images for a single ideal viewer location, or "sweet spot". Specifically, Trimension <ref type="bibr" target="#b3">[4]</ref> uses three overlapping projectors to project images on a rigid cylindrical screen. The light projectors are aligned symmetrically so that each overlap region is a well-defined rectangle <ref type="figure" target="#fig_1">(Figure 2a</ref>). Flight simulators have been using a similar technique for a long time. Omnimax <ref type="bibr" target="#b1">[2]</ref> and ARC domes <ref type="bibr" target="#b4">[6]</ref> immerse the user in high resolution wide-field images using a single projector and dome shaped surfaces. Using rear-projection and head-tracking, the CAVE <ref type="bibr" target="#b0">[1,</ref><ref type="bibr">9]</ref> enables interactive and rich panoramic visualizations. The setup is a precise and well designed cube-like structure <ref type="figure" target="#fig_1">(Figure 2b</ref>). The CAVE assumes that the display surface and projector geometries are known and are fixed a priori in a specific configuration. Geometric registration is obtained by carefully ensuring that the physical configuration matches the design. The Office of the Future <ref type="bibr" target="#b5">[7]</ref> suggests using arbitrary dayto-day surfaces for display purposes and rendering perspec-tively correct images for a moving user on them. That system demonstrated ideas on a small-scale system, where the idealized geometries and models are accurate enough to produce acceptable results. Our methods carry that small-scale work forward, scaling to many cameras and projectors and presenting new techniques that are necessary to obtain the performance and the geometric registration required to deliver seamless panoramic display.</p><p>The issues of maintaining geometric registration between projected images for a moving user have not been fully explored by current projector-based systems. However, many authors have presented techniques to create panoramic mosaics of images taken with a camera. Typically, the images are taken with a camera mounted on a rotating tripod. If there is no strong motion parallax, the images are "stitched" and smoothly blended to create a single panoramic image. Earlier stitching methods required pure (horizontal) panning motion of the camera <ref type="bibr" target="#b7">[10,</ref><ref type="bibr" target="#b8">11]</ref>. This is analogous to current multi-projector systems that allow only side-by-side overlaps and align two projectors at a time.</p><p>Newer panoramic image mosaicing techniques allow uncontrolled 3D camera rotations <ref type="bibr" target="#b9">[12,</ref><ref type="bibr" target="#b10">13]</ref> by representing each image with a 3-parameter rotational model or sometimes with more parameters. This allows mosaicing of images taken with even a hand-held camera. We extend this concept and represent the image displayed by each light projector by a sequence of two perspective projection transformations. The panoramic imagery is created using arbitrary projection overlaps. Most of the camera image mosaicing techniques deal with the difficult problem of computing image feature correspondences. We reduce this problem by using active structured light.</p><p>With regard to intensity blending of overlapping projected images, some popular techniques are described in <ref type="bibr" target="#b11">[14,</ref><ref type="bibr" target="#b9">12]</ref>. Section 4.3 details how we modify similar techniques for our multi-projector display environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SINGLE PROJECTOR DISPLAY</head><p>As background for the discussion of multi-projector system calibration in Section 4, this section details the three fundamental calibration steps for a single projector display and includes a brief on the generalized 2-pass rendering technique used as a basis of our work.  Our calibration procedures are based on using a stereo camera pair that is positioned on a wide baseline with each oriented to observe the entire projector illuminated surface. <ref type="figure" target="#fig_3">Figure 3</ref> illustrates this layout.</p><p>Step one of the procedures involves calibration of the camera pair using a physical calibration pattern. Details of the physical calibration pattern are discussed in Section 6 and the accompanying video. Calibration step two involves estimation of display surface geometry and step three evaluates projector intrinsic and extrinsic parameters. These methods are based on standard computer vision techniques and systematically build on each other. The camera pair and calibration pattern are not needed during rendering operation and can be retired once the calibration procedures are complete.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Camera Calibration</head><p>To calibrate the camera pair, we position a 3D calibration pattern with spatially-known feature points within the intersection of their view frusta. By extracting feature points in the 2D camera images corresponding to known 3D points on the calibration pattern, we can determine the 3 × 4 projection matrixP for each camera based on the perspective equation:</p><formula xml:id="formula_0">[ U V S] T =P [ x y z 1] T (1)</formula><p>The perspective equation maps a 3D point (x, y, z) in object space to a 2D point (u, v) in camera image space, where</p><formula xml:id="formula_1">(u, v) = ( U S , V S ).</formula><p>The projection matrixP , determined up to a scale factor, represents a concatenated definition of the camera's intrinsic and extrinsic parameters assuming a pinhole optics model. With six or more correspondences between the calibration pattern and camera images, the 11 unknown parameters ofP can be solved using a least-squares method <ref type="bibr" target="#b12">[15]</ref>. Note, we do not explicitly solve for the intrinsic and extrinsic parameters of the camera, instead we solve forP directly; however, the intrinsic and extrinsic can be obtained by a decomposition ofP .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Display Surface Estimation</head><p>After independent calibration of each camera, we can evaluate the geometry of the display surface using triangulation techniques based on correspondences extracted from the stereo image pair. Correspondences in the images are easily determined since we can use the projector to sequentially illuminate point after point until we have built a 3D point cloud representing the display surface. By binary-coding the projector illuminated pixels, we can efficiently determine the stereo-correspondences. The process of projecting patterns so that they can be uniquely identified by a camera is also known as an active structured light technique.</p><p>This 3D surface representation, which is in the coordinate frame of the physical calibration pattern established in step one, is then reduced into a mesh structure in projector image space using 2D Deluanay triangulation techniques.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Projector Calibration</head><p>As a result of the surface extraction process, for each projector pixel (u, v), we now have a corresponding illuminated 3D surface point (x, y, z). Using these correspondences we can solve for the projector's projection matrixP as we did for the cameras.</p><p>A problem arises when the 3D points of the display surface are co-planar. In this case, the least-square method is degenerate due to the depth-scale ambiguity of viewing planar points. This means there exists a family of solutions. To develop a unique solution in this case, we add surfaces into the scene and repeat the surface extraction procedures of Section 3.2 solely for the purpose of eliminating this ambiguity. Once this solution is affected, the introduced surfaces are removed from the display environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">2-Pass Rendering Algorithm</head><p>To render perspectively correct imagery on irregular surfaces, we use a two-pass rendering method described in <ref type="bibr" target="#b5">[7]</ref>. In the first pass, the desired image for the user is computed and stored as a texture map. In the second pass, the texture is effectively projected from the user's viewpoint onto the polygonal model of the display surface. The display surface model, with the desired image texture mapped onto it, is then rendered from the projector's viewpoint. This is achieved in real-time using projective textures <ref type="bibr" target="#b13">[16]</ref>. The rendering cost of this two-pass method is independent of complexity of the virtual model. From a practical implementation standpoint, aliasing artifacts of the projective texture step can be reduced by computing a view frustum with the image plane parallel to the best-fit plane representation of the display surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">MULTIPLE PROJECTOR DISPLAY</head><p>The remainder of this paper will address the issues in scaling the calibration and rendering techniques from a single to a multi-projector system.</p><p>First, to calibrate multiple projectors we repeat the procedures discussed in Section 3, but then we must re-register the display surface definitions and projector calibrations for the entire system to a common world coordinate space (WCS). These registration methods are described in Sections 4.1 and 4.2, while Section 4.4 discusses re-registering the viewer tracker data.</p><p>Second, display surface regions where multiple projectors overlap are noticeably brighter because of multiple illumination. We correct for this by attenuating projector pixel intensities in the overlapped regions. Our current intensity blending technique are explained in Section 4.3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Surface Mesh Registration</head><p>When multiple projectors Pi and stereo camera pairs Ci are used, it is generally necessary to move the physical calibration pattern so that it can be viewed by the different camera pairs. As described in Section 3.2, parameters for projector Pi and the corresponding section of the display surface mesh Di are defined in the coordinate system of the calibration pattern used in the camera pair Ci calibration step. To render seamless images, we first register all sections of the display surface mesh into a common WCS.</p><p>Registering data represented in multiple coordinate frames into a common frame is a classic computer vision and graphics problem that involves solving for the rigid transformation given by:</p><formula xml:id="formula_2">Di(k) = Ri * Di+1(k) + ti (2)</formula><p>where Ri is a 3 × 3 rotation matrix, ti is a 3 × 1 translation vector and Di(k) and Di+1(k) are corresponding 3D points in the two frames of reference. To compute R and t, we use the Lagrangian multipliers method which solves the leastsquare minimization problem, ||Di(k) − (RiDi+1(k) + ti)|| 2 subject to the constraint that Ri is a unitary matrix, i.e. RiR T i = I. This method is outlined nicely in <ref type="bibr" target="#b14">[17]</ref>. The challenge in solving for R and t in most applications is finding the correspondence between 3D points. We easily find these corresponding points in Di+1 with Di using the same binary-coded structured light methods used for surface extraction and projector calibration. The camera pair Ci observes a set of projector pixels from projector Pi, but can also observe a subset of the pixels projected by adjacent projector Pi+1. Similarly, camera pair Ci+1 observes pixels projected by Pi+1 and a subset of the pixels of projector Pi. The common set of 3D points that one camera pair can observe from both projectors is the correspondence set necessary to solve (2) and thus register the display surface data of one projector to another.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Projector Registration</head><p>Projection parameters of the projectors Pi are based on their display surface Di as described in Section 3.3. After the display surface meshes have been registered by applying rigid transforms, we recalculate the projector's projection matrix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Projector Overlap Intensity Blending</head><p>Regions of the display surface that are illuminated by multiple projectors appear brighter, making the overlap regions very noticeable to the user. To make the overlap appear seamless we use alpha blending techniques. We create an alpha-mask for each projector, which assigns an intensity weight [0.0 − 1.0] for every pixel in the projector. Weights of all projected pixels illuminating the same display surface point should add up to unity. The weight is additionally modified through a gamma lookup table to correct for projector non-linearities.</p><p>To find the alpha-mask, we use a camera to view the overlapped region of several projectors. We form a convex hull Hi in the camera's image plane of observed projector Pi's pixels. The alpha-weight Am(u, v) associated with projector Pm's pixel (u, v) is evaluated as follows:</p><formula xml:id="formula_3">Am(u, v) = αm(m, u, v) i αi(m, u, v)<label>(3)</label></formula><p>where  <ref type="figure" target="#fig_5">Figure 4</ref> shows the alpha masks created for three overlapping projectors. Similar feathering techniques are used to mosaic multiple images taken by a camera into a single panoramic image <ref type="bibr" target="#b15">[18]</ref>. However, such a target 2D panoramic image does not exist when projector images are blended on (possible nonplanar) display surfaces. Hence we use the 2D image of the display surface taken from a calibration camera and compute the intensity weights in this 2D camera image space. We transformed this alpha-mask in camera space into projector image space by using our 2-pass rendering technique. With a fixed alpha-mask for each projector, we simply render a textured rectangle with appropriate transparency as the last stage of the real-time rendering process.</p><formula xml:id="formula_4">αi(m, u, v) = wi(m, u, v) * di(m, u, v</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Tracked Viewer Registration</head><p>The user location is measured by an infrared tracking device. To use the tracker readings, we need to compute the transformation between the coordinate system of the tracking system and the WCS defined by the physical calibration pattern. Therefore, before moving the physical calibration pattern from our reference projector, we also find the correspondences between four 3D points on the calibration pattern in calibration pattern coordinates and tracker system coordinates. We again use the Lagrangian multipliers method to find the rigid transformation between tracker coordinate space and display WCS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">NEW TECHNIQUES</head><p>Errors in tracked user location cause no geometric registration problems between projectors as long as all rendering processes are fully synchronized. However, errors in the estimation of the display surface and the camera/projector parameters are critical. When these errors are small, the display is seamless. When the errors grow, the display becomes discontinuous where projectors overlap. Methods for addressing second-order errors such as for radial lens distortion and non-linear bundle adjustment to improve the global estimate of the camera/projector calibration can reduce the average mis-registration error, but our experiments have shown that radial distortion and bundle adjustment improve estimates only marginally, and do not prevent the viewer from perceiving mis-registrations in large-scale environments.</p><p>Therefore, to yield acceptable visual results we need to address the two primary sources of error -display surface estimation and projector calibration. We next review these error terms and then present new calibration and rendering techniques for preserving a seamless display.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Display Surface Errors</head><p>Display surface estimation is dependent on calibrated cameras and piecewise-registered 3D points that are connected into meshes. Small errors that are present in camera calibration are magnified as errors in the final computed display surface, resulting in an erroneous display surface. These errors are attributed to the following operations: display surface estimation include initial camera calibration from the calibration pattern, which requires feature detection and camera-parameter estimation; feature detection and stereo correspondence from structured light techniques; recovery of 3D coordinates using triangulation; coordinate frame registration of meshes by estimating a rigid transformation to bring them into alignment. Because the final display surface will never be exact, we have developed techniques to lessen the effect of display surface errors on the final rendered imagery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Projector Calibration Error</head><p>Projector calibration is dependent on the 3D display surface points that are reconstructed by the camera system. The relationship between the 3D points and the 2D pixel locations that illuminate those points is the basis for calibration. Because of errors in the computed location of the 3D points, the projection matrix for light projectors does not map the 3D display surface points exactly onto their 2D pixel locations. The re-projection error is directly dependent on errors in the 3D display surface reconstruction; errors are small when only one or two projectors and cameras are used, but grow as the system scales. Due to these errors in the projection matrices of light projectors, we have developed an imagebased technique to lessen the effect of re-projection errors on the final rendered imagery.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Geometric Error Compensation</head><p>In order to create geometrically seamless imagery for the viewer, we compensate for errors in 3D (display surface) and 2D (calibration of projector in the form of a projection matrix from 3D display-space to the 2D frame buffer). Specifically, we base our methods on two objectives:</p><p>• neighboring projectors should use exactly the same representation of the display surface geometry</p><p>• the projection matrix for a light projector should map 3D screen points onto the exact 2D pixels that illuminated them during the structured light process</p><p>If the overall environment reconstruction process was accurate, both objectives would automatically be satisfied. However, because it is inevitable that inaccuracies exist, our approach is to enforce geometric continuity in the registered display surface in the projector overlap regions, and to guarantee geometric fidelity of the final imagery illuminated by the projector. In the next two section we present two techniques for accomplish these goals.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.4">Surface Mesh Unification</head><p>The objective is to create a single representation of the display surface from the multiple meshes recovered by different stereo camera pairs. A single unified display surface will not have discontinuities in regions where projectors overlap, reducing geometric mis-registrations. The rigid transformation applied to each of the meshes brings them into near alignment, but discontinuities still exist due to errors in the 3D recovery. Specifically, two distinct but overlapping meshes are brought into approximate alignment in a common coordinate system using the set of corresponding points that overlap between the two and are seen by the stereo camera pair (described in Section 4.1). Stereo pairs Ci and Ci+1 may both see illuminated pixels from projectors Pi and Pi+1, and such corresponding points are used for the alignment. After the rigid transformation to align the two meshes, however, 3D values assigned to the illuminated surface points by Ci and Ci+1 do not agree. Agreement is necessary, and we enforce it through a smooth 3D transition algorithm to obtain display surface continuity.</p><p>Our present technique is similar to methods used to reduce intensity discontinuities in composited images <ref type="bibr" target="#b11">[14]</ref> <ref type="bibr" target="#b15">[18]</ref>. However, instead of weighting pixel intensities, we weight their associated 3D location. As with our intensity blending algorithm, we use a single camera from a camera pair to aid Figure 5: 3D points of the two display surfaces do not agree after registration with a rigid transformation so we use weighted averaging to obtain geometric continuity across the surfaces. (see color plate).</p><p>with the averaging. The algorithm, which we term surface mesh unification, works as follows:</p><p>Let Mi(u, v) be the 3D point associated with projector P 's pixel (u, v) seen by camera pair Ci. The new "weighted" assignment of projector P 's 3D point M (u, v) is evaluated as follows:</p><formula xml:id="formula_5">M (u, v) = j Mj(u, v)dj(u, v) k d k (u, v)<label>(4)</label></formula><p>where j and k are the index of cameras pairs that have viewed this projector pixel. The term di(u, v) is the distance of the observed projected pixel (u, v) of P to the nearest invisible (black) pixel defined in the in camera space Ci.</p><p>Using this weighted averaging technique, we obtain new display surfaces D i that have geometric continuity. Note that while the surface is continuous, it no longer represents the true surface. We denote the modified surface points by M to distinguish them from the true surface points, M. <ref type="figure">Figure 5</ref> shows an overview of the algorithm for a simple case of unifying two meshes. The same technique is used when more than two meshes partially overlap.  Using D i we now recompute the projection matrix for the corresponding projector, as described in sections 3.3 and 4.2. The result is a new projection matrix correspondingly denoted P i . As shown in <ref type="figure" target="#fig_8">Figure 6</ref> this new projection matrix maps the modified 3D surface points M on D i to the projector pixels m that illuminated them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.5">Post-rendering Warp</head><p>It is important to realize that because the transformation from M to M is non-rigid, the projection matrix P i for each projector cannot exactly map the points M to m. Instead, the projection matrix P i maps the point M to the distorted location m . In this case for projectors 1 and 2,</p><formula xml:id="formula_6">m 1 = P 1 M and m 2 = P 2 M .<label>(5)</label></formula><p>What one would really like is the non-linear projective function that directly maps M to m. This function could be determined by some other means, but the result could not be implemented using the single linear projection matrix common in conventional graphics hardware. We achieve this projective function in real time by first using P as the traditional linear projection matrix, and then following this with a 2D post-rendering warp that maps m to m. The 2D warp is based on a dense grid of sampled points from the structured light process.</p><p>The texture-map implementation of this warp loads the image generated with projection matrix P i into texture memory. The post-rendering warping is achieved using multiple textured triangles. This resultant image is projected by the projector. All the warping operations, including 2pass projective texture rendering to create an image and the 2D post-rendering warp, are fixed for given display surfaces, projection matrices and re-projection errors. Hence they are established during pre-processing and loaded in a display list. The cost of this post-rendering warp remains fixed for given display surface and re-projection errors. It is independent of the graphics virtual model being rendered.</p><p>There are two important notes to make. First, it is difficult to compute explicit projector pixel correspondences, such as m1 and m2. The correspondence is implicitly calculated by observing a dense grid of projected pixels. The tessellated display surface geometry is simplified to improve rendering speed during second pass of the two-pass rendering method. We are investigating methods to simplify the number of triangles used during the post-rendering warp. Second, the projection matrices P i that are actually computed for each projector use the 3D surface points from the unified surface mesh D i , which have been unified as described above. The computation of the unified surface mesh and the post-render warp are done only once and can therefore be implemented in real-time; the two techniques are closely linked to one another.</p><p>Mesh unification and the 2D post-rendering warp meet the two desired objectives: neighboring projectors should use exactly the same representation of the display surface geometry, and that the projection matrix for a light projector should map 3D screen points onto the exact 2D pixels that illuminated them during the structured light process. By applying these novel techniques we can guarantee seamless geometric registration between overlapping projected images even when the estimated display surface and projector parameters have large errors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">IMPLEMENTATION</head><p>The system setup includes five 1024×768 resolution SHARP LCD projectors and multiple JVC and Pulnix 640 × 480 resolution camera. The projectors are ceiling mounted approximately three to four meters from the display surfaces. These projectors are casually positioned with multiple overlapping regions to produce a 180 degree field of view when the user is in the display center.</p><p>The calibration of the system (i.e., evaluation of camera and projector parameters and display surface estimation) is done once as a pre-rendering step. This is accomplished using a 0.6 meter cube that we constructed as our physical target pattern and a Dell NT workstation equipped with OpenGL graphics, Matrox Meteor II frame grabbers and Matlab software. The equipment is first used to capture the images of the physical target pattern and calibrate the cameras. Next, the workstation performs the structured-light projection and analysis, controlling one projector and a stereo camera pair at a time. The stereo correspondences acquired by projecting structured light form the dataset needed for projector calibration, display surface reconstruction and unification, post-warp mesh generation, and alphamask generation. The actual processing for these steps is done off-line using Matlab.</p><p>The required sampling density of the structure-light patterns depends on the complexity of the display surfaces and the need to accurately locate the edges of overlapping projectors for alpha-mask generation. For our purposes, we used sampling density of every 8th and every 32nd display pixel. By binary encoding the structure-light, this process can be parallelized and we are able to project and recover 16 × 12 correspondence points simultaneously. The complete operation for display surface recovery and light projector parameter estimation takes approximately 15 minutes per projector at the highest sampling density and less than one minute for the lower sampling density.</p><p>A moving user is tracked using an Origin Instruments' DynaSight(TM) infrared tracker <ref type="bibr" target="#b16">[19]</ref>. The user wears a set of infrared LED beacons provided with the tracker. Tracker readings are acquired, processed (low-pass filtered and transformed into the WCS) by a Dell NT workstation before being dispatched in a network packet to the SGI image generation host.</p><p>The graphics rendering is done on an SGI InfiniteReality2 for each projector using the OpenGL API. While our rendering pipeline has additional computational cost due to the image warping steps, this cost is fixed and is independent of the rendered scene complexity. <ref type="figure" target="#fig_9">Figure 7</ref> shows a portion of our setup with three projectors forming a seamless panoramic image. The accompanying video shows the projection environment and real-time operation on irregular and planar surfaces with a tracked user. In addition, the video demonstrates how a non-expert user can easily and quickly setup and use a two projector, head-tracked display. More images are available at http://www.cs.unc.edu/Research/stc/Seamless/. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">PERFORMANCE FACTOR</head><p>We have presented a general solution for creating a large area display from many projectors where the display surface can be irregular. The methods incorporate the case where a head-tracked user views the display. The techniques for this most general case can be simplified under certain conditions such as when the viewer is static rather than moving, or when the display surface is known to be planar.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Static User</head><p>Display systems with only a single "sweet spot" are commonly used because either the application guarantees that the user will always stay in a single location (i.e., flight simulator) or that many people will view the images simultaneously from or near the correct position, as in domed displays such as the Omnimax <ref type="bibr" target="#b1">[2]</ref>. The relationship between desired image and projected image for each projector, i.e., the viewer-to-display mapping function, needs to be computed only once and subsequently remains fixed for that location.</p><p>This mapping function can be obtained directly by using a camera to represent the viewer at a given location. The camera observes points illuminated by projectors in the display environment, establishing viewer-to-display correspondences. A detailed implementation of this method is described in <ref type="bibr" target="#b17">[20]</ref>. Using this technique, the rendering process has two stages; (1) compute the desired image and load it into texture memory, and (2) warp the texture via the viewer-to-display mapping to produce the correct imagery. Intensity blending of overlapping projectors is handled as in Section 4.3. This special case avoids explicitly solving for 3D parameters or the additional cost of the third-pass postrendering warp, but limits the user to one position in the display environment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Planar Surfaces</head><p>Surround screen displays can be easily created with multiple planar walls with a single projector illuminating a single planar surface. Examples of such systems include the CAVE <ref type="bibr" target="#b0">[1,</ref><ref type="bibr">9]</ref> and Trimension's Reality Room <ref type="bibr" target="#b3">[4]</ref>. The latter uses cylindrical screens, but the section of the screen illuminated by each projector is approximated by a plane.</p><p>In case of irregular surfaces, the warping function needed in order to produce correct imagery must be expressed using a per-pixel mapping. In practice, this is accomplished with the two-pass algorithm outlined in this paper. When every projector illuminates a planar surface, a single-pass rendering algorithm can achieve the same geometrically registered result at less computational expense. Specifically, the planar constraint allows a single projector's imagery to be expressed as a collineation with the planar surface, which is a 3 × 3 matrix that is updated as the user moves. Neighboring projectors are also related by a 3 × 3 collineation. The special planar geometry allows for a rendering method that does not incur additional computational costs while staying geometrically registered <ref type="bibr" target="#b18">[21]</ref>. The video shows results for five projectors rendering onto two planar walls.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">FUTURE WORK</head><p>Although we have addressed how to remove many of the geometric constraints involved in panoramic display systems, this is only a basic framework. There are several important issues that we have not fully addressed in this work that require further research:</p><p>• arbitrarily large numbers of projectors • automatic system calibration without the need for a physical calibration pattern or human intervention • error sensitivity analysis and the quantifiable impact on rendering accuracy</p><p>• detailed projector colormetrics and methods for improving photometric seamlessness • viewer-dependent photometrics including the issues of user location, surface orientation and intensity distribution, and surface inter-reflections • synchronization of rendering pipelines.</p><p>One can also extend our methods to display imagery for multiple tracked users or to display stereo imagery by rendering for both eyes. In stereo displays, traditionally, left and right eye images are projected by the same projector. Using the geometric registration techniques, we can even use two different sets of projectors (with different polarization, for example) to render for left and right eye.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION</head><p>In this paper we have presented techniques for building a scalable panoramic display device from multiple, casuallypositioned light projectors. We maintain geometric registration of the overall panoramic display; employing cameras for recovering display surface and light projector geometries rather than imposing geometric constraints into the overall display setting. This integration of cameras into the initialization phase of the system and the techniques for maintaining registration in the face of errors leads to our primary contributions:</p><p>• Geometric registration and seamless imagery is produced over a wide range of geometric configurations</p><p>• Generalized display configurations including support for irregular display surfaces and a head-tracked, moving viewer</p><p>• Rendering efficiencies in special cases such as for a static user or planar display surfaces</p><p>• Post-rendering warp and 3D surface unification together compensate for inaccuracies in the extracted geometric representation</p><p>• Self-configurable display and projector geometries are enabled so that future systems can automate calibration and registration.</p><p>Based on these new techniques, we believe we have built and and demonstrated the very first panoramic display system using irregular surfaces for a moving user. Even though there is much work yet to be done, this "proof-of-concept" system previews future possibilities for high-resolution, wide field-of-view displays that are easy to set-up, use and maintain.  <ref type="figure" target="#fig_8">Figure 6</ref>: 3D points of the two display surfaces do not agree after registration with a rigid transformation so we use weighted averaging to obtain geometric continuity across the surfaces. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>(a) Our display techniques allow for an arbitrary configuration of projectors and displays. (b) Example of arbitrary projector overlaps before calibration. (c) Viewer in the final display environment. (see color plate)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Examples of panoramic image display environments</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Configuration for single projector.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>) and i is the index of the projectors observed by the camera (including projector m).In the above equation, wi(m, u, v) = 1 if the camera's observed pixel of projector Pm's pixel (u, v) is inside the convex hull Hi; otherwise wi(m, u, v) = 0. The term di(m, u, v) is the distance of the camera's observed pixel of projector Pm's pixel (u, v) to the nearest edge of Hi.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>The top image shows the overlap position of three projectors. The bottom images show the alpha masks created for projectors 1, 2, and 3 using our algorithm.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 :</head><label>6</label><figDesc>(a) Error in display surface estimation and projection matrix P1 creates mis-registration. (b) Partial correction using a post-rendering warp.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 7 :</head><label>7</label><figDesc>The top set of images show the individual contribution of three projectors. The bottom two images show the projectors without and with alpha-blending. (see color plate)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 1 :</head><label>1</label><figDesc>(b) Example of arbitrary projector overlaps before calibration. (c) Viewer in the final display environment.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 7 :</head><label>7</label><figDesc>The top set of images show the individual contribution of three projectors. The bottom two images show the projectors without and with alpha-blending.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="10">ACKNOWLEDGMENTS</head><p>This research is supported by the National Science Foundation agreement ASC-8920219: "Science and Technology Center for Computer Graphics and Scientific Visualization", Link Foundation, Intel Corporation, and the "National Tele-Immersion Initiative" sponsored by Advanced Networks &amp; Services, Inc.</p><p>We would like to thank Gopi Meenakshisundaram, Aditi Majumder and David Marshburn for useful discussions and support. We also gratefully acknowledge John Thomas, Jim Mahaney and David Harrison in the design and assembly of our test environment, and Todd Gaul for video editing support. A special thanks is also due Su Wen and 10-year old Sam Fuchs for their participation in the video.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Surround-screen Projection-based Virtual Reality: The Design and Implementation of the CAVE</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Cruz-Neira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Sandin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Defanti</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">SIGGRAPH 84 call for Omnimax films</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Max</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="208" to="214" />
			<date type="published" when="1982-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Real Time 60Hz Distortion Correction on a Silicon Graphics IG</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Jarvis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Real Time Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page" from="6" to="7" />
			<date type="published" when="1997-02" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<ptr target="http://www.trimension-inc.com/" />
	</analytic>
	<monogr>
		<title level="j">Trimension Systems Ltd</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Alternate Realities Corporation, Durham, NC 27703</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bennett</surname></persName>
		</author>
		<ptr target="http://www.virtual-reality.com/" />
		<imprint>
			<date type="published" when="1999-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">The Office of the Future: A Unified Approach to Image-Based Modeling and Spatially Immersive Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cutts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lake</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Stesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 98 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1998-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficient Image Generation for Multiprojector and Multisurface Displays</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Cutts</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stürzlinger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Ninth Eurographics Workshop on Rendering</title>
		<meeting>the Ninth Eurographics Workshop on Rendering<address><addrLine>Vienna, Austria</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Quicktime VR -An Image-Based Approach to Virtual Environment Navigation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Chen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 95 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="29" to="38" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Plenoptic Modeling: An Image-Based Rendering System</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Mcmillan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Bishop</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 95 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="39" to="46" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Video Mosaics for Virtual Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="22" to="30" />
			<date type="published" when="1996-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">True Multi-Image Alignment and its Applications to Mosaicing and Lens Distortion Correction</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Sawhney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Kumar</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Comp. Soc. Conference on Computer Vision and Pattern Recognition (CVPR&apos;97</title>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A Multiresolution Spline with Applications to Image Mosaic</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Burt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Adelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. on Graphics</title>
		<imprint>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="217" to="236" />
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Three-Dimensional Computer Vision: A Geometric Viewpoint</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Faugeras</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge, Massachusetts</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Fast Shadows and Lighting Effects using Texture Mapping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Segal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Korobkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Widenfelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foran</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Haeberli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 92 Conference Proceedings</title>
		<imprint>
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Haralick</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Shapiro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer and Robot Vision</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<date type="published" when="1993" />
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Panoramic Image Mosaics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Shum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Szeliski</surname></persName>
		</author>
		<idno>MSR-TR-97-23</idno>
		<imprint>
			<date type="published" when="1997" />
			<pubPlace>Microsoft Research</pubPlace>
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep.</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<ptr target="http://www.orin.com/" />
	</analytic>
	<monogr>
		<title level="j">Origin Instruments Corporation</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Seamless Projection Overlaps Using Image Warping and Intensity Blending</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Welch</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Fuchs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Fourth International Conference on Virtual Systems and Multimedia</title>
		<meeting><address><addrLine>Gifu, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1998-11" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Olique Projector Rendering on Planar Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<ptr target="http://www.cs.unc.edu/Research/stc/Oblique" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
