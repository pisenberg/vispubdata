<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PLIC: Bridging the Gap Between Streamlines and LIC</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Vivek</forename><surname>Verma</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<address>
									<country>UCSC</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Kao</surname></persName>
							<email>davidkao@nas.nasa.gov</email>
							<affiliation key="aff1">
								<orgName type="institution">NASA Ames Research Center</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
							<email>pang@cse.ucsc.edu</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department</orgName>
								<address>
									<country>UCSC</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PLIC: Bridging the Gap Between Streamlines and LIC</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>unsteady flow</term>
					<term>variable speed animation</term>
					<term>jitter</term>
					<term>texture mapping</term>
					<term>comparative visualization</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper explores mapping strategies for generating LIC-like images from streamlines and streamline-like images from LIC. The main contribution of this paper is a technique which we call pseudo-LIC or PLIC. By adjusting a small set of key parameters, PLIC can generate flow visualizations that span the spectrum of streamlinelike to LIC-like images. Among the advantages of PLIC are: image quality comparable with LIC, performance speedup over LIC, use of a template texture that is independent of the size of the flow field, handles the problem of multiple streamlines occupying the same pixel in image space, reduced aliasing, applicability to time varying data sets, and variable speed animation.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Both streamlines and the line integral convolution (LIC) methods have advantages and disadvantages. Streamlines are generated by advecting a massless particle from an initial seed location and tracking its path using polylines. They are straightforward and relatively cheap to compute, are naturally extended to 3D, and provide a continuous, coherent image of the flow pattern. However, the flow patterns are also notoriously dependent on the seed placement, need to be computed in physical space, and not directly extendible to time varying data sets -streaklines, being the more appropriate method there. LIC images are generated by coloring each pixel according to the convolution of an input noise texture with a one dimensional filter kernel along a streamline passing through that pixel. They are also relatively straightforward to compute, can be done in computational space, and give a dense view of the flow without cluttering the display. On the other hand, they are more expensive than streamlines, difficult to extend to 3D, and may suffer from graininess or poor contrast.</p><p>One of the goals we hope to achieve is to take advantage of the strengths of both techniques. Our approach towards this end is to provide users with enough flexibility to select a flow visualization parameterization within the spectrum spanning streamlines and LIC. Specifically, we would like to identify the visualization parameters for streamlines and for LIC, understand how these affect the resulting visualization, and find a common or corresponding set of parameters to simulate one method with the other.</p><p>The next section provides some relevant background material that highlights some of the issues of streamlines and LIC. We then present one possible mapping of one flow visualization method with another. This is followed by a formalization of the PLIC method and discussion of issues such as seed placement, performance, extension to time varying data sets, variable speed animation, and limitations. We conclude with some additional ideas for future work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>Streamlines give a global view of the flow features. However, the presentation suffers from visual artifacts that result from seed placement. To address this problem, image-guided strategies were proposed to give a more uniformly distributed set of streamlines <ref type="bibr" target="#b19">[20]</ref>, and was subsequently improved to converge faster <ref type="bibr" target="#b10">[11]</ref>. In addition, there have also been previous efforts in animating steady flows using color table animation <ref type="bibr" target="#b6">[7]</ref> and cyclical set of textures <ref type="bibr" target="#b9">[10]</ref>.</p><p>In 1993, Cabral and Leedom <ref type="bibr" target="#b0">[1]</ref> introduced a new method for visualizing 2D vector fields called line integral convolution or LIC. Since then, a number of papers have appeared that expanded the scope and usefulness as well as improved and refined the original work. The list includes animation of steady flows <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b4">5]</ref> and unsteady flows <ref type="bibr" target="#b16">[17,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b5">6]</ref>, use of color to show flow properties <ref type="bibr" target="#b14">[15]</ref>, extension to curvilinear grids <ref type="bibr" target="#b4">[5]</ref>, improvements to LIC appearance <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b11">12]</ref>, improvement in speed <ref type="bibr" target="#b18">[19]</ref>, and extensions to 3D <ref type="bibr" target="#b8">[9]</ref>.</p><p>In general terms, the visual appearance of PLIC is very similar to those of LIC images, spot noise <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b2">3]</ref>, and textured streamlines <ref type="bibr" target="#b9">[10]</ref>. We now describe our approach and how it differs from previous work.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">MAPPING STRATEGIES</head><p>Our general strategy is to identify and understand how the different parameters for streamlines and LIC affect the resulting visualization. As a first attempt to understand the differences between the two techniques and have the ability to compare them, we explored ways to generate images that looked like streamlines using the basic LIC algorithm. The next step was to use the streamline method to generate images that look like LIC. We manipulated the parameters of both methods to get a better understanding of the techniques.</p><p>The parameter list for the two different methods are as expected. For streamlines, they are seeding density and/or strategy, integration method and associated parameters, whether backward integration is done or not, and thickness of streamlines. For LIC, they are properties of the input texture, type of filter used for convolution, how particle advection is done, integration method and associated parameters. We experiment with some of these parameters below.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">LIC to Streamlines</head><p>One of the important steps in the LIC algorithm is to generate streamlines before convolving them with the input texture. We experimented with several input textures. We wanted to study the effect of using patterns other than random noise. <ref type="figure" target="#fig_0">Figure 1</ref> shows some input patterns we experimented with and the corresponding LIC images of the bluntfin dataset. Our experiments demonstrated that the reason why LIC works so well is because of the lack of correlation in the input texture. Any correlation in the input texture would get strengthened in ways dependent on the flow field, and show up in the output image as artifacts. We observed that the LIC algorithm smears the input texture in the direction of the flow. This behavior is much similar to the physical experiments conducted to study the fluid flow by injecting a colored dye in the fluid <ref type="bibr" target="#b14">[15]</ref> (or particles: see album of fluid flow <ref type="bibr" target="#b3">[4]</ref>). Such a process can be simulated by using the LIC algorithm in the following way:  Input texture (only one pixel is turned on). Right: Result of repeatedly applying LIC to the input texture with only one pixel turned on. The "seed" pixel has been enlarged to make it visible in this illustration.</p><p>Although the above technique can be used to generate streamlines, it is highly inefficient. The purpose of the technique is not to generate streamlines using LIC but to aid in understanding the gap between streamlines and LIC. For example, the strategy outlined above basically produces thick streamlines. This can be used to demarcate regions of diverging flows that might be difficult to achieve using normal streamlines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Streamlines to LIC</head><p>One of the goals was to provide a slider that can be adjusted to generate pictures that look like streamlines at one extreme and LIC at the other extreme. We have found that there are multiple parameters that need to be manipulated. We explore some of these parameters below.</p><p>In order to understand the coherence of texture generated by LIC, we generated two images: one using streamlines and the other using LIC. These images were of the same dimensions. We used the streamlines image as a mask on the LIC image to generate the image in <ref type="figure" target="#fig_3">Figure 3</ref> From <ref type="figure" target="#fig_3">Figure 3</ref>(c) we can see that each streamline appears to be texture mapped. The texture appears to be the result of applying LIC to a one dimensional noise image and a unidirectional flow field. This experiment suggested that it is not necessary to do the expensive convolution in LIC. One can simply generate streamlines and texture map them so that the result looks like LIC. In fact, this approach is also taken by <ref type="bibr" target="#b9">[10]</ref> where they apply cyclical textures on their streamlines. The main difference between our approach and that taken by <ref type="bibr" target="#b9">[10]</ref> is the properties of the textures that we use and how we apply them. We saw earlier that the white noise used in the input texture plays an important role in the sense that due to its random nature, there are no leftover patterns or artifacts in the LIC image. Likewise, we would expect artifacts to appear in the resulting image if we use the same one dimensional texture for all the streamlines. Hence we decided to use a different one dimensional texture for each streamline. A collection of one dimensional textures, that are different from each other, can be easily generated using LIC itself. Such a collection of one dimensional textures was generated by applying enhanced LIC <ref type="bibr" target="#b13">[14]</ref> to a two dimensional flow field. The flow field and the resulting texture can be seen in <ref type="figure">Figure 4</ref>. Each column of the LIC image in <ref type="figure">Figure 4</ref> is a one dimensional texture and is different from all the other columns. Each column can be used to texture map a different streamline. We refer to the enhanced LIC image of a constant flow field as the template texture. Note that we need to generate a template texture image only once, because the same template texture can be used for any flow field. Also note that unlike LIC, the template texture is not required to have the same dimensions as the flow field. To generate an image like <ref type="figure" target="#fig_3">Figure 3</ref>(c) we can generate streamlines and for each streamline, we can choose a column randomly from the template texture. This column is the one-dimensional texture used to texture map the given streamline.</p><p>The result of texture mapping streamlines can be seen in <ref type="figure">Figure  5</ref>(b). It looks very similar to <ref type="figure">Figure 5</ref>(a) which was generated using the intersection of a LIC image and a streamline image.</p><p>One of the disadvantages of streamlines is that more than one streamlines could intersect the same pixel in the image space, as can be seen in <ref type="figure" target="#fig_5">Figure 6</ref>. If we simply turn a pixel on if a streamline intersects it, and off if no streamlines intersect it, then we can get pictures in which individual streamlines cannot be distinguished from each other. To solve this problem, we maintain a count for each pixel that keeps track of the total number of streamlines that intersect it. During texture mapping of a streamline, for each pixel, we accumulate the contribution of the texture from all the streamlines that intersect that pixel. As a final step, we normalize the value of each pixel by dividing the accumulated texture values by the total number of streamlines that intersect that pixel. This process is similar to scattering in UFLIC <ref type="bibr" target="#b16">[17]</ref> and can possibly be sped up by texture hardware <ref type="bibr" target="#b7">[8]</ref>. The result can be seen in <ref type="figure" target="#fig_6">Figure 7</ref>, where we compare PLIC with enhanced LIC and the basic LIC methods. The PLIC images in <ref type="figure" target="#fig_6">Figure 7</ref> look remarkably similar to the basic LIC method. Each pixel in the images in <ref type="figure" target="#fig_6">Figure 7</ref> corresponds to a cell in the computational space. These images were generated by seeding each cell in the computational space. We found that if we seed each cell then the pseudo-LIC (PLIC) method is only slightly faster than LIC. This is so because LIC spends most of its time in streamline computation. The convolution is done using precalculated function tables and the major cost in the convolution step 000 000 111 111 000 000 111 111 00 00 11 11 00 00 11 11 00 00 11 11 00 00 11 11 00 00 11 11 000 000 111 111 00 00 <ref type="bibr" target="#b10">11</ref>   is the normalization by the kernel area. The equivalent of this cost in PLIC is the normalization of each pixel by the total number of streamlines that intersect it. PLIC can be made more efficient by having a sparser seed distribution to generate streamlines. The streamlines can be drawn thicker accordingly. <ref type="figure">Figure 8</ref> shows that when the streamlines are drawn like "ribbons" then more than one column from the template texture can be used to texture map them. It is important that the columns chosen are adjacent to each other in the template texture image so that the PLIC image has good spatial coherence. The thickness of a streamline is specified in pixels. If a streamline is n pixels wide and the texture chosen from the template image has column number k, then n streamlines are drawn parallel to each other such that the starting points of the streamlines are adjacent to each other and in a straight line. The columns chosen to texture map these n streamlines are k , n 2 , k , n 2 + 1 ; :::, k, k + 1 , :::; k + n 2 , 1. Hence, a subimage of the template texture is used to texture map the thick streamline (see <ref type="figure" target="#fig_7">Figure 9</ref>). Also note that the central streamline is traced once and is stored so that it can be replicated n , 1 times. n 2 copies of this streamline are placed adjacent to each other on one side and n 2 , 1 copies are placed on the other side. It should also be noted that drawing thick streamlines using the algorithm described above does not always produce streamlines that are parallel to each other. Nonetheless, we found the method to be satisfactory. An accurate computation and texture mapping would be considerably costlier.</p><p>The thickness n of streamlines is usually chosen proportional to the sparseness of the seed placement. The further apart the seeds for streamlines are, the larger n can be. We specify the distance between adjacent seeds using a parameter called stride. In simple terms the parameter stride determines how far apart the seeds are placed along each row and column of the grid. Varying these two parameters also allows us to create variably spaced flow images where some regions are LIC-like (where the flow merges together) and more streamline-like (where the flow either diverges or are parallel to each other). Following is the pseudo-code for PLIC: The images in the top row were generated using enhanced LIC, the images in the middle row were generated using the basic LIC, and those on the bottom were generated using PLIC. Left: sink. Middle: saddle. Right: dynvort. All three methods used an integration length of 10. The template texture for PLIC also used an integration length of 10, every cell was seeded, and streamline thickness was 1.</p><p>= + <ref type="figure">Figure 8</ref>: Texture mapping thick streamlines. 00 00 00 00 00 00 00 00 00 00 00 00 00 00 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">PLIC FEATURES AND ISSUES</head><p>The previous section outlined the basic idea of PLIC -generating LIC-like images by texture mapping streamlines. We now focus on some of the parameters associated with this approach.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Effect of Template Texture on PLIC</head><p>The template texture in <ref type="figure">Figure 4</ref> was generated using enhanced LIC with 10 integration steps per streamline. It should be noted that using longer integration steps makes the LIC images smoother. <ref type="figure" target="#fig_0">Figure  10</ref> shows two template textures and the corresponding PLIC images. The templates were generated with integration lengths of 10 and 30. The streamlines themselves were generated using 15 integration steps. It is clear from the images in <ref type="figure" target="#fig_0">Figure 10</ref> that a template with longer integration length helps in producing a smoother PLIC image. It is also noteworthy that using a longer integration step template does not increase the computation time of the PLIC image. Hence one can simulate the effect of using large number of integration steps in LIC by simply choosing a template which was generated using appropriately large number of integration steps. For LIC the computation cost increases by a factor of four when the number of integrations are doubled <ref type="bibr" target="#b13">[14]</ref>. For PLIC however, there is no increase in computation cost when a template with larger integration steps is used, hence PLIC has a clear advantage over LIC. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Seed Density and Thick Streamlines</head><p>Seed placement is very important for the visualizations generated using streamlines. Most flow data is represented on a grid and the grid points are a natural choice to place the seeds to generate streamlines. Unfortunately a simple strategy like this gives poor results because if the seeds are placed regularly on a grid then the underlying grid patterns are visible in the output image as artifacts (see <ref type="figure" target="#fig_3">Figure 3</ref>(b)). These artifacts serve not only to distract the user of the visualization, they can often lead to mis-interpretation of the flow field.</p><p>Since PLIC relies heavily on drawing texture mapped streamlines, we also encountered the problem of finding a good seed placement strategy. The PLIC images in <ref type="figure" target="#fig_0">Figure 10</ref> were generated by placing seeds on the grid points such that every third grid point was seeded (stride of 3). Since we also draw streamlines thicker (3 pixels wide in <ref type="figure" target="#fig_0">Figure 10)</ref>, and integrate both forward and backwards, the streamlines overlap and leave no area uncovered. Although it is not guaranteed that the whole image will be covered, we have found that in practice this strategy gives satisfactory results. Also, we are using a stochastic texture to texture map the streamlines, hence the underlying grid does not appear as artifacts in the resulting images. We believe it is not necessary that the streamlines should cover the whole area of the image in order to generate a good visualization of the flow. A reasonable combination of stride and thickness values help preserve the PLIC image quality. For example, there is no noticeable degradation in image quality between the bottom left image in <ref type="figure" target="#fig_0">Figure 10</ref> which uses a stride and thickness of 3, with the bottom right image in <ref type="figure" target="#fig_6">Figure 7</ref> which uses a stride and thickness of 1. Both of these images use the same template texture.</p><p>Using PLIC we can generate images with sparse streamlines.</p><p>Such images can be seen in <ref type="figure" target="#fig_0">Figure 11</ref>. It should be noted that these images in no way conveys less information than the corresponding LIC image or the PLIC image where no area of the image was left uncovered. Seed placement strategy becomes important when we decide to draw sparse streamlines. We would like to use the important features in a flow to guide the placement of streamlines so that in regions of importance the image resembles a LIC image, and in regions where the flow is not interesting the images looks like streamlines. Thus we would be able to combine the advantages of both LIC and streamlines in a single image. We are currently investigating a seed placement strategy based on the critical points of a flow field. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Reducing Aliasing</head><p>We have noticed that when the streamlines are seeded sparsely by sub-sampling the regular grid and drawn thin such that the streamlines do not fully cover the entire area of the image, the underlying grid patterns are visible in the output image. The aliasing effect can be reduced substantially by using a better seed placement strategy.</p><p>Since the artifacts are a result of a regular seed placement pattern, if the seeds are distributed randomly, then the underlying seed placement pattern will not be visible in the resulting image. Cook's paper on stochastic sampling <ref type="bibr" target="#b1">[2]</ref> describes the Poisson disk distribution.</p><p>We have implementation a variation of Poisson disk distribution using jittering as described by Cook. In our implementation, the size of the "disk" is adjustable but is usually set to be equal to or less than the stride value. For example, if we are skipping every third grid point (i.e. generate 1 out of 16 possible streamlines), we typically set the jitter parameter such that the seed lies somewhere in the 7 7 window around the current grid point. While jittering helps to reduce the artifacts as described above for static images (see <ref type="figure" target="#fig_0">Figure 12)</ref>, remnants of the artifacts are still visible in animations of time-varying data (see accompanying video). Another way to reduce the artifacts from the underlying grid is to jitter the length of the streamlines. By jittering the length of the streamlines, we mean that for each streamline the length of the streamline has a Poisson disk distribution. Note that we integrate both in the forward and backward directions to generate our streamlines. Hence, when the length of the streamlines are jittered, the seed pattern is not visible in the output image. Our experiments indicate that the effect of jittering the seed locations is equivalent to the effect of jittering the length of the streamlines. It is sufficient to do only one type of jittering. <ref type="figure" target="#fig_0">Figure 12</ref> compares the two types of jittering schemes described above. The streamlines in <ref type="figure" target="#fig_0">Figure 12</ref> have a thickness of one and were seeded with a stride of five.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.4">Unsteady Flow</head><p>So far we have described how to generate LIC like images for steady flow. We now describe how PLIC can also be used to animate steady and unsteady flows. Animation of steady and unsteady flows is typically achieved in LIC by using periodic filter kernels <ref type="bibr" target="#b4">[5]</ref> and colormap cycling <ref type="bibr" target="#b9">[10]</ref>. PLIC can also be used to generate animations for steady and unsteady flows. In section 3.2 we described the one dimensional textures used to texture map the streamlines. These one dimensional textures are columns of the template texture image. We choose the template texture image such that its height is larger than length of the streamlines. To animate the flow along a given streamline we cycle through its one dimensional texture to simulate the advection of texture along the streamline. We have included the results of our animation in the accompanying video. The video compares PLIC animation with instantaneous streamlines for unsteady flow using enhanced LIC <ref type="bibr" target="#b13">[14]</ref>, and UFLIC <ref type="bibr" target="#b15">[16]</ref>. Color Plates 2 and 3 show one time-step from the unsteady datasets dynvort and delta respectively. These images compare PLIC with UFLIC and Enhanced-LIC, and are pseudo-colored by the velocity magnitude. It should be noted that although we have used instantaneous streamlines for our current implementation, PLIC can be easily extended for streaklines and pathlines for a more accurate representation of the flow. PLIC maintains good spatial and temporal coherence. Using periodic filter kernels for pathlines, it is difficult to establish temporal coherence unless the flow is relatively steady <ref type="bibr" target="#b15">[16]</ref>. In Cohen and Forsell's method <ref type="bibr" target="#b5">[6]</ref>, the pathlines from the same seed vary over time. Hence, the same filter with shifted phases is applied over different convolution paths. Since, phaseshift method is effective in creating artificial motion only when the convolution is applied to the same path over time, temporal coherence becomes obscure for unsteady flows. Our method does not suffer from the problem of using periodic filter kernels applied to pathlines because the texture is fixed for each pathline and would follow it from frame to frame. Furthermore, PLIC does not require additional processing like UFLIC <ref type="bibr" target="#b16">[17]</ref> to remove the potential problem of textures getting coarser over time. When we jitter the seed locations we ensure that the seed positions do not change over the duration of the animation. Generating new seed locations for each frame is not desirable in order to maintain temporal coherence.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.5">Variable Speed Animation</head><p>It is desirable that the animation should have faster motion where the flow has high velocity and slow where the flow has low velocity. Cabral and Leedom <ref type="bibr" target="#b0">[1]</ref> achieve this effect by varying the frequency of the filter function. Forssell and Cohen <ref type="bibr" target="#b5">[6]</ref> vary the rate of the filter function phase shift in proportion to the vector magnitude. We can achieve variable speed animation by determining the rate of cycling through the one-dimensional texture in proportion to the velocity magnitude at the seed location for each streamline. In addition, since the template texture is independent of the flow field dimensions, we can increase the dynamic range of the speeds by increasing the number of rows in the template texture. Finally, the relative speeds of different flow regions can either be exaggerated or played down by appropriately mapping velocity magnitude to the speed used for cycling through the texture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.6">Computation Time for PLIC</head><p>In this section we compare the running times of the basic LIC algorithm with PLIC. For LIC we used an integration length of 10. For PLIC, we chose an integration length of 15 with the seeds placed using a stride of 3 and the streamlines drawn 3 pixels wide. A side by side comparison (see <ref type="figure" target="#fig_0">Figures 10 and 7</ref>) reveals that using PLIC, with the parameters as described above, the images are better in contrast and the flow lines are more distinct. Color Plate 1 compares the PLIC image of bluntfin dataset with LIC. Experiments were done on an SGI Onyx-2 Infinite Reality Box with 3,072 Mbytes of main memory using one 195 MHz IP27 processor. <ref type="table">Table 1</ref> shows that PLIC reduces the cost about 45% over the basic LIC method and 71% over enhanced LIC. We have also compared the computation time for PLIC with UFLIC and found that PLIC is about two orders of magnitude faster than UFLIC. It is notewor-thy that these savings are greatly increased when sparser seeding is used to generate the streamlines for PLIC. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.7">More Differences</head><p>One advantage of LIC that is currently missing in PLIC is that one can have multiple passes of LIC to make the flow lines more welldefined. Enhanced LIC uses two passes of LIC to remove noise, and then applies high pass filter to enhance edges, and finally does histogram equalization to increase image contrast. Our experiments with PLIC have revealed that although the PLIC images are better in contrast and have well defined flow lines than LIC, they still have less contrast than enhanced LIC. We are currently investigating ways to make the PLIC images to have better contrast and better defined flow lines. For example, instead of using an image processing approach like enhanced LIC, PLIC can improve its image contrast by adjusting the template texture, integration length, and stride (sub-sampling rate). In addition, one can always use PLIC instead of LIC as the first pass of enhanced LIC to reduce the computational cost of enhanced LIC. Another difference is that LIC can accept a color image as its input texture and apply LIC on it. On the other hand, the texture template in PLIC is used purely as a bank of one dimensional textures.</p><p>While both PLIC and the motion map approach presented by Jobard and Lefer <ref type="bibr" target="#b9">[10]</ref> texture map streamlines, the intent and range of features vary significantly. Our intent is to use streamlines to mimic or simulate the appearance of a LIC image so that we can better understand the parameterization of streamlines and LIC. Ultimately we would like to do a systematic comparison of these two methods. Note that the streamline-to-LIC mapping that is presented in this paper is but one possible mapping. The intent of the motion map approach is to produce the appearance of motion in steady state flow data much like the phase-shift <ref type="bibr" target="#b4">[5]</ref> of the filter kernel to achieve a similar objective. The texture used by PLIC is significantly different than the functional cyclic texture used by the motion map approach. PLIC uses a pre-calculated texture template that is essentially treated as a bank of one dimensional textures randomly selected and mapped to streamlines. Finally, the PLIC approach allows us to visualize time varying datasets using instantaneous streamlines, but which are very similar to UFLIC <ref type="bibr" target="#b16">[17]</ref> in appearance. In addition, PLIC can generate variable speed animations with options for adjusting the relative speeds as well as capturing a wide dynamic range of speeds.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">FUTURE WORK</head><p>There are a number of obvious extensions to this work. For example, taking advantage of graphics hardware for compositing textures as pointed out in <ref type="bibr" target="#b7">[8]</ref>, extending the technique to 3D flow fields, and investigating physically based seed placement strategies.</p><p>We have observed that using thicker streamlines does not reduce the image quality and in fact improves the image quality when other parameters like stride and jitter are chosen appropriately. We would like to develop a better understanding of the relationships between the various parameters of PLIC.</p><p>The initial and main motivation for this work, however, is in comparison of flow features. In <ref type="bibr" target="#b12">[13]</ref> and more recent work, techniques were developed to compare streamlines with streamlines and ribbons with ribbons. These comparison techniques were also included in a flow visualization system <ref type="bibr" target="#b17">[18]</ref>. What is lacking is the ability to compare different flow data representations, such as comparison between streamlines and LIC. Hence, this work attempts to bridge the gap between streamlines and LIC by producing flow visualizations that vary continuously from being streamline-like to LIC-like in appearance. Ultimately, we hope to get a better idea on how to compare the flow features in visualizations generated using streamlines and LIC.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">CONCLUSIONS</head><p>We have presented a flow visualization method that can be smoothly adjusted to generate LIC-like images at one extreme and streamline-like images at the other. In between, it is also possible to generate images that have properties of both LIC and streamlines. This method also has several advantages over LIC in terms of computation time, image quality, and ease of handling time varying data sets. We see this work as a stepping stone towards being able to systematically compare streamlines and LIC. There are also a number of avenues that we are exploring beyond this initial work: extension of PLIC to 3D; investigate other LIC-to-streamline and streamline-to-LIC mappings; flow guided seed placement strategy; use more accurate pathlines instead of instantaneous streamlines to visualize unsteady flow data; and a comprehensive comparison of flow visualization techniques.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Input texture patterns (top row) and their corresponding LIC images (bottom row) using the bluntfin dataset. Note that aliasing artifacts and the bands of brighter regions move around as the input texture is changed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(x,y) = seed point for streamline; // set the seed point in the input texture set InputImage = 0; set InputImage(x,y) = 255; // generate "streamline" repeat OutputImage = LIC(InputImage); If a pixel in OutputImage != 0 make it 255; InputImage = OutputImage; until (satisfied);The result of applying 40 iterations to the repeat loop can be seen inFigure 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Left: Enhanced LIC image of the spiral dataset. Middle:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>(a) Image generated using enhanced LIC. (b) Streamlines. (c) Intersection of the two images.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Left: A constant flow field. Right: The corresponding enhanced LIC image (template texture). Left: Intersection of LIC and streamlines, reproduced from Figure 3(c). Right: Texture mapped streamlines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Left: Streamlines intersecting pixels in the image space. Right: The corresponding pixels have been turned on. Individual streamlines cannot be distinguished.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>stride in the x direction; stride y = stride in the y direction; n = width of streamlines; (max x, max y) = grid dimensions; for(i=0; i &lt; max x; i += stride x) for(j=0; j &lt; max y; j += stride y) f // jitter current seed point // position (x, y) = jitter position(i, j); s = streamline(x, y); c = random column of template texture; // texture map subimage of // template texture to the // thick streamline DrawThickStreamline(x, y, s, c, n); g Divide each pixel by the number of streamlines that intersect it; g</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 9 :</head><label>9</label><figDesc>Subimage of the template texture is texture mapped to a thick streamline.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 10 :</head><label>10</label><figDesc>Effect of template texture on PLIC. Top row shows the template texture images with different integration lengths and the bottom rows shows the corresponding PLIC images. The template texture used an integration length of 10 on the left and 30 on the right. Both PLIC images were generated using a stride of 3, streamline integration length of 15, and streamline thickness of 3. Note that it is not necessary for the template textures to have the same dimensions as the flow data.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 :</head><label>11</label><figDesc>Bluntfin dataset in computational space. From top to bottom: (1) Enhanced LIC; Varying seeding density, integration lengths, and streamline thickness illustrate the range of images produced by PLIC. (2) Enhanced PLIC (extra post-processing histogram equalization pass); (3) PLIC showing properties of both streamlines and LIC in the same image; and (4) PLIC that looks more like streamlines.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 12 :</head><label>12</label><figDesc>Left: Aliasing in the form of light and dark bands emanating from the three vortices are visible when streamlines are seeded at regular grid positions. Aliasing artifacts become more pronounced when animated as shown in the accompanying video. Middle: Antialiasing by jittering the seed locations of the streamlines; Right: Anti-aliasing by jittering the lengths of the streamlines. Either method reduces the aliasing artifacts in still images and in animations. Jittering the seed locations and length of streamlines produce the same effect and combining the two does not seem to provide additional benefit.</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>We would like to thank Neal Chaderjian for the Delta wing dataset, Ravi Samtaney for the dynamic vortices dataset, David Kenwright and Han-Wei Shen for doing a "blind test" comparison between LIC and PLIC. We would also like to thank the members of the Advanced Visualization and Interactive Systems laboratory at UC, Santa Cruz for their feedback and suggestions. We would like to extend our appreciation for the time and effort of the anonymous reviewers. Their constructive criticisms hopefully made this paper more enjoyable to read. This project is supported by NASA grant NCC2-5281, LLNL Agreement No. B347879 under DOE Contract No. W-7405-ENG-48, DARPA grant N66001-97-8900, NSF grant IRI-9423881, and ONR grant N00014-96-1-0949.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Imaging vector fields using line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Leedom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Siggraph Proceedings</title>
		<imprint>
			<biblScope unit="page" from="263" to="270" />
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Stochastic sampling in computer graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">L</forename><surname>Cook</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="1986-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Comparing LIC and spot noise</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leeuw</forename><surname>Wim De</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><surname>Van Liere</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 98</title>
		<meeting>Visualization 98</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="359" to="365" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">An Album of Fluid Motion</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Milton</forename><surname>Van Dyke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1982" />
			<publisher>The Parabolic Press</publisher>
			<pubPlace>Stanford, California</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Visualizing flow over curvilinear grid surfaces using line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">K</forename><surname>Forssell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 94</title>
		<meeting>Visualization 94</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994-10" />
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="240" to="247" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Using line integral convolution for flow visualization: curvilinear grids, variable-speed animation, and unsteady flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">K</forename><surname>Forssell</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">D</forename><surname>Cohen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="133" to="141" />
			<date type="published" when="1995-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Interactive visualization of flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Allen</forename><surname>Van Gelder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jane</forename><surname>Wilhelms</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Workshop on Volume Visualization</title>
		<meeting>Workshop on Volume Visualization</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="47" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Applications of pixel textures in visualization and realistic image synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Heidrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Rudiger</forename><surname>Westermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Ertl</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Symposium on Interactive 3D Graphics</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Visualizing 3d flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Interrante</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Grosch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="49" to="53" />
			<date type="published" when="1998-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The motion map: efficient computation of steady flow animations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Jobard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Lefer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 97</title>
		<meeting>Visualization 97</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="323" to="328" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Creating evenly-spaced streamlines of arbitrary density</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bruno</forename><surname>Jobard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wilfrid</forename><surname>Lefer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Scientific Computing &apos;97</title>
		<editor>W. Lefer and M. Grave</editor>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="43" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Multi-frequency noise for LIC</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Ming-Hoe</forename><surname>Kiu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 96</title>
		<meeting>Visualization 96</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="121" to="126" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">UFLOW: Visualizing uncertainty in fluid flow</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Lodha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">E</forename><surname>Sheehan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><forename type="middle">M</forename><surname>Wittenbrink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 96</title>
		<meeting>Visualization 96</meeting>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="249" to="254" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Enhanced line integral convolution with flow feature detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arthur</forename><surname>Okada</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Kao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visual Data Exploration and Analysis IV</title>
		<imprint>
			<date type="published" when="1997-02" />
			<biblScope unit="volume">3017</biblScope>
			<biblScope unit="page" from="206" to="217" />
		</imprint>
	</monogr>
	<note>SPIE</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Visualizing vector fields using line integral convolution and dye advection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han-Wei</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chris</forename><surname>Johnson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Ma</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1996 Symposium on Volume Visualization</title>
		<meeting>the 1996 Symposium on Volume Visualization</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1996-10" />
			<biblScope unit="volume">102</biblScope>
			<biblScope unit="page" from="63" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">UFLIC: a line integral convolution algorithm for visualizing unsteady flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han-Wei</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">L</forename><surname>Kao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 97</title>
		<meeting>Visualization 97</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1997-10" />
			<biblScope unit="volume">556</biblScope>
			<biblScope unit="page" from="317" to="322" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">A new line integral convolution algorithm for visualizing time-varying flow fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Han-Wei</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">L</forename><surname>Kao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="98" to="108" />
			<date type="published" when="1998-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Data level comparison of wind tunnel and computational fluid dynamics data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Qin</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alex</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sam</forename><surname>Uselton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 98</title>
		<meeting>Visualization 98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="volume">557</biblScope>
			<biblScope unit="page" from="415" to="418" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Fast and resolution independent line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stalling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-C</forename><surname>Hege</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Siggraph Proceedings</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="249" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Image-guided streamline placement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Greg</forename><surname>Turk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Banks</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>New Orleans, LA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM SIG-GRAPH</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="453" to="460" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Spot Noise: Texture synthesis for data visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="309" to="318" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Animating flow fields: rendering of oriented line integral convolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Wegenkittl</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Groller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Purgathofer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Animation &apos;97</title>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997-06" />
			<biblScope unit="page" from="15" to="21" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Color Plate 1: The bluntfin dataset pseudo-colored by the velocity magnitude. Blue regions have low velocities and red regions have high velocities</title>
	</analytic>
	<monogr>
		<title level="j">Left: basic LIC</title>
		<imprint/>
	</monogr>
	<note>Right: PLIC. Slight qualitative differences can be observed e.g. PLIC shows better contrast</note>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Color Plate 2: A time step from the unsteady dynvort dataset, pseudo-colored by the velocity magnitude</title>
	</analytic>
	<monogr>
		<title level="m">Left: UFLIC; Middle: Enhanced-LIC; Right: PLIC. In the video, both UFLIC and PLIC show rotational movements of these vortices</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Color Plate 3: A time step from the unsteady static roll delta wing dataset, pseudo-colored using velocity magnitude</title>
	</analytic>
	<monogr>
		<title level="m">Left: UFLIC; Middle: Enhanced-LIC; Right: PLIC. PLIC does not degenerate into &quot;zebra&quot; patterns and fuzzy regions as in UFLIC</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
