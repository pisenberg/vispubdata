<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Design and Implementation of an lmmersive Geoscience Toolkit</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christophe</forename><surname>Winkler</surname></persName>
							<email>winkler@loria.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">INRIA</orgName>
								<address>
									<settlement>Nancy</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabien</forename><surname>Bosquetl</surname></persName>
							<email>bosquet@t-surf.com</email>
							<affiliation key="aff0">
								<orgName type="institution">INRIA</orgName>
								<address>
									<settlement>Nancy</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Design and Implementation of an lmmersive Geoscience Toolkit</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:41+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>visualization</term>
					<term>geosciences</term>
					<term>immersive environments</term>
					<term>multi-pipe rendering</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Having a better way to represent and to interact with large geological models are topics of high interest in geoscience, and especially for oil and gas companies. We present in this paper the design and implementation of a visualization program that involves two main features. It is based on the central data model, in order to display in real time the modifications caused by the modeler. Furthermore, it benefits from the different immersive environments which give the user a much more accurate insight of the model than a regular computer screen. Then, we focus on the difficulties that come in the way of performance.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Integrating information coming from different sources, getting a better understanding of 3D geological objects' relationships, having a better way to represent and to interact with large geological models are topics of high interest in geoscience, and especially for oil and gas companies.</p><p>Geoscience toolkits must have extended modeling capabilities, in order to ensure the model's consistency. These capabilities are grouped in several different kinds of modeling tools: structural, geophysical (velocity modeling) or reservoir-specific (geostatistics, well planning.. .) tools. All these features are based on the interpolation capabilities of the modeler, and interact directly with a central data model.</p><p>Feedback to the user is mostly provided through the visualization of geological structures like horizons, faults, well paths or seismic data. This involves two main features of the visualisation tool: it must be based on the central data model, in order to display in real time the modifications caused by the different modeling tools; furthermore, it should benefit from the different immersive environments which give the user a much more accurate insight of the model than a regular computer screen.</p><p>We chose to extend the capacities of a standard geoscience program, GOCAD' <ref type="bibr" target="#b7">[9]</ref>, to enable the visualization of its model within different immersive environments,</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>like C A V E S~~, R E A L I T Y C E N T E R S~~</head><p>or workbenches.</p><p>In this paper, we will briefly describe the main points of the design and implementation of the program. Then, we will focus on the solutions chosen to adapt the software to immersive environments. This will lead us to present the main feedback and the difficulties that showed up during the experiments. Finally, we will conclude and present our future work. maintained and distributed by T-Surfhttp: / /www. t-surf . corn Xavier Cavin* Jean-Claude Paul*</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">System overview</head><p>We based the immersive toolkit on GOCAD'S library which implements a whole set of modeling functionalities. The displayed geological structures are organised into a scene graph referring to the corresponding data in the central data model. This enables data duplication to be minimized, and facilitates the visual update when the model is changed.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Modeling process</head><p>The purpose of 3D modeling in the geosciences is to create a realistic representation of the underground. It may be thought of as a partition of the 3D space into regions, bounded by interfaces between different rock layers, and discontinuities corresponding to faults. An accurate representation of the geometry is required to enable the user to have a global view of the structures to be modeled.</p><p>The main difficulty raised by geological modeling is the diversity of the initial data available, both in terms of nature and in terms of reliability.</p><p>Wells provide exact data, in the form of well markers, indicating which geological layer is traversed at a given depth. But wells are very expensive to dig, and only a small number of them are available, irregularly scattered all over the domain of interest.</p><p>Seismic acquisitions provide data by causing an explosion and by measuring the vibrations reflected and refracted by the underground structures. Combining the data given by a large number of captors results in a 3D seismic cube, similar to a radiography of the underground. One should keep in mind that due to the different causes of precision loss, induced by the captors and by the computations involved in the reconstruction of the seismic cube, this information is quite inaccurate.</p><p>The last kind of information to be taken into account is the a-priori knowledge of geologists concerning the domain to be studied. For this reason, the modeling process should be slightly interactive, which means that a solution should be automatically provided to the user, who then has the ability to edit it and to inject more information into the system.</p><p>The challenge of geologic modeling is to take into account various kind of information, such as well markers, sets of points corresponding to interfaces and faults picked from seismic cubes, while letting the user interactively introduce additional information at each step of the process <ref type="figure">(fig. 3</ref>). The resulting model is named a structural model, since it represents the geometric structure of the underground.</p><p>Except for a few specific objects (the wells, channels and lenses), the geological objects' representations in GOCAD are based on regular or irregular meshes (point sets, polygonal lines, triangulated surfaces, tetraedralized solids and regular or stratigraphic grids). These meshed based objects are well suited for a Boundary Representation (B-Rep) modelisation, first represented by winged edge structures <ref type="bibr">[l, lo]</ref>. Lately, B-Rep models were generalised by cellular models represented by Generalized Map (G-Map) structures <ref type="bibr" target="#b4">[6]</ref>. These representations allow for a topological representation of the model (with neighbour relationships), and the geometry can be considered as one specific property.</p><p>The model can be provided with values representing properties such as porosity or permeability. Any property defined on mesh nodes can be interpolated across the model with an original method, the Discrete Smooth Interpolation (DSI) <ref type="bibr" target="#b5">[7]</ref>.</p><p>In a geomodeling project, several teams cooperate and exchange information in a form specific to each team. Structural geologists manipulate surfaces, geophysicists use tetraedralized solids, and reservoir engineers prefer hexaedral grids. GOCAD'S library federates the modeling process into a coherent formalism and a common set of tools working on a single database. The main concerns are: is clearly to visualize it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Data visualization</head><p>The standard visualization process is the following: first, the user selects the different geological objects to be displayed; then, an internal scene graph is built according to these objects and their properties (color, shading, transparency...); finally, this graph is traversed for the rendering stage.</p><p>In order to minimize the duplication of data, every shape node of the scene graph points to the internal data model. This means that the geometrical representation of the shape is built out of the topological model. For example, for a triangulated surface, the rendering algorithm has access to a list of triangles. But for efficiency considerations, a list of triangle strips will be generated: beginning with one triangle of the surface, the algorithm will add one of its neighbours that can be retrieved through topological relationships. The triangle strip ends when no other neighbour can be found for the last triangle. Triangle strips are generated until all the triangles are rendered.</p><p>Flags are used to avoid displaying twice the same triangle. They indicate if the triangle has already been taken into account. Unfortunately, these flags are actually directly stored in each triangle. As will be shown later, this leads to nasty side effects when two threads have to use simultaneously these flags.</p><p>A home-made implementation has been developed to visualize volumetric data. Only parallelepipeds can be visualized as volumes. The core of the volume visualization algorithm proceeds by slicing the box by a set of planes <ref type="bibr" target="#b0">[2]</ref>. They are either planes, axis-aligned according to the box's coordinate system or perpendicular to the view direction. The number of slicing planes is controlled by the user. Increasing this number enhances the quality of the volume rendering, at the cost of lowering the frame-rate.</p><p>The volumetric data is a 3D texture image which is decomposed into a set of bricks. Each brick is mainly a small box of volumetric texture, so that the set of bricks covers the cube. The bricks are then sorted from back to front depending on their distance to the camera. Then, depending on the graphics board's capability, they are sent down to the board as a 2D or 3D texture.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Multi-pipe visualization process</head><p>In order to give the user a better insight into the geological model, we decided to enhance the visualization process. Two major enhancements have been implemented. First, we extended the existing software to run in immersive environments, which represents a considerable task. Indeed, there are multiple hardware choices, and some important implementation considerations had to be taken into account. Second, we improved the visualization process in order either to have a better frame-rate or to display larger databases. Both improvements help to increase the interaction with the model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">lmmersive environments</head><p>An immersive toolkit should be flexible enough to accommodate several environments, ranging from the simple user display (the common computer screen) to immersive VR environments. In these high end configurations, the global representation of the scene is displayed to the user by means of multiple sub-images projected on screens.</p><p>At first, we developed our own internal library allowing for an external hardware configuration file, and implementing multiple pipes management facilities.</p><p>The possibility of configuring the software without having to recompile anything is essential. As with the CAVE LIBRARY [8], this goal is achieved by having the hardware part of the virtual environment defined in an external configuration file ( <ref type="figure" target="#fig_1">fig. 1</ref>). This file defines the number of displays, the screen geometries and their relative positions (given by the position of three comers of the screen), as well as the different devices and their specific parametrisations used to drive the visualization. Thus it is possible to adapt at runtime to any hardware environment. Depending on the characteristics of each screen, a specific subimage must be computed. These images are then displayed together, and are seen by the user as one large image. Synchronizing the display of the sub-images must .be specially considered. Our implementation has a barrier that synchronizes the rendering threads just before they swap the frame-buffers. This must be applied throughout the whole rendering process, since nothing guarantees that the sub-images are computed equally fast. This solution avoids some visual artefacts which can occur when the different sub-images are not displayed exactly simultaneously. In this case, the global image would be distorted.</p><p>For efficiency, it is better if all the images are computed simultaneously. This is possible with computers having multiple graphics pipes or graphics cards, and implies an obvious parallelism of the visualization process. In this case, the scene graph traversal must be thread-safe.</p><p>Immersed in new hardware environments, the users expect an improved visualization, allowing a faster display of larger scenes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Multi-pipe acceleration</head><p>In order to accelerate the visualization process, H. Igehy et al. <ref type="bibr" target="#b2">[4]</ref> designed a parallel graphics interface. This API increases the graphics performance by lowering the communication overhead between the host system and the graphics system. Nevertheless, the presented solution does not yet address the pure graphics hardware limitations.</p><p>Another solution leading to a more efficient rendering is to allow multiple pipes to collaborate on one single image. The goal is to benefit from a graphics hardware parallelism. We ported our toolkit on SGI's MPU' library.</p><p>Different acceleration designs can be used:</p><p>2Dcomposition : the image is divided into a number of subimages computed by separate graphics pipes. Only a part of the scene is sent to each pipe, thus accelerating the rendering time. All the resulting images are then merged into one single frame buffer3.</p><p>3D decomposition ( <ref type="figure">fig. 2)</ref>: the scene is divided in ordered subscenes, sorted in back to front order. Each sub-scene (A, B and C) is assigned to one pipe (respectively #1, #2 and #3)).</p><p>The first pipe computes the image corresponding to its subscene (stage a). The resulting frame buffer is then copied to the next pipe (a), which adds the image corresponding to its sub-scene (stage b). This process is repeated for all the pipes to arrive at the final image. Furthermore, once one pipe has passed its frame buffer to the next one, it can simultaneously get the buffer from the preceding pipe and start its local rendering with new viewing parameters before the total image is finished.</p><p>Piue #1 Piue # 2</p><p>Piue #3 <ref type="figure">Figure 2</ref>: 3D composition.</p><p>4D decomposition: this time decomposition assigns to each pipe a different time-frame to be computed. While one pipe is computing the nth frame, the following pipe computes the ( n + l)th frame.</p><p>The use of the Monster MPU allows for a nearly linear speed-up on the SGI ONYX2.</p><p>'Actually, only MPu v2.0 (or Monster MPU) supports the presented acceleration capabilities. Contact P. Bouchaud for more information.</p><p>3The difference with immersive environments is that these environments rely on a hardware combination of the sub-images (for example with projectors), whereas the 2D decomposition results in one single image that can be displayed on one computer screen.</p><p>Another software improvement has been implemented in order to accelerate the rendering. The key point is that a single scene is displayed on multiple sub-images. When one object is completely displayed on one sub-image, it can not be simultaneously viewed on another sub-image. Thus, special care must be accorded for the view frustum clipping. This technique allows objects to be discarded before they are sent to the graphics pipeline, reducing the graphical work. Hierarchical methods, based on octrees or bsptrees <ref type="bibr" target="#b1">[3]</ref>, may accelerate significantly the visualization process.</p><p>Actually, some considerations must be taken into account: the achieved software acceleration depends on the performance of the graphics hardware, the size of the displayed model and the ratio of the data which is seen. Depending on these factors, the obtained speed-ups range from one to about fifty.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Results and discussion</head><p>The immersive extension of the geoscience tool has already been successfully tested in various VR environments: in a CAVE^^ ( <ref type="figure">fig. 4)</ref> driven by four pipes, in various R E A L I T Y C E N T E R S~~ with one or three pipes ( <ref type="figure" target="#fig_3">fig. 5</ref>), or on workbenches ... The simple ASCII configuration file provides efficient run-time portability of the software for any hardware environment. The user simply has to define the number of screens, their resolution and their relative position. This suffices to define at run-time the projections to be done to compute the different sub-images.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Interaction and interface considerations</head><p>The immersive visualization gives the users more freedom to interact with the model. Thus, they are tempted by manipulations they would not try with a window-based interface.</p><p>For example, a common request is to implement the possibility to pick an object in the scene, to drag it around to have a better view of this partjcular object (without having the whole scene moving around), and then to drop it so that it automaticly snaps to it's original position.</p><p>Meanwhile, the main difficulty for the users is to adapt to the new environment. They have to switch from the standard screenkeyboardmouse scheme, with the Graphical User Interface they are used to, to a new immersive environment without the concept of a frame or a window defining the work area. Users have the most difficulty adapting to the new interface, which gives access to the numerous functionalities of the modeler (about 700 functions).</p><p>We began to develop a time consuming solution, which consists in redesigning a brand new 3D interface from scratch. Unfortunately, no standard API exists to help building such interfaces.</p><p>A better alternative is to use video mapping techniques to display the standard interface on a panel (3D rectangle called laptop) embedded in the 3D world. The implementation is quite easy, and the user is again faced with the interface he is used to. Furthermore, any existing interface can be displayed on the laptop, without writing any new lines of code.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Parallelism considerations</head><p>Different solutions exist to parallelize an algorithm, either using a process-level parallelism based on the C function fork, or using threads like the posix threads4 <ref type="bibr" target="#b3">[5]</ref>. The main difference between both approaches concerns the way the memory is shared. When using processes, each process runs in a separate address space. Sharing data requires allocating special structures called shred 4The standard for UNIX threads is defined in ANSUIEEE POSIX 1003.1-1995 memory objects. In contrast, the thread approach enables several tasks to run in the same address space. Thus, all the data structures and variables are shared between the threads.</p><p>In the case of a geoscience tool including modeling functionalities, it is essential to share the geological data model between the rendering and the modeling processes. Indeed, the functionalities based on interpolation algorithms can deeply change the whole database. Thus, the different rendering processes have to access these data in order to guarantee the consistency of the displayed scene and the model. This is one of the aspects that makes the thread solution best suited for this application, since the memory can not be easily shared with a f ork-based approach.</p><p>Nevertheless, this solution still has some drawbacks: the whole application must be made thread-safe. The programmer has to ensure that the data will not be displayed while the modeler thread is performing any changes to the data. This can happen for example during an interpolation stage, that also relies on the abovementioned flags. During a time-consuming interpolation, the scene graph is automatically informed that the model changed, thus the triangle strips are recomputed. This resets all the flags currently used for the interpolation ...</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion and future work</head><p>Various problems arose from extending the window-based sequential software to a multi-threaded program running in immersive environments with multiple pipes: 0 the ability of the visualization tool to handle very large data models which are common in geoscience;</p><p>0 the flexibility to deal with different multi-pipe environments, which implies a parallel rendering process;</p><p>0 the side effects inherent to this parallelism must be fixed, in particular when both thd modeling and rendering processes access the model's data.</p><p>Different improvements in the visualization process are under-0 replacing the actual internal scene graph by a supported API like OPTIMIZER or even FAHRENHEIT. This will reduce the maintenance costs, and allow us to benefit from the latest hardware and OPENGL enhancements;</p><p>0 exploiting the specific geometry of the superposed geological layers: techniques based on occlusion culling, implemented in OPTIMIZER or presented in <ref type="bibr">[ll]</ref>, should prove to be very effective.</p><p>taken:  </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>0</head><label></label><figDesc>the generation and interactive edition of geological objects 0 the generation of structured and unstructured meshes; 0 the statistical analysis of properties; 0 geostatistic and stochastic simulations (generation of In any case, one of the most common way to exploit the model constrained by well markers and seismic data; equiprobable models).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Configuration file.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>GOCAD'S standard CUI, displaying wells and seismic data rendered with a given transparency. Visualisation of the same scene in a CAvETM-like environment with a four pipes configuration (courtesy of Arco).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Visualisation of the same scene in a 3 pipes R E A L I T Y C E N T E R~~ (courtesy of SILICON GRAPHICS'S Cortaillod's office).</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Acknowledgements</head><p>We want to thank the Centre Charles Hermite research center, for allowing us to access to their Origin2000 and Onyx2. This work has also been supported by the SILICON GRAPHICS'S center in Cortaillod, where we performed our tests on an Onyx2 with 4 pipes. A special thanks to Chris Henn for inviting us, to Jean-Jacques Pittet for managing their R E A L I T Y C E N T E R~~, and to Patrick Bouchaud for working on the Monster MPU utility.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Accelerated Volume Rendering and Tomographic Reconstruction using Texture Mapping Hardware</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Cabral</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Cam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Foran</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">1994 Symposium on Volume Visualization</title>
		<imprint>
			<date type="published" when="1994-10" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Computer Graphics, Principles and Practice, Second Edition</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Van Dam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">K</forename><surname>Feiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Hughes</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, Massachusetts</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The Design of a Parallel Graphics Interface</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Igehy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Stoll</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH&apos;98 Conference Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="141" to="150" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Kleiman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Shah</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Smaalders</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
	<note type="report_type">Programming with Threads. SunSoft Press</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">N-Dimensional Generalized Combinatorial Maps and Cellular Quasi-Manifolds</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lienhardt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal on Coumputational Geometry and Applications</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="275" to="324" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Discrete Smooth Interpolation. Computer Aided</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">L</forename><surname>Mallet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">;</forename><surname>Si D. Pape</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Cruz-Neira</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Czernuszenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Cave Library</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Electronic Visualization Laboratory</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Prog/Caveguide</surname></persName>
		</author>
		<imprint/>
		<respStmt>
			<orgName>University of Illinois at Chicago</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
		<ptr target="//www.ensg.u&apos;-nancy.fr/" />
	</analytic>
	<monogr>
		<title level="j">GOCAD. Design Journal</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="263" to="270" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Edge-Based Data Structures for Solid Modeling in Curved-Surface Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Weiler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">2140</biblScope>
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Visibility Culling using Hierarchical Occlusion Maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Hudson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">E</forename><surname>Hoff</surname></persName>
		</author>
		<idno>Au- gust 1997. 0-7803-5897-x/99/$1O.r)O Copyright I999 IEEE</idno>
	</analytic>
	<monogr>
		<title level="m">SIG-GRAPH&apos;97 Conference Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<biblScope unit="volume">111</biblScope>
			<biblScope unit="page" from="77" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Polyhedron Representation for Computer Vision</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Baumgart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AFIPS Nut. Conj Proc</title>
		<imprint>
			<date type="published" when="1975-06" />
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="589" to="596" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
