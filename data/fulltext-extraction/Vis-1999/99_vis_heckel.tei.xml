<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Construction of Vector Field Hierarchies</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bjoern</forename><surname>Heckel</surname></persName>
							<email>heckel@cs.ucdavis.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gunther</forename><surname>Weber</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
							<email>hamann@cs.ucdavis.edu</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
							<email>joy@cs.ucdavis.edu</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Center for Image Processing and Integrated Computing (CIPIC) Computer Science Department</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">AG Graphische Datenverarbeitung and Computergeometrie Fachbereich Informatik Universit√§t</orgName>
								<address>
									<settlement>Kaiserslautern</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="department">Center for Image Processing and Integrated Computing (CIPIC) Computer Science Department</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<settlement>Davis</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Construction of Vector Field Hierarchies</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>vector field visualization</term>
					<term>Hardy&apos;s multiquadric method</term>
					<term>binary-space partitioning</term>
					<term>data simplification</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We present a method for the hierarchical representation of vector fields. Our approach is based on iterative refinement using clustering and principal component analysis. The input to our algorithm is a discrete set of points with associated vectors. The algorithm generates a top-down segmentation of the discrete field by splitting clusters of points. We measure the error of the various approximation levels by measuring the discrepancy between streamlines generated by the original discrete field and its approximations based on much smaller discrete data sets. Our method assumes no particular structure of the field, nor does it require any topological connectivity information. It is possible to generate multiresolution representations of vector fields using this approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The rapid increase in the power of computer systems coupled with the improving precision of computational simulations now produce terascale data sets. The critical research problem encountered in the visualization of these data sets is the development of methods for storing, approximating, and rendering them. The crux of the problem is to reduce the size of the data sets while preserving essential features. We create different representations (or approximation levels) of a data set, each of which can be substituted for the complete set, depending on the requirements of a visualization technique. The given discrete vector field may be represented by a few data elements or by several billion elements if necessary, with each of the various representation levels containing as many as possible of the essential features contained in the original data set.</p><p>In this paper, we address simplification of vector fields. Our method creates a disjoint set of "clusters," and thereby a simplified discrete vector field, where a single point and vector is used to represent a cluster. We define a bisection strategy for clusters that utilizes a plane to effectively split a discrete data set. The "tiling" that is implied by this repeated bisection procedure creates a partitioning of space into convex regions. Each of these convex regions, bounded by certain split planes used during the split process, contains a particular discrete subset of the original data.</p><p>Each cluster has an associated error measure that depends on the differences in the streamlines generated from the points of the discrete vector field that are contained in the cluster. We measure the deviation of these simplified vector fields from the original discrete field and base our cluster generation process on these errors. Our algorithm splits clusters recursively, and splitting continues until a certain error condition is met.</p><p>Most standard hierarchical visualization and data representation schemes require a mesh defining the connectivity of data points at varying levels of resolution. Except in very specialized situations where the connectivity among points is implicit (e.g., rectilinear and curvilinear grids), one must store connectivity information explicitly. This is a major overhead concerning storage and also processing requirements. Our approach is among the very first stressing the concept of "gridless" representation. Our vector field data hierarchy is solely based on positional and vector information without the need to store or compute any connectivity information.</p><p>One of the main motivations for this work is to provide tools that enable interactive and real-time browsing of massive scientific data sets. Our method supplies a very flexible means for producing coarser levels of approximation of massive data, thus enabling interactive exploration. The vector field hierarchies generated with our approach can easily be adapted to support local level-of-detail rendering, or user-steered local refinement operations to focus on certain details present in a vector field.</p><p>In Section 2, we review mesh simplification algorithms that apply directly to our work. In Section 3, we survey approximation techniques that we use for vector field data. In Section 4, we discuss error measures that differentiate a simplified vector field from the original one. In Section 5, we describe the procedure that determines the bisection plane used to split a cluster. More practical aspects of our algorithm are covered in Section 6. Results of our algorithm are provided in Section 7. Conclusions and future work are presented in Section 8.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Related Work</head><p>Given a discrete vector field as a set of points {xi = (xi, yi, zi) : i = 1, ..., n} and a corresponding set of vectors {vi = (ui, vi, wi) : i = 1, ..., n}, the goal of our simplification method is to construct a new discrete representation of the vector field containing fewer points. We present an algorithm based on a top-down refinement approach by using an adaptive clustering method. This type of simplification requires no topological knowledge or connectivity information.</p><p>A number of methods have been developed that simplify scalar fields, but research concerning simplification of vector fields is still in its infancy. Several simplification algorithms use a bottom-up or a top-down strategy for the construction of multiple approximation levels of a given field. In a bottom-up strategy, the given (highresolution) grid is examined to identify regions where the mesh can be simplified, and the mesh is decimated in these areas. This process continues until an error threshold is reached. In a top-down strategy, an initial mesh is iteratively refined. One starts with a very coarse mesh and inserts points into the mesh until a desired error condition is met. Most of these methods require topological connectivity information for the data points.</p><p>Nielson et al. <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b12">13]</ref> have used a wavelet approach to simplify vector fields over the sphere and over curvilinear grids. In <ref type="bibr" target="#b11">[12]</ref>, they define a class of Haar wavelets over triangular domains and apply these techniques to simplify a vector field over a sphere. In <ref type="bibr" target="#b12">[13]</ref>, they utilize "lifted Haar wavelets" and apply them to curvilinear grids.</p><p>Helman and Hesselink <ref type="bibr" target="#b6">[7]</ref> have developed methods to simplify the visualization of two-dimensional vector fields by visualizing the topology of the field. The topology is visualized by specifying a collection of tangent curves that separate a flow into regions. The tangent curves connect critical points, where the flow is zero. These methods provide a good way to simplify two-dimensional vector fields, but these techniques have not been extended to three dimensions.</p><p>The algorithm we present in this paper utilizes clustering, similar to the work of Heckel et al. <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref>, who use these techniques for the generation of surface triangulations for a given set of scattered surface data. In these works, they use adaptive clustering methods to construct near-planar point clusters that can be directly triangulated. The resulting cluster triangulations, together with a triangulation of the space between the clusters, provides a valid surface reconstruction of a point set. The authors utilize principal component analysis (PCA), see Hotelling <ref type="bibr" target="#b7">[8]</ref>, Jackson <ref type="bibr" target="#b8">[9]</ref>, or Manly <ref type="bibr" target="#b9">[10]</ref>, to find a best-fit plane to each cluster, and then split perpendicular to this plane.</p><p>Most of these methods are based on an error measure. However, error measures are difficult to define for vector fields. We have decided to utilize an error measure that pertains to the visualization itself, i.e., we consider an approximation of a given vector field to be a good approximation if the visualizations of the original data set and the approximation are very similar.</p><p>The algorithm we use is based on a top-down approach. We utilize clustering <ref type="bibr" target="#b9">[10]</ref> to generate a binary space partitioning (BSP) of the data set. Initially, all points of the given discrete vector field are placed in a single cluster. Clusters are split using a weighted best-fit plane that splits the clusters so that the variance of the error is reduced in the child clusters. Each cluster has an associated error measure that depends on the differences in the streamlines generated from the points of the original discrete vector field that are contained in the cluster. The algorithm splits clusters recursively, and splitting continues until a certain error condition is met. The approach is "gridless" in the sense that we never require any point connectivity.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Approximation of Unstructured Vector Fields</head><p>A discrete vector field in three-dimensional space is defined by a set of points xi, i = 1, ..., n, and a set of associated vectors vi. We assume that the data set is a scattered data set, with no mesh defining the connectivity of the points. We define an analytical approximation to the vector field by using Hardy's multiquadric method, see <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b10">11]</ref>, which is one of the most effective and most commonly used methods for scattered data interpolation. The computation of the coefficients Œ±j requires the inversion of an n √ó n matrix. The function v(x) smoothly interpolates the vector values at the n data points and provides a vector estimate at any point x in space.</p><p>For large data sets, it is unreasonable to consider all data for the construction of Hardy's multiquadric interpolant. Franke and Nielson <ref type="bibr" target="#b0">[1]</ref> have shown that for each point xi of a scattered data set, an influence radius can be defined so that its contribution to the Hardy interpolant is zero outside this radius. A more common method is to utilize a fixed, small number of data points for the calculation of localized Hardy interpolants.</p><p>Concerning the identification of the data points closest to a particular point for which we have to compute a local Hardy interpolant, we utilize a kd-tree, see <ref type="bibr" target="#b13">[14]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Clustering and Error Measurements</head><p>Traditionally, algorithms concerned with the approximation of scientific data consider the numerical deviation of the given data and its approximation as the error. In the context of our application, which is the visualization and analysis of a vector field, it is more important to ensure that the resulting imagery generated from a particular approximation varies very little from the imagery obtained from the original data set. We chose to use the deviation of streamlines as the criterion to measure the error of a discrete approximation of a given discrete field.</p><p>Our method separates a discrete vector field data set into disjoint clusters. A simplified vector field is defined by using a single point and associated vector for each cluster and using Hardy's A streamline is an integral curve. It is calculated by solving the equation</p><formula xml:id="formula_0">dx(t) dt = v(x(t)),<label>(1)</label></formula><p>where t is the parameter along the streamline. Given an initial point x in a field, a streamline can be calculated by solving this initialvalue problem. We apply a fourth-order Runge-Kutta scheme, see <ref type="bibr" target="#b14">[15]</ref>, to integrate the equation stepwise.</p><p>For a given point x in the field, we calculate two streamlines, one based on the simplified field and one based on the original one. We use the deviation of the two streamlines as an error measure for an approximation. The streamlines are calculated using a fixed number of Runge-Kutta steps (with a fixed step size), using the same point x as the initial position. We compare the difference between the two streamlines by calculating the sum of the distances between the corresponding Runge-Kutta points on the respective streamlines, see <ref type="figure">Figure 2</ref>.</p><p>Thus, we define the error at a point x to be</p><formula xml:id="formula_1">(x) = n i=1 ||si ‚àí s i ||,<label>(2)</label></formula><p>where si is the ith Runge-Kutta point in the generation of the streamline for V, and s i is the ith point in the generation of the streamline for V . To calculate an error measure for an entire cluster of points, we use the maximum calculated error value for those points belonging to the cluster, i.e.,</p><formula xml:id="formula_2">(C) = max x‚ààC (x).<label>(3)</label></formula><p>In <ref type="figure">Figure 3</ref>, we illustrate the difference between streamlines for the blunt-fin data set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Splitting Clusters</head><p>In order to generate the set of clusters whose cluster center points and associated vectors define a simplified vector field, we recursively split clusters until the maximum value of all cluster errors is less than a prescribed tolerance. Each cluster is split using a "bisection" plane, which is placed and oriented to reduce the error in the child clusters. <ref type="figure">Figure 4</ref> provides an illustration of a cluster and a desirable splitting plane.</p><p>To generate the split plane for a cluster C, we consider the points xi of the original discrete vector field that are contained in C and the associated error values (xi) for these points. To generate position and orientation of the split plane, we focus on those points of the cluster where the error is low, and use a weighted least squares bestfit plane using these points.</p><p>First, we determine weights for each point, based on the approximation error. Those points xi of the original vector field where the error is low should be weighted high for our split procedure, while  </p><formula xml:id="formula_3">W = x j ‚ààC (xj) ‚àí1 , (xj) = 0,<label>(4)</label></formula><p>then we define the weight w(xi) of a point xi to be</p><formula xml:id="formula_4">w(xi) = 1 W (xi) .<label>(5)</label></formula><p>We define the orientation of the split plane P as the best-fit plane, in the least squares sense, to the set of weighted points</p><formula xml:id="formula_5">{wi(xi)xi :</formula><p>xi ‚àà C}, passing through the point</p><formula xml:id="formula_6">x = 1 k x i ‚ààC wi(xi)xi,<label>(6)</label></formula><p>where k is the cardinality of the cluster C, see Hotelling <ref type="bibr" target="#b7">[8]</ref> or Jackson <ref type="bibr" target="#b8">[9]</ref>. The splitting process is done recursively, defining a binary space partitioning of the data set. At each step of the partitioning procedure, we concentrate on the cluster that has the maximum error. This results in simplified vector fields based solely on the differences between streamlines.</p><p>We illustrate the splitting process for a two-dimensional vector field defined by the function (x, y) ‚Üí x, xy . We limit the vector field to the region 0 ‚â§ x ‚â§ 1 and ‚àí1 ‚â§ y ‚â§ 1. This vector field is shown in <ref type="figure">Figure 5</ref>. <ref type="figure">Figure 6</ref> shows the cluster centers and associated vectors after splitting.</p><p>The errors associated with clusters must be updated (locally) once a particular cluster has been split. The computation of a streamline emanating at a particular cluster center x depends on a certain number of nearby centers of "neighbor" clusters. Splitting one of these neighbor clusters will affect the streamline computation, and therefore the error for point x. Thus, we locally update cluster values whenever splitting is performed.  <ref type="table">Time  in seconds   Spiral  4,000  500  45  Three Singularities  4,000  1,000  60  Blunt Fin  41,000  5,000  886   Table 1</ref>: Statistics for the three vector fields.</p><p>by decreasing cluster error. We repetitively use the cluster at the front of the priority queue to refine the vector field V . Given a cluster C with maximal weight (the cluster at the front of the queue), we calculate the split plane for the cluster and split the cluster into two child clusters C1 and C2. We calculate the center points and average vectors that represent each of these clusters and obtain a modified vector field V by replacing the point and vector representing C by the new points and vectors representing the child clusters. We recalculate the errors for C1 and C2 and insert them into the priority queue.</p><p>This process is repeated until a vector field approximation is obtained whose maximal cluster error is less than a prescribed error tolerance or until a prescribed number of clusters is generated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Results</head><p>We have applied this algorithm to several complex data sets. Preprocessing of the data sets was done on an SGI Onyx2 computer system, using one 195MHz R10000 processor. The statistics for each data set are shown in <ref type="table">Table 1</ref>.</p><p>The first data set is given by a discrete field of 4,000 samples taken from the vector field defined by the equation (x, y) ‚Üí ‚àí0.03x + 0.1y, ‚àí0.1x ‚àí 0.03y, 0 .</p><p>We have illustrated the simplified vector field at two resolutions in <ref type="figure" target="#fig_5">Figure 7</ref>. The streamlines for the original field and the simplified fields are nearly identical in each case. Here, the simplified fields represent the spiral well, even though few clusters are generated near the center.</p><p>The second data set is given by a discrete field of 4,000 samples taken from the vector field defined by the equation</p><formula xml:id="formula_8">(x, y) ‚Üí ‚àíx 2 + xy + 1 2 y + 1 4 , x 2 + xy ‚àí 1 2 y ‚àí 1 4 .<label>(8)</label></formula><p>This vector field contains three critical points. We have illustrated the simplified vector field at two resolutions in <ref type="figure">Figure 8</ref>. Here, the light-colored streamline represents the data of the original field, and the dark-colored streamline represents the data of the simplified field.</p><p>The third data set is the blunt-fin data set. This is a curvilinear data set containing 41,000 points. <ref type="figure" target="#fig_6">Figures 9a-d</ref> show streamsurfaces generated for this vector field and for simplified versions of it. In each figure, the streamsurface of the original vector field is shown in blue, while the streamsurface for the simplified field is shown in red. The simplified vector fields are based on (a) 200 clusters; (b) 500 clusters; (c) 1500 clusters; and (d) 2000 clusters.</p><p>We have found that the illustration of these simplified vector fields, where a short streamline is displayed at each cluster center, is a very useful tool for visualizing the entire field. Since the simplification routine generates clusters where the error is high, we obtain many streamlines in areas of high error, and few in regions of low error. Figures 9e and 9f illustrate this technique with two simplified fields at different resolutions for the blunt-fin data set.  <ref type="figure">Figure 8</ref>: Segmentation of a two-dimensional vector field having three critical points. (a) Using 100 clusters, the simplified field cannot reproduce the streamline generated from the original field. The streamline generated from the original field is shown in light gray, and the streamline generated from the simplified field is shown in dark gray. (b) Using 500 clusters, the simplified field can reproduce the streamline generated from the original field.</p><p>The streamlines are generated at the centers of the clusters. The simplified vector fields are based on 170 clusters in <ref type="figure" target="#fig_6">Figure 9e</ref> and 300 clusters in <ref type="figure" target="#fig_6">Figure 9f</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions</head><p>We have presented an algorithm suitable for the generation of a hierarchical representation for discrete vector fields. This method uses a clustering approach, segmenting the vector field into a hierarchy of disjoint clusters. This allows us to represent the original vector field a varying resolutions. We utilize an error measure that measures the error between the streamlines generated from the points of the original discrete vector field and points of the approximate field, and we use this measure to generate split planes for iterative segmentation. Our approach is innovative in two regards: (1) Our method is entirely gridless, leading to significant savings in memory and storage overhead, and (2) our error computation is based on the difference in streamlines between the original vector field and an approximation. The gridless paradigm is extremely space-saving, and an error metric based on the visual differences between approximations is definitely advantageous for visualization applications.</p><p>We have experimented with a variety of approaches for clustering. In the context of vector fields, the data is characterized by (1) positional information and (2) vector information for each individual datum. A multitude of different options exists concerning possible clustering criteria. Several approaches, including clustering merely based on vector information will, in general, lead to cluster whose members will lie in disjoint regions of the original field that are far apart from each other. The binary space partitioning approach that we have chosen creates spatially convex clusters and avoids most of the problems encountered with other clustering strategies.</p><p>We plan to develop other strategies for clustering vector field data. Our current algorithm generates a BSP tree, but there are many other hierarchical data structures that one could use. We plan to evaluate the changes in the vector field topology under simplification as well. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>Given n points x1, x2, ..., xn and associated vector values v1, v2, ..., vn, Hardy's multiquadric interpolant is defined by the solution of the n √ó n linear system of equations vi = n j=1 Œ±j ||xi ‚àí xj|| 2 + R 2 , i = 1, ..., n, where the parameter R 2 is a positive constant. Once the unknown coefficients Œ±j are computed, one can approximate a vector value v at an arbitrary point x in space by v(x) = n j=1 Œ±j ||x ‚àí xj|| 2 + R 2 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :Figure 2 :</head><label>12</label><figDesc>Cluster-based simplification of a vector field: (a) The original vector field segmented into two clusters. (b) By replacing each cluster with a single point and associated vector, a simplified field is obtained. Calculation of the error measure at a point x. The error is the sum of the distances between the sequence of point pairs si and s i obtained by a Runge-Kutta method. The streamline based on the original field is drawn as the solid line, and the dashed line corresponds to the simplified field. multiquadric to approximate the field locally. Figure 1 illustrates a vector field subdivided into two clusters and the simplified vector field. The new data point associated with a cluster C is defined by the average of the coordinates of the points in C. The single vector associated with C is calculated as the average of the vector values associated with the points of the original field contained in C. Suppose we have segmented a vector field V into a set of disjoint clusters C1, C2, ..., Cn and have determined the cluster center points x1, x2, ..., xn with associated vector values v1, v2, ..., vn; the set of n points and n vectors defines a new, reduced vector field V .To measure the difference between V and V at an arbitrary point x, we compute a difference measure for the streamlines emantating from x, one based on the field V and one based on V , seeFigure 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :Figure 4 :</head><label>34</label><figDesc>Error between two streamlines in the blunt-fin data set.(a) The simplified vector field based on 200 clusters, with relatively large error. (b) The simplified vector field based on 4000 clusters, with a substantially reduced error. split plane The split plane subdivides the cluster such that the errors in the child clusters are minimized. points with high error should be weighted low. Thus, the weight w(xi) of a point xi is proportional to the reciprocal of the calculated error (xi) at the point. In particular, if</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :Figure 6 :</head><label>56</label><figDesc>The vector field (x, y) ‚Üí x, xy . The splitting algorithm operating on the vector field (x, y) ‚Üí x, xy . We have displayed the cluster centers after (a) 7 splits; (b) 15 splits; (c) 25 splits; and (d) 45 splits. Data Set Number of Points Number of Clusters</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>A two-dimensional spiral vector field. The streamlines (shown here as tubes) for the simplified fields and the original one are nearly identical. The simplified vector fields are based on (a) 40 clusters, and (b) 300 clusters.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 9 :</head><label>9</label><figDesc>Construction of Vector Field Hierarchies.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6">The AlgorithmGiven a discrete vector field as a set of points and a corresponding set of vectors, we initially place all vectors in a single cluster, thus defining a single, constant vector field V . We calculate the error for all points of the cluster and define the maximum point error as the cluster error. Each cluster is placed in a priority queue ordered</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">Acknowledgments</head><p>This work was supported by the National Science Foundation under contract ACI 9624034 (CAREER Award), the Office of Naval Research under contract N00014-97-1-0222, the Army Research Office under contract ARO 36598-MA-RIP, the NASA Ames Research Center through an NRA award under contract NAG2-1216, the Lawrence Livermore National Laboratory through an ASCI ASAP Level-2 under contract W-7405-ENG-48 (and B335358, B347878), and the North Atlantic Treaty Organization (NATO) under contract CRG.971628, and Silicon Graphics, Inc. The first author was also supported by the IBM Alamaden Research Center.</p><p>The blunt-fin data set is courtesy of NASA Ames Research Center.</p><p>We would like to thank the members of the Visualization Group at the Center for Image Processing and Integrated Computing at the University of California, Davis, for their support.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Smooth interpolation of large sets of scattered data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal for Numerical Methods in Engineering</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1691" to="1704" />
			<date type="published" when="1980" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Scattered data interpolation and applications: A tutorial and survey</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Richard</forename><surname>Franke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Focus on Scientific Visualization</title>
		<editor>H. Hagen, H. Mueller, and G.M. Nielson</editor>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="131" to="159" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Multiquadric equations of topography and other irregular surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Hardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Geophysical Research</title>
		<imprint>
			<biblScope unit="volume">76</biblScope>
			<date type="published" when="1906" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Theory and applications of the multiquadricbiharmonic method: 20 years of discovery 1968-1988</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">L</forename><surname>Hardy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Mathematics with Applications</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="163" to="208" />
			<date type="published" when="1990" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Clustering-based generation of hierarchical surface models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bjoern</forename><surname>Heckel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antonio</forename><forename type="middle">E</forename><surname>Uva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization 1998 (Hot Topics)</title>
		<editor>C.M. Wittenbrink and A. Varshney</editor>
		<meeting>Visualization 1998 (Hot Topics)<address><addrLine>Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1998-10" />
			<biblScope unit="page" from="50" to="55" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Surface reconstruction using adaptive clustering methods</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bjoern</forename><surname>Heckel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Antonio</forename><forename type="middle">E</forename><surname>Uva</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kenneth</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<idno>CSE-99-1</idno>
		<imprint>
			<date type="published" when="1999-01" />
			<pubPlace>Davis</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Science Department, University of California</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Representation and display of vector field topology in fluid flow data sets. Visualization in scientific computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">James</forename><surname>Helman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lambertus</forename><surname>Hesselink</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="61" to="73" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Analysis of a complex of statistical variables into principal components</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hotelling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Educational Psychology</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="417" to="441" />
			<date type="published" when="1933" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">A User&apos;s Guide to Principal Components</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Jackson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<publisher>Wiley</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Multivariate Statistical Methods, A Primer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">F</forename><surname>Manly</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Chapman &amp; Hall</publisher>
			<pubPlace>New York, New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Visualizing and modeling scattered multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><forename type="middle">A</forename><surname>Foley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Bernd</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><forename type="middle">A</forename><surname>Lane</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="47" to="55" />
			<date type="published" when="1991-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Haar wavelets over triangular domains with applications to multiresolution models for flow over a sphere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Il-Hong</forename><surname>Jung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junwon</forename><surname>Sung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;97</title>
		<editor>Roni Yagel and Hans Hagen</editor>
		<meeting><address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1997-10" />
			<biblScope unit="page" from="143" to="149" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Wavelets over curvilinear grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Il-Hong</forename><surname>Jung</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Junwon</forename><surname>Sung</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization&apos;98</title>
		<editor>David S. Ebert, Hans Hagen, and Holly Rushmeier</editor>
		<meeting>IEEE Visualization&apos;98<address><addrLine>Los Alamitos; Los Alamitos, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="313" to="317" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">The design and analysis of spatial data structures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hanan</forename><surname>Samet</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1990" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, Mass.</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Efficient streamline, streamribbon, and streamtube constructions on unstructured grids</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Shyh-Kuang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christopher</forename><surname>Ueng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kwan-Liu</forename><surname>Sikorski</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Ma</surname></persName>
		</author>
		<idno>1077- 2626</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<date type="published" when="1996-06" />
			<biblScope unit="volume">2</biblScope>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
