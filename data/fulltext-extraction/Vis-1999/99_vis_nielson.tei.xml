<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Cracking the Cracking Problem with Coons Patches</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gregory</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science and Engineering</orgName>
								<orgName type="institution">Arizona State University Tempe</orgName>
								<address>
									<postCode>85287-5406</postCode>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Dave</forename><surname>Holliday</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science and Engineering</orgName>
								<orgName type="institution">Arizona State University Tempe</orgName>
								<address>
									<postCode>85287-5406</postCode>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Roxborough</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science and Engineering</orgName>
								<orgName type="institution">Arizona State University Tempe</orgName>
								<address>
									<postCode>85287-5406</postCode>
									<region>AZ</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Cracking the Cracking Problem with Coons Patches</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We present a new approach to solving the cracking problem. The cracking problem arises in many contexts in scientific visualization and computer graphics modeling where there is need for an approximation based upon domain decomposition that is fine in certain regions and coarse in others. This includes surface rendering, approximation of images and multiresolution terrain visualization. In general, algorithms based upon adaptive refinement strategies must deal with this problem. The new approach presented here is simple and general. It is based upon the use of a triangular Coons patch. Both the basic idea of using a triangular Coons patch in this context and the particular Coons patch that is used constitute the novel contributions of this paper.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>1 Introduction <ref type="figure">Figure 1</ref>. The cracking problem The so-called "cracking problem" in computer graphics has its origins in surface rendering. Often, surfaces are rendered with piece-wise polygonal approximations consisting of quadrilaterals or triangles. For efficiency purposes, it makes sense to use a small number of polygons in regions where the surface is relatively flat and more in regions where the surface is varying considerably. With an overall error tolerance as a goal, a simple adaptive strategy comes to mind as a means to compute such an approximation.</p><p>In this approach, an initial approximation is tested to see if it satisfies the error test. If not, it is replaced with a finer approximation usually obtained by some type of subdivision process.</p><p>Without special considerations, this simple strategy can lead to approximations of the surface which contain cracks.</p><p>This means that the approximation is not continuous. This is illustrated in <ref type="figure">Figure 1</ref>, which makes the process and the potential cracking problem clear.</p><p>In this paper we are particularly interested in adaptive methods for computing approximations based upon triangular decompositions of the domain. Often the approximation is taken to be piece-wise linear defined over a triangulation of the domain which is obtained adaptively. At every step in a sequence of refined triangulations, we require that we have a valid triangulation. Roughly speaking, this means that the triangles are collectively exhaustive and mutually exclusive and only allowed to intersect on a single common edge. For precise working definitions and convenient data structures, see Nielson <ref type="bibr" target="#b9">[9]</ref>. The purpose for requiring a valid triangulation is to allow for a continuous piece-wise linear function to be defined over the triangulation.</p><p>A valid triangulation does not permit the occurrence of the so-called "T" vertices where two triangles each share an edge with a common neighbor. This violation is the root of the cracking problem. We briefly review two methods of refinement which have previously appeared in the literature. Both have been used in several contexts; including finite element grid generation and scientific visualization.</p><p>The first has been discussed by Banks et al. <ref type="bibr" target="#b0">[1]</ref> and Bey <ref type="bibr" target="#b1">[2]</ref>. This strategy involves two types of subdivisions of a triangle. In a red split, all three edges are subdivided resulting in four subtriangles. Only one edge is subdivided for a green split. One strategy attempts to avoid the potential long thin green triangles by not allowing a green split of a green triangle. Rather, a green split is "undone" and replaced with a red split. This is illustrated in <ref type="figure">Figure 2</ref>. The step from the second decomposition to the third would not be allowed but rather it would be refined to the fourth.  <ref type="figure">Figure 2</ref>. The refinement process using red and green splits The second approach, that we mention, has been discussed by Rivara <ref type="bibr" target="#b11">[11]</ref> and Maubach <ref type="bibr" target="#b8">[8]</ref> and has been utilized by Duchaineau et al. <ref type="bibr" target="#b3">[4]</ref>, Fredreich et al. <ref type="bibr" target="#b4">[5]</ref> and Lindstrom et al. <ref type="bibr" target="#b6">[7]</ref>. For this approach, the triangle that is selected for refinement is always split into two subtriangles by bisecting a single edge. Usually the longest edge is selected. This can lead to a nonconforming-neighboring triangle, which must then also be split. This process is propagated out through the subdivision until a valid triangulation is once again obtained. Several steps of this process are illustrated in <ref type="figure" target="#fig_1">Figure 3</ref> where the triangle selected for refinement at each step is marked with a bold boundary. The immediately observed negative of this refinement strategy is the forced subdivision of triangles required to maintain a valid triangulation. This can present some initially unforeseen problems to certain refinement strategies. For example, in adaptive least squares fitting, a subdivision forced to eliminate "T" vertices may lead to triangular cells void of data. We end this section by mentioning another approach to solving the cracking problem which applies to rectilinear grids. Gross et al. <ref type="bibr" target="#b5">[6]</ref> describe an approach which uses triangulated templates to replace the triangles when a vertex of a rectilinear grid is removed. Usually a transition of more that two levels locally is not allowed because of the complexity of the number of triangulated templates that are required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Coons Patch Solution to Cracking Problem</head><p>We now present the basic ideas of our new technique. It is very simple. Rather than attend to the cracking problem during the adaptive splitting, we proceed with the triangular quadtree splits as the fitting strategy requires. Rather than use linear approximations over each triangle, we use a more general interpolant that has the ability to match any boundary curves that are piece-wise linear. In the case of the subdivision shown in <ref type="figure" target="#fig_2">Figure 4</ref>, the approximation is comprised of linear segments over triangles oi, ok, ojo, ojj, ojk and oji, but over triangles i, j, k and oo the more general patch is used. For example the approximation over triangle i has two boundary curves which are strictly linear and a third which is comprised of three linear segments which it shares with triangles ok, oji and ojj. In order to implement this basic approach, we need an approximation defined over a triangular domain which will assume piece-wise linear values on the boundary. We can use a transfinite, triangular Coons patch for this purpose. Before we describe our new triangular Coons patch, we briefly describe the more conventional, rectangular Coons patch. Coons first described this type of interpolant in <ref type="bibr" target="#b2">[3]</ref>. It is assumed that there are given four boundary curves. It is convenient to think of these four boundary curves as coming from a surface defined by a function and so we use the notation of F(x,0), F(1,y), F(0,y) and F(x,1) to represent these four curves. This notation also ensures that the four curves are compatible in that they intersect at the four corners.</p><p>The transfinite interpolating Coons patch which matches this arbitrary boundary data is defined by</p><formula xml:id="formula_0">C(x, y) = (1 -x)F(0, y) + xF(1, y) + (1 -y)F(x, 0) + yF(x, 1) -(1 -x)(1 -y)F(0, 0) -xyF(1, 1)<label>(1)</label></formula><formula xml:id="formula_1">-(1 -y)xF(1,0) -(1 -x)yF(0,1) Fx (,0) Fy (0,) Fx (,1)</formula><p>Fy (1,) <ref type="figure">Figure 5</ref>. Rectangular Coons patch defined from four boundary curves</p><p>It is interesting to plug into C(x,y) the values (x,0) (for example) and do the computations to verify that we do indeed obtain F(x,0). We now give the details of the triangular Coons patch that we will use. This particular triangular Coons patch has previously appeared in a very early technical report. See <ref type="bibr" target="#b10">[10]</ref> for the motivation and development of this interpolant. Other triangular Coons patches have been discussed by Nielson <ref type="bibr" target="#b9">[9]</ref>, but we think that the one described here is particularly well suited for the application at hand. It is very simple and has the property of having linear weights and linear arguments. This later property gives rise to the informal name used for this interpolant which is the "NTW linear/linear patch". Similar to the notation used to describe the rectangular Coons patch, we use F(0,y), F(x,0) and F(x,1-x) ( or F <ref type="figure">(1-y,y)</ref> ) to denote the user provided boundary curves and define the patch as</p><formula xml:id="formula_2">(1 -x -y)[F(x, 0) + F(0, y) -F(0, 0)] S[F](x, y) = + y[F(0, x + y) + F(x, 1 -x) -F(0, 1)] (2) + x[F(x + y, 0) + F(1 -y, y) -F(1,0)] Fx (,0) Fy (0,) Fyy (1-,)</formula><p>Fxx (,1-) <ref type="figure">Figure 6</ref>. Boundary data for triangular Coons patch</p><p>Again, it is interesting and instructive to plug in the boundary argument values and verify that the approximation does indeed match the boundary data given. In many applications it is useful to use barycentric coordinates rather than the more conventional Cartesian coordinates that we have used so far. Given an arbitrary triangular domain with vertices, Vi, Vj and Vk, a point P=(x,y) can be represented with the barycentric coordinates P=(bi,bj,bk) such that</p><formula xml:id="formula_3">P = b i V i + b j V j + b k V k , b i + b j + b k = 1</formula><p>As before, we think of the transfinite boundary data as coming from an underlying function F. With this in mind we can write the barycentric coordinate version of (2) as</p><formula xml:id="formula_4">bi[F(b j V j +(1-b j )V i )+F(b k V k +(1-b k )V i )-F(V i )] + S[F](b i ,b j ,b k )=bj[F(b i V i +(1-b i )V j )+F(b k V k +(1-b k )V j )-F(V j )] + bk[F(b j V j +(1-b j )V k )+F(b i V i +(1-b i )V k )-F(V k )].(3) V k V i V j bVbV i i i k + (1-) bVbV k k k i + (1-) Figure 7</formula><p>. The stencil for the NTW linear/linear triangular patch</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Application Examples</head><p>Our first example is concerned with computing an approximation to a bicubic parametric surface, P(s,t), for purposes of rendering. We start with an approximation consisting of the four triangles (P(0,0), P(0,1), P(0.5,0.5)), (P(0,1), P(1,1), P(0.5,0.5), (P(1,1), P(1,0), P(0.5,0.5)) and (P(1,0), P(0,0), P(0.5,0.5)). We then adaptively refine the approximation by selecting a triangle approximation which does not satisfy the error criteria and subdivide it into four triangles by splitting each edge. This is continued until all subapproximations satisfy the error criteria or a maximum level is obtained. The maximum level for this example is set at 5. The root mean square error is based upon evaluations over a uniform rectangular grid. The results for three different tolerances are shown in <ref type="figure" target="#fig_3">Figure 8</ref>. In order to make some comparisons, we have also included the approximations based upon a uniform triangular subdivision. This example illustrates well the efficiency of the adaptive fitting process. In the next example, we apply our techniques to obtain a piece-wise triangular approximation to an image. The original is shown in the upper left of <ref type="figure">Figure 9</ref>. Three approximations are shown along with the respective domain decompostions. The third approximation is nearly indistinguishable from the original. It has approximately 50,555 vertices compared with the 513x513 = 263,169 vertices of the original image. Including the information required to store the decompostion, this is better than 4 to 1 compression with about a 1% error! The second image is acceptable for many applications with a compression of approximately 15 to 1.</p><p>The last example is based upon elevation data. We have a grid of 1025x1025 heights representing a region near Flagstaff, AZ which ranges in elevation from 1280 to 3840 meters. The original data is shown in the upper left of <ref type="figure">Figure 10</ref>. Again, the approximations show the real power of this simple technique.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Concluding Remarks</head><p>We have presented the basic ideas of a very simple and general approach to computing continuous adaptive approximations based upon triangular decompositions. We have illustrated the use of this technique for surface rendering, image compression and multiresolution terrain modeling. The basic ideas presented here can also be extended to 3D and to the problems of volume modeling. This requires a 3D extension of the transfinite Coons patch to a tetrahedral domain. We cover this in a subsequent paper.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 3 .</head><label>3</label><figDesc>Bisection method of adaptive subdivision and propagation of splitting process</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 4 .</head><label>4</label><figDesc>Basic idea of using Coons patch approximation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 8 .</head><label>8</label><figDesc>Comparison of adaptive fitting and uniform grid</figDesc></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>We wish to acknowledge the support of the National Aeronautical and Space Administration under NASA-Ames Grant, NAG 2-990 and the Office of Naval Research under Grant, ONR N00014-97-1-0243. We thank Sashidharan Vadakkepat for the images of <ref type="figure">Figure 1</ref>.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Refinement algorithms and data structures for regular local mesh refinement</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">E</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">H</forename><surname>Sherman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Weiser</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientific Computing, R. Stepleman</title>
		<meeting><address><addrLine>North Holland, Amsterdam</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1983" />
			<biblScope unit="page" from="3" to="17" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Tetrahedral mesh refinement, Computing</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="355" to="378" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Surfaces for computer-aided design of space forms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Coons</surname></persName>
		</author>
		<idno>MAC-TR-41</idno>
		<imprint>
			<date type="published" when="1967-06" />
		</imprint>
		<respStmt>
			<orgName>MIT</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Duchaineau</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wolinsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">E</forename><surname>Sigeti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">C</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">B</forename><surname>Aldrich &amp; M</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mineev-Weinstein</surname></persName>
		</author>
		<title level="m">ROAMing terrain: Real-time, optimally adapting meshes, Visualization &apos;97</title>
		<editor>R. Yagel &amp; H. Hagen</editor>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Interpolation of triangle hierarchies</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Friedrich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Polthier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schmies</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;98</title>
		<meeting>Visualization &apos;98</meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="391" to="396" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Gross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><forename type="middle">G</forename><surname>Staadt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Gatti</surname></persName>
		</author>
		<title level="m">Efficient triangular surface approximations using wavelets and quadtree data structures, TVCG</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="130" to="143" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Real-time, continuous level of detail rendering height fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Koller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">F</forename><surname>Hodges</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Faust</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">A</forename><surname>Turner</surname></persName>
		</author>
		<imprint>
			<biblScope unit="page">96</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Proceedings</title>
		<imprint>
			<biblScope unit="page" from="109" to="118" />
			<date type="published" when="1996" />
			<publisher>ACM Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Local bisection refinement for Nsimplicial grids generated by reflection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Maubach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM J. Sci. Compt</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="210" to="227" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Nielson</surname></persName>
		</author>
		<title level="m">Scientific Visualization: Surveys, Techniques and Methodologies</title>
		<editor>Nielson, Hagen &amp; Mueller</editor>
		<imprint>
			<publisher>IEEE CS Press</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="429" to="525" />
		</imprint>
	</monogr>
	<note>Tools for triangulations and tetrahedrizations</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Boundary data interpolation on triangular domains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">M</forename><surname>Nielson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">H</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Wixom</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">General Motors Research Laboratories GMR-2834</title>
		<imprint>
			<date type="published" when="1978-10-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Algorithms for refining triangular grids suitable for adaptive and multigrid techniques</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rivara</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International J. Num. Eng</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Original 513x513 image = 263169 vertices b) vertices = 1036, triangular patches = 1376</title>
		<idno>rms = 24.42</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">c) vertices = 7408, triangular patches = 10019, rms 11.92 d) vertices = 50555, triangular patches = 69776</title>
		<idno>rms = 3.262</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Adaptively computed, triangular Coons patch approximation to an image and associated domain decompositons a) Original 1025x1025 height field = 1050625 vertices b) vertices = 2268, triangular patches = 2917</title>
		<idno>rms = 25.42</idno>
	</analytic>
	<monogr>
		<title level="m">Figure 9</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">c) vertices = 25527, triangular patches = 34088, rms = 6.275 d) vertices = 134114, triangular patches = 185798</title>
		<idno>rms = 1.386</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Decomposition for b) Decompostion for c) Decompostion for d)</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Adaptively computed, triangular Coons patch approximations to a terrain and associated domain decompositions</title>
	</analytic>
	<monogr>
		<title level="m">Figure 10</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
