<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">New Quadric Metric for Simplifying Meshes with Appearance Attributes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">Microsoft Research</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">New Quadric Metric for Simplifying Meshes with Appearance Attributes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>level of detail</term>
					<term>mesh decimation</term>
					<term>multiresolution</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Complex triangle meshes arise naturally in many areas of computer graphics and visualization. Previous work has shown that a quadric error metric allows fast and accurate geometric simplification of meshes. This quadric approach was recently generalized to handle meshes with appearance attributes. In this paper we present an improved quadric error metric for simplifying meshes with attributes. The new metric, based on geometric correspondence in 3D, requires less storage, evaluates more quickly, and results in more accurate simplified meshes. Meshes often have attribute discontinuities, such as surface creases and material boundaries, which require multiple attribute vectors per vertex. We show that a wedge-based mesh data structure captures such discontinuities efficiently and permits simultaneous optimization of these multiple attribute vectors. In addition to the new quadric metric, we experiment with two techniques proposed in geometric simplification, memoryless simplification and volume preservation, and show that both of these are beneficial within the quadric framework. The new scheme is demonstrated on a variety of meshes with colors and normals.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Complex triangle meshes occur extensively in computer graphics as the result of geometric modeling operations, global illumination simulations, and reconstructions from 3D scans. Because such meshes are difficult to store, transmit, and render, several techniques have been developed for geometrically simplifying them (e.g. <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b5">6,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9,</ref><ref type="bibr" target="#b10">10,</ref><ref type="bibr" target="#b13">13,</ref><ref type="bibr" target="#b17">17]</ref>). However, meshes often have associated appearance attributes at their vertices, such as normals, colors, and texture coordinates, and relatively few techniques account for these attributes during simplification <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b10">10]</ref> as reviewed in Section 2. This paper presents a new technique for efficiently and accurately simplifying meshes with attribute data.</p><p>Among mesh simplification metrics, the quadric error metric introduced by Garland and Heckbert <ref type="bibr" target="#b5">[6]</ref> holds much promise because it is both fast and reasonably accurate. Their more recent work <ref type="bibr" target="#b6">[7]</ref> generalizes this approach to deal with appearance attributes as summarized in Section 3. In this paper, we build upon that work by developing an improved quadric error metric for simplifying meshes with attributes. The new metric offers the following advantages:</p><p>It more intuitively measures error based on geometric correspondence in R 3 .</p><p>It requires less storage, since its space complexity is linear on the number of attributes. It evaluates more quickly since the quadric matrix is sparse. It results in more accurate simplifications, as demonstrated by results. Appearance attributes are not always continuous over the surface of the mesh. To deal with attribute discontinuities (such as creases), we extend the quadric scheme to a wedge-based mesh data structure, as described in Section 5.</p><p>In Section 6, we present two enhancements to the quadric simplification scheme, inspired by the recent geometric simplification method of Lindstrom and Turk <ref type="bibr" target="#b15">[15]</ref>. The enhancements are memoryless simplification and volume preservation. Results of quantitative testing of all the combinations indicate that the new quadric metric, memoryless simplification, and volume preservation all contribute to improved accuracy, and do so in order of decreasing importance. As shown in Section 7, the quality of the results is surprisingly good. The simplified meshes are generally just as accurate, with respect to both geometry and attributes, as similar ones produced by the more expensive optimization in <ref type="bibr" target="#b10">[10]</ref>.</p><p>Notation In this paper, we describe a triangle mesh M by its set of vertices V and its set of faces F. Each vertex v 2 V has a geometric position pv 2 R 3 and a set of m attribute scalars denoted by sv 2 R m . These two elements form a column vector vv = ( pv sv ) 2 R 3+m . (We also refer to arbitrary vectors in R 3+m using the notation v = ( p s ) 2 R 3+m .) A mesh with (r g b) vertex colors therefore has m = 3, and a mesh with both colors and normals has m = 6. Each triangle face f 2 F is denoted as a vertex triplet (v1 v2 v3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PREVIOUS WORK</head><p>Most recent geometric simplification schemes coarsen a mesh through a sequence of edge collapse transformations, shown in Figure 1. These transformations have the advantage that their inverses can be stored concisely to form a progressive mesh representation <ref type="bibr" target="#b10">[10]</ref>.</p><p>In a simplification scheme based on edge collapses, two issues must be resolved: (1) the position and attributes v to assign to the unified vertex, and (2) the order in which to perform edge collapses. A common approach is to define a single cost metric C to determine both. The unified vertex is assigned the value v minimizing C(v), and the same cost C(v) is used to order the candidate edge collapses. We now briefly review some previous approaches to defining C(v).</p><p>Geometric simplification of meshes Gu√©ziec <ref type="bibr" target="#b7">[8]</ref> constrains edge collapses to preserve mesh volume, and bounds the maximum geometric approximation error through a framework of tolerance volumes. Hoppe et al. <ref type="bibr" target="#b10">[10,</ref><ref type="bibr" target="#b12">12]</ref> sample a set of points on the original mesh, and define C(v) as the sum of their squared distances to the approximating mesh; one drawback is that the subset of points that must be reprojected grows as the mesh is simplified. Kobbelt et al. <ref type="bibr" target="#b13">[13]</ref> also sample points on the original mesh, but constrain their maximum distance to the approximating mesh, and use a fairness functional to order the edge collapses. Ronfard and Rossignac <ref type="bibr" target="#b17">[17]</ref> associate to each original vertex the set of planes spanned by its adjacent faces, merge these sets of planes after each edge collapse, and define C(v) as the sum of squared distances from v to its associated planes; again a drawback is that these plane sets grow as the mesh is simplified. Garland and Heckbert <ref type="bibr" target="#b5">[6]</ref> show that this same C(v) can be efficiently represented as a compact quadric error metric (QEM), as reviewed in Section 3.</p><p>Lindstrom and Turk <ref type="bibr" target="#b15">[15]</ref> define C(v) as a sum of squared tetrahedral volumes between the two mesh neighborhoods of <ref type="figure" target="#fig_0">Figure 1</ref>.</p><p>Specifically, each tetrahedron is formed by the vertex v and a face f 2 F i+1 . Because each tetrahedral volume is proportional to the distance of v from the plane spanning f , the metric C(v) can be seen as an instance of a QEM over the neighborhood F i+1 where the metric on each face f 2 F i+1 is weighted by the squared area of f . (This observation does not appear in their paper <ref type="bibr" target="#b15">[15]</ref>.) A major difference from the earlier scheme <ref type="bibr" target="#b5">[6]</ref> is that the error metric is defined over the mesh simplified so far instead of the original mesh. We refer to this as the memoryless version of QEM simplification. Lindstrom and Turk also use constraints to preserve volume and boundaries.</p><p>Simplification of meshes with appearance attributes Bajaj and Schikore <ref type="bibr" target="#b0">[1]</ref> track geometric and attribute errors on faces of the mesh to obtain error-bounded simplifications of meshes with attributes. Hoppe <ref type="bibr" target="#b10">[10]</ref> extends the point sampling approach to also include attributes in the cost metric, but decouples geometric optimization from attribute optimization when minimizing C(v). Garland and Heckbert <ref type="bibr" target="#b6">[7]</ref> generalize their earlier QEM scheme to deal with surface properties, as summarized in Section 3. In this paper, we describe another, more intuitive generalization that proves to be more accurate and efficient.</p><p>Cohen et al. <ref type="bibr" target="#b4">[5]</ref> simplify meshes with explicit texture coordinates. By tracking parametric instead of geometric correspondence, their scheme bounds the displacement of a point on the mesh with any given texture coordinate, which is the correct metric for texturemapped surfaces. Our scheme, like <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b10">10]</ref>, seeks to minimize the attribute deviation at any given point on the surface. This is the correct metric for vertex attributes like colors and normals that do not define a parametrization on the surface.</p><p>Image-based approaches When the attribute field on the original mesh has complex detail, it may be difficult to significantly coarsen the mesh without quickly degrading this detail. An alternative approach is to capture attribute fields as sampled texture images on the mesh faces <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b4">5,</ref><ref type="bibr" target="#b14">14,</ref><ref type="bibr" target="#b16">16,</ref><ref type="bibr" target="#b18">18]</ref>. In our opinion, such an imagebased approach will gain wide acceptance as more rasterization operations (normal maps, displacement maps, etc.) are integrated into the hardware. However, there are still many attribute fields that are most concisely represented as piecewise-linear functionals using vertex attributes. The discontinuous normal field of <ref type="figure" target="#fig_0">Figure 12</ref> and the radiosity solution of <ref type="figure" target="#fig_0">Figure 13</ref> are good examples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">PREVIOUS QUADRIC ERROR METRICS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Simplification of geometry</head><p>The original QEM scheme <ref type="bibr" target="#b5">[6]</ref> addresses the case m = 0. It defines on each face f of the original mesh a quadric Q f (v) equal to the squared distance of a point v=(p) 2 R 3 to the plane containing the face. (The derivation of Q f will follow shortly.) Each vertex v of the original mesh is assigned the sum of quadrics on its adjacent faces weighted by face area:</p><formula xml:id="formula_0">Q v (v) = X f 3v area(f ) Q f (v) : (1) After each edge collapse (v1 v2) ! v, the new vertex v is assigned the position v minimizing Q v (v) = Q v 1 (v) + Q v 2 (v)</formula><p>, and the next edge collapse chosen is the one with the lowest such minimum.</p><p>Let us now derive Q f (v) for a given face f = (v1 v2 v3). Recall that v = (p) when m = 0. The signed distance of p to the plane P</p><formula xml:id="formula_1">R 3 containing f is n T p + d,</formula><p>where the face normal n = (p2 ;p1) (p3 ;p1)=k(p2;p1) (p3 ;p1)k and the scalar d = ;n T p1. As an aside, a different formulation is to obtain these parameters by solving the linear system</p><formula xml:id="formula_2">0 @ p T 1 1 p T 2 1 p T 3 1 1 A 0 B @ n d 1 C A = 0 @ 0 0 0 1 A</formula><p>with the additional constraint that knk = 1.</p><p>The squared distance between point p and plane P is therefore</p><formula xml:id="formula_3">Q f (v = (p)) = (n T v + d) 2 = v T (nn T )v + 2dn T v + d 2 which can be represented as a quadratic functional v T Av+2b T v+c</formula><p>where A is a symmetric 3 3 matrix, b is a column vector of size 3, and c is a scalar <ref type="bibr" target="#b5">[6]</ref>. Thus,</p><formula xml:id="formula_4">Q f = (A b c) = ; ; nn T ; d n d 2</formula><p>is stored using 6 + 3 + 1 = 10 coefficients. The advantage of this representation is that the quadric Q v of Equation 1 is obtained using simple linear combinations of these coefficient vectors. <ref type="bibr" target="#b0">1</ref> After an edge collapse, the vertex position vmin minimizing</p><formula xml:id="formula_5">Q v (v)</formula><p>is found where the gradient (rQ v (v) = 2Av + 2b) equals zero, which is obtained by solving the linear system</p><formula xml:id="formula_6">Avmin = ;b : (2)</formula><p>Simplification of geometry and attributes In <ref type="bibr" target="#b6">[7]</ref>, Garland and Heckbert extend their framework to deal with vertex attributes (m &gt; 0). Their approach is to generalize the distance-to-plane metric in R 3 to a distance-to-hyperplane in R 3+m . That is, Q f (v) for v = ( p s ) 2 R 3+m is defined as the distance in R 3+m from v to the affine subspace P 0 R 3+m spanned by the three vertices (v1 v2 v3).</p><p>Let v 0 denote the projection of v onto this affine subspace. The error Q f (v) = kv ; v 0 k 2 can be seen as the sum of two terms, the geometric distance error kp;p 0 k 2 and the attribute deviation error ks ; s 0 k 2 . Observe that the point p 0 does not correspond to the projection of p onto the plane P R 3 as it did previously. The effect is that visgenerally not compared to the geometrically closest point, but to some geometrically farther point that has a closer attribute value. As a consequence, the metric may underestimate the actual error, as shown in Section 4.</p><p>The quadric Q f (v) consists of a matrix A of size (3+m) (3+m), a column vector b of size 3+m, and a scalar c. Because the matrix A resulting from the above formulation is dense, storage of Q requires a total of (4+m)(5+m)=2 coefficients, which is quadratic on m.</p><p>To trade off geometric accuracy and attribute accuracy, the user specifies for each attribute j 2 f1 : : : mg a relative importance weight j that pre-multiplies the attribute values, effectively scaling some axes in R 3+m . For scale-invariance, the mesh is resized to tightly fit in the unit cube.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">NEW QUADRIC ERROR METRIC</head><p>Our contribution is to introduce a new quadric that defines both geometric error and attribute error based on geometric correspondence in 3D (see <ref type="figure" target="#fig_1">Figure 2</ref>). Rather than projecting a given point p onto the mesh face in an abstract higher-dimensional space R 3+m , we perform the projection in R 3 and compute geometric and attribute error based on this correspondence. The error metric for a face f is defined as the sum</p><formula xml:id="formula_7">Q f (v = ( p s )) = Q f p (v) + m X j=1 Q f s j (v)</formula><p>where the geometric error Q f p (v) is the squared distance from p to its projection p 0 on the plane P R 3 containing f , and the attribute error Q f s j (v) is the squared deviation between s and the value s 0 interpolated from face f at that projected point p 0 . Let us now derive these terms.</p><p>The geometric error term is simply a zero-extended version of that in <ref type="bibr" target="#b5">[6]</ref>:</p><formula xml:id="formula_8">Q f p = (A b c) = 0 B @ 0 B @ nn T . . . 0 . . . . . . 0 . . . . . . 0 . . . 1 C A 0 @ d n 0 1 A d 2 1 C A</formula><p>where the line dividers in A and b mark the first 3 rows and 3</p><p>columns.</p><p>To form the attribute error term Q f s j , we first define a linear functional≈ù </p><formula xml:id="formula_9">j(p) = g T j p + dj</formula><formula xml:id="formula_10">0 B B @ p T 1 1 p T 2 1 p T 3 1 n T 0 1 C C A 0 B B @ gj dj 1 C C A = 0 B B @ s1 j s2 j s3 j 0 1 C C A : Since Q f s j (v) = (≈ùj(p) ; sj) 2 = (g T j p+dj ; sj) 2 , through algebraic rearrangement we obtain Q f s j = (A b c) = 0 B B B B B B B @ 0 B B B B B B B @ gjg T j . . . 0 . . . ;gj . . . 0 . . . . . . 0 . . . . . . 0 . . . 0 . . . 0 . . . ;g T j 0 1 0 . . . 0 . . . . . . 0 . . . 0 . . . 0 . . . 1 C C C C C C C A 0 B B B B B B @ dj gj 0 ;dj 0 1 C C C C C C A d 2 j 1 C C C C C C C A</formula><p>where the value 1 appears in A3+j 3+j and the ;dj appears in b3+j.   </p><formula xml:id="formula_11">(p,s) (p',s') v 1 v 2 v</formula><formula xml:id="formula_12">= (A b c) = ( 0 B B B B B B @ nn T + P j gjg T j ;g1 ; gm ;g T 1 . . . I ;g T m 1 C C C C C C A 0 B B B B B B @ dn + P j djgj ;d1 . . . ;dm 1 C C C C C C A d 2 + P j d 2 j</formula><p>). Note that the first 3 rows and the first 3 columns of A are dense, but that the remaining m m submatrix is the identity I. Recall that a set of weights j is used to scale attribute errors relative to geometric error. If one were to define Q = Qp + P j 2 j Qs j , the submatrix would have the weights <ref type="bibr" target="#b1">2</ref> j on its diagonal. We use the simpler approach of pre-scaling the attribute values sj by j prior to constructing and evaluating Q. In either case, the m m submatrix is always a constant matrix times a scalar factor, and thus requires only one coefficient of storage. Overall, Q requires 11+4m coefficients, which is now linear on m (see <ref type="table" target="#tab_2">Table 1</ref>).</p><p>Some attributes such as color channels have bounded extents (e.g. 0 r g b 1). The vmin found in Equation 2 may contain attributes outside these linear inequality constraints. A fallback strategy when this occurs could be to solve a more expensive "constrained quadratic programming" problem. We have chosen to simply truncate the attributes to their bounds and re-evaluate</p><formula xml:id="formula_13">Q v (v) there.</formula><p>Similarly, surface normal attributes should remain normalized. However, quadratic minimization subject to quadratic constraints is an even more difficult problem, so again we leave these attributes unconstrained and renormalize the optimized values. <ref type="figure" target="#fig_2">Figure 3</ref> demonstrates the improvement in accuracy provided by the new quadric metric. The original mesh is a regular planar grid whose vertex colors are sampled from the "mandrill" image. The simplified meshes are obtained without the enhancements described later in Section 6. The values 1 2 3 scaling the (r g b) color channels relative to the unit size image are all set to = 1. It should be noted that for planar geometry, the previous QEM <ref type="bibr" target="#b6">[7]</ref> obtains progressively better results as is decreased, converging to our QEM as approaches 0 (but not at = 0). The reason is that the hyperplane P 0 R 3+m becomes more parallel to the P R 3 .</p><p>Quantitative results for the "mandrill" simplification appear later in <ref type="table">Table 2</ref>. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">ATTRIBUTE DISCONTINUITIES</head><p>Meshes often have discontinuities in their attribute fields. For instance, a crease is a path of edges on a mesh across which normals are discontinuous. In radiosity solutions, intensities on adjacent patches are generally different if the patches are not parallel. Modeling such discontinuities involves storing multiple sets of attribute values per vertex. For this purpose we have chosen to introduce wedges <ref type="bibr" target="#b11">[11]</ref> into our data structure <ref type="figure">(Figure 4)</ref>. A vertex is partitioned into k 1 wedges, each wedge wi having its own attribute vector s i . The corner of each face adjacent to the vertex is assigned to one of the wedges. The quadric Q wi (p s i ) at wedge wi is the area-weighted sum of Q f for its subset of adjacent faces,</p><formula xml:id="formula_14">Q w (v) = X f 3w area(f ) Q f (v)<label>(3)</label></formula><p>and Equation 1 is replaced by</p><formula xml:id="formula_15">Q v (p s 1 : : : s k ) = k X i=1 Q wi (p s i ) :<label>(4)</label></formula><p>The new vertex quadric Q v has dimension 3 + km. Note that this variable-sized quadric Q v need never be stored explicitly in the mesh, as it is straightforward to construct from the Q wi when an edge collapse is considered. Minimizing this quadric Q v produces both the vertex position and all of its wedge attributes simultaneously. For an edge collapse, the earlier strategy of merging vertex quadrics as</p><formula xml:id="formula_16">Q v (v) = Q v 1 (v) + Q v 2 (v</formula><p>) must be redefined to act on wedge quadrics instead. Referring to <ref type="figure">Figure 5</ref>, we unify the wedges w 0 a and w 0 b following an edge collapse if both wa and wb extended into face f1 prior to the edge collapse, and similarly on the other side for face f2. For each pair of unified wedges (0, 1, or 2 pairs), we sum together their wedge quadrics. These rules reproduce the original scheme when both vertices v1 and v2 each have a single wedge.</p><p>One last detail is that we preserve the geometry of discontinuity curves by associating an additional quadric with every sharp edge (including boundary edges), as described in <ref type="bibr" target="#b6">[7]</ref>. In our framework this edge quadric is added to the Q w (v) on the 4 corners adjacent to the edge (or 2 corners in the case of a boundary edge).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">SIMPLIFICATION ENHANCEMENTS</head><p>Besides defining the new QEM, we also experimented with two techniques, memoryless simplification and volume preservation, and found that they further improve results. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Memoryless simplification</head><p>Instead of assigning Q w (v) to wedges in the original mesh and summing these through each edge collapse as</p><formula xml:id="formula_17">Q v (v) = Q v 1 (v) + Q v 2 (v),</formula><p>we experimented with the alternative approach of memoryless simplification, in which Q w (v) is redefined based on the geometry and attributes of the mesh simplified so far. Thus, when evaluating an edge collapse (v1 v2) ! v, we compute Q v (v) using Equations 3 and 4 over the set of faces F i+1 in <ref type="figure" target="#fig_0">Figure 1</ref>. As mentioned earlier, the squared tetrahedral volumes used in <ref type="bibr" target="#b15">[15]</ref> give rise to a similar metric except that it weights each Q f by the square of its face area. As shown in the results of Section 7, we confirm the surprising finding <ref type="bibr" target="#b15">[15]</ref> that memoryless simplification improves the accuracy of results. Although this may seem counter-intuitive at first, it can be explained by the illustration in <ref type="figure">Figure 6</ref>. The ovals denote the freedom of the vertices to move within the surface without significantly increasing Q v (v). With the standard QEM scheme the Q v are computed on the original mesh and subsequently summed. As a result, the merging of the non-parallel ovals (corresponding to fine level features) gives rise to tight spherical quadrics that lock vertices and prevent further simplification, even though the resulting mesh is planar.  <ref type="figure">Figure 6</ref>: Illustration of standard QEM and memoryless QEM simplification. The dashed ovals symbolize the shapes of the quadric functionals Q v p ; (a) in the standard scheme they are are computed once in a preprocess and subsequently summed during simplification; (b) in the memoryless scheme they are computed using the mesh simplified so far.  In contrast, with memoryless simplification, the Q v are recomputed at the coarser level based on the geometry simplified so far, in this case the planar surface. This ability to forget finer level detail allows simplification to proceed further when desirable.</p><formula xml:id="formula_18">(0,1,1) (1,1,0) (2,1,1) (2,0,0) (0,1,1) V=(2,1,a) (2,0,0) (0,1,1) V=(1,0,0) (2,0,0) (1,1,0) Q p = 0 Q s = (a+1) 2 + 2(a-1) 2 &gt; 0 Q p = 3(1) 2 &gt; 0 Q s = 0 (x,</formula><p>Although memoryless simplification makes storing QEM's unnecessary, to speed up the algorithm we have found it useful to cache the values (area(f ) Q f (v)) on the faces of the mesh, updating them appropriately as edges are collapsed. For this reason the compact size of our new QEM is still advantageous.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Volume preservation</head><p>Experiments reveal that the new QEM sometimes shrinks the model geometry in areas of high attribute gradient. That is, the new vertex v may be pushed towards the center of curvature of the surface at sharp attribute transitions.</p><p>The intuition for this effect is illustrated in <ref type="figure" target="#fig_6">Figure 7</ref> using simplification of a polygonal curve in R 2 . The scalar field defined over the original model transitions from 1 to 0 to 1 to 0. Clearly an edge collapse over this neighborhood will not be able to preserve this complicated attribute field. Let us consider the errors measured by the quadric metric.</p><p>After the edge collapse on the upper right, the geometry is preserved exactly (Qp = 0), but the attribute error Qs cannot be made zero. The reason is that the attribute value a for the vertex v = (2 1 a) cannot simultaneously interpolate the attribute gradients on all 3 original segments. In particular, a would have to be set to ;1 to extrapolate the leftmost segment</p><formula xml:id="formula_19">[(0 1 1) (1 1 0)].</formula><p>On the other hand, the edge collapse on the lower right results in geometric error (Qp &gt; 0), but "achieves" Qs = 0 since the projection of v = (1 0 0) onto each of the original 3 line segments exactly interpolates the original attributes. Intuitively, the motion of the vertex towards the center of curvature allows it to project onto the interiors of the original line segments, thus avoiding attribute extrapolation.</p><p>To counteract this bias towards geometric shrinkage, we introduce a volume preservation constraint. As shown in <ref type="bibr" target="#b7">[8,</ref><ref type="bibr" target="#b15">15]</ref>, preserving volume during an edge collapse is equivalent to a linear constraint g T VOL p + dVOL = 0 on the position p of the unified vertex v. The volumetric gradient gVOL is the sum of the face normals of F i+1 <ref type="figure" target="#fig_0">(Figure 1)</ref> weighted by one third their face areas. Minimizing Q v (v) subject to that linear constraint is easily achieved using a system with one Lagrange multiplier :</p><formula xml:id="formula_20">A gVOL g T VOL 0 ! vmin ! = ; b</formula><p>;dVOL ! :</p><p>This system (or even that of Equation 2) may be ill-conditioned if the mesh neighborhood has zero Gaussian curvature, i.e. if it is planar or cylindrical. Note that the attributes cannot contribute any zero singular values because the k submatrices of size m m on the diagonal of A are all the identity I. When the system is illconditioned, we set p = (p1 + p2)=2 and solve for fs1 : : : skg in the remaining system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">RESULTS</head><p>We implemented a simplification testbed to explore various error metrics and simplification options. Because of its generality, our testbed is not designed for speed; it attains simplification rates of only 150-400 faces/second on a 450 MHz Pentium II processor. However, the elements of our scheme have already been shown to be fast <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b6">7,</ref><ref type="bibr" target="#b15">15]</ref>. In particular, the new QEM is faster to evaluate than in <ref type="bibr" target="#b6">[7]</ref> due to its sparse structure. However, memoryless simplification requires more QEM constructions as in <ref type="bibr" target="#b15">[15]</ref>. Based on the results in <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b15">15]</ref>, we expect that an optimized implementation would have simplification rates on the order of 10,000 faces/second. For quantitatively measuring the accuracy of simplified meshes, we use an approach similar to <ref type="bibr" target="#b5">[6]</ref>. The distance between two meshes M A and M B is obtained by sampling a collection of points from M A and measuring their distances to their closest points on M B . Because this is a non-symmetric process, the same number of points is also sampled from M B and projected on M A . Both sets of distances are combined, and statistics are reported using rms (L 2 norm) and maximum (L 1 norm) values. For meshes with attributes, we also sample the attributes at the same points and measure their deviations from the values linearly interpolated at the closest point on the other mesh. <ref type="table">Table 2</ref> presents quantitative results for the simplification of the planar mandrill model. The column of maximum errors is deemphasized because these values are noisier (e.g. <ref type="figure">Figure 9</ref>) and seem less correlated with perceived accuracy. The table shows that, with few exceptions, all three simplification options improve results. The number marked with a 'y' in <ref type="table">Table 2</ref> deserves more explanation. One would not expect it to be so different from the number in the next row since volume preservation should be irrelevant for a planar mesh. The explanation is that numerical noise in the mesh geometry is gradually amplified by the combination of the "shrinkage effect" <ref type="figure" target="#fig_6">(Figure 7)</ref> and memoryless re-evaluation, until the geometry undulates significantly. Fortunately, volume preservation eliminates this undesirable behavior, as discussed in Section 6.2.</p><p>(a) Original mesh (b) Simplified using <ref type="bibr" target="#b6">[7]</ref> (c) Simplified using our scheme   <ref type="table">Table 2</ref>: Quantitative accuracy results for 1000-face "mandrill" meshes as in <ref type="figure" target="#fig_2">Figure 3</ref>, with and without (1) the new QEM, (2) memoryless simplification, and (3) volume preservation. The top row therefore corresponds to the scheme of <ref type="bibr" target="#b6">[7]</ref>, and the bottom row to our new scheme. The more expensive method from <ref type="bibr" target="#b10">[10]</ref> is also included for comparison.  <ref type="table">Table 3</ref>: Results for 1500-face head meshes as in <ref type="figure" target="#fig_7">Figure 8</ref>. <ref type="figure" target="#fig_7">Figure 8</ref> shows the simplification of a more general vertex-colored mesh, and <ref type="table">Table 3</ref> shows its associated accuracy numbers. For this mesh, we set = 0:1 for the color attribute channels. Figures 9 and 10 plot error as a function of simplified mesh complexity. The new scheme clearly outperforms the previous QEM scheme <ref type="bibr" target="#b6">[7]</ref>, often requiring less than half as many faces for the same rms error. It also matches or outperforms the slower scheme of <ref type="bibr" target="#b10">[10]</ref> over the most useful range of simplification complexity. <ref type="figure" target="#fig_0">Figure 11</ref> demonstrates the importance of including surface normal attribute values in the simplification metric. Although the mesh in <ref type="figure" target="#fig_0">Figure 11b</ref> is in fact geometrically more accurate than that in <ref type="figure" target="#fig_0">Figure 11c</ref>, its fuzzy surface normal field makes it less useful. Generally we set = 0:02 for surface normal attributes. <ref type="figure" target="#fig_0">Figures 12  and 13</ref> show simplifications of meshes with attribute discontinuities. The mesh of <ref type="figure" target="#fig_0">Figure 12</ref> has only creases, whereas the mesh of <ref type="figure" target="#fig_0">Figure 13</ref> has both normal and color discontinuities. <ref type="table" target="#tab_6">Table 4</ref> compares accuracy results for all the figures using the PM scheme <ref type="bibr" target="#b10">[10]</ref>, the previous QEM <ref type="bibr" target="#b6">[7]</ref>, and the new QEM.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">SUMMARY AND FUTURE WORK</head><p>We have described a new quadric error metric for simplifying triangle meshes with appearance attributes. The new metric captures both geometric error and attribute error based on closest-point correspondence in 3D, rather than in an abstract higher-dimensional space. We have demonstrated that this new metric produces more accurate simplifications. Moreover, it requires less storage and evaluates more quickly.</p><p>Associating the quadrics with a wedge-based data structure permits efficient simplification of models with attribute discontinuities, as was demonstrated on models with creases and illumination discontinuities. The previously introduced techniques of memoryless simplification and volume preservation further improve results. Surprisingly, the accuracy of the new scheme generally matches or exceeds that of a much slower optimization method.</p><p>In future work, it would be desirable to measure parametric error (instead of geometric error) for the simplification of texturecoordinate attributes <ref type="bibr" target="#b4">[5]</ref>. Perhaps the quadric approach can be extended to provide a useful approximation in this context.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Fig.</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rms error Geometry</head><p>Color Normals <ref type="bibr" target="#b10">[10]</ref> [7] New <ref type="bibr" target="#b10">[10]</ref> [7] New <ref type="bibr" target="#b10">[10]</ref>    <ref type="figure">Figure 9</ref>: Rms and maximum color error for the "mandrill" model of <ref type="figure" target="#fig_2">Figure 3</ref>, using <ref type="bibr" target="#b6">[7]</ref>, <ref type="bibr" target="#b10">[10]</ref>, and our new scheme. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Web: http://research.microsoft.com/ hoppe/ Edge collapse transformation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>3 |p-p'| = geometric error (|s-s'| = attribute error) Correspondence between point p with attribute s and its projection onto the plane spanning face (v1 v2 v3).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>(a) Original mesh (79,202 faces) (b) Simplified using Q from<ref type="bibr" target="#b6">[7]</ref> (c) Simplified using our new Q Result of simplifying a vertex-colored 200 200 mesh down to 1,000 faces using the previous QEM<ref type="bibr" target="#b6">[7]</ref> and using our new QEM. Mesh edges are rendered on the left half of each image. Weights j relating color to geometric accuracy are set to 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :Figure 5 :</head><label>45</label><figDesc>Wedge-based mesh representation. Tests for wedge unification after edge collapse.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>For a polygonal curve in R 2 , illustration of trade-off between geometric accuracy (Qp = 0) and attribute accuracy (Qs = 0). Attribute accuracy can cause bias towards the center of curvature when the attribute gradient is high.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Simplification of a vertex-colored mesh of 135,133 faces down to 1,500 faces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 11 :Figure 12 :Figure 13 :</head><label>111213</label><figDesc>(a) Original mesh (b) Q is just geometric error (c) Q also includes normals Simplification of a mesh of 920,000 faces down to 10,000 faces. For the geometric simplification in (b), normals are simply carried through. In (c) we optimize both geometry and normals, using = 0:02 for normals. (a) Original mesh (42,712 faces) (b) Simplified mesh (5,000 faces) Simplification of a mesh with discontinuities on normal attributes (indicated by the thick lines). (a) Original mesh (298,468 faces) (b) Simplified mesh (5,000 faces) Simplification of a mesh with discontinuities of color attributes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>that represents the expected attribute value at all points p 2 R 3 . The gradient gj and scalar dj are defined as follows. Naturally,≈ùj(p) should interpolate the face vertices f = (( p 1 s 1 ) ( p 2 s 2 ) ( p 3 s 3 )) and thus match the linear interpolant over the plane P. In addition,≈ùj(p)for an arbitrary p 2 R 3 should be identical to the value≈ùj(p 0 ) at its geometric projection on P; this is equivalent to setting n T gj = 0. Thus gj is simply the gradient of the scalar function over the triangle face. Parameters (gj dj) are computed by solving the 4 4 linear system</figDesc><table /><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Number of coefficients necessary to represent Q for various numbers m of scalar attributes, for<ref type="bibr" target="#b6">[7]</ref> and for our new scheme.</figDesc><table /><note>Summing all of these quadrics together yields Q f</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6"><head>Table 4 :</head><label>4</label><figDesc>Quantitative results for all figures. Boldface indicates the best result.</figDesc><table><row><cell></cell><cell>1</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>[GH98]</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>[Hoppe96]</cell></row><row><cell>Rms color error</cell><cell>0.01 0.1</cell><cell></cell><cell></cell><cell cols="2">New method</cell></row><row><cell></cell><cell>0.001</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>[GH98]</cell></row><row><cell>Max color error</cell><cell>0.1 1</cell><cell></cell><cell></cell><cell cols="2">[Hoppe96] New method</cell></row><row><cell></cell><cell>0.01</cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell></cell><cell>1</cell><cell>10</cell><cell>100</cell><cell>1000</cell><cell>10000</cell><cell>100000</cell></row><row><cell></cell><cell></cell><cell></cell><cell cols="2">Number of faces</cell><cell></cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1">Such a quadric can also be represented in homogeneous form as a single 4 4 symmetric matrix, but we find the (A b c) notation more convenient.</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>I would like to thank Jed Lengyel, Peter Lindstrom, and John Platt for helpful comments. The 3D models are courtesy of Stanford University, Viewpoint DataLabs, and Rui Bastos at UNC. Special thanks to Steve Marschner for the Cyberware scan of Brian Guenter.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Error-bounded reduction of triangle meshes with multivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Schikore</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SPIE</title>
		<imprint>
			<biblScope unit="volume">2656</biblScope>
			<biblScope unit="page" from="34" to="45" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Interactive multi-resolution surface viewing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Certain</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Salesin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Proceedings</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="91" to="98" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">A general method for preserving attribute values on simplified meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Montani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Rocchini</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;98 Proceedings</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="59" to="66" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Simplifying polygonal models using successive mappings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Olano</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;97 Proceedings</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1997" />
			<biblScope unit="page" from="81" to="88" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Appearancepreserving simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Olano</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Manocha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;98 Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="115" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;97 Proceedings</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Simplifying surfaces with color and texture using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;98 Proceedings</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="263" to="269" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Surface simplification with variable tolerance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gu Eziec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second International Symposium on Medical Robotics and Computer Assisted Surgery</title>
		<meeting>the Second International Symposium on Medical Robotics and Computer Assisted Surgery</meeting>
		<imprint>
			<date type="published" when="1995-11" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Survey of polygonal surface simplification algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Multiresolution surface modeling (SIGGRAPH &apos;97 Course notes #25). ACM SIGGRAPH</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="1" to="05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Accuracy results for the head model of Figure 8, using</title>
	</analytic>
	<monogr>
		<title level="j">Figure</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">7</biblScope>
		</imprint>
	</monogr>
	<note>and our new scheme</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Proceedings</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Efficient implementation of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page" from="27" to="36" />
			<date type="published" when="1998" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
		<title level="m">Mesh optimization. Computer Graphics (SIGGRAPH &apos;93 Proceedings</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A general framework for mesh decimation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Campagna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Graphics Interface &apos;98</title>
		<meeting>Graphics Interface &apos;98</meeting>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Fitting smooth surfaces to dense polygon meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Krishnamurthy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Proceedings</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="313" to="324" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Fast and memory efficient polygonal simplification</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Lindstrom</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization &apos;98 Proceedings</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="279" to="286" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Generating texture map from object-surface texture data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Maruya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics &apos;95)</title>
		<meeting>Eurographics &apos;95)</meeting>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="397" to="405" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Full-range approximation of triangulated polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ronfard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics &apos;96)</title>
		<meeting>Eurographics &apos;96)</meeting>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page" from="67" to="76" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">A texture-mapping approach for the compression of colored 3D triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Soucy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Godin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Rioux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="503" to="514" />
			<date type="published" when="1986" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
