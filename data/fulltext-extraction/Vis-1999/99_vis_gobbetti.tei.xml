<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Time-critical Multiresolution Scene Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Enrico</forename><surname>Gobbetti</surname></persName>
							<email>enrico.gobbetti@crs4.it</email>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><surname>Bouvier</surname></persName>
							<email>eric.bouvier@crs4.it</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">CRS4 Center for Advanced Studies, Research and Development in Sardinia Cagliari</orgName>
								<address>
									<country>Italy ‡</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<addrLine>CRS4, VI Strada Ovest, Z.I. Macchiareddu, C.P. 94, I</addrLine>
									<postCode>09010</postCode>
									<settlement>Uta</settlement>
									<region>CA</region>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Time-critical Multiresolution Scene Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:40+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>multiresolution modeling</term>
					<term>level of detail</term>
					<term>adaptive rendering</term>
					<term>time-critical graphics</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We describe a framework for time-critical rendering of graphics scenes composed of a large number of objects having complex geometric descriptions. Our technique relies upon a scene description in which objects are represented as multiresolution meshes. We perform a constrained optimization at each frame to choose the resolution of each potentially visible object that generates the best quality image while meeting timing constraints. The technique provides smooth level-of-detail control and aims at guaranteeing a uniform, bounded frame rate even for widely changing viewing conditions. The optimization algorithm is independent from the particular data structure used to represent multiresolution meshes. The only requirements are the ability to represent a mesh with an arbitrary number of triangles and to traverse a mesh structure at an arbitrary resolution in a short predictable time. A data structure satisfying these criteria is described and experimental results are discussed.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The steadily increasing complexity of graphics applications presents important challenges to application developers. This is particularly true for highly interactive 3D programs, such as visual simulations and virtual environments, with their inherent focus on interactivity, low-latency, and real-time processing. Many application domains of interactive 3D graphics are characterized by the need to visualize in real-time dynamic graphics scenes with a complex geometric description. These scenes, exceeding millions of polygons and hundreds of objects, cannot be handled directly at interactive speeds even on high-end machines. As there is no upper bound on the complexity of a scene visible from a specific viewpoint, meeting the performance requirements dictated by the human perceptual system requires the ability to trade rendering quality with speed. Ideally, this time/quality conflict should be handled with adaptive techniques, to cope with the wide range of viewing 2 Background and related work</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Levels-of-detail</head><p>Many applications dealing with time-critical graphics include the possibility to store a 3D model in a fixed number of independent resolutions (e.g. OpenInventor <ref type="bibr" target="#b19">[18]</ref> and VRML <ref type="bibr" target="#b24">[23]</ref>). The main advantages of LODs are the simplicity of implementation and the fact that, as LODs are pre-calculated, the polygons can be organized in the most efficient way (triangle strips, display list), exploiting raw graphics processing speed with retained-mode graphics. The main drawbacks of this technique are related to its memory overhead, which severely limits in practice the number of LODs per object. This constraint might introduce visual artifacts due to the sudden changes of resolution between differing representations <ref type="bibr" target="#b7">[8]</ref> and, more importantly, limits the degrees of freedom of the LOD selection algorithm.</p><p>Run-time LOD selection is typically done using static heuristics or feedback algorithms. Static heuristics (e.g. distance-based <ref type="bibr" target="#b24">[23]</ref> or coverage-based <ref type="bibr" target="#b19">[18]</ref> LOD mappings) are not adaptive and are therefore inherently unable to produce uniform frame rates, while feedback algorithms, which adaptively vary LOD mappings based on past rendering times (e.g. <ref type="bibr" target="#b21">[20]</ref>) suffer of unavoidable overshoot and oscillation problems during visualization of discontinuous virtual environments.</p><p>As demonstrated by Funkhouser and Séquin <ref type="bibr" target="#b2">[3]</ref>, to guarantee bounded frame times, predictive algorithms that optimize LOD selection based on an estimate of the time to render the frame must be used. Having a guarantee on the total maximum lag of the application is a necessary precondition for using prediction techniques for lag reduction <ref type="bibr" target="#b25">[24]</ref> Unfortunately, the combinatorial optimization problem associated to LOD selection is equivalent to a version of the Multiple Choice Knapsack Problem <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b18">17]</ref>, which is NP-complete, and approximation algorithms that cannot guarantee optimality have to be used. Current state-of-the-art techniques (Funkhouser and Séquin's greedy algorithm <ref type="bibr" target="#b2">[3]</ref> and Mason and Blake's <ref type="bibr" target="#b18">[17]</ref> incremental technique) produce a result which is only guaranteed to be half as good as the optimal solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Dynamic simplification</head><p>An alternative to per-object LOD selection is to dynamically retessellate visible objects continuously as the viewing position shifts. As dynamic re-tessellation adds a run-time overhead, this approach is suitable when dealing with very large objects or static environments, when the time gained because of the better simplification is larger than the additional time spent in the selection algorithm. For this reason, this technique has been applied when the entire scene, or most of it, can be seen as a single multiresolution object from which to extract variable resolution representations.</p><p>The classic applications of dynamic re-tessellation techniques are in terrain visualization (see <ref type="bibr" target="#b8">[9]</ref> for a survey). Hoppe <ref type="bibr" target="#b11">[11]</ref> introduced view-dependent simplification of progressive meshes, applying it to the visualization of single large objects. Xia et al. <ref type="bibr" target="#b27">[26,</ref><ref type="bibr" target="#b26">25]</ref> discuss the application of progressive meshes to scientific visualization. Luebke and Erikson <ref type="bibr" target="#b16">[16]</ref> apply hierarchical dynamic simplification to large polygonal CAD models, by adaptively processing the entire database without first decomposing the environment into individual objects. To support interactive animated environments composed of many objects, we restrict ourselves to per-object constant resolution rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Overview of the approach</head><p>Our approach relies upon a scene description in which objects are represented as multiresolution triangle meshes, i.e. compact data structures able to efficiently provide on demand a triangle mesh approximation of an object with the requested number of faces. At each frame, we aim to find within a fixed short time the triangle mesh representation for each potentially visible object that produces the "best quality" image within the target frame time. This is done in an optimization phase which takes as input the set of potentially visible objects determined by a culling algorithm (e.g. bounding box or occlusion culling) and selects as output the list of triangle meshes to be rendered.</p><p>More formally, a triangle mesh is a piecewise linear approximation of a 3D shape that can be denoted by a tuple M</p><formula xml:id="formula_0">£ ¤ K ¥ V ¥ A ¦</formula><p>, where K is a simplicial complex specifying the connectivity of the mesh simplices (the adjacency of the vertices, edges, and faces),</p><formula xml:id="formula_1">V £ § v 1 ¥ v 2 ¥ © © © ¥ v m</formula><p>is the set of vertex positions defining the shape of the mesh in ℜ 3 , and A £ §</p><formula xml:id="formula_2">a 1 ¥ a 2 ¥ © © © ¥ a m</formula><p>is the set of attributes associated to the vertices of M. Both the quality of approximation and the rendering complexity are dependent upon the sizes of K and V . A multiresolution representation mr M for a mesh M with n v vertices and n t triangles can be seen as a function that takes as input the desired resolution r 0¥ 1 ! ℜ and produces as output</p><formula xml:id="formula_3">another mesh M r £ mr M ¤</formula><p>r¦ that approximates the same shape with</p><formula xml:id="formula_4">n (desired) t £ # " r n t $ faces.</formula><p>At each frame, the culling algorithm produces thus a a parameterized representation S ¤ r¦ of the visible objects set, which associates to each parameter value r % 0¥ 1 n an actual set of triangle meshes S</p><formula xml:id="formula_5">¤ r¦ &amp; £ ' § m r M 1 ¤ r 1 ¦ ( ¥ m r M 2 ¤ r 2 ¦ ( ¥ © © © ¥ m r M n ¤ r n ¦ .</formula><p>Our goal is to find the optimal parameter vector r) for a viewing configuration W . To this end, we define two heuristics for the visible object set: a cost Even though the multiresolution representation is discontinuous, as there are only n t possible values for a base mesh with n t triangles, we can safely assume that benefit and cost heuristics are smooth. This simplifying assumption, at the core of our approach, introduces an error which is clearly negligible for sufficiently large values of n t with respect to the error intrinsically induced by the use of heuristics. Furthermore, it should also be noticed that, even though this fact is not used in our implementation, smooth transitions between LODs, and thus smooth benefit heuristics, can be obtained using geomorphs.</p><p>Using this formalism, our approach to predictive adaptive rendering is stated as follows:</p><formula xml:id="formula_6">Maximize: bene f it ¤ W ¥ S ¤ r¦ ¦ Subject to: cost ¤ W ¥ S ¤ r¦ ¦ 1 0 t (desired) r 2 0 r 3 1 (1) where 2 and 3</formula><p>denote componentwise inequality, 0 and 1 are constant vectors and t <ref type="bibr">(desired)</ref> is the target display time. The cost and benefit heuristics, the optimization algorithm and the multiresolution mesh representation are discussed in the following sections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Cost and benefit heuristics 4.1 Cost heuristics</head><p>The cost</p><formula xml:id="formula_7">¤ W¥ S ¤ r¦ ¦</formula><p>heuristic provides an estimation of the time necessary to render in a viewing configuration W (camera, lights), a scene composed of the multiresolution objects present in S at resolutions r. Time-critical renderers are typically running on top of a pipelined graphics hardware implementing a Z-buffer algorithm.</p><p>Scene display starts with an initialization phase (initial setup, buffer clears), 4 followed by the sequential rendering of each of the meshes, and finishes by a finalization phase (buffer swap). Initialization and finalization time can be considered constants, while, assuming a fast enough CPU and an efficient multiresolution mesh representation, mesh rendering is dominated either by the time to define rendering attributes and process all the triangles, or by the time to fill the covered pixels, depending on where the pipeline bottleneck is. On most hardware configurations, the time to define rendering attributes and process all the triangles is just dictated by the speed of the graphics pipe-line for all operations before rasterization. On very high-end graphics systems, actually fetching triangles from the multiresolution structure may become the dominant phase. In both cases, however, we assume that the cost remains linear in the number of triangles and we thus only need to determine the "speed" of the dominant phase for the prediction of the rendering time. In other words, the cost of rendering a multiresolution mesh M at resolution r can be estimated as follows:</p><formula xml:id="formula_8">T (setup) 5 max 6 T (tri) r 7 m axtri ¤ M¦ T (pix) coverage ¤ M ¥ W ¦ ¦ 9 8 (2)</formula><p>where maxtri ¤ M¦ is the maximum number of triangles for mesh M, T (setup) is the time associated to setup the rendering environment for an object (e.g. material binding time for OpenGL), T (tri) is the time to send a triangle through the pipeline (i.e. the maximum between the time to fetch a triangle from the multiresolution structure and that of processing it without rasterization), T (pix) is the time to fill a pixel, and coverage</p><formula xml:id="formula_9">¤ M ¥ W ¦</formula><p>is an estimation of the number of pixels covered by mesh M when rendered with a viewing configuration W . From equation 2, we can derive the minimal resolution r <ref type="bibr">(min)</ref> under which a reduction in resolution (and therefore possibly in quality) does not reduce rendering time:</p><formula xml:id="formula_10">r (min) £ T (pix) coverage ¤ M ¥ W ¦ T (tri) maxtri ¤ M¦ (3)</formula><p>The cost heuristics can thus be modeled as:</p><formula xml:id="formula_11">cost ¤ W¥ S ¤ r¦ ¦ ! £ T (fixed) 5 t (max) @ r r 2 r (min) r 3 1 (4)</formula><p>where</p><formula xml:id="formula_12">T (fixed) £ T (init) 5 T (final) 5 ∑ i T (setup) i</formula><p>is the resolutionindependent portion of the frame time, T (init) and T <ref type="bibr">(final)</ref> are the frame initialization and finalization times, t (max) is the vector containing the maximum rendering time T (tri) 7 m axtri ¤ M¦ for each mesh M, and r (min) is the vector of minimal resolutions as of equation 3. The constants T (setup) , T (tri) , T (pix) , T <ref type="bibr">(init)</ref> , and T (final) can be determined by benchmarks in a preprocessing step. As these constants obviously depend on rendering attributes such as shading model, number of light sources, and texturing, we pre-compute their values for each combination of rendering attributes and choose at run-time the appropriate set of values to use for each object.</p><p>The cost model presented here assumes an ideal environment in which rendering time is dictated only by rendering operations. In practice, however, process scheduling, page faults, and other direct or indirect blocking kernel calls are out of user control and have an impact on the rendering time. Our current approach to reduce unwanted variations in frame-rate is to add to T A f ixed B a worst case estimate of the impact of the system and application environment on the rendering time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Benefit heuristics</head><p>The bene f it ¤ W¥ S ¤ r¦ ¦ h euristic provides an estimation of the quality of the image produced when rendering the multiresolution objects in S at resolutions r. We currently use a simple formula derived from <ref type="bibr" target="#b2">[3]</ref>:</p><formula xml:id="formula_13">bene f it ¤ W¥ S ¤ r¦ ¦ ! £ ∑ i importance ¤ S i ¥ W ¦ a ccuracy ¤ S i ¥ r i ¦ (5) where importance ¤ M ¥ W ¦</formula><p>is a factor measuring the importance of the object M from the viewpoint W and accuracy</p><formula xml:id="formula_14">¤ M ¥ r ¦</formula><p>i s a factor measuring how well the mesh at resolution r approximates the mesh at maximum resolution. Currently, we model object importance by</p><formula xml:id="formula_15">importance ¤ M ¥ r ¦ ! £ coverage ¤ M ¥ W ¦ f ocus ¤ M ¥ W ¦ s emantics ¤ M¦ (6)</formula><p>where coverage</p><formula xml:id="formula_16">¤ M ¥ W ¦</formula><p>is an estimation of the number of pixels covered by the object, f ocus</p><formula xml:id="formula_17">¤ M ¥ W ¦</formula><p>is the distance of the object's projection to the center of the screen, and semantics ¤ M¦ is a userdefinable object importance factor (e.g. to impose higher quality for interactively manipulated objects). We have experimented with several definition of the accuracy heuristics. Visually pleasing results were obtained using accuracy</p><formula xml:id="formula_18">¤ M ¥ r ¦ C £ ' D N (max) v r for a mesh with N (max) v</formula><p>vertices at the highest level of detail, which provides diminishing returns at higher resolutions and, intuitively, relates representation accuracy to an indication of the distance between samples on the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Temporal coherence</head><p>The benefit heuristic defined in the previous section measures image quality and does not depend on its variation over time. It is often useful to include temporal coherence as a quality component to minimize sudden changes in resolution of visible objects, for example when extremely large objects appear or disappear. This can be done by including an hysteresis factor penalizing resolution changes in equation 5. We define hysteresis as follows:</p><formula xml:id="formula_19">hysteresis ¤ M ¥ r ¦ £ 1 E 1 n n ∑ iF 1 ¤ r i E r old i ¦ 2 (7)</formula><p>where n is the number of visible objects and rA oldB their resolution at the previous frame. We have found, however, that for most complex scenes hysteresis is not necessary, and this factor is not included in the examples presented in the paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Optimization algorithm</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Idea of a barrier method</head><p>As benefit and cost functions are convex and smooth, a very straightforward method for solving the resolution optimization problem with a guaranteed specified accuracy ε is to use an interior point algorithm for convex optimization <ref type="bibr" target="#b28">[27]</ref>. The idea of interior point methods is to transform the original problem into an effectively unconstrained problem by incorporating in the objective a barrier function which is smooth, convex, and tends to infinity as the parameter approaches the boundary of the feasible set. Thus, if an initial feasible point is known, the transformed problem can be efficiently solved using standard unconstrained convex minimization techniques G (e.g Newton's method <ref type="bibr" target="#b20">[19]</ref>). In our case, using a logarithmic barrier function, the resolution optimization problem becomes:</p><formula xml:id="formula_20">Minimize: 2n 5 1 ε f 0 ¤ x¦ 5 Φ ¤ x¦ Subject to: f i ¤ x¦ H 0 0¥ i £ 1¥ © © © ¥ 2 n 5 1¥</formula><p>Where:</p><formula xml:id="formula_21">x i £ D N (max) v r ¥ i = 1, © © © , n f 0 ¤ x¦ I £ P E n ∑ i importance ¤ S i ¥ W ¦ x i Φ ¤ x¦ I £ P E 2nQ 1 ∑ iF 1 log ¤ E f i ¤ x¦ ¦ f 1 ¤ x¦ I £ T (fixed) 5 ∑ j t (max) j x 2 j E t (desired) f iQ 1 ¤ x¦ I £ E x i 5 D r (min) i ¥ i = 1, © © © , n f iQ 1Q n ¤ x¦ ! £ x i E 1¥ i = 1, © © © , n<label>(8)</label></formula><p>where f 0 is the benefit heuristic of equation </p><formula xml:id="formula_22">¤ ε¦ in which f 0 ¤ x) ¤ ε¦ ¦ S E f 0 ¤ x) ¦ H 0 ε, where x)</formula><p>is the optimum solution of the original problem <ref type="bibr" target="#b28">[27]</ref>.</p><p>In other words, while the computation of the optimal resolution for a scene with potentially visible objects implies the solution of a linear problem with 1 quadratic and 2n linear constraints, a solution with accuracy ε can be found by unconstrained minimization of the smooth convex function g</p><formula xml:id="formula_23">¤ x¦ I £ 2nQ 1 ε f 0 ¤ x¦ 5 Φ ¤</formula><p>x¦ . The generation of a feasible starting point for this problem is straightforward, since we have known lower resolution bounds r (min) and a cost heuristic increasing monotonously with r. The simplest solution is to start from r (min)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5</head><p>ε1 for a small ε. An incremental technique that produces a value which is closer to the optimum is to start from the resolution of the objects computed at the previous frame (or from the minimal resolution for newly visible objects) and to iteratively reduce object resolutions by factor α starting from the objects with the lowest benefit/cost ratio. The iteration terminates when problem becomes feasible or all objects are at the lowest resolution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Time-critical sequential unconstrained minimization</head><p>Depending on the size of the problem and required accuracy, directly solving equation 8 for a small ε may require an excessive number of Newton iterations or fail due to numerical problem. A more efficient way to do it is, instead, to solve a sequence of problems for decreasing values of ε, starting at each step from the previously computed sub-optimal value <ref type="bibr" target="#b15">[15]</ref>. This nonlinear programming technique is known as sequential unconstrained minimization.</p><p>It is easy to prove that, starting with a requested accuracy εA 0B and updating it at each iteration by a factor 1 µ ¥ µ T 1, the algorithm converges to an accuracy ε after exactly 1</p><formula xml:id="formula_24">5 U log µ ¤ εV εA 0B ¦ X W</formula><p>steps <ref type="bibr" target="#b15">[15]</ref>. In our case, the optimization algorithm itself has to work in a time-critical context, which means that it has to ensure that an approximate result is available at certain time-deadlines. The termination criterion for a time-critical implementation of the algorithm has thus to be the expiration of the allocated time and not only an accuracy criterion.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm 1 Time-critical rendering optimization</head><p>Require: a visible object set S ¤ r¦ of size n Given: timing constraints t <ref type="bibr">(desired)</ref> , t (optimize) Given: desired accuracy ε (desired) Given: machine parameters T (setup) , T (tri) , T (pix) , T (init) , T (final) Given: algorithm parameters εA 0B </p><formula xml:id="formula_25">Y εA 0B r) ¤ ε¦ Y arg min r ¤ 2nQ 1 ε f 0 ¤ r¦ 5 Φ¦ r Y r) ¤ ε¦ while ε T ε (desired) or time elapsed`t (optimize) do ε Y ε µ r) ¤ ε¦ Y arg min r ¤ 2nQ 1 ε f 0 ¤ r¦ 5 Φ¦ r Y r)</formula><p>¤ ε¦ end while Ensure: r is ε-suboptimal Ensure: ε 0 ε <ref type="bibr">(desired)</ref> or time elapsed a t (optimize) Ensure: rendering time of S ¤ r¦ will be less than t <ref type="bibr">(desired)</ref> This idea is used in algorithm 1. The proposed method has the following properties: ¢ controlled optimization and rendering time: both the CPU time spent in the optimization and the time that will be spent in rendering the meshes at the resolution suggested by the optimization algorithm are parameters of the algorithm and can be externally imposed; ¢ customizable quality measure: the algorithm does not depend on the specific quality measure presented in this paper but only on the fact that the function is convex and smooth; ¢ certificate of sub-optimality: the algorithm not only provides a suboptimal solution but also a bound on the distance in quality from the optimal one. This measure provides a direct indication on whether the resources allocated to the optimization are sufficient which is of great help during the design phase of time-critical programs.</p><p>While certain other algorithms share some of these properties, they typically do not meet the capability of our algorithm in all of these areas. Its characteristics make it an ideal candidate for an optimization stage in a time-critical rendering pipeline.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.3">Time-critical rendering pipeline</head><p>A time-critical rendering pipeline aims to display an image at certain time-deadlines independently of the complexity of the scene. To reach this goal, we exploit the properties of our algorithm by adaptively controlling at each frame both the time budget allocated to the optimization and the desired display time (see <ref type="figure" target="#fig_2">figure 1)</ref>.</p><p>The parameters under system control are the maximum visual feedback lag T <ref type="bibr">(lag)</ref> , and the fraction of the frame time to devote to optimization. At each frame, we perform the culling, optimization, and display steps in a sequence. The culling step's time may vary and is dependent on the type of algorithm used and on the complexity of the scene as seen from the current viewpoint. Before starting the optimization step, we measure how much of the frame time is still available and allocate in this range the appropriate time budgets for the optimization and display steps. The optimization step is run for the allocated time and its result is then passed to the final display stage. This time-critical computing approach bounds the maximum visual feedback lag and enables the use of prediction techniques that extrapolate past user input data to future time points for lag reduction <ref type="bibr" target="#b25">[24]</ref>. On a single-processor machine, the maximum visual feedback lag also dictates the maximum visual feedback frequency. On a multi-processor machine, visual feedback frequency can be independently controlled using separate threads for each pipeline stage, as in <ref type="bibr" target="#b21">[20]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Multiresolution mesh representation</head><p>Our optimization algorithm is independent from the particular data structure used to represent multiresolution meshes. The only requirements are the ability to represent a mesh with an arbitrary number of triangles and to traverse the structure at arbitrary resolutions faster than the graphics pipe-line or, at least, in a time compatible with our linear cost model. An additional requirement for our approach to be practical for large scene databases is data structure compactness.</p><p>The Progressive Mesh (PM) <ref type="bibr" target="#b11">[11]</ref> representation is a suitable candidate structure. However, the PM representation is compact but cannot be rendered directly, since it has first to be traversed to construct a single resolution mesh structure which is then used for rendering <ref type="bibr" target="#b12">[12]</ref>. Managing the dynamic mesh structures associated to each multiresolution representation introduces both time and space overheads in scene rendering application. Experimental results <ref type="bibr" target="#b12">[12]</ref> indicate a reconstruction rate of less than 200K triangles/sec on a Pentium Pro 200 Mhz. While this cost can be amortized on more than one frame if the single resolution meshes are cached, this is at the expense of memory. Moreover, exploiting per-object frameto-frame coherency is only a partial solution for complex scenes, because of the discontinuities in scene complexity caused by objects entering into or exiting from the viewing frustum <ref type="bibr" target="#b2">[3]</ref>.</p><p>In this section, we propose a simple multiresolution triangle mesh structure (TOM: Totally Ordered Mesh) that efficiently supports vertex packing and indexing. The structure is compact, requiring only a small overhead over the single full resolution mesh, and provides fast triangle and vertex traversal rates at any resolution. A similar structure has been independently developed by Guéziec et al. <ref type="bibr" target="#b6">[7]</ref> for streaming geometry in VRML.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">TOM: Totally Ordered Mesh</head><p>Several algorithms have been recently published that simplify a polygonal mesh by iteratively contracting vertex pairs (e.g. [14,  </p><formula xml:id="formula_26">V V 1 1 V V 2 2 V V rv V V Nv T T 1 1 T T 2 2 T T rt T T Nt</formula><formula xml:id="formula_27">¤ v 1 ¥ v 2 ¦ c b ˜v, replaces two vertices ¤ v 1 ¥ v 2 ¦</formula><p>w ith a single target point v to which all the incident edges are linked, and removes any triangles that have degenerated into lines or points. The operation is quite general, and can express both edge-collapse and vertex clustering algorithms. The primary difference between vertex pair contraction algorithms lies in how the particular vertex pairs to be contracted are chosen and in where the new vertices are positioned. We define vertex substitution, denoted v 1 b v 2 , the restricted form of vertex pair contraction where the target pointṽ is constrained to be the second vertex of the pair (v 2 ). By iteratively applying vertex substitution, a triangle mesh can be reduced by removing one vertex and possibly some degenerated faces at a time. Recent research results demonstrate that good simplification quality and speed can be obtained using this technique <ref type="bibr" target="#b0">[1]</ref>.</p><p>As iterative vertex substitution does not modify vertex data and does not add new vertices, the only information that has to be stored explicitly is the vertex substitution history of each vertex. A total order can be defined both on the vertex list and on the triangle list based on the contraction resolution. Sorting according to this order after the simplification generates a compact and efficient data structure (see <ref type="figure" target="#fig_3">figure 2)</ref>.</p><p>By ordering the vertex list, we obtain a packed representation where the active vertices at vertex resolution r v £ n N v are exactly the first n ones in the vertex array of size N v . Moreover, by ordering the triangle list, we have a way to iterate through the triangles that define the mesh at an arbitrary resolution in a time depending only on the number of active triangles and the lengths of the vertex substitution chains.</p><p>The memory overhead introduced to store the multiresolution mesh is limited to the space required to store the vertex substitution history associated to vertex pair contraction. We encode a vertex substitution by associating to each vertex the vertex resolution at which the transformation occurs and the reference to the vertex by which it is to be substituted. As vertices are sorted according to their resolution, only the vertex reference needs to actually be stored, since the vertex resolution is implicit in the vertex index. The minimal vertex resolution of a triangle, i.e. the vertex resolution at which a triangle is removed from the mesh because of the contraction of one of its edges does not need to be stored, as it can be retrieved in a short time by traversing the substitution chains of its vertices.</p><p>To render a mesh with a specified number of triangles n, we first determine the minimal vertex resolution of triangle number n, then traverse the first n triangles following the vertex chains until the active vertices are reached. The lengths of these chains are limited and relatively independent from the model size. In any case the depth d at full resolution is always so that triangle traversal at full resolution is strictly linear. When resolution decreases, the traversal rate also decreases but slowly, because vertex substitution cannot, by definition, create too long chains for all the vertices. In fact, each vertex substitution v 1 b v 2 increments by one the depth of all the vertex chains containing vertex v 1 but also keeps unchanged the length of all chains containing vertex v 2 . With this representation, the space overhead over a single-resolution mesh representation is equal to just one vertex index per vertex. For a typical mesh of N t £ 2N v triangles, considering to use a single word to represent both a vertex index and a floating point number, the overhead associated to the above structure is of about 8% of the single full resolution mesh memory footprint when only position and normal are associated to vertices and becomes smaller if other attributes such as colors and texture coordinates are present.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Implementation and results</head><p>An experimental software library supporting the time-critical multiresolution scene rendering algorithm described in this paper has been implemented and tested on Silicon Graphics IRIX and Windows NT machines. The results presented here were obtained on a Silicon Graphics 320 PC running Windows NT 4.0 and configured with a single 500 MHz Pentium III processor with 512 Kb L2 cache, 256 Mb RAM, and a Cobalt graphics chipset.</p><p>To test the behavior of our algorithm, we have written a simple walkthrough application on top of our multiresolution modeling and time-critical rendering libraries. In this application, the culling phase uses a simple bounding box test, the optimization phase uses the algorithm presented in this paper, and rendering is performed in OpenGL, with one positional light, one material per object, Gouraud shading, and one normal per vertex. The application is single-threaded and the high resolution QueryPerfor-manceCounter API is used for all timing measures.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Cost model coefficients</head><p>The cost model coefficients corresponding to the rendering environment used in the benchmark application where determined experimentally by rendering sample objects with a variety of sizes and LODs. <ref type="table" target="#tab_2">Table 1</ref> summarizes the values used for the tests.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Description</head><p>Cost model coeff. Value Initialization/finalization T (setup)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5</head><p>T (final) 13889µs Triangle draw T <ref type="bibr">(tri)</ref> 1© 35µsV tri Pixel fill T <ref type="bibr">(pix)</ref> 0© 06µsV pix Material setup T <ref type="bibr">(init)</ref> 232µsV ob j </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Test environment</head><p>We have recorded various parameters during the walkthrough of a test scene containing 166 objects for a total of 1,393,072 polygons (see figure 3 as well as figure 6 in color plates). Images were displayed on a 512x512 window. The camera path has been established so as to include various extreme viewing configurations. All polygons are initially visible from Point A and are progressively exiting from the viewing </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Experimental results and discussion</head><p>The number of potentially visible triangles at each frame, as well as the number of triangles actually rendered to meet a display time constraint of t <ref type="bibr">(desired)</ref> £ 100ms is presented in figure 4. <ref type="figure">Figure 5</ref> shows frame time statistics for each observer viewpoint along the test path. The predicted frame time closely matches the actual measured frame time, validating our cost model assumptions.</p><p>The actual frame time is maintained below the desired time even in the presence of large variations in visual complexity. Even with a relatively large number of objects, we can see that the optimization time remains relatively small compared to the display time. The tests have been performed using a time constraint for the optimization step of t A opt B £ 20ms and a target quality accuracy of 5 %. For large portions of the path, this accuracy has been reached in a time sensibly inferior to the allocated limit, leaving more time for other system tasks. In a more elaborate implementation, a feedback algorithm could be used for the adaptation of t A opt B . <ref type="figure">Figure 7</ref> in the color plate section presents the scene from two viewpoints. In the first row, the objects are rendered in flat shading without any resolution adjustment. The middle row images have been recorded in flat shading using our resolution optimization algorithm. The last row of images has been recorded in the same conditions as the middle row, but depicts the resolution chosen for each object, darker shades of gray representing more detail. The mapping illustrates the effect of the benefit heuristic on the distribution of the polygon budget.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">Conclusions and future work</head><p>We have described a framework for time-critical rendering of graphics scenes with a complex geometric description. Our technique relies upon a scene description in which objects are represented as multiresolution meshes. We perform a constrained optimization at each frame to choose the resolution of each potentially Frame Time t t <ref type="bibr">(desired)</ref> t t <ref type="bibr">(optimize)</ref> Measured t <ref type="bibr">(display)</ref> Measured t (frame) Predicted t <ref type="bibr">(frame)</ref> Measured t <ref type="bibr">(optimize)</ref> Measured t <ref type="bibr">(cull)</ref> A A C C <ref type="figure">Figure 5</ref>: Frame time statistics for each observer viewpoint along the test path. Predicted time closely matches the actual frame time, which is always maintained below the targeted 100ms.</p><p>visible object that generates the best quality image while meeting timing constraints. The technique provides smooth level-of-detail control and aims at guaranteeing a uniform, bounded frame rate even for widely changing viewing conditions. Furthermore, our algorithm provides for each image both a quality measure and a bound on the distance in quality from the optimal one. The typical accuracy of our solutions is less than 5%, which is an order of magnitude better than what can be guaranteed by current combinatorial optimization approaches. The optimization algorithm is independent from the particular data structure used to represent multiresolution meshes. The only requirements are the ability to represent a mesh with an arbitrary number of triangles and to traverse the structure at an arbitrary resolution in a short predictable time. A data structure satisfying these criteria has been presented in section 6.</p><p>Our experimental results demonstrate the feasibility of the discussed optimization approach for time-critical rendering on a PC of scenes composed of hundreds of objects and millions of triangles. Our current work is concentrating on extending our approach to per-object view-dependent LODs using a two-step optimization process and on exploiting the possibilities offered by the general convex optimization framework for improving the benefit heuristics with the incorporation of a specific perceptual component. In parallel, we are exploring simpler and possibly faster optimization techniques that exploit the particular structure of the optimization problem associated with the current simplified heuristics. Finally, we plan to explore feedback techniques for dynamically allocating a time budget for the time-critical sequential optimization procedure. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>estimates the time required to render a scene containing the visible objects at resolution r, and a bene f it ¤ W¥ S ¤ r¦ ¦ heuristic, which estimates the quality of the rendered image.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>Time-critical rendering pipeline. The total frame time is imposed by the user. The time budget allocated to the optimization and display stages is decided after measuring how much time has been spent in the culling stage.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 :</head><label>2</label><figDesc>TOM data structure. Multiresolution meshes are stored using a vertex list and a triangle list sorted according to contraction resolution.5, 6, 11, 21, 4]). A vertex pair contraction operation, denoted</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Scene walkthrough environment. Test scene at full resolution contains 166 objects for a total of 1,393,072 triangles. The path of the camera is defined by the segments [A,B,C,D] frustum until point C is reached. After Point C, as the camera is suddenly changing orientation, a large number of objects becomes immediately visible. Without resolution adaptation, rendering times on the machine used for the tests varies from 50 to 1950 milliseconds per frame depending on the number of visible objects.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Visible vs. displayed polygons during the test scene walkthrough. All polygons are initially visible from Point A and are progressively exiting from the viewing frustum until point C is reached. After Point C, as the camera is suddenly changing orientation, a large number of objects becomes immediately visible.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 :Figure 7 :</head><label>67</label><figDesc>[COLOR PLATE] Test scene at full resolution contains 166 objects for a total of 1,393,072 triangles. The path of the camera is defined by the segments [A,B,C,D] [COLOR PLATE] Images rendered from two points of view. Top images contain full resolution objects. Objects in middle row images have adaptive resolution and are rendered in flat shading. The last row of images has been recorded in the same conditions as the middle row, but depicts the resolution chosen for each object, darker shades of gray representing more detail.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>non negative if the cost constraints in equation 4 are met, and Φ is the logarithmic barrier function penalizing constraint violations. It can be demonstrated that the solution of this problem is at a point x)</figDesc><table><row><cell>functions which are</cell><cell>5, f 1</cell><cell>¥</cell><cell>© © © R ¥</cell><cell>f 2nQ 1 are</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 : Cost model coefficient for benchmark application Ex</head><label>1</label><figDesc></figDesc><table><row><cell>-</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The authors would like to thank the anonymous reviewers for their many helpful comments and suggestions.</p><p>This research is partially sponsored by the European project CAVALCADE (ESPRIT contract 26285). We also acknowledge the contribution of Sardinian regional authorities.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Efficient decimation of complex triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Campagna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-P</forename><surname>Seidel</surname></persName>
		</author>
		<idno>3</idno>
		<imprint>
			<date type="published" when="1998" />
			<pubPlace>Germany</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Computer Graphics Group, University of Erlangen</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Representation and visualization of terrain surfaces at variable resolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Cignoni</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Scopigno</surname></persName>
		</author>
		<idno>0178-2789</idno>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="page" from="199" to="217" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Séquin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIG-GRAPH &apos;93 Proc</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Surface simplification using quadric error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<ptr target="http://www.cs.cmu.edu/˜garland/quadrics" />
	</analytic>
	<monogr>
		<title level="m">SIG-GRAPH 97 Proc</title>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Surface simplification with variable tolerance</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Guéziec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Second Annual Intl. Symp. on Medical Robotics and Computer Assisted Surgery (MRCAS &apos;95)</title>
		<imprint>
			<date type="published" when="1995-11" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Surface simplification inside a tolerance volume</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Guéziec</surname></persName>
		</author>
		<idno>RC 20440</idno>
		<ptr target="http://www.watson.ibm.com:8080/searchpaper.shtml" />
	</analytic>
	<monogr>
		<title level="j">Tech. rep</title>
		<imprint>
			<biblScope unit="volume">10598</biblScope>
			<date type="published" when="1996-03" />
		</imprint>
	</monogr>
	<note type="report_type">IBM Research Report</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">A framework for streaming geometry in VRML</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Guéziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="68" to="78" />
			<date type="published" when="1999-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Multiresolution modeling for fast rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<ptr target="http://www.cs.cmu.edu/˜ph" />
	</analytic>
	<monogr>
		<title level="m">Proc. Graphics Interface &apos;94</title>
		<meeting>Graphics Interface &apos;94<address><addrLine>Banff, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1994-05" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Survey of polygonal surface simplification algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">S</forename><surname>Heckbert</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<ptr target="http://www.cs.cmu.edu/˜ph" />
		<editor>Tech. rep., CS Dept., Carnegie Mellon U.</editor>
		<imprint/>
	</monogr>
	<note>to appear</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Virtual voyage: Interactive navigation in the human colon</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hong</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Muraki</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kaufman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Bartz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 97 Conference Proceedings</title>
		<imprint>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<idno>ISBN 0-89791-896-7</idno>
	</analytic>
	<monogr>
		<title level="m">Annual Conference Series</title>
		<editor>T. Whitted</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<biblScope unit="page" from="27" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<ptr target="http://www.research.microsoft.com/research/graphics/hoppe/papers.html" />
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;96 Proc</title>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Efficient implementation of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computers and Graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="36" />
			<date type="published" when="1998-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Smooth view-dependent level-of-detail control and its application to terrain rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization&apos;98</title>
		<meeting>IEEE Visualization&apos;98</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="35" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Mesh optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdon-Ald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
		<ptr target="http://www.research.microsoft.com/research/graphics/hoppe/papers.html" />
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH &apos;93 Proc</title>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Numerical Methods for Non-Linear Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lootsma</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1972" />
			<publisher>Academic Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">View-dependent simplification of arbitrary polygonal environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Luebke</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Erikson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 97</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<idno>ISBN 0-89791-896-7</idno>
		<title level="m">Annual Conference Series, ACM SIGGRAPH</title>
		<editor>T. Whitted</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1997-08" />
			<biblScope unit="page" from="199" to="208" />
		</imprint>
	</monogr>
	<note>Conference Proceedings</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Automatic hierarchical level of detail optimization in computer animation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E W</forename><surname>Mason</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Blake</surname></persName>
		</author>
		<idno>1067-7055</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Eurographics &apos;97</title>
		<meeting>Eurographics &apos;97</meeting>
		<imprint>
			<date type="published" when="1997-08" />
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="191" to="200" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Open Inventor C++ Reference Manual: The Official Reference Document for Open Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Open Inventor Architecture</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Group</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA, USA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<title level="m">Numerical Recipes</title>
		<meeting><address><addrLine>Cambridge</addrLine></address></meeting>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
	<note>second ed</note>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">performer: A high performance multiprocessing toolkit for real-Time 3D graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rohlf</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Helman</surname></persName>
		</author>
		<idno>0-89791-667-0</idno>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH</title>
		<editor>A. Glassner</editor>
		<meeting><address><addrLine>Orlando, Florida</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press</publisher>
			<date type="published" when="1994-07-29" />
			<biblScope unit="page" from="381" to="395" />
		</imprint>
	</monogr>
	<note>Proceedings of SIGGRAPH &apos;94</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Full-range approximation of triangulated polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ronfard</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. Eurographics &apos;96</title>
		<meeting>Eurographics &apos;96</meeting>
		<imprint>
			<date type="published" when="1996-08" />
			<biblScope unit="volume">15</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Cavalcade: A system for collaborative prototyping</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Torguet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Balet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Gobbetti</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-P</forename><surname>Jessel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Duchon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Bouvier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. International Scientific Workshop on Virtual Reality and Prototyping</title>
		<meeting>International Scientific Workshop on Virtual Reality and Prototyping<address><addrLine>Laval, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">International Specification ISO/IEC IS 14772-1</title>
	</analytic>
	<monogr>
		<title level="m">VRML 97</title>
		<imprint>
			<date type="published" when="1997-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Lag in multiprocessor virtual reality</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Wloka</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Presence: Teleoperators and Virtual Environments</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="50" to="63" />
			<date type="published" when="1995-09" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Adaptive Real-Time Level-of-Detail-Based Rendering for Polygonal Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>El-Sana</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="171" to="183" />
			<date type="published" when="1997-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Dynamic view-dependent simplification for polygonal models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Xia</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
		<idno>IEEE. ISBN 0-89791-864-9</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization &apos;96</title>
		<imprint>
			<date type="published" when="1996-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Interior Point Algorithms: Theory and Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Ye</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wiley-Interscience series in Discrete Mathematics and Optimization</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>John Wiley &amp; Sons</publisher>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
