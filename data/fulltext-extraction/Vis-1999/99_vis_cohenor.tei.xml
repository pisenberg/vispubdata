<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Progressive Compression of Arbitrary Triangular Meshes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Cohen-Or</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel Aviv University Tel</orgName>
								<address>
									<postCode>69978</postCode>
									<settlement>Aviv</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Levin</surname></persName>
							<email>levin@math.tau.ac.il</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel Aviv University Tel</orgName>
								<address>
									<postCode>69978</postCode>
									<settlement>Aviv</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Offir</forename><surname>Remez</surname></persName>
							<email>offirrg@math.tau.ac.il</email>
							<affiliation key="aff0">
								<orgName type="department">Computer Science Department School of Mathematical Sciences</orgName>
								<orgName type="institution">Tel Aviv University Tel</orgName>
								<address>
									<postCode>69978</postCode>
									<settlement>Aviv</settlement>
									<country key="IL">Israel</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Progressive Compression of Arbitrary Triangular Meshes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>compression</term>
					<term>streaming</term>
					<term>progressive meshes</term>
					<term>simplification</term>
				</keywords>
			</textClass>
			<abstract>
				<p>In this paper we present a mesh compression method based on a multiresolution decomposition whose detail coefficients have a compact representation and thus smaller entropy than the original mesh. Given an arbitrary triangular mesh with an irregular connectivity, we use a hierarchical simplification scheme, which generates a multiresolution model. By reversing the process we define a hierarchical progressive refinement process, where a simple prediction plus a correction is used for inserting vertices to form a finer level. We show how the connectivity of an arbitrary triangulation can be encoded efficiently by a coloring technique, and recovered incrementally during the progressive reconstruction of the original mesh.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The most common representation of 3D geometric models is triangular meshes. Although they have had prominent representation in computer graphics for a long time, only recently has more attention been devoted to their compression <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b18">19,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b17">18]</ref>. With the increasing popularity of Web-based applications, compression and streaming techniques are today more important than ever. The rich knowledge available for data compression, and in particular for images <ref type="bibr" target="#b14">[15]</ref>, cannot be directly applied to triangular meshes, mainly because arbitrary triangular meshes have no regular structure, as is the case in image data for example.</p><p>Mesh compression algorithms are required to compress both the geometry data and the connectivity data. The geometry is represented by the set of coordinates of the mesh's vertices. To enable effective compression of the geometry, the coordinate values are first quantized to a fixed number of bits. The connectivity data is the vertex/triangle adjacency list, sometimes also referred to as the topology. In a naive representation, the connectivity data is about twice as large as the geometry data. Mesh compression algorithms are normally required to use a lossless compression of the connectivity data.</p><p>Current mesh compression methods are based on the trianglestrips technique <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b0">1,</ref><ref type="bibr" target="#b6">7]</ref>. In <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b13">14,</ref><ref type="bibr" target="#b7">8]</ref> the triangular mesh is traversed along sequences of triangles, which look like peeled strips. The vertices along the strips are encoded as displacement vectors from a point extrapolated from previous vertices along the strips. Touma and Gotsman <ref type="bibr" target="#b19">[20]</ref> and independently Rossignac <ref type="bibr" target="#b13">[14]</ref> developed methods that compress the connectivity data to less than 2 bits per vertex on average. However, a successful compression of the connectivity alone is not enough since then the compression of geometric data dominates the results. Indeed, Denny and Sohler <ref type="bibr" target="#b4">[5]</ref> have shown that the connectivity of a given graph can be encoded in zero bits by a permutation of a sufficiently large set of vertices. This is an interesting theoretical result; encoding an arbitrary permutation of coordinates is, however, too expensive for a space-efficient encoding of a mesh.</p><p>Current mesh compression methods are basically "flat", or can be applied to refine one discrete level of detail to the next <ref type="bibr" target="#b17">[18]</ref>. They do not have the desired property of a progressive mesh <ref type="bibr" target="#b8">[9]</ref>, in which every prefix of the encoded data is a progressive approximation of the original 3D shape. The progressiveness property is important to compensate for low network bandwidth and transmission latency. The compression method presented here is based on a multiresolution decomposition, which inherently has a progressive property. However, unlike the progressive meshes, here the size of the data that is required to faithfully recover the original mesh is comparable to any known technique of mesh compression. Recently, a new progressive meshes technique has been developed <ref type="bibr" target="#b12">[13]</ref>, where a batch of vertex-split operations are encoded efficiently to yield a compressed progressive mesh representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Multiresolution Decomposition</head><p>Multiresolution analysis and wavelets have matured as a versatile tools for representing functions and analyzing features at multiple levels of detail. In recent years they gained attention in the computer graphics community, among various applications, also as a mechanism to analyze 3D meshes <ref type="bibr" target="#b11">[12]</ref>. The basic idea is to recursively filter, or decompose a given shape into a lower resolution segment and a higher resolution detailed segment (known as detail coefficients). The motivation is that the low-resolution coarser versions of the shape are a good approximation of the original shape, while the detail coefficients locally perturb the shape to contribute the small details. If the decomposition is successful, many of the detail coefficients are small and their contribution to the final shape is minor. Many image compression methods are based on a thresholding scheme that eliminates the insignificant detail coefficients <ref type="bibr" target="#b14">[15]</ref>.</p><p>Multiresolution analysis methods for the compression of 3D meshes have been applied only in terms of the number of triangles representing the mesh at various levels of detail. However, lossless compression methods of 3D meshes, which compress in terms of the total number of bits required to represent the mesh have not been reported. In this paper we show a multiresolution analysis for which the representation of a given mesh is compact at every level of detail, and in particular for the original mesh.</p><p>Traditional wavelets are constructed over regular structures. The construction of wavelets over arbitrary meshes is currently an interesting challenge <ref type="bibr" target="#b9">[10]</ref>. Pioneering work by Lounsbery et al. <ref type="bibr" target="#b11">[12]</ref> introduced subdivision wavelets defined over arbitrary surfaces, but requires the mesh to have a subdivision connectivity. To overcome this prerequisite Eck et al. <ref type="bibr" target="#b5">[6]</ref>, and recently also Lee et al. <ref type="bibr" target="#b10">[11]</ref> have developed remeshing techniques by which the arbitrary mesh can be retriangulated into a subdivision connectivity, where the re-fined mesh is guaranteed to converge to the original shape within a specified tolerance. Yet, this two-step technique does not provide the means to fully restore the original mesh. It should be emphasized that mesh compression techniques are required to restore the original connectivity. Indeed, most of the efforts of the mesh compression methods have been invested in a compact encoding of the unstructured connectivity of the triangulation <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b19">20,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b17">18]</ref>.</p><p>In this paper we show a lossless compression method based on a multiresolution decomposition where the detail coefficients have a compact representation and thus smaller entropy than the original mesh. Similarly to <ref type="bibr" target="#b9">[10]</ref>, we use a hierarchical simplification scheme, which generates a multiresolution model of the given triangular mesh. By reversing the process we define a hierarchical progressive refinement process, where a simple prediction plus a correction is used for reconstructing vertices to form a finer level. Furthermore, the connectivity of triangulation is encoded efficiently and recovered incrementally during the progressive reconstruction of the original mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Prediction and Vertex Insertion</head><p>Assume that we start with an abstract set Mn of samples. The set can be partitioned into two sets Mn,1 and Wn, which are referred to as wavelet subsets. By assembling the two subsets, the original set Mn can be recovered. Using the correlation that exists in the set, one can try to predict the set Wn using an abstract predictor P, in the hope that PMn,1 is close to Wn. Then, we can define new wavelet coefficients as wn = Wn PMn,1. Now, the original set Mn is reassembled by Mn = Mn,1 P Mn,1 wn. By iterating this process the original set can be represented by the set fM0; w n:::w1g. If the prediction is successful, the coefficients wn have a small magnitude and the new representation has a smaller entropy than the representation of the original set Mn. Such a prediction technique is used as one of the building blocks in the lifting scheme <ref type="bibr" target="#b16">[17]</ref> as well as in multigrid methods <ref type="bibr" target="#b2">[3]</ref>.</p><p>Assuming the original mesh has a subdivision connectivity, different subdivision schemes can be used as good prediction operators. The original mesh Mn can be decomposed into Mn,1 and Wn by applying some decimation algorithm over its vertices <ref type="bibr" target="#b15">[16]</ref>, where Wn consists of the set of removed vertices, and Mn,1 is the simplified mesh. Then by interpolating over the triangles of Mn,1 we create a set of points PMn,1, which serves as a prediction for the set Wn. The displacement vectors between the removed vertices and the interpolated points are the shorter coefficients wn.</p><p>The key idea is to construct a multiresolution of an arbitrary mesh with irregular connectivity. Unlike traditional wavelets, here the domain is unstructured, and therefore the refinement is not applied uniformly during the reconstruction stage. An interpolation scheme predicts a point to which we add a displacement vector to recover a vertex p. This new vertex is inserted into the triangulation while restoring its connectivity in Mi+1. Note that recovering the original connectivity is necessary to correctly decode the data encoded over the representation of Mi+1. This will become clearer in the next section where we show how to encode and decode a given mesh.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Encoding and Decoding</head><p>The series of vertex insertion operations, which reconstruct a given mesh, is found by reversing a mesh decimation procedure <ref type="bibr" target="#b15">[16]</ref>.</p><p>Given a mesh Mi we apply a simplification algorithm that iteratively removes sets of vertices ui to yield a simplified version Mi,1. However, at each iteration the selected set ui must be an independent set <ref type="bibr" target="#b1">[2]</ref>, that is, there is no edge connecting any two vertices in ui. Removing a vertex from a triangulation requires removing all the edges connected to the vertex and retriangulating the hole with a new set of triangles. Let us define the triangles that cover a given hole as a patch. Once all the holes are triangulated, patches are interpolated to predict a set of points, which serves as a base for the displacement vector to the removed vertices. The predicted points are quantized so the displacement vectors can be represented by a small number of bits, with smaller entropy than the original vertices. For each patch, one displacement vector is stored.</p><p>The key idea is to encode the triangles of a patch by means of coloring them, such that the decoder can detect the patches during the reconstruction stage based on the triangle colors. Thus, adjacent patches cannot be assigned the same color, where two patches are said to be adjacent if they share an edge. The triangles of Mi are recursively traversed and each patch is assigned a color that is different from the colors assigned to its adjacent patches. Since the patches do not tessellate the entire mesh, we use a null color for the triangles that are not included in any patch. The rest of the triangles are colored in only three colors (see <ref type="figure">Figure 1</ref>). Three colors are not always enough, but in practice such cases are rare, and can be avoided by giving up the removal of some vertices.</p><p>This coloring technique requires 2 bits per triangle. Thus, the cost of encoding a vertex is the cost of coloring the triangles of the patch created by its removal. Assuming the degree of a vertex is 6, then its removal requires coloring four triangles, that is, 8 bits per vertex removal. Note that there is some overhead since some triangles are not included in any patch. To reduce this overhead, when selecting the vertices to be removed we strive to create a maximal independent set.</p><p>The above coloring technique can be improved by triangulating the patches by a dependent triangulation that can be encoded with only one bit per triangle. A hexagonal patch (the most popular patches in common triangulation) is triangulated by the three edges of the shape of the letter Z (see <ref type="figure">Figure 2</ref>(1-2)). Then its two middle triangles are encoded with a '1' bit (purple in the figure) and the two external triangles with a '0' bit (white in the figure). Pentagons are triangulated with three triangles where the middle one is encoded with a '1' and the others two with a '0'. Here the middle triangle Tm must be selected such that the two other triangles share a vertex with the smallest angle in Tm. For an n-gon the concept is the same; the sequences of 'alternating' triangles are colored with '1's and the two externals with '0's (see <ref type="figure">Figure 2</ref>(3)). While encoding adjacent patches we need to avoid edge-adjacent '1'-encoded triangles. Recovery of the patches is guaranteed since the sequence of adjacent '1's has a known shape, from which the two external '0'-encoded triangles are uniquely recovered and, as a consequence, the boundary of the patch is also uniquely recovered. Note that with this technique, a quadrilateral cannot be encoded. However, this encoding requires only one bit per triangle. <ref type="figure">Figure 3</ref> illustrates a 2-coloring of a mesh.</p><p>A sequential order of the triangles of Mi is defined by a breadthfirst traversal of the triangles. One bit is associated with each triangle and stored in a binary vector, which represents the colors of the triangles. The length of the vector is jMij; the number of triangles of the mesh, Mi. The vector is then compressed by some lossless compression technique. In our implementation we used an LZ encoder.</p><p>During reconstruction, for each recovered patch we remove its triangles and predict the location of the vertex that was removed when the patch was created. By adding the associated displacement vector to the predicted point, the original location of the vertex is recovered. Then we simply connect the vertices of the patch to the inserted vertex. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">The Prediction Operator</head><p>Given a patch the prediction operator predicts the location of a new vertex based on the known vertices of the patch fvig and their immediate neighbors. Lacking any prior knowledge, the best guess seems to assume the surface to be smooth and use a prediction based upon a local polynomial interpolant with respect to a local reference plane. The basic idea is illustrated in <ref type="figure">Figure 4</ref>: let vc = 1 n P n i=1 vi, and P be the predicted point "above" vc. If the encoded vertex v is indeed closer to P than to vc, then encoding v , P is better than v , vc. However, this is not necessarily the case. Assume the patch has a diameter h and the surface is locally smooth, kP , vck = Oh 2 , while kv , Pk as well as kv , vck is Oh. Therefore, the prediction of the polynomial interpolant does not pay off whenever h is either small or large. Since the decompression time is an important factor, we make a simple and effective prediction by means of vc.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Results</head><p>As discussed in Section 4, the patches can be colored by using either four colors or two. The 4-color technique requires 2 bits per triangle and the 2-color technique only 1 bit per triangle. Denoting by m the number of bits used to color the triangles, the cost of encoding a d-vertex is md , 2 bits, since the patch created by removing a d-degree vertex consists of only d , 2 triangles. Using the 2-color technique, the removal of a 6-degree vertex requires 4 bits, and a 5-degree vertex only 3 bits.</p><p>From the Euler formula we know that the average of the degrees is always close to six. However, the distribution of the vertex's degrees can vary. If the mesh of a given level of detail consists mainly of vertices of degree 5 and higher, the 2-color technique is very effective. However, if the mesh consists mainly of vertices of degree 4 and 3, the 4-color technique is more effective since the 2-color technique cannot be applied to low degree vertices. On the other hand, since the patches created by the removal of low degree vertices consists of one or two triangles only, the cost of 2 bits per triangle means that the cost of encoding the insertion is only 2-4 bits. Thus, roughly speaking, if the mesh consists of either 5-6 degree vertices or 3-4 degree vertices, the encoding of the connectivity requires no more than 4 bits per vertex. Since the independence set is not optimal, there are many triangles that are not included in any of the patches. Thus, in practice the cost is higher than 4 bits per vertex (see <ref type="table" target="#tab_0">Table 1</ref>). In any case the stream of bits that colors the mesh is further compressed by an LZ encoder. In our implementation the coloring technique is selected according to the distribution of degrees in the given level of detail. See <ref type="figure">Figure  5</ref> which shows the first four intermediate levels and their coloring.</p><p>Our 2-coloring encoding technique requires only one bit per triangle. However, in terms of the number of bits per vertex the cost is at least 4 bits per vertex, or 2 bits per triangle. Note that the number of triangles in the entire hierarchy is about three times the number of triangles in the original mesh. This cost is about that reported for the progressive forest split <ref type="bibr" target="#b17">[18]</ref>, almost twice more than reported in <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b7">8]</ref>, and eight times better than the cost of a vertex split of the progressive mesh <ref type="bibr" target="#b8">[9]</ref>.</p><p>Regarding the compression of geometry, the stream of the displacement is encoded using Huffman encoding. We have tested the results with 12-bit precision per coordinate. <ref type="table" target="#tab_1">Table 2</ref> compares our results with those of Touma and Gotsman's technique <ref type="bibr" target="#b19">[20]</ref>, which are the best published so far. On average our results are only about 8% higher than those achieved by Touma and Gotsman (see <ref type="table" target="#tab_1">Table  2</ref>). It should be emphasized that the exact compression values are dependent on the specific implementation of the Huffman encoder. However, we believe that the exact compression ratios are not crucial as the superiority of our technique is in its progressiveness. We should emphasize that with respect to the original VRML mod- els, Touma and Gotsman's and our technique achieve an average of 3.1% and 3.4% compression ratios, respectively.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusions</head><p>The progressive compression method presented above is based on the space-efficient encoding of a vertex insertion refinement process, where a mesh coloring technique encodes the connectivity of the intermediate meshes. Unlike previous compression methods, which use a sequential linear prediction scheme to encode the displacements, here we use a spatial predictor. The primary advantage of our compression method is that it inherently has the feature of a progressive mesh. Thus, the compressed data is a stream of vertex insertions, which progressively refines an initial coarse mesh into the original fine mesh. We showed that this property is achieved without sacrificing the compression ratio that can be achieved by non-progressive techniques. The advantage of our technique is that it can deal with nonmanifold meshes without decomposing them first into a set of man-ifold meshes. Since our technique is based on reversing the robust vertex decimation operation, it can also deal well with boundary polygons.</p><p>In our work we only tested models with no special attributes, such as normal vectors, colors or texture coordinates. Encoding such attributes is similar to that of the coordinates. If the attributes have some spatial coherence as do the coordinates, the local predication function and the displacements are expected to behave similarly to the coordinates. We will test this in our future work.   </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :Figure 4 :</head><label>14</label><figDesc>The 4-color encoding scheme. (1) The original mesh consists of an arbitrary triangulation. The red circles are the vertices selected to be removed -the independent set. (2) The mesh after removing the red vertices and triangulating the hole. The new triangles are colored in three colors; the rest remains white. See the color plates. The prediction scheme.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :Figure 3 :</head><label>23</label><figDesc>The 2-color encoding scheme. (1) A 2-colored hexagon. Note the 'Z' shape of the triangulation, which implies on the two end triangles of the patch. (2) Another legal 2-coloring of the same hexagonal patch. (3) A 2-colored 10-gon patch. The 'Z' (alternating) triangulation implies on the two end triangles of the patch. (4) An illegal triangulation. The 'Z' is mirrored. The 2-color encoding scheme. (1) The original mesh consists of an arbitrary triangulation. The red circles are the vertices selected to be removed -the independent set. (2) The mesh after removing the red vertices and triangulating the hole.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 5 :Figure 6 :Figure 2 :Figure 6 :</head><label>5626</label><figDesc>The hole3 colored at different levels of detail. Note that in the first two levels it uses a 4-coloring, as most of the vertices are of degree four or three, and a 2-coloring in the next two levels. See the color plates. Two models colored with the 2-color technique. The 4-color encoding scheme. (1) The original mesh consists of an arbitrary triangulation. The red circles are the vertices selected to be removed -the independent set. (2) The mesh after removing the red vertices and triangulating the hole. The new triangles are colored in three colors; the rest remains white. The hole3 colored at different levels of detail. Note that in the first two levels it uses a 4-coloring, as most of the vertices are of degree four or three, and a 2-coloring in the next two levels.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>The models and the connectivity compression results. The first two columns show the number of vertices and triangles in each model. The third column shows the number of vertices removed. The fourth column the number of bytes of the connectivity stream, and the last column shows the number of bits per vertex. The average of the bit/vertex column is5.98   </figDesc><table><row><cell>model</cell><cell cols="5">vertices triangles removed connectivity bits/vertex</cell></row><row><cell>horse</cell><cell>19851</cell><cell>39698</cell><cell>15494</cell><cell>11090</cell><cell>5.72</cell></row><row><cell>jaw</cell><cell>12349</cell><cell>24585</cell><cell>9453</cell><cell>6966</cell><cell>5.89</cell></row><row><cell>blob</cell><cell>8036</cell><cell>16068</cell><cell>6067</cell><cell>4507</cell><cell>5.94</cell></row><row><cell>holes3</cell><cell>5884</cell><cell>11776</cell><cell>4246</cell><cell>3526</cell><cell>6.64</cell></row><row><cell>tricerotops</cell><cell>2832</cell><cell>5660</cell><cell>2171</cell><cell>1550</cell><cell>5.71</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2 :</head><label>2</label><figDesc>Compression results. The same models as inTable 1with 12 bits per coordinates precision. The second column shows the size of the stream and the base is the size of the base model compressed. Their sum is presented in the next column. The TG column show the results of Touma and Gotsman's method. The right most column contains the compression ratio between TG and our progressive compression method.</figDesc><table><row><cell>The average ratio is 1.08</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>model</cell><cell>stream</cell><cell>base</cell><cell>total</cell><cell>TG</cell><cell>ratio</cell></row><row><cell>horse</cell><cell cols="5">42001 10445 52446 47108 1.11</cell></row><row><cell>jaw</cell><cell>29533</cell><cell>8090</cell><cell cols="3">37623 34577 1.08</cell></row><row><cell>blob</cell><cell>19928</cell><cell>5757</cell><cell cols="3">25685 21396 1.18</cell></row><row><cell>hole3</cell><cell>8182</cell><cell>4001</cell><cell cols="3">12183 13452 0.90</cell></row><row><cell>tricerotops</cell><cell>7252</cell><cell>2026</cell><cell>9278</cell><cell>7871</cell><cell>1.17</cell></row></table><note></note></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Time/space tradeoffs for polygon mesh rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Reuven</forename><surname>Bar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">-</forename><surname>Yehuda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="141" to="152" />
			<date type="published" when="1996-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">On levels of detail in terrains</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">De</forename><surname>Berg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Dobrindt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphical Models and Image Processing</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The laplacian pyramid as a compact image code</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">J</forename><surname>Burt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Adelson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Communications</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="532" to="540" />
			<date type="published" when="1983-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Geometry compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Deering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 95 Conference Proceedings, Annual Conference Series</title>
		<editor>Robert Cook</editor>
		<meeting><address><addrLine>Los Angeles, California</addrLine></address></meeting>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="6" to="11" />
		</imprint>
	</monogr>
	<note>ACM SIGGRAPH</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Encoding a triangulation as a permutation of its point set</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Denny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Sohler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Canadian Conference on Computational Geometry</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="39" to="43" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Multiresolution analysis of arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Matthias</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tony</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tom</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Werner</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">GRAPH 95 Conference Proceedings, Annual Conference Series</title>
		<editor>Robert Cook</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1995-08" />
			<biblScope unit="page" from="173" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Optimizing triangle strips for fast rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Skiena</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varshney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the IEEE Visualization&apos;96</title>
		<editor>R. Yagel and G. M. Nielson</editor>
		<meeting>the IEEE Visualization&apos;96</meeting>
		<imprint>
			<date type="published" when="1996-10" />
			<biblScope unit="page" from="319" to="326" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Real time compression of triangle mesh connectivity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Gumhold</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Straßer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 98 Conference Proceedings, Annual Conference Series</title>
		<editor>Michael Cohen</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="133" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hugues</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 96 Conference Proceedings, Annual Conference Series</title>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1996-08" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
	<note>Holly Rushmeier</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Interactive multi-resolution modeling on arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Leif</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Swen</forename><surname>Campagna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jens</forename><surname>Vorsatz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hans-Peter</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 98 Conference Proceedings, Annual Conference Series</title>
		<editor>Michael Cohen</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="105" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Maps: Multiresolution adaptive parameterization of surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">W F</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schröder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cowsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Proceedings (SIGGRAPH 98)</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="95" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Multiresolution analysis for surfaces of arbitrary topological type</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tony</forename><forename type="middle">D</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Joe</forename><surname>Warren</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="34" to="73" />
			<date type="published" when="1997-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Compressed progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Renato</forename><surname>Pajarola</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarek</forename><surname>Rossignac</surname></persName>
		</author>
		<idno>GIT-GVU-99-05</idno>
	</analytic>
	<monogr>
		<title level="m">Georgia Institute of Technology Washington</title>
		<imprint>
			<date type="published" when="1999" />
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Edgebreaker: Compressing the incidence graph of triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarek</forename><surname>Rossignac</surname></persName>
		</author>
		<idno>GIT-GVU-98-17</idno>
		<imprint>
			<date type="published" when="1998-07" />
		</imprint>
		<respStmt>
			<orgName>Georgia Institute of Technology Washington</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Data Compression, the complete reference</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">David</forename><surname>Salomon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Decimation of triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jonathan</forename><forename type="middle">A</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;92 Proceedings)</title>
		<editor>Edwin E. Catmull</editor>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="65" to="70" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">The lifting scheme: A new philosophy in biorthogonal wavelet constructions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Wavelet Applications in Signal and Image Processing III</title>
		<editor>A. F. Laine and M. Unser</editor>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="68" to="79" />
		</imprint>
	</monogr>
	<note>Proc. SPIE 2569</note>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Progressive forest split compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">André</forename><surname>Gueziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Francis</forename><surname>Lazarus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGGRAPH 98 Conference Proceedings, Annual Conference Series</title>
		<editor>Michael Cohen</editor>
		<imprint>
			<publisher>Addison Wesley</publisher>
			<date type="published" when="1998-07" />
			<biblScope unit="page" from="123" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Geometric compression through topological surgery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabriel</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jarek</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="84" to="115" />
			<date type="published" when="1998-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Triangle mesh compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Touma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Gotsman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Interface&apos;98</title>
		<imprint>
			<date type="published" when="1998-06" />
			<biblScope unit="page" from="26" to="34" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
