<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Progressive Compression and Transmission of Arbitrary Triangular Meshes</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Chandrajit</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Valerio</forename><surname>Pascucci</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Guozhong</forename><surname>Zhuang</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Sciences</orgName>
								<orgName type="institution">University of Texas at Austin</orgName>
								<address>
									<postCode>78712</postCode>
									<settlement>Austin</settlement>
									<region>TX</region>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<address>
									<addrLine>V=16,400, F=32,768 V=16,400, F=32,768 V=4,112, F=8,192 V=1,040</addrLine>
									<postCode>F=2, 048</postCode>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Progressive Compression and Transmission of Arbitrary Triangular Meshes</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:39+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>The recent growth in the size and availability of large triangular surface models has generated interest in compact multi-resolution progressive representation and data transmission. An ongoing challenge is to design an efficient data structure that encompasses both compactness of geometric representations and visual quality of progressive representations. In this paper we introduce a topological layering based data-structure and an encoding scheme to build a compact progressive representation of an arbitrary triangular mesh (a 2D simplicial complex in 3D) with attached attribute data. This compact representation is composed of multiple levels of detail that can be progressively transmitted and displayed. The global topology, which is the number of holes and connected components, can be flexibly changed among successive levels while still achieving guaranteed size of the coarsest level mesh for very complex models. The flexibility in our encoding scheme also allows topology preserving progressivity.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The design of compact progressive representations for triangular surface models has been a fundamental topic of recent research because of the continual growth of internetworked 3D graphics. High resolution scanning devices for object reconstruction or simulations on supercomputers have resulted in ever increasing generation and use of large surface models in scientific visualization. Geometry compression is currently being worked into the MPEG 4 3D coding standard by the MPEG-SNHC working committee <ref type="bibr" target="#b18">[19]</ref>.</p><p>The primary difficulty in designing an effective progressive and compact encoding scheme is to meet constraining requirements like progressivity, compression capability and visual efficacy. Such schemes are therefore evaluated by their trade-offs and flexibility in prioritizing the different properties or adaptation to the needs of the particular visualization applications.</p><p>Representation Power. Representation power is the class of domain models that a scheme can correctly handle. Different schemes can represent different surfaces that could be open or closed, simple or high-genus, orientable or nonorientable, manifold or non-manifold. For instance, isosurfaces of physical functions generated by a scientific simulation can be high genus and non-manifold. Analytic mathematical Surfaces can be non-orientable, like the MÃ¶bius strip or Klein bottle. Increasingly 3D CAD modeling systems include the creation and processing of non-manifold geometries.</p><p>Compression. The representation of large surfaces for storage or network transmission needs be space efficient. Compressed representation can make effective use of disk space and network bandwidth as well as substantially reduces network transfer time. Progressivity. A progressive representation has several advantages. First, it enhances high performance interactivity with large remotely archived models because compressed data can be incrementally transmitted and displayed. Second, the embedded bit stream can be truncated at any point by the decoder to create an error-bounded approximation of the model with exact bit rate control. Topology Constraints. A topology constrained scheme does not change the genus or number of connected components of input surfaces. Strict constraints definitely limit the size of the coarsest mesh it can produce. For high genus objects or surfaces with many components this limitation can make the scheme impractical because substantial simplification can only be obtained by removing holes and/or merging components. On the other hand, topology preserving lossy compression can be essential for certain applications where small geometry error is tolerable, but topology features should be preserved. Ideally, a multiresolution representation should have the flexibility of trading off topology preserving and non-preserving strategies. Multilevel Mapping. In a multi-resolution representation scheme the correspondence between geometry and associated attributes (like color, textures and normals) is best maintained by constructing continuous maps between different levels of resolution.</p><p>In this paper we introduce a new compact multiresolution representation scheme which has the above criteria and provides the flexibility of trading visual quality and adaptability for storage complexity and topology. Priority can be chosen according to the requirements of a particular application. This scheme is able to express arbitrary triangular meshes. That is, it can be used to compactly encode and progressively retrieve any set of triangles without any constraint on the topological type, orientability or manifold characterization. The non-manifold mesh in <ref type="figure" target="#fig_0">Figure 1</ref> has sixteen components, with the adjacent two sharing a non- manifold vertex. Input objects can also have attached properties such as colors, normals or texture coordinates. Our scheme is comparable in several aspects to prior published methods <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b20">21,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b13">14]</ref> and improves on a few important criteria <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25]</ref>. The rest of this paper is as follows. Section 2 discusses prior published work on compact multiresolution representations, including tradeoffs to our aforementioned criteria. Section 3 details our multiresolution topological layering scheme. Section 4 describes the flexibility of topology preserving/non-preserving simplification. Section 5 explains our geometric encoding of both mesh vertex coordinates as well as attached attribute data. Section 6 provides compression performance analysis of our scheme as well as several examples.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Prior Work on Multiresolution Representations</head><p>Zorin, Schroder and Sweldens use subdivision to connect and unify patches and polygonal meshes in order to produce an interactive tool for mesh manipulation <ref type="bibr" target="#b25">[26]</ref>. Their algorithms are designed for interactive multiresolution editing over meshes of arbitrary topology. However compression and progressive transmission are only suggested as possible future research objectives . Recursive subdivision schemes (e.g. <ref type="bibr" target="#b19">[20,</ref><ref type="bibr" target="#b15">16]</ref> represent a polygonal mesh as a low resolution base mesh and an ordered sequence of details which are actual subdivision steps. Connectivity refinement and geometry smoothing are two operations in each such step. However, these schemes only provide progressive representation for a narrow class of meshes which possess recursive subdivision connectivity. Eck et al. <ref type="bibr" target="#b3">[4]</ref> use a mesh with recursive subdivision connectivity to first approximate a mesh of arbitrary topology. Wavelets are then introduced for multiresolution analysis of meshes with this connectivity property. This wavelet based scheme does not support lossless compression because most meshes do not have subdivision connectivity. Also, extension to meshes of high genus or arbitrary simplicial complexes could be problematic.</p><p>The adaptive-refinement Progressive Mesh (PM) scheme <ref type="bibr" target="#b9">[10]</ref> introduced by Hoppe stores a manifold mesh as a low resolution coarse mesh together with an ordered sequence of details that can be used to refine the coarse mesh. There are two basic operations in this PM scheme: edge collapse and vertex split. Each vertex split operation adds a new vertex and two new triangles and locally refines the coarse mesh. ÃÂ´Ã ÃÃ Â´ÃÂµÂµ bits are needed to double the size of a mesh with Ã vertices. This degrades compression performance, especially for very large models. Popovic and Hoppe <ref type="bibr" target="#b20">[21]</ref> propose a lossy connectivity compression technique which outputs progressively transmittable bit streams. They express the original simplicial mesh at different resolutions through successive edge collapse and merge operations <ref type="bibr" target="#b10">[11]</ref>. While not an efficient coding method, its fundamental contribution is its support for progressive transmission. This compression method is improved by Li et al <ref type="bibr" target="#b14">[15]</ref> by integrating the bit stream and the attribute data stream under certain optimized criteria.</p><p>Progressive Forest Split (PFS) of Taubin et. al. is a compact multiresolution representation for any manifold mesh <ref type="bibr" target="#b22">[23]</ref>. PFS decomposes a given mesh by a low resolution level-of-detail and a sequence of forest split operations. The forest split operation is specified by a forest in the graph of vertices and edges of the mesh, a sequence of simple polygons, and a sequence of vertex displacements. Lee et al. <ref type="bibr" target="#b13">[14]</ref> construct smooth parameterizations of irregular connectivity triangulation of genus 2-manifolds. A hierarchical simplification technique is used so that a parameterization of the original mesh over a coarse base mesh is obtained. To get an approximation with a specified error bound, the base mesh is hierarchically subdivided by the Loop method <ref type="bibr" target="#b15">[16]</ref>. This multiresolution adaptive parameterization and remeshing technique can be used for progressive transmission of polygonal meshes in applications that do not require perfect connectivity recovery.</p><p>Kobbelt et al provide an interactive multiresolution modeling approach by building a hierarchy of nested spaces for unstructured data <ref type="bibr" target="#b12">[13]</ref>. De Floriani et al. propose a general framework for multiresolution hierarchical representation <ref type="bibr" target="#b5">[6]</ref> where the refinement step is the replacement of a portion of the mesh. Due to the high storage cost they experiment with a variation of their data-structure that improves storage efficiency and allows progressive transmission <ref type="bibr" target="#b4">[5]</ref>.</p><p>In this paper, progressive connectivity transmission is based on the construction of multiresolution surfaces for arbitrary triangular meshes, including non-manifold and high genus. For an arbitrary given mesh, its geometry and connectivity information is first organized by a layering structure. In this structure, vertices are further grouped into contours while triangles are merged into strips or fans. Through operations on these basic geometric primitives, multiresolution surfaces can be constructed with flexibility on topology preservation/non-preservation. Triangle contractions without any constraints are the fundamental operations. The coarsest mesh can be as small as the single vertex mesh. Our progressive scheme compares favorably with PM <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b20">21]</ref> for its visual efficacy and matches the compactness of PFS <ref type="bibr" target="#b22">[23]</ref>. It holds a much larger input mesh domain than PFS and has the flexibility of topological preserving/non-preserving progressive meshes.</p><p>Our multiresolution surfaces are constructed in two phases: the first phase represents mesh topology and details in a compact way; the second phase provides flexible resolution degree and may change the mesh topology while the base mesh and details are still expressed in an economical way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Topological Layering</head><p>Our topological layering structure <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25]</ref> is inspired by the layering scheme that is used to construct vertex spanning trees for manifold meshes in <ref type="bibr" target="#b23">[24]</ref>.</p><p>The topological layering structure based on vertex neighborhood is used to encode the connectivity information of arbitrary triangular meshes as well as to index and establish local neighborhood and the second order of predictor/corrector geometry encoding scheme. The input meshes are partitioned into two basic kinds of layers: vertex layers and triangle layers. The Â¼ Ã vertex layer is a randomly chosen vertex (could be a chain of vertices) of the mesh.</p><p>The Ã vertex layer (with</p><formula xml:id="formula_0">Â¼) includes a vertex Ã if Ã</formula><p>is not included in any previous vertex layer and there exists an edge</p><formula xml:id="formula_1">Ã Ã Â£ Âµ where Ã Â£ is included in theÂ´ Â½Âµ Ã vertex layer. The Ã triangle layer (with Â¼) includes</formula><p>a triangle Ã if Ã has one vertex in Ã vertex layer and Ã is not included in any previous triangle layer. This decomposition of the input triangular mesh provides a "Morse encoding" <ref type="bibr" target="#b16">[17]</ref> capturing the branching and extreme points of edge cycles boundary holes and components. We use this effectively for generating both topological preserving and non-preserving simplifications.</p><p>The topological layering structure has the property that any mesh edge and thus any triangle can only span two vertex layers. Therefore all edges are classified into two categories: transversals and chords. A chord is an edge that connects two vertices in different vertex layers while a transversal is an edge that connects two vertices in the same vertex layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Geometric Primitives</head><p>There are four geometric primitives: contours, branching points, triangle strips, and triangle fans (see <ref type="figure" target="#fig_1">Figure 2)</ref>.</p><p>A contour is an ordered chain of vertices ÃÂ¼ Ã Â½ Â¡ Â¡ Â¡ Ã Ã in a vertex layer where each vertex pairÂ´Ã Ã â¢Â½ Âµ is connected by a transversal edge and every intermediate vertex Ã Â´Â¼ Ã Âµ is incident on exactly two transversal edges. In a closed contour ÃÂ¼ is coincident with ÃÃ and if Ã is 0 the contour degenerates to an isolated point. Contours are built in a greedy fashion by connecting vertices with transversal edges. A branching point is a vertex of a vertex layer which is incident to more than two transversal edges. By this definition, a branching point is contained in more than one contour and thus it can only be either the starting or the ending vertex of a contour.</p><p>A triangle strip is an ordered sequence of triangles in a triangle layer where each pair of consecutive triangles share a common edge which is a chord. All the vertices of a strip belong to exactly two contours in two adjacent vertex-layers. Triangle strips are constructed using a greedy approach by merging triangles that share chords.</p><p>A triangle fan is an ordered sequence of triangles in a single triangle layer where all triangles have a common vertex, each pair of consecutive triangles share a common edge, and no edge is shared by more than two triangles. Once all the triangle strips are collected in a triangle layer, the remaining triangles are grouped into triangle fans again in a greedy approach to create longer fans. We claim here a simple yet fundamental result that advocates the use of the layering structure as a general purpose representation for compact storage and transmission of triangle meshes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lemma 2.1 (Complete Representation Power)</head><p>Any collection of triangles can be represented by the topological layering structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof.</head><p>The breadth-first mesh traversal guarantees visitation of all the mesh edges and hence classifies vertices and triangles into layers. By representing each vertex with a separate contour and each triangle as a separate fan, one can represent a mesh consisting of any set of triangles. Â¥ The mesh to be expressed could be non-manifold or one that does not form a simplicial complex or that needs to be repaired. Thus this layering scheme is general enough to represent any set of triangles. Its other advantage is the automatic avoidance of the so-called crack problem which occurs when a non-manifold mesh is converted into several manifold components by duplicating non-manifold features such as vertices, edges and faces <ref type="bibr" target="#b8">[9]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Multiresolution Topological Contouring</head><p>The topological layering structure <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25]</ref> is first extended to a multiresolution representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Mesh Simplification and Progressive Reconstruction</head><p>The multiresolution layering representation is composed of a coarse mesh Ã along with a sequence of details   of the input mesh Ã with a very compact representation. In this stage the topology of the mesh is not modified.</p><p>(ii) Topological non-preserving simplification which is based on a generalized triangle contraction primitive <ref type="bibr" target="#b7">[8]</ref>. The details generated at this stage are relatively expensive to express in the encoded bit stream. However it produces better quality simplification and guarantees the progress of the simplification. For this reason this second stage is applied only to generate the coarser levels especially when storage needs become progressively negligible</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Topological Layering Based Simplification</head><p>The layering based simplification uses two basic decimation operations: the intra-layer simplification that removes vertices within a contour without changing the topology; and the inter-layer simplification that removes an entire contour.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Intra-layer Simplification</head><p>In the intra-layer simplification a local vertex removal is performed with retriangulation and it maintains the layering structure. <ref type="figure">Figure 5</ref> shows the transition of a simple strip when some vertices in its child and parent contours are removed. One obvious characteristic of this simplification is that the simplified strip still has the same parent and child vertex contours.</p><p>The selection of the vertices to be removed in one contour is based on three sufficient criteria to guarantee topology preservation and the compact encoding of the details. First, there are at least three vertices remaining in the contour of the candidate vertex. Second, the starting vertex and the ending vertex of a contour cannot be decimated. Finally, two consecutive vertices in a contour cannot be decimated in the same mesh transition. Connectivity Details. <ref type="figure" target="#fig_5">Figure 6</ref> shows the decimation procedure of a contour with connectivity details. The solid vertices are decimated while the gray ones remain. One bit is associated with each remaining vertex: the value of this bit is 1 if its successor is decimated and is 0 otherwise. Connectivity reconstruction of a contour is straightforward. Starting from a bit string encoding the contour detail, one bit is associated with each edge in the contour. If the bit value of an edge is 1, it is split into two edges. Otherwise, the edge is not split.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1001111">11000</head><p>The remaining information necessary for the encoding is related to the modification of triangle strips incident on the decimated contour.  Simplification Order The order of the simplification procedure goes as follows. For a single component, it goes from the first vertex layer to the last one; for each vertex-layer, it goes from the first contour to the last one; for each contour, it goes from the starting vertex to the ending vertex. If multiple simplification steps are performed, the above procedure executes multiple times. The reconstruction procedure follows the exact reverse order.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Inter-layer Simplification</head><p>In the inter-layer simplification stage the decimation operation is the removal of a contour. Consequently, the gap left between the two adjacent contours of the removed one must be retriangulated. There are three conditions on the decimation of an entire contour.</p><p>Its two adjacent contours in the previous and next vertex layers do not contain branching points;</p><p>The error introduced by the contour decimation does not exceed a given tolerance.</p><p>The gap left must be triangulatable.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Connectivity Detail</head><p>The detail necessary to reconstruct the topology needs to include the configuration of the removed contour and the modification of the triangulation induced by the decimation. The contour itself is simply characterized by the number of its vertices plus one bit set to 1 if it is an open contour or 0 if it is closed. For example, in <ref type="figure">Figure 8</ref> an open contour of eight vertices is being decimated with the detail (0,8).</p><p>For retriangulation, the two strips sharing the removed contour are replaced by a single strip using <ref type="bibr" target="#b1">[2]</ref>. This new strip is confined to have a chord, called constraining chord, that is corresponding to every pair of triangles having a common edge on the removed contour. The middle picture of <ref type="figure">Figure 8</ref> shows this correspondence in dotted lines. <ref type="figure">Figure</ref> 8 also displays the final retriangulation. To reconstruct a fine triangulation from the coarse strip it is sufficient to know which edges are constraining chords. We express the details as an ordered sequence of small integers. Each integer stands for the number of triangles in the coarse strip that lie between two consecutive constraining chords. The starting edge of a coarse strip is always a constraining chord.</p><p>In the reconstruction procedure, the bit stream of the details, are used to locate all the constraining chords. Every chord is then turned into a pair of triangles. By connecting the sequence of edges shared by the pairs of triangles, a new contour (the removed one in the simplification procedure) is formed. Any vertex in the two contours of the coarse strip that is not chord-connected to the new contour is connected to the same vertex as its predecessor.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Topology Non-preserving Simplification</head><p>Since the intra-layer and inter-layer simplifications are constrained to be topology preserving, there is a limit on the level of simplification that can be achieved. To guarantee the progress of mesh simplification process it is sometimes necessary to change the topology of the input mesh <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b6">7]</ref>. We introduce a topology non-preserving generalization of our scheme based on the triangle contraction primitive introduced in <ref type="bibr" target="#b7">[8]</ref>.</p><p>In our scheme the input mesh to the topology nonpreserving simplification is the coarsest mesh generated by the layering based simplification of section Â¿ after several intra-Layer and inter-Layer simplification rounds.</p><p>Generalized Triangle Contraction When a triangle Ã is contracted, all its vertices are merged into a single point Ã. The index used for Ã after the contraction is the the smallest among the indices of the vertices of Ã.</p><p>As shown in <ref type="bibr" target="#b7">[8]</ref> Ã is chosen to be the best local shape fit to achieve its high visual quality. The downside of this approach is high storage cost that arises from storing both Ã and the three vertices of Ã. For lower storage overhead we choose Ã to be a fixed linear combination of the vertices of Ã so that we only store as detail Ã and two vertices of Ã. The third vertex of Ã is recovered by inverting the linear constraint between Ã and Ã. In our implementation we choose Ã to be the barycenter of Ã.</p><p>Every triangle incident to Ã is classified into three categories:</p><p>type I: one vertex in common with Ã type II: two vertices in common with Ã type III: three vertices in common with Ã</p><p>In most cases, there are no triangles of type III. But if there are such triangles, the details can still be efficiently coded: First, a small number is used to indicate the number of all type III triangles. Then for each such triangle, a bit is used to specify its orientation with respect to the contracted triangle. <ref type="figure">Figure 9</ref> shows the procedure of one triangle contraction and the corresponding triangle classification. The contracted triangle Ã is black-colored. After the contraction, the Connectivity Detail Before starting the triangle contraction procedure we encode the topological layering structure of the mesh which implicitly induces the vertex numbering to be used later. The index order of the vertices is key information that the decoder requires to correctly reconstruct subsequent layers. For each decimation operation, one bit is spent to indicate if Ã is actually a triangle of the mesh or a triangular hole.</p><p>Type I triangles remain after each contraction operation, but the indices of their coincident vertices may change. The detail of the triangle contraction needs to record this change.</p><p>Let the vertex indices of Ã be ÃÂ¼ Ã Â½ and ÃÂ¾, with the indices ÃÂ¼ Ã Â½ Ã Â¼ Ã Â¾ . One bit is used to report if the index of the common vertex with type I triangle is ÃÂ¼ or not. If this is the case no more information is needed. Otherwise, another bit is used to report if the common vertex is either ÃÂ½ or ÃÂ¾.</p><p>Type I triangles are sorted by the two index values of the non-common vertices and then, in this order, their details are stored. Type II triangles degenerate into edges. The index of the vertex that is not common with Ã must be reported in detail.</p><p>Moreover three bits are used to distinguish which edge they share with Ã. Isolated vertices may appear after a triangle contraction because of the degeneration of type II triangles. We record the indices and geometry (possibly, with other attributes) of such isolated vertices when they occur. Decimation Priority Two parameters are used to prioritize the order of the triangle contractions. The first parameter is the area Â´ÃÂµ of the contracted triangle Ã. Small size triangles are considered first since they affect the overall mesh shape the least. The second parameter is a measure used to avoid producing sliver triangles. We define the sliver factor</p><p>ÃÂ´ÃÂµ of a triangle Ã to be the ratio between the perimeter ÃÂ´ÃÂµ of Ã and the maximum perimeter of its adjacent triangles:</p><formula xml:id="formula_2">ÃÂ´ÃÂµ Ã Ã ÃÂ¾ Â´ÃÂµ ÃÂ´ÃÂµ ÃÂ´ÃÂµ</formula><p>where Â´ÃÂµ is the set of triangles adjacent to Ã. The topol-ogy non-preserving simplification procedure creates a priority queue with all the triangles of the mesh. The priority key associated with each triangle Ã is the product of its area by the sliver factor Â´ÃÂµÃÂ´ÃÂµ. The triangle with smallest key is selected for contraction. After the contraction, the removed triangle and its degenerate neighbors are removed from the queue. Other affected triangles have their key values updated and the priority queue is adjusted correspondingly. Unless a stopping criterion is set the procedure makes progress until the mesh becomes empty. <ref type="figure" target="#fig_3">Figures 3 and 4</ref> exhibit the reconstruction of simple "eight" and "foot" models. All the three simplification operations are used. As can be seen, the displayed coarsest mesh only consists of one triangle. It is obvious that triangle contraction changes topology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Geometry Encoding</head><p>Geometry data may affect progressive transmission dramatically because it usually takes more space to encode. The main problem is its need to efficiently represent in the bit stream the positions of removed vertices. Linear prediction is often used to predict the position of a vertex from encoded positions of its adjacent vertices. In the following, we will describe how second order predictive and entropy coding is used in our multiresolution representation. Intra-layer Decomposition The geometry detail of a decimated vertex is the difference between its predicted position and its actual position of a vertex. A simple predictive coding would take the center of the segment that the vertex splits. An alternative and potentially more accurate way is to build a quadratic BÃ©zier curve that interpolates the coarse contour and to take the midpoints of the curvilinear sides instead of the straight lines of the original contour. Prediction in this way produces correction vectors with less variation and are thus more suitable for entropy coding. Inter-layer Decomposition For a contour removed in the inter-layer decomposition procedure, vertex positions are encoded in the same way as the single-resolution geometry coding. Linear <ref type="bibr" target="#b2">[3]</ref>, high-order <ref type="bibr" target="#b23">[24]</ref>, and parallelogram predictors <ref type="bibr" target="#b14">[15]</ref> can also be used. We use a second-order predictor to encode the geometry (similarly for attached properties). The basic idea is as follows. First, linear prediction is used to get a set of correction vectors which are parameterized and quantized using spherical coordinatesÂ´Ã Âµ.</p><p>With the observation that the code difference of two successive correction vectors has small variation, the secondorder prediction is then performed in the code space. The geometric error is bounded by the maximum quantization distortion. The coding scheme is also designed so that error propagation is prevented <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25]</ref>. In our implementation, classical entropy codings such as Huffman coding <ref type="bibr" target="#b11">[12]</ref> and Arithmetric coding <ref type="bibr" target="#b17">[18]</ref> are used to further improve space efficiency.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Topology Non-preserving Decomposition</head><p>For each decimation operation, the three vertices of the contracted triangle are merged into a single point. The remaining vertex of the triangle takes the center of the triangle as its geometry position. The positions of all removed vertices during this operation are encoded by predictions on this central position. In the reconstruction process, the remaining vertex, which is recovered at earlier stage, is pushed back to its true position when the other two vertices are recovered.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Performance Analysis and Results</head><p>Storage Analysis of Connectivity Details Vertex ordering is crucial for efficient storage of the details. Hoppe's progressive mesh (PM) needs ÃÃ Â´ÃÂµ bits to specify the vertex from which a new vertex is split. Thus the overall connectivity cost of PM isÂ´ÃÃÃ Â´ÃÂµ â¢ Âµ . Our scheme squeezes off the ÃÂ´ÃÃ Â´ÃÂµÂµ factor by taking advantage of the locality property of the layering structure. The space efficient representation is gained through the local indexing technique. Intra-layer Decomposition With the constraints on the selection of vertices, at most one half of vertices in a contour can be removed in an intra-layer decomposition run. Practice shows that nearly one-half of vertices in a contour can be removed in each decomposition run. According to the analysis above, the coding cost in bits is linearly proportional to the number of removed vertices with a small linear factor. No vertex indices are needed to be encoded and thus no ÃÃ Â´ÃÂµ factor. For topology nonpreserving decomposition, the logarithmic factor comes back but with a much smaller Ã because topology nonpreserving decomposition are usually performed on a much coarser mesh obtained after several steps of the topological layering simplification.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Geomorph.</head><p>For intra-layer simplification, the transition from one level to the next can be performed by continuous deformation using two vertex splits followed by one edge contraction. <ref type="figure" target="#fig_0">Figure 10</ref> shows the reconstruction process where the vertices ÃÃand ÃÃare temporarily split intoÂ´ÃÃ ÃÃ Â£ Âµ and ÃÃ Â£ Ã Ã Âµ. Then the edgeÂ´ÃÃ Â£ Ã Ã Â£ Âµ contracts into the vertex Ã. For inter-layer simplification, the transformation from one level to the next can be performed by continuous deformation. For example, the geomorph from a coarse level to a finer one is performed by inserting a vertex at the midpoint of each chord edge in the coarse. The midpoints are connected by a sequence of dummy edges which split the strip triangles into coplanar triangles so that the surface geometry is not altered yet. Then, while the midpoint of the <ref type="bibr" target="#b2">(3,</ref><ref type="bibr" target="#b3">4)</ref> ÃÃ ÃÃ ÃÃ ÃÃ Â£ ÃÃ Â£ ÃÃ ÃÃ Â£ ÃÃ Â£ ÃÃ ÃÃ ÃÃ ÃÃ <ref type="figure" target="#fig_0">Figure 10</ref>: Geomorph for the reconstruction from an Intra-Layer detail.</p><p>constraining chords are split to reconstruct the contour the dummy edges are contracted. This continuously deforms the coarse strip into the two of the finer level.</p><p>Mapping For each intra-layer decomposition we construct an isomorphism between adjacent levels in the multiresolution hierarchy. In particular both the fine and coarse triangulation are mapped to the same rectangular region Ã as in <ref type="figure" target="#fig_0">Figure 11</ref> using piecewise affine mapping from each triangle to its image on Ã. Two points at the two levels of resolution are in correspondence if they map to the same point in Ã.</p><p>Note that if ÃÂ½ is coincident with ÃÂ¾ then the top part of Ã becomes a triangle. The same holds for the bottom part. Similarly for the case of intra layer simplification, we can map both the fine and the coarse triangulation to a common rectangle Ã. The two triangulations of Ã corresponding to fine and coarse levels induce a bijective mapping between points at different levels of resolution.</p><p>For topology non-preserving operations, the mapping between adjacent levels of resolution is implemented in a way similar to <ref type="bibr" target="#b13">[14]</ref> by overlapping the local retriangulations generated by the triangle decimation primitive. This can be accomplished directly when the topology is not changed. Hence we stop building the multilevel map as soon as the topology non-preserving mode is selected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results</head><p>For geometry encoding, 12 bits are used to code each coordinate of correction vectors of vertices decimated in the topology non-preserving phase, while 10 bits for correction vectors of vertices decimated in the topology preserving phase. The two coding-bit numbers can flexibly be adjusted, dependent on the fidelity requirements of the application. Generally, more bits should be used for coding vertices that appear in coarser levels (thus recovered earlier) because better prediction can be achieved in this way.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>We have presented a scheme for progressive encoding and transmission of arbitrary collections of triangles. A successive quantization scheme <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b24">25]</ref> is used to support progressive bit transmission. We also presented a technique to decompose an arbitrary triangular surface mesh into a coarse mesh with additionally several levels of detail. The combination of intra-layer and inter-layer decomposition provides a compact encoding of both the coarse mesh and these details. Topology non-preserving decomposition increases the resolution degree without much sacrifice of space efficiency. The scheme also has the flexibility for topology preserving simplification as well as is capable of geomorphs and the successive mapping property.  <ref type="table">Table 1</ref>: Coding statistics of multiresolution representation. T: number of triangles; C/T: connectivity cost in bits that is needed to recover each triangle; (G+C)/T: total cost in bits to recover each triangle. G: geometry encoding cost; C: connecting encoding cost.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Duck</head></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>A multiresolution representation of a non-manifold mesh model of a pearl necklace based on topological layering. The last three pictures show enlarged local details of three intermediate simplified mesh levels in this multiresolution schema, V = vertices, F = triangle faces.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Contour, branching point, triangular strip and fan.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Â½Â½.</head><label></label><figDesc>The mesh simplification procedure starts with the finest mesh ÃÂ¼ and decomposes it into detail Â½ and a coarser mesh ÃÂ½. Iteratively, the procedure generates the details Â½ Â¾ and the base level coarsest mesh Ã . We allow for flexible topology preserving and non-preserving multiresolution representation.(i) Topological layering based simplification that simplifies the mesh while preserving the layering structure</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Progressive transmission of a triangular mesh. The topology of this model changes between the third and fourth pictures.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Progressive transmission of the extracted "foot" isosurface from the visible human female data. This sequence of non-consecutive intermediate simplified models consist of 1, 1,285, 3,328, 8,366, 12,380, 16,392 and 40,432 triangles.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Connectivity details for two transition steps in the intra-layer simplification where the first vertex of the contour is marked with an arrow.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 (</head><label>7</label><figDesc>left) shows a star polygon around the vertex Ã to be removed. Vertices ÃÃ ÃÃlie on the same contour as Ã. ÃÂ½ Ã Â¾ and ÃÂ¿ are chord-connected in the previous vertex layer. The remaining vertices are chordconnected to the next layer. To preserve the layering structure after the decimation a new transversal edge must be added to connect ÃÃto ÃÃ The first half, approximated for excess, of the vertices in the previous and next layer are connected to ÃÃ. The second half, approximated for defect, of the vertices in the previous and next layer are connected to ÃÃ. The middle vertices of the previous and next layer are connected to both ÃÃand ÃÃ With this fixed retriangulation rule, the details, sufficient to recover the original</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 :Figure 7 :</head><label>57</label><figDesc>Intra-layer simplification: retriangulation of a simple triangle strip after the solid vertices are removed from its bottom and top contours. triangulation, are the numbers of vertices in the previous and next layer that are connected to Ã. Constrained retriangulation and detail extraction for one transition of intra-layer simplification.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 :Figure 9 :</head><label>89</label><figDesc>Inter-layer simplification. (left) Fine level being decimated. (center) Constraining chords drawn on the corresponding triangle pairs. (right) Coarse level and connectivity detail.non-manifold edge of the original mesh is removed and the topology is changed. Topology non-preserving simplification by triangle contraction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 11 :</head><label>11</label><figDesc>Mapping between adjacent levels of resolution for Intra-Layer Simplification.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 12 :</head><label>12</label><figDesc>Compact multiresolution representation. The first numerical number at the bottom of each picture gives the number of triangles, the second gives the encoded byte size and the third is the percentage of object size with respect to the original one.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>On average, Â«Ã bits are used to express details if Â«ÃÂ´Â¼ Â« Â¼ ) vertices are removed with Ã being the number of vertices before decomposition. Inter-layer Decomposition Suppose that three involved contours have ÃÂ¼ Ã Â½ and ÃÂ¾ vertices, respectively. Then the two strips totally contain about ÃÂ¼ â¢ Â¾ ÃÂ½ â¢ ÃÂ¾ triangles. Assume that number is ÃÂ¼ â¢ Â¾ ÃÂ½ â¢ ÃÂ¾. The cost of coding the bit march string for the coarse level strip is about ÃÂ¼ â¢ÃÂ¾ bits since there exists that number of triangles in the coarse level strip. From the way the details are expressed, their coding bits are equal to the summation of the triangle number of the coarse level strip and the cost of coding the ÃÂ½ separators. That is, the detail coding needs ÃÂ¼ â¢ ÃÂ½ â¢ ÃÂ¾</figDesc><table><row><cell>bits.</cell></row><row><cell>Topology Non-preserving Decomposition</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>Â¡Â´ â¢ Âµ/Â¡Ã 37.3 20.1 18.7 28.2 19.0 26.4</figDesc><table><row><cell cols="7">T Â¡ /Â¡Ã Â¡Â´ â¢ Âµ/Â¡Ã 44.1 37.8 33.6 25.4 21.3 22.7 150 414 1,228 2,341 4,012 5,856 18 14 4.6 4.4 4.2 4.2</cell><cell>10,009 4.1 19.3</cell></row><row><cell>C/T</cell><cell>19.4</cell><cell>18.1</cell><cell>15.7</cell><cell>11.3</cell><cell>8.5</cell><cell>6.4</cell><cell>5.2</cell></row><row><cell>(G+C)/T</cell><cell>42.2</cell><cell>37.4</cell><cell>36.2</cell><cell>30.5</cell><cell>24.6</cell><cell>23.1</cell><cell>21.7</cell></row><row><cell>Bunny</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="7">T 1,000 9,315 17,869 18,955 34,885 36,557 Â¡ /Â¡Ã 18 3.7 4.5 4.2 4.6 4.5 Â¡Â´ â¢ Âµ/Â¡Ã 38 24.7 18.0 25.2 18.1 24.5</cell><cell>69,473 4.5 18.0</cell></row><row><cell>C/T</cell><cell>21.3</cell><cell>7.9</cell><cell>6.3</cell><cell>6.2</cell><cell>5.4</cell><cell>5.3</cell><cell>5.0</cell></row><row><cell>(G+C)/T</cell><cell>48.7</cell><cell>23.0</cell><cell>20.6</cell><cell>20.9</cell><cell>19.6</cell><cell>19.8</cell><cell>19.0</cell></row><row><cell>Crocodile</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>T Â¡ /Â¡Ã</cell><cell cols="6">300 8,589 12,105 12,701 16,784 23,272 12 9.5 5.3 7.9 5.6 6.3</cell><cell>34,404 4.9</cell></row><row><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell>18.4</cell></row><row><cell>C/T</cell><cell>20.0</cell><cell>18.6</cell><cell>14.7</cell><cell>14.4</cell><cell>12.3</cell><cell>10.6</cell><cell>8.7</cell></row><row><cell>(G+C)/T</cell><cell>48.4</cell><cell>35.5</cell><cell>30.7</cell><cell>30.5</cell><cell>27.7</cell><cell>27.4</cell><cell>24.4</cell></row><row><cell>Phone</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="8">T Â¡ /Â¡Ã Â¡Â´ â¢ Âµ/Â¡Ã 41.1 22.2 21.8 20.9 21.3 19.7 1020 3,919 5,469 12,272 48,591 84,495 165,963 18 4.3 4.3 4.4 4.3 4.1 4.0 19.1</cell></row><row><cell>C/T</cell><cell>17.3</cell><cell>10.2</cell><cell>7.8</cell><cell>7.3</cell><cell>6.0</cell><cell>5.1</cell><cell>4.5</cell></row><row><cell>(G+C)/T</cell><cell>42.2</cell><cell>27.6</cell><cell>23.2</cell><cell>22.6</cell><cell>22.4</cell><cell>21.8</cell><cell>20.2</cell></row><row><cell>Horse</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>T Â¡ /Â¡Ã Â¡Â´ â¢ Âµ/Â¡Ã</cell><cell cols="2">870 3,122 18 4.2 42 25.2</cell><cell>5,496 4.7 18.3</cell><cell>5,922 4.9 25.9</cell><cell cols="2">9,754 13,188 4.8 3.8 18.3 24.8</cell><cell>22,258 4.7 18.2</cell></row><row><cell>C/T</cell><cell>18.3</cell><cell>11.6</cell><cell>8.6</cell><cell>8.3</cell><cell>6.9</cell><cell>6.1</cell><cell>5.5</cell></row><row><cell>(G+C)/T</cell><cell>42.7</cell><cell>28.5</cell><cell>24.1</cell><cell>24.2</cell><cell>21.9</cell><cell>22.6</cell><cell>20.8</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Acknowledgements: This research is supported in part by grants from NSF-CCR-9732306, NSF-KDI-DMS-9873326, DOE-ASCI-BD-485, and NASA-NCC 2-5276.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Single resolution compression of arbitrary triangular meshes with properties</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Pascucci</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Zhuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data Compression Conference</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="247" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Arbitrary topology shape reconstruction from planar cross sections</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Bajaj</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">J</forename><surname>Coyle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Lin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Graphical Models and Image Procession</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="page" from="524" to="543" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Geometric compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Deering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;95 Proceedings</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="13" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Multiresolution analysis of arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Eck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;95 Proceedings</title>
		<imprint>
			<date type="published" when="1995" />
			<biblScope unit="page" from="173" to="182" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Efficient implementation of multi-triangulations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Magillo</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings IEEE Visualization&apos;98</title>
		<meeting>IEEE Visualization&apos;98</meeting>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1998" />
			<biblScope unit="page" from="43" to="50" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Hierarchical triangulation for multiresolution surface description</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Puppo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="363" to="411" />
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Surface simplification using quadratic error metrics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Garland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Heckbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;97 Proceedings</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="209" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Constructing hierarchies for triangle meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">S</forename><surname>Gieng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">I</forename><surname>Joy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">L</forename><surname>Schuss-Man</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><forename type="middle">J</forename><surname>Trotts</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="145" to="161" />
			<date type="published" when="1998-04" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Cutting and stitching: Efficient conversion of a non-manifold polygonal surface to a manifold</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gueziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Horn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">P.O.Box</title>
		<editor>IBM T.J. Watson Research Center</editor>
		<imprint>
			<biblScope unit="volume">704</biblScope>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
	<note type="report_type">Tech. Rep. RC-20935</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;96 Proceedings</title>
		<imprint>
			<date type="published" when="1996" />
			<biblScope unit="page" from="99" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">View-dependent refinement of progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics (SIGGRAPH &apos;97 Proceedings</title>
		<imprint>
			<biblScope unit="page" from="189" to="198" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A method for the construction of minimum-redundancy codes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Huffman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proceedings of the IRE</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="1098" to="1101" />
			<date type="published" when="1952" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Interactive multi-resolution modeling on arbitrary meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Kobbelt</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Campagna</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Vorsatz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Seidel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;98 Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="105" to="114" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Maps: Multiresolution adaptive parameterization of surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Cowsar</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Dobkin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;98 Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="95" to="104" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Progressive compression of 3D graphic models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-C</forename><forename type="middle">J</forename><surname>Kuo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Proceedings of Multimedia Computing and Systems</title>
		<meeting><address><addrLine>Ottawa, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Smooth subdivision surfaces based on triangles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Loop</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987-08" />
		</imprint>
		<respStmt>
			<orgName>Department of Mathematics, University of Utah</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Tech. rep.</note>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">Morse</forename><surname>Milnor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Theory</surname></persName>
		</author>
		<title level="m">of Annals of Mathematics Studies</title>
		<meeting><address><addrLine>Princetom</addrLine></address></meeting>
		<imprint>
			<publisher>Princeton University Press</publisher>
			<date type="published" when="1963" />
			<biblScope unit="volume">51</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Arithmetic coding revisited</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Moffat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Neal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Witten</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Data Compression Conference</title>
		<meeting><address><addrLine>Snowbird, Utah</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Description of core experiments on 3d model coding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Mpeg4/Snhc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISO/IEC JTC1/SC29/WG11 MPEG98/M3373, October</title>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
	</monogr>
	<note type="report_type">Tech. rep</note>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The simplest subdivision scheme for smoothing polyhedra</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Peters</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">U</forename><surname>Reif</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="420" to="431" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Progressive simplicial complexes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Popovic</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;97 Proceedings</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="217" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">A topology modifying progressive decimation algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">J</forename><surname>Schroeder</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Visualization97</title>
		<editor>R. Yagel and H. Hagen</editor>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="1997-11" />
			<biblScope unit="page" from="205" to="212" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Progressive forest split compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Geuziec</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Horn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Lazarus</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;98 Proceedings</title>
		<imprint>
			<date type="published" when="1998" />
			<biblScope unit="page" from="123" to="132" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Geometric compression through topological surgery</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Taubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Graphics</title>
		<imprint>
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="84" to="115" />
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Compression and Progressive Transmission of Three-Dimensional Models</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Zhuang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1998" />
		</imprint>
		<respStmt>
			<orgName>Department of Computer Sciences, Purdue University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Interactive multiresolution mesh editing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Zorin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Schroder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Sweldens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;97 Proceedings</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="259" to="268" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
