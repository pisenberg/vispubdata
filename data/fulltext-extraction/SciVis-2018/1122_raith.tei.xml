<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Tensor Field Visualization using Fiber Surfaces of Invariant Space</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Felix</forename><surname>Raith</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Christian</forename><surname>Blecha</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Thomas</forename><surname>Nagel</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Francesco</forename><surname>Parisio</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Olaf</forename><surname>Kolditz</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fabian</forename><surname>Günther</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Markus</forename><surname>Stommel</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gerik</forename><surname>Scheuermann</surname></persName>
						</author>
						<title level="a" type="main">Tensor Field Visualization using Fiber Surfaces of Invariant Space</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T19:42+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>visualization</term>
					<term>tensor field</term>
					<term>invariants</term>
					<term>fiber surface</term>
					<term>interaction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Scientific visualization developed successful methods for scalar and vector fields. For tensor fields, however, effective, interactive visualizations are still missing despite progress over the last decades. We present a general approach for the generation of separating surfaces in symmetric, second-order, three-dimensional tensor fields. These surfaces are defined as fiber surfaces of the invariant space, i.e. as pre-images of surfaces in the range of a complete set of invariants. This approach leads to a generalization of the fiber surface algorithm by Klacansky et al. [16] to three dimensions in the range. This is due to the fact that the invariant space is three-dimensional for symmetric second-order tensors over a spatial domain. We present an algorithm for surface construction for simplicial grids in the domain and simplicial surfaces in the invariant space. We demonstrate our approach by applying it to stress fields from component design in mechanical engineering.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Symmetric second-order tensor fields are used in different disciplines like structural mechanics, fluid mechanics, geometry, or neuroscience describing important variables like stress, strain, deformation, metric, or diffusion. But their visualization is substantially less developed than the visual representation of scalar and vector fields. In practice, tensors are often reduced to scalar or vector fields prior to visualization. For showing the complete tensor, glyphs visualizing the value at isolated positions, and tensor lines following some eigenvector field are the most often used methods <ref type="bibr" target="#b16">[17]</ref>. There is also a variety of methods derived from tensor lines like Hyperstreamlines <ref type="bibr" target="#b3">[4]</ref>, HyperLIC <ref type="bibr" target="#b33">[34]</ref>, tensor fabrics <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b12">13]</ref>, and tensor topology <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b10">11]</ref> that are sometimes used. However, the intuitive, interactive analysis of three-dimensional symmetric tensor fields like a typical stress field in structural mechanics remains a challenge. Typically, the engineer is looking for an overview of the whole field first that highlights extremal tensor values. The failure of a constructed component or some natural structure is of highest interest in typical cases. Since all failure criteria are invariant functions, the engineer will concentrate on invariants before looking at directional aspects. This stands in strong contrast to all visualization methods derived from tensor lines which are essentially independent of the invariants (except for equal eigenvalues showing up as degenerate points). Consequently, this paper proposes an efficient method to provide an overview and interactive analysis of invariants of symmetric second-order tensor fields over three-dimensional domains, like the stress or strain fields of components in mechanical engineering.</p><p>The underlying idea is the three-dimensional nature of the invariant space. For a symmetric second-order tensor field over a threedimensional domain, the space of the invariants is three-dimensional. This can be derived from the three real eigenvalues or the three invariants of the characteristic polynomial. Therefore, the mapping from the tensor field domain to the invariant space is a mapping from 3-space to 3-space, allowing for a direct visualization of the invariant space. Furthermore, it is possible to select a volume in the invariant space and show the pre-image in the domain, i.e. the parts of the object under study where the tensor field has invariants in the selected volume. It is also possible to compute the bounding surface of this pre-image which leads to the notion of a fiber surface of the invariant space. The method in this paper is therefore a generalization of the fiber surface approach from Klacansky et al. <ref type="bibr" target="#b15">[16]</ref> to the case of a three-dimensional range. We show that this approach allows an exact, marching tetrahedron style algorithm under modest assumptions:</p><p>• A simplicial mesh in the three-dimensional domain</p><p>• Symmetric second-order tensors given at vertices</p><p>• Piecewise linear interpolation of tensor invariants</p><p>• Selection of volume in invariant space by simplicial mesh.</p><p>Of course, generalizations are possible at the cost of exactness and computational complexity. Also, we do not claim that the presented algorithm is the final word on efficiency, but rather provide a proof of concept that allows for nearly interactive visual analysis of stress fields from component design in mechanical engineering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RELATED WORK</head><p>While there is a lot of work on visualizing diffusion tensor images, we do not refer to this material here, as it is only relevant if it can be applied to indefinite tensors and does not have a strong relation to neuroscience. It should be noted, however, that our work might be applied in this context in the future. The survey of Kratz et al. <ref type="bibr" target="#b16">[17]</ref> splits the current state of the art of tensor visualization beyond the positive definite case into three groups: the local, the continuous and the multi-view tensor visualization. Local methods mostly use glyphs, but the problem of design, placement and rendering comes along with them. Although glyphs are the only known method to represent all properties of a tensor, they should not be too complex. A popular method avoiding ambiguities depending on viewing directions are superquadrics by Kindlmann et al. <ref type="bibr" target="#b13">[14]</ref>. An important limitation of local methods is the missing reflection of the continuity of the tensor field. Continuous methods always pick a part of the tensor information for visualization. Most continuous methods are built upon the tensor line idea from Dickinson <ref type="bibr" target="#b5">[6]</ref>, i.e. a streamline following one of the eigenvectors. Popular techniques are Hyperstreamlines of Delmarcelle and Hesselink <ref type="bibr" target="#b3">[4]</ref>, tensor topology <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b10">11]</ref> and texture based approaches like HyperLIC of Zheng et al. <ref type="bibr" target="#b33">[34]</ref>, or fabrics <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b12">13]</ref>. However, these approaches nearly ignore the invariant part as mentioned before. Finally, multi-view visualizations link the well-known visualizations with new ones to ease the interpretation and development of new visualization techniques as well as the representation of at least one more property of a tensor. Multi-view visualization is not a recent idea in general as it is already used in texture mapping <ref type="bibr" target="#b27">[28,</ref><ref type="bibr" target="#b28">29]</ref>, fluid simulation on surfaces <ref type="bibr" target="#b30">[31]</ref>, and additional topics but it is new in regard to the visualization of tensor fields. Our approach is a multi-view, in fact two-view, approach, but it computes explicit geometry in the domain providing non-local information, so it has properties of continuous methods as well. As it focuses exclusively on the invariants, it is complementary to most continuous techniques.</p><p>Only very few articles studied the visualization of symmetric tensor fields by looking at the invariant space. The two approaches closest to our work have been published recently by Palacios et al. <ref type="bibr" target="#b23">[24]</ref> and Zobel and Scheuermann <ref type="bibr" target="#b34">[35]</ref>. Both approaches define specific surfaces in the domain by properties of the invariants or the invariant mapping in the sense of a feature surface. Palacios et al. <ref type="bibr" target="#b23">[24]</ref> define the surface of traceless tensors and the surface of tensors with mode zero (tensor mode will be defined in the next section). They also report that isosurfaces of tensor invariants like tensor mode, tensor isotropy, and tensor magnitude are helpful in engineering contexts. This was a source of inspiration for us. Zobel and Scheuermann <ref type="bibr" target="#b34">[35]</ref> define so-called extreme points of the tensor field as points where the gradient of the invariant map has lower rank. This leads to extremal lines in two-dimensional domains and extremal surfaces in three-dimensional domains. In these earlier works, surfaces in the physical domain are defined based on mathematical properties in the invariant space. In contrast, we propose a general interactive mechanism to define surfaces in invariant space and visualize the pre-images of these surfaces in the physical domain. Thus, we allow for an interactive exploration of tensor fields based on invariants.</p><p>As we construct separating surfaces with explicit geometry from grid-based data by iterating over all cells, our approach is a Marching Cubes <ref type="bibr" target="#b20">[21]</ref> style approach, compare also the marching tetrahedra variant <ref type="bibr" target="#b0">[1]</ref>. Basically, if our defining surface in the invariant space is normal to one coordinate axis, we compute an isosurface of an invariant as suggested by Palacios et al. <ref type="bibr" target="#b23">[24]</ref>. Indeed, we are convinced that our approach can also profit from the many improvements and acceleration techniques of marching cubes like Livnat's work <ref type="bibr" target="#b19">[20]</ref>.</p><p>As mentioned in abstract and introduction, our algorithm is a generalization of the work by Klacansky et al. <ref type="bibr" target="#b15">[16]</ref> which builds upon the idea of fiber surfaces from Carr et al. <ref type="bibr" target="#b1">[2]</ref>. In their case, the isovalue is an element of a two-dimensional co-domain which leads to the usage of polylines in the range for the definition of fiber surfaces in the domain. Basicly, we have a three-dimensional co-domain, the invariant space of the tensor field, which leads to using triangulated surfaces in the co-domain defining fiber surfaces in the domain of the tensor field. They use octree-based subdivision of the domain and pre-calculated lookup tables of all possible triangle characterizations in the spirit of marching cubes. We do not use this in our current implementation, but these ideas should lead to faster implementations in our case, too. But we follow the idea of a fast exact algorithm based on elementary geometric operations as suggested by Klacansky et al. <ref type="bibr" target="#b15">[16]</ref> for their case.</p><p>Mechanical engineers are the main target users of our technique, even if neuroscientists or geometric designers may also profit. In mechanical engineering, the use of isosurfaces of tensor invariants is a daily business, as a look at the post-processing capabilities of widespread finite element software like Abaqus <ref type="bibr" target="#b31">[32]</ref> shows. Zobel et al. <ref type="bibr" target="#b35">[36]</ref> also comment about the necessity to visualize tensor gradients under certain conditions, going beyond the second-order case. A very nice application showing the power of advanced tensor visualization in mechanical engineering was given by Kratz et al. <ref type="bibr" target="#b17">[18]</ref>. They improved the strength of a mechanical component, especially a brake lever, by visualizing tensor lines to support the design of rib structures. This led to a stiffer design with the same amount of material which could also be used to reduce material consumption under given loading. We hope for similar results by using our approach in the future.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">TENSOR FIELDS AND INVARIANT SPACE 3.1 Symmetric second-order tensor fields</head><p>We consider a symmetric, second-order tensor field over a threedimensional domain. Typical examples would be stress or strain fields in structural mechanics, the rate of deformation tensor in fluid dynamics, the metric tensor in geometry, or the diffusion tensor in diffusion tensor imaging (DTI) in neuroscience.</p><p>The set of all second-order tensors R 3 ⊗ R 3 is nine-dimensional. For a fixed Cartesian coordinate system e 1 , e 2 , e 3 , it has the orthonormal basis A i j := e i ⊗ e j , i, j = 1, 2, 3.</p><p>Similarly, the set of all symmetric tensors Sym(R 3 ⊗ R 3 ) is sixdimensional and has the orthonormal basis </p><formula xml:id="formula_1">B 11 = e 1 ⊗ e 1<label>(2)</label></formula><formula xml:id="formula_2">B 33 = e 3 ⊗ e 3<label>(7)</label></formula><p>see e.g. Kindlmann et al. <ref type="bibr" target="#b14">[15]</ref>. A symmetric tensor T ∈ Sym(R 3 ⊗ R 3 ) can be written in this basis as</p><formula xml:id="formula_3">T = ∑ j≤i T i j B i j .<label>(8)</label></formula><p>From now on, all tensors will be symmetric, second-order and threedimensional. We will need some classical operations on tensors. The inner product of two tensors is written as</p><formula xml:id="formula_4">A : B := ∑ i j A i j B i j .<label>(9)</label></formula><p>The norm of a tensor is defined by</p><formula xml:id="formula_5">|T | := √ T : T .<label>(10)</label></formula><p>Trace and determinant are given by</p><formula xml:id="formula_6">tr(T ) = T 11 + T 22 + T 33 (11) det(T ) = T 11 T 22 T 33 + T 12 T 23 T 13 + T 13 T 12 T 23 (12) −T 2 13 T 22 − T 2 23 T 11 − T 2 12 T 33</formula><p>We will also look at the deviator of T defined as</p><formula xml:id="formula_7">dev(T ) := T − 1 3 tr(T )I<label>(13)</label></formula><p>where I = B 11 + B 22 + B 33 is the identity tensor. A symmetric, second-order tensor field over a three</p><formula xml:id="formula_8">-dimensional domain D ⊂ R 3 is a map T : D → Sym(R 3 ⊗ R 3 ) (14) x → T(x)</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Invariant Space and its Coordinate Systems</head><p>We are interested in the invariants of a symmetric second-order tensor T . An invariant of a symmetric tensor T is a scalar function</p><formula xml:id="formula_9">β : Sym(R 3 ⊗ R 3 ) → R<label>(15)</label></formula><p>that is invariant to the operations of rotations of R 3 , i.e. to operations of the special orthogonal group SO(3) which means</p><formula xml:id="formula_10">β (T ) = β (R T R T ) ∀R ∈ SO(3).<label>(16)</label></formula><p>The space I of all invariants of a three-dimensional, symmetric, secondorder tensor is three-dimensional <ref type="bibr" target="#b29">[30]</ref>. Therefore, for any symmetric second-order tensor field T over a domain D ⊂ R 3 , we have a map</p><formula xml:id="formula_11">T I : D → I (17) x → T I (x)</formula><p>We may select a basis β 1 , β 2 , β 3 of I and study the mapping of coefficients</p><formula xml:id="formula_12">T I : R 3 ⊃ D → R 3 (18) (x 1 , x 2 , x 3 ) → 3 ∑ i=1 β i (x)β i with x = ∑ 3 i=1</formula><p>x i e i . This is a map between three-dimensional spaces and will be used for visualization purposes.</p><p>Obviously, the choice of the basis is a key question for visualization and interpretation. Literature mentions several basis sets of practical relevance. Three basis sets can be derived from the characteristic equation</p><formula xml:id="formula_13">0 = det(T − λ I) = λ 3 − I 1 (T )λ 2 + I 2 (T )λ + I 3 (T )<label>(19)</label></formula><p>Its coefficients are one popular basis set and are given by</p><formula xml:id="formula_14">I 1 (T ) := tr(T )<label>(20)</label></formula><formula xml:id="formula_15">I 2 (T ) := tr(T ) 2 − tr(T 2 )<label>(21)</label></formula><p>=</p><formula xml:id="formula_16">T 11 T 22 + T 11 T 33 + T 22 T 33 − T 2 12 − T 2 13 − T 2 23 I 3 (T ) := det(T ).<label>(22)</label></formula><p>Engineers like to study a somewhat different basis which makes explicit use of the deviator:</p><formula xml:id="formula_17">I 1 (T ) = tr(T )<label>(23)</label></formula><formula xml:id="formula_18">J 2 (T ) := 1 2 dev(T ) : dev(T )<label>(24)</label></formula><formula xml:id="formula_19">J 3 (T ) := I 3 (dev(T )) = det(dev(T ))<label>(25)</label></formula><p>A third important set is given by the roots of the characteristic equation, i.e. the eigenvalues of T which are always real numbers in our case of symmetric tensors. We denote them by λ 1 (T ), λ 2 (T ), λ 3 (T ).</p><p>For two more basis sets, we may use the R-invariants by Ennis and Kindlman <ref type="bibr" target="#b7">[8]</ref> </p><formula xml:id="formula_20">R 1 (T ) = |T | (26) R 2 (T ) = 3 2 |dev(T )| |T | (27) R 3 (T ) = mode(dev(T )) = 3 √ 6det dev(T ) |dev(T )|<label>(28)</label></formula><p>and the K-invariants from Criscioni et al. <ref type="bibr" target="#b2">[3]</ref> K 1 (T ) := tr(T ) = I 1 (T )</p><formula xml:id="formula_21">K 2 (T ) := |dev(T )| = 4 J 2 (T )<label>(29)</label></formula><formula xml:id="formula_22">K 3 (T ) := mode(dev(T )) = 3 √ 6 J 3 (T ) J 2 (T ) 3 2<label>(30)</label></formula><p>Ennis and Kindlmann <ref type="bibr" target="#b7">[8]</ref> show that the I i , λ i , R i and K i are orthonormal bases (which was proven for the K i by Crisconi et al. <ref type="bibr" target="#b2">[3]</ref> before). Furthermore, the I i and λ i can be seen as Cartesian coordinates for the invariant space, while the K i can be interpreted as cylindrical coordinate system, and the R i as spherical coordinate system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">STRESS TENSOR INVARIANT SPACE 4.1 Stress Tensor Invariants</head><p>While symmetric second-order tensors over three-dimensional domains appear in many different application domains, e.g. diffusion tensor imaging in neuroscience, rate of deformation tensor in fluid mechanics, or metric tensors in differential geometry and geometric design, we focus here on structural mechanics as application domain. The presented technique can be applied in these other domains without changes, but to be a bit more explicit in the results section, we picked this domain as example. Also, there are several tensor fields in structural mechanics that are symmetric, second-order and three-dimensional, especially most stress and strain tensors. But, we concentrate here on the popular Cauchy stress tensor to demonstrate and evaluate the concept and leave the application to other fields for future work. The Cauchy stress tensor σ (x) describes the local stress t(x, n) ∈ R 3 at position x ∈ D as force per unit area on any plane with normal n ∈ R 3 by</p><formula xml:id="formula_24">t(x, n) = σ (x)n<label>(32)</label></formula><p>where t(x, n), x and n are given in Eulerian coordinates. This version of the stress tensor is usually computed and studied in finite element simulations. There are other stress tensors around. For a description of them and the relations among them, consult a typical engineering reference like Holzapfel's textbook <ref type="bibr" target="#b11">[12]</ref>. Let us start with some well-known interpretations of stress tensor invariants in mechanical terms. The trace of the stress tensor</p><formula xml:id="formula_25">I 1 (σ ) = K 1 (σ ) = tr(σ )<label>(33)</label></formula><p>is closely related to the mean stress</p><formula xml:id="formula_26">p(σ ) := 1 3 tr(σ ) = 1 3 I 1 (σ ) = 1 3 K 1 (σ ) = λ 1 (σ ) + λ 2 (σ ) + λ 3 (σ ) 3 (34) which describes hydrostatic stress. If the deviator is zero, e.g. J 2 (σ ) = J 3 (σ ) = 0 resp. K 2 (σ ) = K 3 (σ ) = 0, it holds σ = p(σ )I<label>(35)</label></formula><p>with identity tensor I which means that we have equal stress (usually tension for positive sign and compression for negative sign) on all planes at this point. For an (elastic) fluid that cannot sustain any shear stress, p is called pressure, an important variable in fluid mechanics. If the hydrostatic stress is ignored or not relevant for the question at hand, the deviator of the stress dev(σ ) is studied. A fixed multiple of its norm</p><formula xml:id="formula_27">σ v := 3 2 |dev(σ )| = 3 2 K 2 (σ ) = 24J 2 (σ )<label>(36)</label></formula><p>is called von Mises stress <ref type="bibr" target="#b21">[22]</ref> and is a popular yield criterion for important materials like steel (and many other metals) or some uniform plastics. It measures the strength of shear stress by looking at the squared sum of the differences of all eigenvalues. The underlying assumption is that the considered material starts plastic deformation under shear stress above a certain limit. This scalar limit can be measured for a material in an uniaxial test while it is applied in complicated triaxial stress states. If yielding depends on the isostatic pressure I 1 (σ ) = K 1 (σ ) as well, or at the relation between all eigenvalues, i.e. it depends also on K 3 (σ ), I 3 (σ ), J 3 (σ ), more complicated yield functions are used which are described shortly in the next section. In general, the eigenvalues describe the normal stresses in the eigensystem of the stress tensor, i.e. local Cartesian coordinates where all shear stresses vanish. The smallest (minor) eigenvalue</p><formula xml:id="formula_28">λ min (σ ) = min(λ 1 (σ ), λ 2 (σ ), λ 3 (σ ))<label>(37)</label></formula><p>defines the maximal normal compression, and the largest (major) eigenvalue</p><formula xml:id="formula_29">λ max (σ ) = max(λ 1 (σ ), λ 2 (σ ), λ 3 (σ ))<label>(38)</label></formula><p>describes the maximal possible tension. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Yield Surfaces</head><p>In one typical structural mechanics application, there is a geometric design of a component together with loading conditions on some part of the boundary. The engineer has to check if the current design withstands the defined loading conditions. Before doing any physical tests, there will be a finite element simulation to check whether the component fails, i.e. where and under how much load it breaks. For most materials, there is a prediction model for the stress states that will create plastic deformation instead of elastic deformation. Quite often, this stress is considered the limit to failure. This limit is given in these models as yield surface. Yield surfaces are usually described as implicit function of invariants of the stress tensor, i.e. there is a function</p><formula xml:id="formula_30">f : I → R (39) σ I → f (σ I )</formula><p>such that the yield surface is given by</p><formula xml:id="formula_31">f (σ I ) = c<label>(40)</label></formula><p>for some material-dependent constant c ∈ R. In the simple case of a purely elastic simulation, the engineer is interested in all points with stresses outside the yield surfaces as the component will fail there (see <ref type="figure" target="#fig_0">Figure 1</ref>). He may also be interested in positions where the stress gets close to the surface as the model may still predict stability but the physical test may already show failure. We will discuss more practical questions in the results section. The explicit formulae for the yield function are given in some basis of the invariant space (and can be expressed in the other bases by transformation, of course). We note a few popular cases. The von Mises yield surface is given by</p><formula xml:id="formula_32">3 2 K 2 (σ ) = σ v<label>(41)</label></formula><p>where σ v is called von Mises stress. If visualized using the principal stresses as coordinates, it forms an infinite cylinder along the mean stress axis, i.e. λ 1 (σ ) + λ 2 (σ ) + λ 3 (σ ) (see <ref type="figure" target="#fig_0">Figure 1</ref>). For a short explanation, see the previous section, some engineering book, or the original paper by von Mises <ref type="bibr" target="#b21">[22]</ref>. The Tresca yield surface is given by</p><formula xml:id="formula_33">σ T = λ max (σ ) − λ min (σ ) (42) = max(|λ 1 (σ ) − λ 2 (σ )|, |λ 2 (σ ) − λ 3 (σ )|, |λ 3 (σ ) − λ 1 (σ )|)</formula><p>which means that there is a limit for the maximal shear stress. If visualized using the principal stresses as coordinates, it forms an infinite six-sided prism along the mean stress axis.</p><p>The Drucker-Prager yield surface combines hydrostatic stress and shear stress limits into</p><formula xml:id="formula_34">β K 1 (σ ) + K 2 (σ ) = σ t (43)</formula><p>with the weight β between the two stress invariants and the scalar limit σ t . It can be seen as a generalization of the von Mises criterion allowing for hydrostatic stress dependency. This model is often used for materials like concrete or rock with the assumption that there is a shear stress limit as in the von Mises models above, but it depends on the normal stress (typically tension). In the principle stress coordinate system, it looks like a cone with axis along the mean stress. The Mohr-Coulomb yield surface adds a hydrostatic pressure dependency to the Tresca model leading to the formula</p><formula xml:id="formula_35">max(|λ 1 (σ ) − λ 2 (σ )| + K(λ 1 (σ ) + λ 2 (σ )), (44) |λ 2 (σ ) − λ 3 (σ )| + K(λ 2 (σ ) + λ 3 (σ )), |λ 3 (σ ) − λ 1 (σ )| + K(λ 3 (σ ) + λ 1 (σ ))) = σ MC</formula><p>where K = m−1 m+1 with m = σ c σ t , the maximal tensile stress σ t , and the maximal compressive stress σ c in the uniaxial test. It is also used for concrete and rock, like Drucker-Prager. In principle stress coordinates, the Mohr-Coulomb yield surface looks like a conical prism. There are many more yield surface models, including all types of quadratic surfaces (Burzyski-Yagn model) generalizing the examples above.</p><p>Of course, all these laws are approximate, so engineers will keep margins to be on safe side. Sometimes the chosen law may not be perfect, so a look at the whole stress state instead of the invariant helps. For purely elastic simulation, the model will compute stress states outside the yield surface, thus indicating failure. For elasto-plastic simulations, the stress will never be outside the yield surface, but stay there while plastic deformation takes place.</p><p>There are also indications for materials like metal that local failure does not only depend on stress state but also on the gradient. Basically, it is assumed that a high stress does not yield failure if there is also a high gradient indicating substantially lower stress in close surrounding. Again, engineers are interested in observing the gradient together with stress in such cases <ref type="bibr" target="#b35">[36]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">OVERVIEW</head><p>The idea of the paper is to develop an algorithm that extends the approach of Klacansky et al. <ref type="bibr" target="#b15">[16]</ref> so that the three-dimensional invariant space of symmetric second-order tensors can be used as range instead of a two-dimensional one. The reason is the difficult interpretation of invariant spaces which can be eased by interactive visualization and direct linkage to the physical domain. Moreover, our method offers new approaches for the analysis of invariants and their relationships in real world applications. In order to generalize the work of Klacansky et al. <ref type="bibr" target="#b15">[16]</ref>, it is not sufficient to adapt the algorithm itself. The interaction in the range has to be redesigned as well, to deal with the characteristics of the three-dimensional space. This will be discussed in section 7. The invariant space hampers the generalization because it is in the nature of typical data that the geometric primitives (e.g. tetrahedra) interleave and infuse each other heavily which increases the challenge for effective representation of the data. The interaction will be handled by selection of regions of interest with geometrical primitives which are assumed to be closed and convex. The algorithm itself assumes a triangulated surface of the geometrical primitives as input, referred to as interactor.</p><p>As mentioned before, we assume that our tensor field is given over a tetrahedral grid in three-dimensional space with Cartesian coordinates and tensor values given at the vertices. Each vertex is mapped onto a vertex in the invariant space by the invariant map T I , see equation 18. Due to the non-linear formulae of the invariants, a correct interpolation over the tetrahedra would lead to high computational load and an exact algorithm would be very difficult. Therefore, we assume a linear interpolation of the invariants over each tetrahedron, even if this is mathematically incorrect. Consequently, the invariant map pushes the structure of the grid in the domain to the co-domain. In other words, the image in invariant space is a tetrahedral mesh too, and all neighbor relations of vertices are kept. However, there is heavy self-intersection of the mesh because of the same invariants which appear several times in the tensor field. Unlike the domain, the co-domain is displayed in Cartesian or in cylindrical coordinates depending on the selected basis, see section 3.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">FIBER SURFACE COMPUTATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Basic Approach</head><p>As mentioned in the previous section, our assumption of linear interpolation of the invariants maps each tetrahedron of the grid in the physical domain to a tetrahedron in invariant space. In invariant space, we assume that the selection of the volume of interest is done by an interactor which is given as triangulated surface. We define our fiber surface in invariant space as the intersection of the interactor with all tetrahedra. Therefore, we basically intersect each tetrahedron in invariant space with each triangle of the interactor. This leads to a large number of triangle-tetrahedron intersection computations.</p><p>To intersect a triangle with a tetrahedron, we compute the plane of the triangle and check if the vertices of the tetrahedron lie on different sides of the plane. If not, there cannot be an intersection. Otherwise, we compute the four faces of the tetrahedron and carry out simple triangle-triangle intersections using methods from literature <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b22">23,</ref><ref type="bibr" target="#b32">33]</ref>. The intersecting lines of the triangle-face pairs are calculated and its vertices are added to a list of all intersecting points. In addition, we check for the vertices of the triangle from the interactor if they are inside the tetrahedron. If they are inside, they are also added to the list. We order all intersection points into a polygon as they must lie in the plane of the interactor triangle and create triangles. In an additional step, we identify intersection points from different tetrahedra on the same interactor face. In this way, we get a triangulated surface in the invariant space.</p><p>After these intersection computations, we need to map the resulting triangulated surface back to physical space. Since we assume a linear mapping of invariants, the inverse mapping is also linear and we can use barycentric coordinates inside each tetrahedron to map the intersection back to physical space. The resulting triangulated surface is the fiber surface.</p><p>In addition, a post-process ensures that the set of triangles is split into (connected) contours which allows a simple visual analysis of connected components in the object space. A half-edge data structure is used to realign the normals of the triangles of the separate structures to identify the interior and exterior of a surface clearly. Furthermore, we index the triangles of the fiber surface by the interactor triangles. This allows for a visualization of the part of the fiber surface associated with a specific interactor triangle, e.g. by simple color coding. Algorithm 1 describes the general fiber surface extraction algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Special Cases</head><p>As usual with computational geometry algorithms, special cases need special attention. A first problem arises from numerical errors in computing the intersection points. This may lead to slightly different coordinates for the same point when computing it multiple times. This happens especially if the tetrahedra are very small so that even small round-off errors have a significant effect on the results (see <ref type="figure" target="#fig_1">Figure 2</ref>). Therefore, a numerically correct calculation of the intersection points must be used to avoid problems with connectivity or even visible holes in the resulting surface. A second challenge is provided by exactly planar tetrahedra. In these cases, there is no bijection between invariant space and physical domain. These tetrahedra are not considered by our algorithm at all because the intersections of the adjacent tetrahedra of the interleaving faces create the necessary geometry. We just connect the triangles correctly to get the right topology for our fiber surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Acceleration</head><p>Considering <ref type="figure" target="#fig_1">Figure 2</ref>, it is noticeable that the mapped tetrahedra vary substantially in size and shape in the co-domain which hampers a partition for fast extraction of fiber surfaces. Nevertheless, we need to  reduce the number of triangle-tetrahedron intersection tests to enable an interactive exploration of datasets. This is done in two steps:</p><p>1. Bounding spheres of the interactor and each tetrahedron are created and checked for intersection. If no intersection is found, the algorithm skips the current tetrahedron for any further calculations. The method for the computation of the bounding sphere of a tetrahedron is illustrated in Algorithm 2.</p><p>2. A signed distance field similar to marching cubes is applied to the remaining tetrahedra. Only if the vertices of a tetrahedron lie in different half spaces created by the plane through the current triangle, the current tetrahedron must be observed in the fiber surface extraction process.</p><p>The partition of all interactors into their triangles facilitates a later parallelization and introduces the ability to look at the different fiber surfaces which were extracted. The second reduction cannot be applied to the entire interactor because it is a closed body and the tetrahedron can infuse it without a vertex inside the tetrahedron (see <ref type="figure" target="#fig_2">Figure 3</ref>). For the sphere intersection test, the center M of the interactor is calculated using the arithmetic mean of all points of the triangulation of the interactor. After this, the radius R of the interactor is calculated using the center M and the farthest point. Next the bounding spheres of all tetrahedra are created by computing their centers m i and radii r i . The calculation of the sphere around a tetrahedron depends on the type of the tetrahedron. If the sphere through all four vertices has a center inside the tetrahedron, we use this sphere. If the center is outside, we look at the largest triangular face. We take the center of the circumference of this triangle and use its radius as radius of the sphere. The fourth vertex is inside this sphere in this case, so we get a smaller sphere than using the sphere through all vertices.</p><p>In addition, all tetrahedra whose radius equals zero are removed because they consist of only one point. For the remaining tetrahedra, we check the spheres for intersection. An intersection of a tetrahedron and a triangle is only possible if the distance between the centers m i and M of their bounding spheres is smaller than the added radii r i + R. end for end for</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">INTERACTIVE VISUAL ANALYSIS</head><p>We aim at interactive visual analysis of a symmetric, second-order, three-dimensional tensor field by selecting surfaces in invariant space which define fiber surfaces in the domain. For this purpose, we present the user two linked views, one for the physical three-dimensional domain, and one for the invariant space. While there are several obvious choices for showing context in the physical domain, like boundary grid and global coordinate system, the presentation of the invariant space is less straightforward.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1">Coordinate System</head><p>For projecting to invariant space, we need to define coordinates in invariant space. In section 3.2, we presented five different coordinate systems. Even if we do not consider the R i -System (a spherical coordinate system) for our mechanical applications, we have at least three Cartesian and one cylindrical system with clear semantics as explained in section 4. In principle, we leave the decision up to the user who may decide to look at their data in different coordinate systems. However, there is one issue about the Iand I, J-systems that requires care: scaling. From the definitions, it can be seen easily that trace is a linear, second invariant a quadratic, and determinant a cubic quantity in terms of tensor entries. Therefore, there will be most likely substantial differences in value for these coordinates. One solution is to take roots or powers to bring them into a similar range. another would be the scaling by the user. Overall, we discourage the use of these two coordinate systems because of this scaling issue. A short look at the K-basis shows that K 2 is basically the square root of J 2 which indicates that units fit well to K 1 . Furthermore, K 3 is a ratio between well scaled J 3 and J 2 , known to be in the interval [−1, 1]. If one interprets K 3 as an angle by arcsin(K 3 ) in a cylindrical system, there is no scaling issue with the compute midpoint m i from tetrahedron tet i</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>5:</head><p>compute radius r i from tetrahedron tet i 6:</p><formula xml:id="formula_36">compute midpoint distance d i = norm(m 1 − M) 7:</formula><p>remove tet i with r i = 0 Compute possible intersection from tet i and the interactor 8:</p><formula xml:id="formula_37">if d i &lt; (r i + R) then 9:</formula><p>add tet i to PITet List of possible intersecting tetrahedra <ref type="bibr">10:</ref> end if 11: end for K-invariants. Also, there is also no scaling issue with the eigenvalues, i.e. λ -invariants.</p><p>As additional context, we offer the user to present one of the four yield surfaces described in section 4.2 with adjustable parameters to allow for additional context besides the coordinate system (see <ref type="figure" target="#fig_0">Figure 1</ref>). Of course, if a different yield surface fits the used material model better, we can easily add this surface as well to the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2">Invariant Space Image</head><p>After setting up the coordinate system, we need to show the image of the invariant map in our invariant space view. As mentioned before, we assume that the tensor values are given at the vertices of a tetrahedral mesh in the domain. We compute the invariant coordinates according to the chosen basis at the vertices. If two neighboring vertices have the same invariants or the Euclidean distance between them is smaller than a predefined ε, the two vertices are moved to the same position in invariant space. The edge between them is still stored to keep the grid topology. This procedure helps the triangle-tetrahedron intersection algorithm of the previous section to compute a valid inverse mapping. Nevertheless, we can still have planar or almost planar tetrahedra in invariant space which create numerical errors in the inverse mapping.</p><p>To map the tetrahedra, we assume the linear interpolation of invariants inside each tetrahedron despite mathematical errors, so that each tetrahedron in the domain maps to a tetrahedron in invariant space. This leaves us with the question how to show all those tetrahedra or more generally, the image of the invariant map. We have used four different possibilities in our tests:</p><p>Point Representation Our simplest visual representation in the invariant space is to show all vertex images as points resp. small spheres, see <ref type="figure" target="#fig_3">Figure 4A</ref>.</p><p>Wireframe Representation While the mesh topology is kept in invariant space, there is usually heavy overlapping of the tetrahedra in the invariant space. This is due to the fact that the same invariant set is reached at several positions in the data. Nevertheless, we frequently use a wireframe representation of the mesh in the invariant space. This puts visual emphasis on extreme values and outliers which are typically of interest for further inspection. It also gives some clue where many tetrahedra overlap, but without any indication of number or density, see <ref type="figure" target="#fig_3">Figure 4B</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Surface Representation</head><p>We have also experimented with rendering all faces of the tetrahedra as transparent triangles. This allows for some indication of density (see <ref type="figure" target="#fig_3">Figure 4C</ref>), even if this is mathematically incorrect because the density inside the tetrahedra and the distance between front and back face are ignored.</p><p>Direct Volume Rendering of Density In principle, it is possible to compute an exact density distribution in the invariant space based on the mapped tetrahedra. This density can be visualized by direct volume rendering. However, due to the massively overlapping tetrahedra, it is a real challenge to implement an algorithm for this that allows for interactive rendering. Therefore, we leave this task for future work and use a rather coarse approximation. As there are fast volume rendering algorithms for voxel grids, we simply define such a grid with a size close to the maximum texture memory of the graphics card. In a preprocessing step, we compute the density for each voxel. For this, we iterate over all tetrahedra, compute the voxels intersected by the mapped tetrahedron in invariant space, and add up the corresponding density. This leads to a sampling of the correct density over the voxel grid. We use a standard raycasting algorithm implemented using shaders on the graphics card to render this density interactively. As transfer function, we use simply a constant blue value and linearly increasing opacity. For a white background, this results in a good indication of the density distribution of the image in invariant space. However, extreme values are invisible in the volume rendering due to low density. Here, visual attention is directed towards the areas of high density in the invariant space. More precisely, the image corresponds to the density projected along the current viewing direction, but after some interactive rotations, the viewer gets an idea of the density distribution, see <ref type="figure" target="#fig_3">Figure 4D</ref>.</p><p>The engineers liked the wireframe representation best, as it indicates extremal values and gives some indication of the neighboring values around those. Sometimes, they also asked for the simple point representation. The other two options were less interesting to them, but this may be due to the fact that they are more difficult to understand or interpret. Further research will be necessary to find the best solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.3">Interaction</head><p>The user needs to position a triangular surface in the invariant space to define the fiber surface. As this should be possible in an interactive fashion, we decided to use a small set of predefined "interactors". These interactors are closed graphical primitives with triangulated surfaces that can be scaled, rotated, and moved in invariant space. By right mouse click, the current position is communicated to the fiber surface algorithm which calculates the fiber surface shown in the domain. Currently, we support the following interactor geometries: tetrahedra, cubes (see <ref type="figure" target="#fig_4">Figure 5, 6, 7)</ref>, spheres (see <ref type="figure" target="#fig_8">Figure 9</ref>), regular cylinders, pyramids, and prisms. It is possible to use several interactors at the same time, each of them creating a fiber surface. They are selected via left mouse click. However, we kept the number of interactors and number of triangles per interactor small to get close to interactivity for medium sized models, so we have not tested many interactors or very complicated designs. Of course, there are many more possibilities to define the interaction. We expect more research about this in the future, especially together with faster implementations of the fiber surface algorithm.</p><p>As shown in <ref type="figure" target="#fig_0">Figure 1</ref> a yield surface could improve the exploration. Assuming that the yield surface defines the maximal stress for the specific application, all tetrahedra in the invariant space which lie beyond the surface are an indicator for a collapse. An interactor could be used to select these tetrahedra to show the regions in the physical domain where the collapse could occur.</p><p>Inverse Fiber Surface Algorithm A very nice property of our algorithmic setup is that we can also calculate the forward mapping from the domain to the invariant space without a new algorithm or changes to the fiber surface algorithm. Our user interface allows using the interactors also in the physical domain defining a triangulated surface there. Now, the fiber surface algorithm computes the intersection of these triangles with the tetrahedra of the grid in the domain. Then, it maps the intersection, consisting of a few triangles per tetrahedron, to invariant space using the (forward) invariant map. The resulting triangular surface informs the user about the sub-set of invariant space that is reached by the selected part of the domain. The triangular surface in invariant space may be self-intersecting, but it serves its purpose well as can be seen in the results section.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8">RESULTS</head><p>We demonstrate our method and its potential by applying it to three typical examples from mechanical engineering. The first case is a classical bending beam (cantilever). The cantilever is a well-known mechanical problem and therefore easily understood by engineers, so we use it to explain basic functionality. The second example looks at two loading simulations of a composite-metal hybrid component. In these simulations, the influence of composite defects on the strength of the component is investigated. Finally, the third example consists of a three-dimensional single-edge notched beam in a three-point bending configuration. The demonstrations were run on a standard workstation with an Intel Xeon E5-2630 v3 with 2.40 GHz, 32 GB Ram and a Nvidia GeForce GTX 980. Implemented is the algorithm inside our framework with C++.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.1">Bending Beam</head><p>At first, we use a familiar engineering application, the cantilever, to show our approach in a familiar engineering application. The test dataset is a cantilever and has been generated as well simulated with Abaqus/Standard CAE <ref type="bibr" target="#b31">[32]</ref>. The beam's dimensions are 30 × 30 × 100 mm and it is completely fixed on one side (encastré) while on the loose side a force is introduced over the entire cross-section surface. The load is 1000 N in negative y-direction. The beam material is metal with a Youngs modulus of 210 GPa and the Poissons ratio of 0.3. The cantilever is meshed with three-dimensional quadratic tetrahedral continuum elements (C3D20) with a size of 5 mm.</p><p>In <ref type="figure" target="#fig_4">Figure 5</ref> the beam is shown as the blue wireframe in the domain view on the left side. On the right side, the invariant space view is given where the three principal stresses are used as Cartesian coordinates. Here, the major principal stress is mapped at the x-axis, the medium principal stress at the y-axis and minor principal stress at the z-axis.</p><p>First, the symmetric load distribution in the bending beam can be seen in the obviously symmetric structure of the invariant space. The structure is not easily interpreted but using the interactor, specific areas of interest either in invariant space or object space can be examined in more detail. For instance, this allows the definition of regions where significant high values or extreme differences of stress occur. In <ref type="figure" target="#fig_4">Figure 5</ref>, a cubic interactor (transparent red) is chosen with dimensions of 20 × 20 × 20 MPa. The cube cuts the invariant space with two sides which are visualized as fiber surfaces. The corresponding fiber surfaces are rendered in the beam in the domain view on the left side. The upper surface shows a specific tensile stress while the second surface is a specific compression load in the lower part of the beam. This image is expected because of the applied bending force at the opposite end of the beam. Equally, the neutral phase of the bending beam could be pictured lying parallel in the middle of the beam. We could also show the maximum tensile stress in the upper region or the high compression in the lower region next to the fixed cross-section surface.</p><p>The extraction of the fiber surfaces of this small dataset (4320 tetrahedra) with an interactor of 12 triangles takes up to 1.0 second beginning with the translation of the interactor and ending with the rendering of the fiber surface. In this case the interactor is too great so that the algorithm 2 would not remove any tetrahedron.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.2">Fiber reinforced metal component</head><p>A more interesting example represents a fiber reinforced plastic part. Due to the more complex material of multiple components (metal, fibers and matrix) the material behavior is more difficult to describe and to understand. Here, the well-known von Mises stress (σ v , see section 4) is not a feasible yield criterion due to the anisotropic material parameters.</p><p>Our simulation uses a multi-continuum material model by Abaqus <ref type="bibr" target="#b31">[32]</ref> and Helius <ref type="bibr" target="#b9">[10]</ref> where the polymer matrix and the fibers are separately considered which is shown in <ref type="figure" target="#fig_5">Figure 6</ref>. The model represents a metal-composite connection part with metal inset (three arm structure). Because of the symmetry towards the y-z-plane, only half of the part is simulated. Therefore, symmetry boundary conditions are applied to the left side while the right and top side are fixed and a tensile load of 3000 N is applied at the bottom of the inset in negative y-direction. Due to the boundary conditions, the part geometry, and the material behavior, the invariant space is much more complex as it can be seen on the right of <ref type="figure" target="#fig_5">Figure 6</ref>. Again, we decided to use the principle stresses as coordinates after testing other options. The linked view interface provides two options to analyze the simulation results. On the one hand, significant peaks in the invariant space can be selected with the interactor and the corresponding regions in the object space are highlighted. Hence, the engineer can evaluate how critical the superposition of different invariants resp. stresses effect special regions in the part. On the other hand, the interactor can be placed in a region in the part and the corresponding invariant space will be highlighted. This can be useful to compare simulations with similar part geometries but alternating fiber orientations or defects.</p><p>The interactor encloses a significant area with high invariant density showing a combination of high values in the first and second principal stress, as can be seen in <ref type="figure" target="#fig_5">Figure 6</ref>. The corresponding region in the object space is a half round region above the metal insert where damages due to peeling normal forces in the part can be typically observed. This clearly indicates that the invariant space has to be investigated more to define critical areas and gain a better understanding for engineering applications like this one. The algorithm introduced in this article provides the base to do so in the future.</p><p>We have also used the inverse fiber surface algorithm (forward mapping) of section 7.3 in this example, as shown in <ref type="figure" target="#fig_6">Figure 7</ref>. Here, two simulations with the same model geometry are compared. The simulations differ because one contains an initial defect within the selected range of the interactor. It can be seen that the enclosed invariant space regions are slightly different. Due to the fact that the invariant space in this region does not differ significantly, it can be deduced that the effect of the inserted defect is not critical to the investigated composite part under static tensile load.</p><p>This approach allows investigating regions of special interest in an unusual and particular way. In general, the stress tensor invariant space  provides great potential to visualize special phenomena in mechanical engineering. E.g. it is conceivable that not just invariant sets like the principal stresses or the other base sets from section 3.2 may be used, but further values derived from the stress tensor and invariants can be displayed. Therefore, adapting the invariant space to specific questions in simulations depending on materials and part geometries offers great development and application potential for the proposed algorithm.</p><p>The extraction of the fiber surfaces of this large dataset (about 2.5 million tetrahedra) with an interactor of 12 triangles took up to 3.0 seconds. The sphere intersection test acceleration removes almost 99 % of all the tetrahedra in the dataset. Depending on the position of the interactor the set of possible tetrahedra is reduced to around 50000 in <ref type="figure" target="#fig_5">Figure 6</ref> and to around 150000 in <ref type="figure" target="#fig_6">Figure 7</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.3">Three-point bending of a single-edge notched beam</head><p>As last example, we present the application of our method to a solid mechanics case consisting of a three-dimensional single-edge notched beam in a three-point bending configuration. The finite element software solves the discretized weak form of the partial differential equation div σ = 0 (45) subjected to suitable displacement and traction boundary conditions. The constitutive model linking stresses to strains is a coupled plasticdamage model with integral regularization, see Parisio et al. <ref type="bibr" target="#b24">[25]</ref>, for which the strength envelope consists of a Drucker-Prager yield surface, compare section 4.2 of the form</p><formula xml:id="formula_38">f p (σ ) = 1 4 K 2 (σ ) − β K 1 (σ ) + k = 0.<label>(46)</label></formula><p>In this case,σ = σ / (1 − d) is called the damage effective stress tensor, i.e., the stress acting in the undamaged part of the material (for further  details, see <ref type="bibr" target="#b18">[19,</ref><ref type="bibr" target="#b25">26,</ref><ref type="bibr" target="#b26">27]</ref>). As noted in section 3.2, the strength envelope looks like a circular cone with its axis directed along the mean stress in invariant space with principal effective stresses as coordinates. The evolution of damage d is indicative of the progressive failure of the material. <ref type="figure" target="#fig_7">Figure 8</ref> shows the state of stress in terms of principal components. It can be seen that the vicinity of the crack is predominantly in a state of tensile stress (mode I failure). The red surface indicates indeed the crack envelope in the beam mesh, while it appears that the surface presents some extreme points of very high compressive damage effective stress. On a closer analysis, it was evidenced that the points are located just at the crack tip and at the outer boundaries of the model <ref type="figure" target="#fig_8">(Figure 9</ref>). Here, equilibrium imposes total stress to be null, while high values of damage might bring the effective stress to a very high value. Furthermore, the stresses are evaluated at Gauss points and later on extrapolated to obtain nodal values for post-processing: this procedure inevitably produces errors, and inaccuracies, which could also be a concurrent cause of this outlier. <ref type="figure" target="#fig_8">Figure 9</ref> evidences the fact that it is a single point (showing up four times due to symmetries) with a very high stress value. In this case, the visualization in invariant space highlighted a shortcoming which could have hardly been noticed with conventional visualization methods. It furthermore points to the fact that possible improvements could be achieved by a higher mesh resolution.</p><p>The extraction of fiber surfaces of this dataset (about 16000 tetrahedra) with an interactor of 180 triangles took up to 5.0 seconds. The interactor is in <ref type="figure" target="#fig_7">Figure 8</ref> in the center from all tetrahedra so the algorithm 2 removes nothing. Around 100 tetrahedra remain in <ref type="figure" target="#fig_8">Figure 9</ref> after the algorithm.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="9">CONCLUSION AND FUTURE WORK</head><p>In this article, we introduce the notion of a fiber surface of invariant space for symmetric, second-order, three-dimensional tensor fields.</p><p>This allows for a (nearly) interactive study of such tensor fields. For this purpose, we suggest an interface with two linked views, one showing the physical domain of the field, and the other showing the image of the invariant map in the invariant space. We discussed possible coordinate choices for the invariant space in a mechanical engineering context, as well as additional contexts like yield surfaces. We suggest the use of so-called interactors, simple geometric primitives represented as triangulated surfaces to select the range which is then pulled back to the domain defining the fiber surfaces.</p><p>For the computation of the fiber surfaces, we assume a tetrahedral grid in the domain with tensor values on the vertices. Furthermore, we assume piecewise linear interpolation of invariants in invariant space. This leads to an algorithm that basically intersects each interactor triangle with each grid tetrahedron in invariant space, and maps the result back to the domain. We demonstrate that even our proof of concept implementation allows for nearly interactive extraction of the fiber surfaces in realistic examples. Interestingly, the same algorithm allows for forward mapping of a triangulated surface in the domain to invariant space, so we obtain a linkage in both directions without additional costs.</p><p>We presented three real applications from mechanical engineering looking at the Cauchy stress tensor field. We showed that it helps to find and understand extreme values, and allows for sanity tests of stress values including interpolation errors. Especially, it allows separating extreme values in one invariant by values in other invariants.</p><p>As indicated at various points throughout the paper, there is a lot of potential for future work: There are several obvious possibilities to speed up the algorithm, e.g. by using a lookup table like marching tetrahedra, by additional tests to avoid unnecessary intersections, or by parallelization. Furthermore, we would like to see research on the best visual representation of the image in invariant space. This may go hand in hand with a search for an interactive direct volume rendering of density in invariant space. There is also a need for an evaluation of interaction mechanisms to define the surfaces in invariant space, e.g. to go beyond our interactors. It may also be worthwhile to look at algorithms for other grid types, and at the errors by our linear interpolation of invariants. Finally, there is definitely a need for more applications, including work outside of mechanics.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Exemplary visualization of the eigenvalue-system of a bending beam with an additional von Mises surface. The cube is used to analyze the invariants which induce malfunction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>An example of a tensor field visualized as wireframe in invariant space with an intersecting interactor (red). The computed intersections of one triangle of the interactor with the tetrahedra are emphasized.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Two-dimensional sketch of an interactor (red circle) and a tetrahedron (black triangle) which overlap and where none of the vertices of the tetrahedron lies inside the interactor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Different representations of the mesh of tetrahedra in the threedimensional invariant space: point representation of the vertices (A), wireframe representation (B), surface representation (C), and representation with direct volume rendering of the density (D).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Usage of a great cuboid interactor in the invariant space of a bending beam (right) and visualization of the extracted fiber surfaces inside the corresponding grid in the object space (left).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Interaction with the invariant space of a fiber reinforced metal component (right) and visualization of the extracted fiber surfaces in the object space (left).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Fig. 7 .</head><label>7</label><figDesc>Interaction with the object space of a fiber reinforced metal component (left) and visualization of fiber surfaces of the selected area with brought in defect (mid) and without brought in defect in the invariant space (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 8 .</head><label>8</label><figDesc>Representation of a crack tip inside a notched beam (left). The exterior of the fiber surface is red and the interior blue. Representation of the eigenvector space (x shows the major, y the intermediate and z the minor eigenvalue) on the right side.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 9 .</head><label>9</label><figDesc>Selection of the extreme point inside the eigenvalue space ofFigure 8(right) which corresponds to some small fiber surfaces (left) which is an indication of a shortcoming inside the used dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>• Felix Raith and Christian Blecha share first authorship with equal contribution. • Felix Raith, Christian Blecha, and Gerik Scheuermann are with Institute of Computer Science, Leipzig University, PF 100920, D-04009 Leipzig, Germany. • Thomas Nagel, Francesco Parisio, and Olaf Kolditz are with Department of Environmental Informatics, Helmholtz Center for Environmental Research, Permoserstraße 15, 04318 Leipzig, Germany • Fabian Günther and Markus Stommel are with Faculty for Mechanical</figDesc><table /><note>Engineering, TU Dortmund University, Leonhard-Euler-Str. 5, 44227 Dortmund Manuscript received xx xxx. 201x; accepted xx xxx. 201x. Date of Publication xx xxx. 201x; date of current version xx xxx. 201x. For information on obtaining reprints of this article, please send e-mail to: reprints@ieee.org. Digital Object Identifier: xx.xxxx/TVCG.201x.xxxxxxx</note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Algorithm 1</head><label>1</label><figDesc>Calculation of a Fiber Surface Require: Grid OSG in Object Space, Possible Intersecting Tetrahedra PITet, list of triangles Tri from interactor for all triangles tri ∈ Tri do 2:for all tetrahedra tet ∈ PITet do set case in = f alse, out = f alse4:for all vertices v i ∈ tet do compute position of vertex v i relative to plane E across tri</figDesc><table><row><cell>6:</cell><cell cols="2">if v i &lt; 0 then set in = true</cell></row><row><cell></cell><cell>else set out = true</cell><cell></cell></row><row><cell>8:</cell><cell>end if</cell><cell></cell></row><row><cell></cell><cell>end for</cell><cell></cell></row><row><cell>10:</cell><cell cols="2">if in = true and out = true then</cell></row><row><cell></cell><cell>add tet to CoTet</cell><cell cols="2">List of Constrained Tetrahedron</cell></row><row><cell>12:</cell><cell>end if</cell><cell></cell></row><row><cell></cell><cell>end for</cell><cell></cell></row><row><cell>14:</cell><cell cols="2">for all tetrahedra tet ∈ CoTet do</cell></row><row><cell></cell><cell>for all faces f ∈ tet do</cell><cell></cell></row><row><cell>16:</cell><cell cols="3">compute intersecting points IP from f with tri</cell></row><row><cell></cell><cell cols="2">add IP to IsectPointsTet</cell></row><row><cell>18:</cell><cell>end for</cell><cell></cell></row><row><cell></cell><cell>for all points P ∈ tri do</cell><cell></cell></row><row><cell>20:</cell><cell>if P inside tet then</cell><cell cols="2">Test with linear combination</cell></row><row><cell></cell><cell cols="2">add P to IsectPointsTet</cell></row><row><cell>22:</cell><cell>end if</cell><cell></cell></row><row><cell></cell><cell>end for</cell><cell></cell></row><row><cell>24:</cell><cell cols="2">for all points P ∈ IsectPointsTet do</cell></row><row><cell></cell><cell cols="2">projection P → P in OSG</cell></row><row><cell>26:</cell><cell cols="2">add P to IsectPointsTet</cell></row><row><cell></cell><cell>end for</cell><cell></cell></row><row><cell>28:</cell><cell cols="2">triangulation of the intersectionPlane</cell><cell>Created of</cell></row><row><cell></cell><cell>IsectPointsTet</cell><cell></cell></row><row><cell></cell><cell cols="2">set the normals of the triangulationPlane</cell></row><row><cell>30:</cell><cell></cell><cell></cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Algorithm 2</head><label>2</label><figDesc>Sphere Intersection Test Require: grid ISG in invariant space, list of triangles Tri of the interactor 1: compute midpoint M from interactor 2: compute radius R from interactor 3: for all tetrahedra tet i ∈ ISG do</figDesc><table><row><cell>4:</cell></row></table><note></note></figure>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGMENTS</head><p>This work was funded by the German Federal Ministry of Education and Research within the project Competence Center for Scalable Data Services and Solutions (ScaDS) Dresden/Leipzig (BMBF 01IS14014B).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Polygonization of implicit surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bloomenthal</surname></persName>
		</author>
		<idno type="DOI">10.1016/0167-8396(88</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Aided Geometric Design</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="90013" to="90014" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fiber surfaces: Generalizing isosurfaces to bivariate data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Geng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tierny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Chattopadhyay</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Knoll</surname></persName>
		</author>
		<idno type="DOI">10.1111/cgf.12636</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="241" to="250" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">An invariant basis for natural strain which yields orthogonal stress response terms in isotropic hyperelasticity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Criscione</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Humphrey</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">S</forename><surname>Douglas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>Hunter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Mechanics and Physics of Solids</title>
		<imprint>
			<biblScope unit="volume">48</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="2445" to="2465" />
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Visualizing second-order tensor fields with hyperstreamlines</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
		<idno type="DOI">10.1109/38.219447</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="25" to="33" />
			<date type="published" when="1993-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">The topology of symmetric, secondorder tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Delmarcelle</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Hesselink</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the conference on Visualization&apos;94</title>
		<meeting>the conference on Visualization&apos;94</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="140" to="147" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A unified approach to the design of visualization software for the analysis of field problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">R</forename><surname>Dickinson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Three-dimensional visualization and display technologies</title>
		<imprint>
			<date type="published" when="1989" />
			<biblScope unit="volume">1083</biblScope>
			<biblScope unit="page" from="173" to="181" />
		</imprint>
	</monogr>
	<note>International Society for Optics and Photonics</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fabriclike visualization of tensor field data on arbitrary surfaces in image space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Eichelbaum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hlawitschka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">New Developments in the Visualization and Processing of Tensor Fields</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2012" />
			<biblScope unit="page" from="71" to="92" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Orthogonal tensor invariants and the analysis of diffusion tensor magnetic resonance images. Magnetic resonance in medicine</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>Ennis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2006" />
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="page" from="136" to="146" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Real-time collision detection</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Ericson</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2004" />
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Helius composite</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Gmbh</surname></persName>
		</author>
		<ptr target="https://www.autodesk.de/products/helius-composite/overviewAccessedon" />
		<imprint>
			<date type="published" when="2018-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A survey of topology-based methods in visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Heine</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Leitte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Hlawitschka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Iuricich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>De Floriani</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hagen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Garth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics Forum</title>
		<imprint>
			<publisher>Wiley Online Library</publisher>
			<date type="published" when="2016" />
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page" from="643" to="667" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Nonlinear solid mechanics ii</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Holzapfel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Tensor-fields visualization using a fabric-like texture applied to arbitrary two-dimensional surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hotz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Feng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Hamann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Joy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Mathematical Foundations of Scientific Visualization, Computer Graphics, and Massive Data Exploration</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2009" />
			<biblScope unit="page" from="139" to="155" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Superquadric tensor glyphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<idno type="DOI">10.2312/VisSym/VisSym04/147-154</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Sixth Joint Eurographics -IEEE TCVG Conference on Visualization, VIS-SYM&apos;04</title>
		<meeting>the Sixth Joint Eurographics -IEEE TCVG Conference on Visualization, VIS-SYM&apos;04<address><addrLine>Aire-la-Ville; Switzerland</addrLine></address></meeting>
		<imprint>
			<publisher>Switzerland</publisher>
			<date type="published" when="2004" />
			<biblScope unit="page" from="147" to="154" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Diffusion tensor analysis with invariant gradients and rotation tangents</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Kindlmann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>Ennis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Whitaker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C.-F</forename><surname>Westin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Medical Imaging</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="1483" to="1499" />
			<date type="published" when="2007" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Fast and exact fiber surfaces for tetrahedral meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Klacansky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Tierny</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Carr</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Geng</surname></persName>
		</author>
		<idno type="DOI">10.1109/TVCG.2016.2570215</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="1782" to="1795" />
			<date type="published" when="2017-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Visualization and analysis of secondorder tensors: Moving beyond the symmetric positivedefinite case</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kratz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Auer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stommel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hotz</surname></persName>
		</author>
		<idno type="DOI">10.1111/j.1467-8659.2012.03231.x</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="49" to="74" />
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Tensor visualization driven mechanical component design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Kratz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Schoeneich</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Zobel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Burgeth</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Hotz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stommel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization Symposium (PacificVis)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014" />
			<biblScope unit="page" from="145" to="152" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Mécanique des matériaux solides-3emeédition. Dunod</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Lemaitre</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J.-L</forename><surname>Chaboche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Benallal</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Desmorat</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">A near optimal isosurface extraction algorithm using the span space</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Livnat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H.-W</forename><surname>Shen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Johnson</surname></persName>
		</author>
		<idno type="DOI">10.1109/2945.489388</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Visualization and Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="73" to="84" />
			<date type="published" when="1996-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
		<idno type="DOI">10.1145/37402.37422</idno>
	</analytic>
	<monogr>
		<title level="j">SIGGRAPH Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="163" to="169" />
			<date type="published" when="1987-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Mechanics of solid bodies in the plastically-deformable state</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">V</forename><surname>Mises</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Göttin Nachr Math Phys</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="582" to="592" />
			<date type="published" when="1913" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">A fast triangle-triangle intersection test</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Möller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of graphics tools</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="25" to="30" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Feature surfaces in symmetric tensor fields based on eigenvalue manifold</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Palacios</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Yeh</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">S</forename><surname>Laramee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Sharma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Schultz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Zhang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE transactions on visualization and computer graphics</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1248" to="1260" />
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<monogr>
		<title level="m" type="main">Experimental characterization and numerical modelling of fracture processes in granite. international journal of solids and structures (under review)</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Tarokh</forename><surname>Parisio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Makhnenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Naumov</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Kolditz</forename><surname>Miao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Nagel</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Plastic-damage modeling of saturated quasi-brittle shales</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Parisio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Laloui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Rock Mechanics and Mining Sciences</title>
		<imprint>
			<biblScope unit="volume">93</biblScope>
			<biblScope unit="page" from="295" to="306" />
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Constitutive analysis of shale: a coupled damage plasticity approach</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Parisio</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Samat</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Laloui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Solids and Structures</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="88" to="98" />
			<date type="published" when="2015" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Lapped textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Praun</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Finkelstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<idno type="DOI">10.1145/344779.344987</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 27th Annual Conference on Computer Graphics and Interactive Techniques, SIGGRAPH &apos;00</title>
		<meeting>the 27th Annual Conference on Computer Graphics and Interactive Techniques, SIGGRAPH &apos;00<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM Press/Addison-Wesley Publishing Co</publisher>
			<date type="published" when="2000" />
			<biblScope unit="page" from="465" to="470" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Texture mapping progressive meshes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">V</forename><surname>Sander</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Snyder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">J</forename><surname>Gortler</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<idno type="DOI">10.1145/383259.383307</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 28th Annual Conference on Computer Graphics and Interactive Techniques, SIGGRAPH &apos;01</title>
		<meeting>the 28th Annual Conference on Computer Graphics and Interactive Techniques, SIGGRAPH &apos;01<address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="2001" />
			<biblScope unit="page" from="409" to="416" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J M</forename><surname>Spencer</surname></persName>
		</author>
		<title level="m">Continuum mechanics. Courier Corporation</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Flows on surfaces of arbitrary topology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Stam</surname></persName>
		</author>
		<idno type="DOI">10.1145/882262.882338</idno>
	</analytic>
	<monogr>
		<title level="j">ACM Trans. Graph</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="724" to="731" />
			<date type="published" when="2003-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Systemes</surname></persName>
		</author>
		<ptr target="https://www.3ds.com/de/produkte-und-services/simulia/produkte/abaqus/Accessedon" />
		<imprint>
			<date type="published" when="2018-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Collision detection in interactive 3D environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Van Den</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Bergen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003" />
			<publisher>CRC Press</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">X</forename><surname>Zheng</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Hyperlic</surname></persName>
		</author>
		<idno type="DOI">10.1109/VISUAL.2003.1250379</idno>
		<title level="m">IEEE Visualization</title>
		<imprint>
			<date type="published" when="2003-10" />
			<biblScope unit="page" from="249" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<monogr>
		<title level="m" type="main">Extremal curves and surfaces in symmetric tensor fields. The Visual Computer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Zobel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2017" />
			<biblScope unit="page" from="1" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Visualizing gradients of stress tensor fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Zobel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stommel</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Scheuermann</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Modeling, Analysis, and Visualization of Anisotropy</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017" />
			<biblScope unit="page" from="65" to="81" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
