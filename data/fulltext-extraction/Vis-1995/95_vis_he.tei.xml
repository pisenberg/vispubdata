<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Voxel Based Object Simplification</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Taosong</forename><surname>He</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">State University of New York at Stony Brook Stony Brook</orgName>
								<address>
									<postCode>117944400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lichan</forename><surname>Hong</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">State University of New York at Stony Brook Stony Brook</orgName>
								<address>
									<postCode>117944400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Arie</forename><surname>Kaufman</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">State University of New York at Stony Brook Stony Brook</orgName>
								<address>
									<postCode>117944400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Amitabh</forename><surname>Varshney</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">State University of New York at Stony Brook Stony Brook</orgName>
								<address>
									<postCode>117944400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Sidney</forename><surname>Wang</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">State University of New York at Stony Brook Stony Brook</orgName>
								<address>
									<postCode>117944400</postCode>
									<region>NY</region>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Voxel Based Object Simplification</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We present a simple, robust, and practical method for object simpltjkation for applications where gradual elimination of high frequency details is desired. This is accomplished by sampling and low-pa.ss$ltering the object into multi-resolution volume buglers and applying the marching cubes algorithm to generate a multi-resolution triangle-mesh hierarchy. Our method simpli$ies the genus of objects and can also help existing object simpli)ication algorithms achieve better results. At each level of detail a multi-layered mesh can be used for an optional ana&apos; efJicient antialiased rendering.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Automatic generation of multi-resolution object hierarchies has become a crucial process for reconciling scene realism with interactivity through Ievel-of-detailbased rendering [3, 4, 71. The basic idea in a level-ofdetail-based rendering scheme is to use the perceptual importance of a given object in the scene to select its appropriate level-of-detail representation. Thus, higher detail representations are used when the object is perceptually more important and lower detail representations are used when the object is perceptually less significant. This method allows one to achieve higher frame update rates while maintaining good visual realism.</p><p>Research on automatically generating multi-resolution object hierarchies has proliferated in the last few years <ref type="bibr">[5,</ref><ref type="bibr">6,</ref><ref type="bibr">8,</ref><ref type="bibr">12,</ref>. A constraint common to most existing work has been the genus preservation criterion. Our work, on the other hand, provides a method to simplify the genus of an object in a control2ed fashion. Preservation of topology (or the genus) is crucial for certain applications such as molecular surface modeling, where the presence (or absence) of interior tunnels and cavities in a molecule conveys important structural and chemical information to the biochemist. Clearly, if the target application demands topology preservation, then the simplification algorithm should adhere to it. However, if the goal is fast and realistic rendering, such as for virtual reality or some other time critical applications, topology preservation criterion could stand in the way of efficient simplification.</p><p>Let us consider a virtual flythrough in a CAD model. A tiny hole on the surface of a mechanical part in this model will gradually disappear as the observer is moving away from the part. However, genus preserving simplification of this object will retain such features, thereby reducing frame rates (due to limits on the amount of geometrysimplification one can achieve while preserving topology) and increasing image-space aliasing (due to undersampling, especially in perspective viewing). This idea has also been demonstrated in <ref type="bibr">[4]</ref>, where a chair has been shown at three levels of detail with no preservation of the topology across them.</p><p>Object simplification process can be viewed as consisting of the following two stages: (a) geometry simplification, in which the number of vertices, edges, and faces is reduced, and (b) genus simplification, in which the number of holes, tunnels, and cavities is reduced. Depending upon the target application, these two stages can be performed either independently or jointly. For example, given a certain criterion of genus simplification, geometry simplification can be applied on the genussimplified objects to further reduce their complexity. Most of the existing work in the area of object simplification deals exclusively with stage (a) above, and the extension to stage (b) is usually difficult and complicated. The goal of our research is to address stage (b) in a simple and robust way, and thereby also help the current geometry simplification algorithms to achieve better results for certain applications.</p><p>In this paper we present a method for the generation of multi-resolution hierarchies with gradual elimination of high-frequency features including, but not limited to, tiny holes, tunnels, and cavities. An interesting feature of our approach is that it can simplify not only individual objects, but also collections of objects. In our approach the input object is sampled and low-pass filtered into a tbreedimensional volume buffer of uniform voxels, a process referred to as volume sampling by <ref type="bibr">Wang and Kaufman [17]</ref>. Then a triangle mesh fitting technique, such as the marching cubes, is used on the volume buffer of filtered sample points to produce a low-pass-filtered mesh. By (See color plates, page  simply adjusting the size of each voxel, thereby adjusting the resolution of the volume buffer, the desired level of detail can be achieved, and consequently, a multiresolution hierarchy of triangle meshes can be generated.</p><p>A significant amount of object-space aliasing can be eliminated by removing the high-frequency components using the object simplification technique outlined above. To further reduce the image-space aliasing during rendering, we have developed a multi-layered triangle mesh rendering algorithm. Our idea is to smooth out the transition between the boundary of an object and empty space surrounding it by using multiple layers of triangle meshes with increasing translucency from the innermost layer to the outermost one. Unlike the earlier antialiasing techniques presented in [ 1, 21, the prefiltering of the projected objects in image-space is replaced by a viewindependent filtering in object-space, which is performed only once in a pre-rendering stage. Our object-space antialiasing approach involves rendering of translucent polygons, which could be more expensive than traditional image-space antialiasing on some platforms. However, it has the advantage of higher accuracy.</p><p>The rest of the paper is organized as follows. We outline our object simplification process in Section 2 and the multi-layered marching cubes algorithm for antialiasing in Section 3. We have implemented our algorithm and tested it on several kinds of objects and summarize our results in Section 4. Our conclusions and some ideas on future work appear in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Object Simplification</head><p>In this section, we adopt a signal-processing approach to object simplification by sampling the input object and using low-pass filtering to gradually remove the high frequencies (i.e., detailed features) of the object. The class of input objects that our algorithm can accept and process includes polygonal meshes, volume datasets, objects derived from range-scanners, and algebraic mathematical functions such as fractals. Since our algorithm adopts a signal-processing approach to object simplification, it cannot output infinitely high frequencies, such as those introduced by sharp edges. Thus, although it generates reasonable results for all classes of objects outlined above, it works best for objects that represent volumes with no sharp discontinuities.</p><p>Our simplification algorithm starts by first overlaying the object with a three-dimensional grid and applying a lowpass filter at each grid point. A tbree-dimensional volume buffer data-structure is used to store these filtered gridpoint values. That is, for a grid point <ref type="bibr">(i, j, k)</ref> in the volume buffer, the resulting filtered density f (i, j, k) is calculated as:</p><formula xml:id="formula_0">f ( i, j, W = HI W-a,.i-&amp;k-y) S(a,P,r) da dP dy (1)</formula><p>where h is a radially symmetric low-pass filter and S(a, p, y) :is a binary function defined as:</p><p>%a, B, Y) = 1 if point (a, p, y) E object 0 otherwise <ref type="formula">2</ref>Once the filtering and sampling process is completed, a polygon mesh fitting technique is employed to produce the detail-eliminated polygon mesh from the set of filtered sample points represented in the volume buffer.</p><p>Theoretically, high frequencies that exceed the Nyquist frequency of the volume raster can be filtered out by applying an ideal low-pass filter (sine) with infinite support. In practice, this ideal low-pass filter is always approximated by filters with finite support. For volume modeling of objects, lower sampling resolution of the volume raster corresponds to lower Nyquist frequency, and therefore requires a low-pass filter with wider support for a good approximation. This direct correspondence between the size of the filter support and the resolution of the volume raster leads to a hierarchical representation of the model. The base of the proposed hierarchy contains the most detailled and the highest resolution of the object. As one moves up the hierarchy, low-pass filters with wider support are: applied, and the top contains the blurriest lowresolution version of the objects.</p><p>At first glance, this approach might seem somewhat similar to the clustering scheme <ref type="bibr">[12]</ref> or the three-dimensional "mip-map" approach [9, 131. However, our approach is based on volume-based filtering for gradual elimination of high frequencies, which is different from the locality-based clustering Iof geometry as presented in [ 121. In the threedimensional "mip-map" approach, every level of the hierarchy is formed by averaging several voxels from the previous level. In our approach, each level of the volume buffer hierarchy is created by convolving the original object with a low-pass filter of an appropriate support, whose size: can be theoretically any positive real number. Thus, errors caused by a non-ideal filter do not propagate and accumulate from level to level. Furthermore, depending on the requirements of simplification speed and accuracy, al variety of low-pass filters can be applied. For example, for efficiency and ease of implementation, a hyper-cone: filter can be used. A hyper-cone filter has a spherical filter support of radius R and is weighted such that its contribution is maximum at the center of the filter support, and linearly attenuates to zero at a distance R from the c.enter. Mathematically, the hyper-cone filter is defined as:</p><formula xml:id="formula_1">(R -r)w h(r) = R OlrlR o otherwise (3)</formula><p>where w is the normalization factor which constrains the total contribution of the filter to be one. To achieve better results, one can employ a higher-order filter, such as a Gaussian filter.</p><p>Analytic evaluation of Equation 1 is sometimes possible for objects which are represented by algebraic mathematical functions.</p><p>However, for general mathematical functions, polygon meshes, or volume datasets, an analytical solution either does not exist or is too expensive to be calculated. For such cases, a discrete approximation can be used. This is accomplished by convolving a precomputed-discrete filter with the object.</p><p>Once the multi-resolution volume representations have been established, the marching cubes algorithm [lo] is used for reconstructing isodensity surfaces. In this algorithm, an isodensity surface is approximated by determining its intersections with edges of every voxel in the volume buffer. Up to five triangles are used to approximate the surface within a voxel. One advantage of the marching cubes algorithm is that it can be efficiently implemented using a precomputed lookup table for the various arrangements of surface-voxel intersections.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Multi-Layered Marching Cubes Rendering</head><p>Although the binary surface classification used by the traditional marching cubes algorithm generally generates good results from the point of view of modeling, it does introduce infinitely high frequencies. Since these frequencies cannot be fully represented in the discrete image, they can cause image-space a&amp;sing. As an alternative to the commonly used hardware-supported antialiasing for rendering, we have developed a multilayered marching cubes antialiased rendering algorithm. This approach takes advantage of the low-pass filtering applied during the volume-sampling stage. The nonbinary surface classifier that we have used permits surfaces to be associated with a continuous range of densities, thereby allowing a smooth transition from the objectboundary to the empty space.</p><p>In this section, we present a marching cubes based approach to discretely approximating the surface boundary by generating several layers of triangle meshes with increasing translucency from the innermost layer to the outermost one <ref type="figure">(Figure lb)</ref>. Then, by appropriately cornpositing these layers of triangle meshes using hardware-assisted blending, a high frame rate of antialiased rendering can be achieved. The accuracy of the discrete approximation of the continuous surface classification is determined by the number of mesh layers used and their corresponding isodensities. Better approximation can be achieved with more layers, at the cost of increased storage space and rendering time. The minimum number of layers needed for the approximation to be within a user-specified error bound depends upon both the low-pass filter employed to generate the volume buffer and the geometry of the original polygon mesh (e.g., <ref type="figure" target="#fig_1">Figure 2</ref>). However, it can be computed approximately by the following method.</p><p>First, it is assumed that the translucency of a point with a certain density d is</p><formula xml:id="formula_2">1-d (4) m</formula><p>where m is the maximum isodensity value associated with the innermost layer M of the multi-layered surfaces. Then, by assuming that the density of a point is decided solely by its distance to M, we can approximate the density at every point. Mathematically, centering the low-pass filter h with support R at a point with distance r from M, and assuming the filter intersects a planar surface <ref type="figure" target="#fig_1">(Figure 2a</ref>), the density of this point is:</p><p>(a&gt; (b) cc&gt; Therefore, given an error bound E, the minimum number of layers needed and their corresponding isodensities are decided by a piecewise constant function p with a minimum number of segments which satisfies:</p><formula xml:id="formula_3">I ," Ip( x ) -d( x )I dw I E<label>(6)</label></formula><p>The optimal piecewise constant function p might not be analytically derivable for certain filters. However, by using the heuristic that more layers should be placed where the derivative of the function d is high, sub-optimal p can be recursively generated. The number of layers of triangle meshes is then equal to the number of segments in the function p, and the isodensities of the meshes are the corresponding constants of that function. In addition, the corresponding translucency can be computed using Equation 4.</p><p>In order to generate the correct composition of semitransparent meshes, the triangles should be projected in either a back-to-front or a front-to-back order, each of which generally involves an expensive sorting process. A nice property of a marching cubes generated mesh is that it is associated with a volume buffer. As a result, sorting can be accomplished by traversing only the surface-intersected voxels in a slice-by-slice fashion. Projection of multiple objects, however, is more complex. One simple solution is to perform the sorting on bounding boxes of the volume buffers associated with the objects. A more accurate and efficient sorting algorithm is to take advantage of the volume buffers associated with the meshes of these objects, since intersections among the regularly partitioned volume buffers are easy to compute. Therefore, all the surface-intersected voxels can be rapidly traversed in the correct order.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Results</head><p>We have tested our object simplification algorithm on a variety of objects such as a fractal sphereflake dataset, a CSG-generated mechanical part, and a sampled dataset of a human head. The results of our algorithm on the genussimplification (as well as on the triangle count simplification to a certain extent), have been very encouraging and are summarized below. <ref type="figure" target="#fig_2">Figure 3</ref> illustrates the triangle-mesh hierarchy of a sphereflake fractal with 820 spheres. The original triangle mesh, shown in <ref type="figure" target="#fig_2">Figure 3a</ref>, is reconstructed from a high resolution volume buffer to preserve the details. By convolving the original fractal functions with Gaussian filters with different radius supports, we decrease the resolution of volume buffers accordingly, and the resulting number of triangles in the simplified mesh is reduced. The simplification results are presented in <ref type="table" target="#tab_0">Table 1</ref>, with the index specifying the corresponding image in <ref type="figure" target="#fig_2">Figure 3</ref>. The discrete approximations of the Gaussian filters applied are at resolution 11 x 11 x 11. The surfaces have been reconstructed from multi-resolution volume buffers using an isodensity of 0.5 on a normalized scale of 0 to 1.    <ref type="figure" target="#fig_3">Figure 4</ref> demonstrates a mechanical part generated by CSG operations using volume-sampled voxelized primitives <ref type="bibr">[17]</ref>. The level-of-detail meshes established by applying Gaussian filters of different radius supports are presented in <ref type="table" target="#tab_1">Table 2</ref>, with the index specifying the corresponding image in <ref type="figure" target="#fig_3">Figure 4</ref>. The surfaces have been reconstructed from multi-resolution volume buffers using an isodensity of 0.5 on a normalized scale of 0 to 1. These images have been rendered using a solid steel texture. From these results, it can be seen that our algorithm provides an elegant way to gradually reduce the genus and small features. <ref type="figure" target="#fig_4">Figure 5</ref> presents the effect of the simplification on an assembly of identical mechanical parts at different resolutions (as shown in <ref type="figure" target="#fig_3">Figure 4</ref>) which depend on the distance of the parts from the viewpoint.  <ref type="figure" target="#fig_5">Figure 6</ref> presents the results of applying our algorithm on a volumetric dataset, a CT-scanned human head of 256 x 256 x 225 resolution. The original and the simplified meshes reconstructed from marching cubes are presented in <ref type="table" target="#tab_2">Table 3</ref>, with the index specifying the corresponding images in <ref type="figure" target="#fig_5">Figure 6</ref>. Hyper-cone filters with different radius supports are applied in this example. Unlike the volume buffer generated from a solid object, a medical dataset such as the CT-scanned head generally does not have a well-defined surface. However, for a given point it is still possible to test whether this point is inside or outside the surface by tri-linearly interpolating the point value from the neighboring eight vertices and comparing it to the isodensity, and therefore Equations 1 and 2 can still be applied. Another method of simplifying volumetric datasets without well-defined surfaces is to directly apply the reconstruction filters with different radius supports on the originarl volumes. The application of 3D reconstruction filter for volumetric datasets has been previously discussed for volume rendering [ 181.</p><p>The effect of our antialiasing algorithm is demonstrated by employing five layers of meshes on a bolt, shown at the bottom half of <ref type="figure" target="#fig_6">Figure 7</ref>, and contrasted with the aliased result of applying the traditional algorithm with binary surface classification shown at the top half of <ref type="figure" target="#fig_6">Figure 7</ref>. It should be emphasized that the multi-layered marching cubes rendlering generally requires more memory, and the rendering :speed might be slower than the other hardwaresupported antialiasing algorithms. However, it provides a competitive object-space antialiasing method, and is quite useful when a high-quality antialiasing effect is required.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">Discussion and Future Work</head><p>We have outlined a practical and robust method for genus simplification of objects. The strengths of our method are that it (a) works for a wide variety of objects; (b) supplements existing geometry-based object simplification algorithms by gradually eliminating higher-frequency features; (c) is relatively easy to implement; and (d) is based on the robust theoretical foundation of signalprocessing theory.</p><p>In order to reduce temporal aliasing, smooth interpolation between two adjacent resolution meshes should be generated on-the-fly, which is generally a non-trivial task. However, it is straightforward and efficient to interpolate between two adjacent resolution volume buffers for generating an in-between resolution volume buffer. To generate the corresponding polygon mesh on-the-fly using the marchmg cubes algorithm, only those voxels which might contain surfaces are examined. An interpolated voxel might contain a surface only if at least one of the corresponding regions in the two volume buffers contains a surface, or exactly one of the corresponding regions is inside the surface. Such voxels can be efficiently generated since the regions in the two volume buffers satisfying the above conditions can be pre-computed.</p><p>A potential problem with our voxel-based simplification method is that the marching cubes algorithm could generate a large number of redundant triangles in the regions of low surface curvature. However, a nice property of our approach is that it can be used as the first stage of the object simplification process to eliminate the undesirable high frequencies. Any of the other existing geometry-simplification methods that preserve the topology can then be applied to further reduce the number  of triangles. A fundamental solution to the above problem is to use the idea of adaptive subdivision of the volume space [ 111. As part of our ongoing research in this area, we intend to explore the use of our voxel-based object simplification in conjunction with a local curvature-based adaptive volume buffer scheme which will enable us to simplify both the geometry as well as the genus of an object in a single pass. We are currently developing a method of low-pass filtering and sampling a polygon mesh into volume buffer with adaptive size voxels, where the high curvature areas are represented by small voxels and the smooth areas by large voxels. A corresponding adaptive marching cubes algorithm is being investigated.</p><p>Another area that promises to be of interest, and one that we are currently exploring, is the use of multi-resolution object hierarchies in collision detection. The idea here is to recursively perform collision detection among the multiresolution descriptions of objects, starting from the lowest resolution representations and moving up to the higher resolutions only when an intersection is suspected. To test whether two objects collide at a certain resolution, the volume buffers associated with them are directly used. All the voxels of a volume buffer whose values are above a certain threshold are transformed into the local coordinate system of the other volume buffer. By checking the neighboring eight voxels in the other volume buffer, the possible intersections are detected. This approach works because every time a low-pass filter is applied with a larger support, the area affected by it becomes a superset. Thus, computation time is saved by avoiding intersection detection in regions that cannot possibly collide. Furthermore, this hierarchical approach can be interrupted, allowing us to trade accuracy for speed.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>(a) Binary surface classi$cation. (b) Continuous sulfate classijication and discrete approximation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Different intersections between a sur$ace(solid)    and the$lter (dashed),</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>LX&amp;-ent levels of detail of a fractal sphereflake using a trbmgle mesh hierarchy.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Diflerent levele of detail of a synthetically CSG-generated mechanical part.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Level-of-detail-based rendering of mechanical parts at siz levels.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Levels of detail of a CT-scanned human head.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>A bolt rendered using multi-layered marching cubes (bottom) compared to a traditionally rendered bolt (top).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1</head><label>1</label><figDesc></figDesc><table><row><cell>: Simpl@cation of a fractal sphereflake</cell></row><row><cell>Index</cell></row><row><cell>a</cell></row><row><cell>b</cell></row><row><cell>C</cell></row><row><cell>d</cell></row><row><cell>e</cell></row><row><cell>f</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 2</head><label>2</label><figDesc></figDesc><table><row><cell></cell><cell cols="5">: Simplijication of a CSG mechanical part</cell><cell></cell></row><row><cell>Index</cell><cell></cell><cell>Resolution</cell><cell cols="3">Radius Triangles</cell><cell></cell></row><row><cell>a</cell><cell></cell><cell>200x200x 120</cell><cell>1</cell><cell></cell><cell>271504</cell><cell></cell></row><row><cell>b</cell><cell></cell><cell>100x100x60</cell><cell>2</cell><cell></cell><cell>64344</cell><cell></cell></row><row><cell>C</cell><cell></cell><cell>50X50X30</cell><cell>4</cell><cell></cell><cell>13292</cell><cell></cell></row><row><cell>d</cell><cell></cell><cell>40x40~24</cell><cell>5</cell><cell></cell><cell>8660</cell><cell></cell></row><row><cell>e</cell><cell></cell><cell>20X20X12</cell><cell>10</cell><cell></cell><cell>1508</cell><cell></cell></row><row><cell>1 f</cell><cell>1</cell><cell>5X5X3</cell><cell>1 40</cell><cell>1</cell><cell>88</cell><cell>1</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 3 :</head><label>3</label><figDesc>Simplzjkation of a CT-scanned human head</figDesc><table /><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)1070-2385/95 $10.00 © 1995 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work has been partially supported by the National Science Foundation under grants CCR-9205047 and CCR-9502239 and by the Department of Energy under the PICS grant. The images in <ref type="figure">Figure 3</ref>-7 are generated using the VolVis volume visualization system developed at Stony Brook. VolVis can be obtained by sending e-mail to volvis@cs.sunysb.edu.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Ray Tracing with Cones</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Amanatides</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;84 Proceedings)</title>
		<imprint>
			<date type="published" when="1984-07" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="129" to="135" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The A-buffer. an Antialiased Hidden Surface Method</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Carpenter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;84 Proceedings)</title>
		<imprint>
			<date type="published" when="1984-07" />
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="page" from="103" to="108" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Hierarchical Geometric Models for Visible Surface Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Clark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">the ACM</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="547" to="554" />
			<date type="published" when="1976" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A More Flexible Image Generation Environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">C</forename><surname>Crow</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;82</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">Proceedings)</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="9" to="18" />
			<date type="published" when="1982" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Dehaemer</surname><genName>Jr</genName></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Simnlification of objects rendered by Polygonal Approxi*mations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">M J ; M</forename><surname>Zvda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Lounsbery</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computers ana&apos; Graphics</title>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="page">95</biblScope>
		</imprint>
	</monogr>
	<note>Multiresolution Analysis of Arbitrary Meshes</note>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Adaptive Display Algorithm for Interactive Frame Rates During Visualization of Complex virtual Environments</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">A</forename><surname>Funkhouser</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">H</forename><surname>Sequin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;93 Proceedings)</title>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="247" to="254" />
		</imprint>
	</monogr>
	<note>Corgerence Proceedings</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Mesh Optimization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Hoppe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Duchamp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Stuetzle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;93 Proceedings)</title>
		<imprint>
			<date type="published" when="1993-08" />
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="19" to="26" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Gaze-Directed Vohlme Rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Levloy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Whitaker</surname></persName>
		</author>
		<imprint/>
		<respStmt>
			<orgName>Computer Graphics (Pnx</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m">Symposium on Interactive 30 Graphics)</title>
		<imprint>
			<date type="published" when="1990-03" />
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="217" to="223" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Marching Cubes: A High Resolution 3D Surface Construction Algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;87 Proceedings)</title>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Adaptive generation of surface in volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Muller</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Stark</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">The Visual Computer</title>
		<imprint>
			<date type="published" when="1993" />
			<biblScope unit="page" from="182" to="199" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Multi-Resolution 3D Approximations for Rendering Complex Scenes</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Rossignac</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Borrel</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Interactive Visualization of Large Scalar Voxel Fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Sakas</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Hartig</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Vist&amp;ization &apos;92</title>
		<meeting>Vist&amp;ization &apos;92</meeting>
		<imprint>
			<biblScope unit="page" from="29" to="36" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Boston</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">W</forename><surname>Schroeder</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">J</forename><surname>Zarge</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="middle">W</forename><surname>Lorensen</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Decimation of Triangle Meshes</title>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SZGGRAPH &apos;92 Proceedings)</title>
		<imprint>
			<biblScope unit="volume">26</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Re-Tiling Polygonal Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Turk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Computer Graphics (SIGGRAPH &apos;92 Proceedings)</title>
		<imprint>
			<date type="published" when="1992-07" />
			<biblScope unit="volume">26</biblScope>
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">Hierarchical Geometric Approximations</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Varslhney</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>Ph.D. Thesis, Tech</note>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Volume-Sampled 3D Modeling</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">W</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">E</forename><surname>Kaufman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics &amp;</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Applications</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994-09" />
			<biblScope unit="volume">14</biblScope>
			<biblScope unit="page" from="26" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Footprint Evaluation for Volume Rendlering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Westover</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="367" to="376" />
			<date type="published" when="1990-08" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
