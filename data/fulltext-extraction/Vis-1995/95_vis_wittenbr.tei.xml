<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">IFS Fractal Interpolation for 2D and 3D Visualization&apos;</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Craig</forename><forename type="middle">M</forename><surname>Wittenbrink</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Baskin Center for Computer Engineering &amp; Information Sciences</orgName>
								<orgName type="institution">University of California</orgName>
								<address>
									<postCode>95064</postCode>
									<settlement>Santa Cruz Santa Cruz</settlement>
									<region>CA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">IFS Fractal Interpolation for 2D and 3D Visualization&apos;</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:33+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>uncertainty visualization</term>
					<term>volume rendering</term>
					<term>surface interpolation</term>
					<term>collages. 1</term>
				</keywords>
			</textClass>
			<abstract>
				<p>Reconstruction is used frequently in visualization of one, twa, and three-dimensional data. Data uncertainty is typically ignored, and a deficiency of many interpolation schemes is smoothing which may indicate features or characteristics of the data that are not there. In this paper I investigate the use of iterated function systems (IFS&apos;s) for interpolation. I show new derivations for fractal interpolation in two and threedimensional scalar data, and new point and polytope rendering algorithms with tremendous speed advantages over ray tracing. The interpolations may be used to give an indication of the uncertainty of the data, statistically represent the data at a variety of scales, allow tunability from the data, and may allow more accurate data analysis.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Reconstruction is often used in visualization to find values in between sampled points. As an example, time series plots of a single variable, say temperature, can be plotted with a line plot simply by drawing a line segment between each temperature measurement. This simple algorithm performs a linear reconstruction. The sampled temperatures are linearly interpolated between each sample point. Reconstructions are also used in higher-dimensions to create: contours, pseudo--color cut planes, streamlines, volume visualizations, isosurfaces, triangulations, and height fields. In the environmental sciences, oceanography and meteorology, the original data is either measured or computed. The fact that the data is experimental means that it has statistical variation or uncertainty. If linear interpolation (or cubic or polynomial, etc.) is used an 'This project is supported by ONR grant N00014-92-J-1807 and NSF grant IRI-9423881 un-implied smoothness results. These shortcomings have been well noted in the visualization communits</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1171.</head><p>The work in this paper is related to our work on displaying uncertainty in visualizations <ref type="bibr">[20,</ref><ref type="bibr">191</ref>. Uncertainty visualization is challenging, because of the difficulty in combining more variables into a graphic. One method of combining uncertainty is overloadingor tying a free parameter, such as color, to the uncertainty. We have researched the use of glyphs for visualizing uncertainty in vector fields <ref type="bibr">[20]</ref> and in surfaces and animations <ref type="bibr">[19]</ref>. In this paper, I show how a choice of interpolant allows one more method of overloading. In essence the reconstruction can be controlled by the uncertainty data allowing additional data to be incorporated.  <ref type="figure" target="#fig_0">Figure 1</ref> shows an iterated function system (IFS) fractal interpolant interpolating several points. Fractals have been applied to modelling <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b5">6]</ref> and to analysis. There have been two main approaches in analysis: fractional Brownian motion (fBm) and IFS's [2, 111. Self similar or fractal functions have been used to represent digital elevation maps, time series data <ref type="bibr">[lo]</ref>, seepage in settling tanks, radar returns, and atmospheric turbulence. The majority of this work has been for one-dimensional functions using IFS's [2, 151, for twodimensional height surfaces using fBm, and for fractal interpolation of images <ref type="bibr" target="#b13">[13,</ref><ref type="bibr">181</ref>. There has been some work with higher-dimensional IFS%. Massopust <ref type="bibr" target="#b8">[9]</ref> has investigated two-dimensional fractal interpolation and continuity conditions. Tong et al.</p><p>[16] developed a system of equations to interpolate a two-dimensional function, and a recursive algorithm similar to the iterative one in this paper. Berger <ref type="bibr" target="#b4">[5]</ref> developed a triangular collage of a regular grid for images and surface extrapolation.</p><p>I present fractal interpolation functions using IFS's for two and three-dimensions.</p><p>I also apply these solutions to some illustrative examples. The ability to use an interpolation function that preserves the characteristics of the data, as well as prevents misinterpretation because of over smoothing is a considerable advantage. I show that triangular tessellations of twodimensional domains, and tetrahedral subdivisions of three-dimensional domains provide fractal interpolants which fit the data and have tunable parameters. Techniques for calculating the interpolants, and for rendering that takes advantage of existing graphics hardware, are presented. I take a brief look at the setting of the free parameters, and discuss what is required to apply my interpolants to large data sets. The extension of IFS techniques to two and three-dimensions is exciting, and leads to many avenues of further research. In the next section I introduce IFS fractal interpolants to demonstrate the additional parameters that may be controlled.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">IFS Fractal Interpolants</head><p>IFS fractal interpolation defines complex functions with economy and elegance. By constraining a function to the data points, insuring that the set of afline maps that define the IFS are contractive (shrink the space) and tile the domain, a deterministic fractal function results. Barnsley demonstrates IFS fractal interpolation with one-dimensional functions <ref type="bibr" target="#b1">[2]</ref>, and also shows how to provide more free parameters, several ways to render them, and gives hints that further special conditions may be imposed. The one-dimensional function fractal interpolant with one free parameter per afhne map has been widely used <ref type="bibr">[2, 9,</ref>  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>.,N-1)</head><p>To create an interpolating IFS, set up some constraints on the mappings T,, n = 0, 1, . . . iV -1. The points to be interpolated are transformed to other points to be interpolated, and the contractivity is insured by appropriate choice of :free parameters. With a12 = 0 and choosing ass as the free, "scaling" parameter, the classic fractal interpolation results [2, 181. As an example, look at the fractal interpolation in <ref type="figure" target="#fig_0">Figure   1</ref>, where ass is .23, -0.3, and 31 for intervals To, TI, and T2. Setting a22 = 0 gives a linear interpolant. The overlay of parallelogram domain mappings shows how the entire domain of the data (.K) is mapped by each affine transformation to a sub-interval of the data. To maps to the interval between vertices Vi and VI, To(K), and Tl maps to the interval between vertices VI and V2, TI (K), and so on. When the collage is chosen as a slquare, with the corners as constraints, the system is over constrained with 12 equations and nine unknowns. By reducing the number of constraints to three, nine equations result, for nine unknowns, but a square or rectangular gridding results in a surface interpolant with tears as shown in <ref type="figure" target="#fig_3">Figure 3</ref>.</p><p>I have therefore used triangulations, which fit naturally using three points, and do not require least squares fitting as is done with IFS fractal image compression algorithms <ref type="bibr" target="#b4">[5,</ref><ref type="bibr">181</ref>. A direct solution of the linear system is described below. <ref type="figure" target="#fig_2">Figure 2</ref> shows the collage, and the constraints are</p><formula xml:id="formula_0">Tn(VO) = PnVO, Tn(V3) = PnVl, T,(V9) = PnV2 (2.4)</formula><p>where V is a vertex, P is a polytope, and n is the member of the set of transformations n = 0, . . . . N -1.   In three-dimensions, f(z, y,z) = w, I use a tetrahedral decomposition, that results in a linear system of constraints on the four vertices of the tetrahedron. Four equations constraining 4x4 matrices give 16 equations and 16 unknowns. <ref type="figure" target="#fig_4">Figure 4</ref> shows a tetrahedral collage. <ref type="table" target="#tab_3">Table 2</ref> shows the vertex orderings. The scaling parameter is a44, and ar4, a24, and as zero to give: The vertices of the polyhedral domain are transformed to the vertices of the subdomain similar to the one-dimensional line and two-dimensional triangle cases. The resulting solutions are obtained by solving this linear system, Equation 2.6. The solutions have also been omitted due to space considerations. Now, a volumetric function may be interpolated. <ref type="figure" target="#fig_0">Figure 11</ref> shows an interpolation of a volumetric function using colored points to indicate the scalar value within the volume. The collage choices made fill the test data sets. To collage real data sets, requires either solving for a much larger set of transformations, N, or doing some sort of piecewise fractal interpolation. Both choices are appropriate for certain instances. Using nonlinear transformations is also possible, and the resulting IFS may be constrained to be derivative continuous in some cases. An IFS, f(z, y) = z, defined by a non-&amp;ne mapping with an xy term used for a hidden variable is:</p><formula xml:id="formula_1">[ x' y' z' H'lT=T[x y z xylT (2.7)</formula><p>where H' is the input hidden variable, and a 4x4 matrix is used for T, adding coefficients a41, a42, t-w, and free parameters ~~34, ~3, and ~44. The transform is given below:  <ref type="figure" target="#fig_0">Figure 1</ref> is used. This interpolant, because of the hidden variable approach, is not necessarily fractal or self similar. There is tremendous freedom in the approach, where other hidden variables may be used, and different types of transformations can be used. In the next section, I will briefly discuss these choices in parameters. <ref type="bibr" target="#b2">3</ref> Free Parameter Choices IFS free parameters allow users to tailor the interpolation to suit the application. For many applications, in one-dimensional interpolation, users have set free parameters using a statistic of the data. One approach is to set the scaling parameter, ass, by using the fractal dimension of the sample points <ref type="bibr" target="#b1">[2]</ref>. Assuming the data is self similar, the fractal dimension allows preserving this statistic over the range of scales used in interpolation. As examples, the one-dimensional in-terpolar&amp; <ref type="figure" target="#fig_0">Figure 1</ref>, has scale factors selected as ass = 0.23, -0.3,0.31, which can be seen to scale the three subintervals of K to their relative heights. Figures 12 through 20 illustrate several scale factors to show examples of the available control in two-dimensions. The twodimensional interpolant, with nine transforms defining the IFS, has nine free scaling parameters. <ref type="figure" target="#fig_0">Figures 12, 13, and 14 (Figures 15, 16</ref>, and 17 for surface renderings of the same IFS) show setting all of the parameters to a magnitude of 0.0,0.3, and 0.6, and alternating the sign. The height varies more as the scaling parameter gets larger.</p><p>My bilinear term IFS was also varied with different scale parameters. <ref type="figure" target="#fig_0">Figures 18, 19</ref>, and 20 show scale parameters set to 0.00, 0.01, and 0.02. The hidden parameters were not changed, and additional interpolants can be created by using different projections of the higher dimensional IFS. The choice of the scale parameter from the data is application dependent. In geology, for example, there are numerous methods for computing the fractal dimension <ref type="bibr" target="#b3">[4]</ref> which could be used to choose the free parameters. Other approaches are to select both the interpolation points and the free parameters to fit the data in some fashion <ref type="bibr">[15]</ref>. These issues have been examined somewhat for the one-dimensional interpolants, and further work needs to be done for the higher dimensional interpolants. <ref type="bibr" target="#b3">4</ref> Rendering IFS Fractal Interpolants</p><p>Rendering of fractals involves computing a simulation of how light interacts with the fractal. The space in which1 the fractal lives may be discretized, and a discrete IFS computed <ref type="bibr" target="#b1">[2]</ref>; the space can be ray traced by approaching the fractal with incremental sample points along view rays <ref type="bibr">['7, 81</ref>; ray traced in a reduced complexity -two-dimensional algorithm <ref type="bibr">[ll]</ref>; ray traced by crawling around the fractal <ref type="bibr" target="#b12">[12]</ref>; or geometric primitives can be created from the IFS. I have been rendering IFS's using the last approach. I build up the IFS and give the result to the graphics hardware (currently using Iris GL). Initially I experimented with rendering using only points, using a random IFS algorithm <ref type="bibr" target="#b1">[2]</ref>. For surfaces and volumes this at least gives a quick method for testing if the IFS converges, and with animation/spinning of the data, one can visualize the three-dimensional nature of the data.</p><p>A more advanced rendering/generation method is iterating on primitives, say a triangle, or a tetrahedron, by a deterministic algorithm. The successive sets of primitives converge to the attractor of the set. I have implem.ented points and triangles so far, and present the algorithms below.</p><p>The IFS constructive approaches, both random and deterministic, are very useful, and have several tradeoffs for rendering. To calculate the random algorithm choose a point on the set, such as one of the vertices which are being interpolated. Then pick randomly from the set of transformations, and apply that transformation. Repeatedly picking-transforming, pickingtransforming, . . . results in a growing set of primitives that lie upon the IFS. <ref type="figure" target="#fig_0">Figures 1 and 11</ref> to 14 were rendered iterating on points. The IFS random construction algorithm is given below. I use a list for the generated primitives, where makenulll initializes the list, insertL places primitives on the list, and firs&amp;L determines the position at the start of the list as in <ref type="bibr">[l]</ref>. The random and deterministic algorithms carry out the definition of an IFS, Equation 2.2. The IFS can be seen as a set, where the set is defined as the convergence of an infinite series. The attractor A is the set that A0 converges to after repeated application of transformations T. Each step in the iteration Aj is the union of the transformations of the current set Aj-1 using the N transformations that define the IFS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>N-l</head><p>Aj= /J Tn(Aj_i)forj=1,2.... (4.9) n=O This deterministic iteration works for multi-dimensions when the primitives in the set are polytopes, P. For example, a zero-dimensional polytope is a point, a onedimensional polytope is a line, and a two-dimensional polytope is a planar polygon. The deterministic approach to using points is also well presented in <ref type="bibr" target="#b1">[2]</ref>, where the deterministic algorithm takes a discrete set of pixels, and then iterates on them converging towards the IFS. I could take the same approach for the higherdimensional rendering, but the difficulty is in storing and rendering the resulting multi-dimensional array. A two-dimensional IFS would create a three-dimensional voxel volume, and a three-dimensional IFS would create a four-dimensional volume.</p><p>A deterministic geometric algorithm is computed by not discretizing the space. The deterministic algorithm, generates a list of primitives, Aj. The algorithm is first initialized with a base polyhedra PO, which can be taken to be the domain of the input interpolated points. The depth of the iteration, is determined by depth. The algorithm simply applies the transformations, or maps, to each polyhedra in the previous set Aj-1, and puts the resulting polyhedra P' into the current set Aj. A list suffices to keep track of these polyhedra as is shown in the algorithm below. In addition to the previously defined list operators I use endL for the last item; retrievel to pull an element; and deleteL to delete an element: input free parameters solve for coefficients of Tn, n = 0, . . . , N -1 makenullL( Aj ) makenullL( Aj-1 ) insertL(P0, Aj-1 ) for j number of sets to compute ( depth ) { while( firstL( Aj-1) != endL( Aj-1 ) ) { P = retrieveL(firstL( Aj-1 )) deleteL(fi;rft.L. 31-t ), Aj-1 ) for R. = 0 P' = TnP insertL( P' ,firstL( Aj ), Aj ) 1 swap( Aj-1 , 4) &gt; 1</p><p>The mapping notation P' = TJ' is overloading the transform operator. This transform of a polytope is computed by transforming each each of the polytope's vertices. The algorithm's behavior is very interesting to watch.  <ref type="figure" target="#fig_0">Figures 12, 13</ref>, and 14 to the polygonal results in 15, 16, and 17. In particular, the sequence of images in <ref type="figure" target="#fig_8">Figures 5, 6</ref>, and 7 shows the iterations with the data set for one iteration, two iterations, and three iterations, where successively smaller and smaller triangles are generated by the contraction mapping. The same sequence of iterations is shown from directly above in <ref type="figure" target="#fig_9">Figures 8, 9</ref>, and 10. The number of triangles generated at each successive stage is Ndepth, so the Figures show for the nine affine maps (solved using the constraints in <ref type="figure" target="#fig_2">Figure 2</ref>, Equation 2.4), nine, 81, and 729 triangles.</p><p>In three-dimensions, the same approach can be applied only the polytopes stored in the lists are tetrahedrons instead of triangles. I have not yet attempted it, but I believe that the volume rendering approach of <ref type="bibr">Shirley and Tuchman [14]</ref>, could directly take the tetrahedra that result from the deterministic algorithm. Because the set Aj is computed once (after termination), and then can be re-rendered, the interactivity for various view points is very good. The complexity of the random algorithm is O(n) where n is the number of points. The space complexity is O(n) as well. The time complexity of the deterministic geometric algorithm is O(Nderth) where N is the number of mappings in the IFS, and depth is the number of successive sets to generate or number of outer loop iterations. The space complexity is also O(N depth) showing that both algo rithms simply do O(n) work for n primitives, and use O(n) space to store them.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Summary and Conclusions</head><p>Reconstruction is used in many approaches for visualization. Data collection is an experimental process, so the smoothing that results from many reconstruction schemes is not always desired. In a onedimensional plot, the use of error bars or quartile plots is an effective means for showing the experimental uncertainty. But, with higher density data displays, the same type of glyph approach is not as effective, especially for higher data densities. I investigated the use of fractal interpolation in performing reconstructions in two and three-dimensions. I especially wanted to see if it was possible to derive fractal interpolants for two and three-dimensions. The use of fractal interpolation is especially intriguing for volumetric data rendering. It was also an initial hypothesis that the use of fractal interpolation may be too expensive for interactive use which has been shown not to be true.</p><p>In this paper I have shown that fractal interpolation is possible for two and three-dimensions. I have shown how to derive the interpolants, and used a collage scheme of triangles for two-dimensions and tetrahedrons for four-dimensions. The iterated function systems (IFS's) that I derived also have the property that one may control the scaling, and when the scaling is set to zero, a linear interpolant results. I also derived a hidden variable fractal interpolation for twodimensional scalar data. The use of hidden variables allows for many more free parameters to control the visualization, and additional data sets can be tied to these parameters to overload the visualization.</p><p>I also investigated the rendering of my IFS%. I have developed a deterministic rendering algorithm, which doesn't use a discretization of the space, but rather a geometric/object representation, The results of the algorithm are geometric objects, points, lines, triangles, etc. that can be directly sent through the traditional graphic pipeline. By generating such primitives, I avoid the computational expense of prior ray tracing approaches. The number of primitives is controllable simply by choosing the amount of iterations, where with each iteration the set of polyhedra computed is a closer approximation of the IFS attractor. The algorithms are fully interactive on SGI Indy level workstations, and although one can easily generate enough primitives to saturate any workstation, a reasonable number of primitives gives good results.             </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>One-dimensional IFS fractal interpolation.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>In two-dimensions, f(z, y) =: z, three-dimensional affine transformations are used, where T ass = 0. Constr#aints are made on the point positions, and a scale parameter (ass) is input.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Two-dimensional triangular tiling.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Two-dimensional rectangular tiling, with tears.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Three-dimensional tetrahedral tiling. T,(VO) = PnVO, T,(V2) = PnVl, Tn(V5) = PnV2, T,(V9) = PnV3. (2.6)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>20 (and Figures 5 to 10) show the resulting hidden bilinear variable interpolant. The triangular collage in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>input free parameters solve for coefficients of Tn, n = 0,. . . , N -1 makenullL( Primitives ) PO=VO for j number of primitives to compute ( number ) { randomly choose n from 0,. . . ,</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head></head><label></label><figDesc>Figures 5 to 10 and 15 to 20 show the output from this algorithm. The triangles have flat shaded normals chosen for simplicity and speed. The normals are computed by the cross product of the edges of each triangle. Compare the output of the random algorithm in</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 :</head><label>5</label><figDesc>IFS polyhedral rendering, iteration 1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 8 :</head><label>8</label><figDesc>IFS polyhedral rendering, top view, iteration 1. dering, iteration 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure 9 :</head><label>9</label><figDesc>IFS polyhedral rendering, top view, iteration 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_11"><head>Figure 11 :</head><label>11</label><figDesc>Three-dimensional fractal interpolation using tetrahedral polytopes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_12"><head>Figure 12 :</head><label>12</label><figDesc>Surface IFS, scale a33 = 0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_13"><head>Figure 15 :</head><label>15</label><figDesc>Surface IFS, polygon rendering, scale a33 = 0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_14"><head>Figure 18 :</head><label>18</label><figDesc>Bilinear Surface IFS, scale ~33 = 0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_15"><head>Figure 13 :</head><label>13</label><figDesc>Surface IFS, scale a33 = 0.3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_16"><head>Figure 16 :</head><label>16</label><figDesc>Surface IFS, polygon rend., scale ass = 0.3.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_17"><head>Figure 19 :</head><label>19</label><figDesc>Bilinear Surface IFS, scale us3 = 0.01.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_18"><head>Figure 14 :</head><label>14</label><figDesc>Surface IFS, scale as3 = 0.6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_19"><head>Figure 17 :</head><label>17</label><figDesc>Surface IFS, polygon rend., scale ~33 = 0.6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_20"><head>Figure 20 :</head><label>20</label><figDesc>Bilinear Surface IFS, scale ~33 = 0.02.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head>Table 1</head><label>1</label><figDesc>shows the vertex orderings for the triangle collage. The scaling parameter is ass (Equation 2.3)? and ais and ass are set to zero. Solutions for T,, are not shown due to space considerations. With ass less than one, the afline transformations are contractive, satisfying the conditions to form an IFS. Figures 3 (square patch with tears), and 12 to 17 show surface interpolations with these constraints.</figDesc><table><row><cell></cell><cell></cell><cell>PnV2</cell><cell></cell></row><row><cell>v9</cell><cell></cell><cell></cell><cell></cell></row><row><cell>VT</cell><cell></cell><cell></cell><cell></cell></row><row><cell>V4</cell><cell></cell><cell></cell><cell></cell></row><row><cell>vo</cell><cell>VI</cell><cell>v2</cell><cell>v3</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Vertex orderings for triangle collage</figDesc><table><row><cell>P2 2 3 6</cell></row><row><cell>P3 4 5 7</cell></row><row><cell>P4 5 6 8</cell></row></table><note></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head>Table 2 :</head><label>2</label><figDesc>Vertex orderings for tetrahedral collage</figDesc><table><row><cell>polyhedra</cell><cell>vertices</cell></row><row><cell cols="2">PO 0)3)1)6</cell></row><row><cell cols="2">Pl l(41217</cell></row></table><note></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)1070-2385/95 $10.00 © 1995 IEEE</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>My most sincerest thanks goes to the supportive and synergistic visualization research made possible by Alex Pang, Jane Wilhelms, Allen Van Gelder, and Suresh Lodha at UCSC. I would also like to thank the keen suggestions of the Vis'95 reviewers.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Data Structures and Algorithms</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Aho</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Hopcroft</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">D</forename><surname>Ullman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Addison-Wesley</publisher>
			<pubPlace>Reading, MA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Fkactals Everywhere</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Barnsley</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>Academic Press, Inc</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Harnassing chaos for image synthesis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">F</forename><surname>Barnsley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>Atlanta, GA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1988-08" />
			<biblScope unit="page" from="131" to="140" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C</forename><surname>Barton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">R L</forename><surname>Pointe</surname></persName>
		</author>
		<title level="m">Fk-actals in the Earth Sciences</title>
		<meeting><address><addrLine>New York</addrLine></address></meeting>
		<imprint>
			<publisher>Plenum Press</publisher>
			<date type="published" when="1995" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">IFS algorithms for wavelet transforms, curves and surfaces, and image compression</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Berger</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Stochastic Models, Statistical Methods and Algorithms in Image Analysis</title>
		<editor>P. Barone et al.</editor>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="89" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Construction of fractal objects with iterated function systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Demko</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>San Francisco, CA</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1985-07" />
			<biblScope unit="page" from="271" to="278" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Efficient antialiased rendering of 3-D linear fractals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Hart</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Defanti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>Las Vegas, NV</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1991-07" />
			<biblScope unit="page" from="91" to="100" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Ray tracing deterministic 3-D fractals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Hart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>Chicago, IL</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1989-07" />
			<biblScope unit="page" from="289" to="296" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Fractal Functions, Fractal Surfaces, and Wavelets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">R</forename><surname>Massopust</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1994" />
			<publisher>Academic Press</publisher>
			<pubPlace>San Diego, CA</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Fractal modeling of time-series data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Maze1</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">H</forename><surname>Hayes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Asilomar Conference on Signals, Systems, &amp;&apos; Computers</title>
		<meeting><address><addrLine>Pacific Grove, CA</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE, Maple Press</publisher>
			<date type="published" when="1989-10" />
			<biblScope unit="page" from="182" to="186" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The definition and rendering of terrain maps</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">S P</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH<address><addrLine>Dallas, TX</addrLine></address></meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1986-08" />
			<biblScope unit="page" from="39" to="48" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Generation and display of geometric fractals in 3-D</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Norton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1982-07" />
			<biblScope unit="page" from="61" to="67" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">A review of the fractal image compression literature</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Saupe</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Hamzaoui</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="268" to="279" />
			<date type="published" when="1994-11" />
		</imprint>
	</monogr>
	<note>dering, iteration 3. Figure 10: IFS polyhedral rendering, top view, it. 3</note>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">W. C. Strahle. Turbulent combustion data analysis using fractals</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Shirley</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Tuchman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Volume Visualization</title>
		<meeting><address><addrLine>San Diego, CA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1990-12" />
			<biblScope unit="volume">29</biblScope>
			<biblScope unit="page" from="409" to="417" />
		</imprint>
	</monogr>
	<note>A polygonal approximation to direct scalar volume rendering</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Natural mountain simulation based on 3-D IFS</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Tong</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of the Third Int. Conj. on CAD and Comp. Graph</title>
		<meeting>of the Third Int. Conj. on CAD and Comp. Graph</meeting>
		<imprint>
			<publisher>Chinese Comput. Fed., Int. Acad. Publishers</publisher>
			<date type="published" when="1993-08" />
			<biblScope unit="page" from="101" to="105" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Panel: Validation, verification, and evaluation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Uselton</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. of Visualization 94</title>
		<meeting>of Visualization 94</meeting>
		<imprint>
			<biblScope unit="page">414</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title/>
	</analytic>
	<monogr>
		<title level="j">IEEE</title>
		<imprint>
			<date type="published" when="1994-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Signal Modeling with Iterated Function Systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Vines</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Georgia Inst. of Tech</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Verity visualization: VisuaI mappings</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M</forename><surname>Wittenbrink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lodha</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<pubPlace>Santa Cruz</pubPlace>
		</imprint>
		<respStmt>
			<orgName>Univ. of Cal</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Glyphs for visualizing uncertainty in environmental vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">M</forename><surname>Wittenbrink</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Saxon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Furman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename><surname>Pang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Lodha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SPIE &amp; IS&amp;T Conference Proceedings on Electronic Imaging: Visual Data Exploration and Analysis. SPIE</title>
		<imprint>
			<date type="published" when="1995-02" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
