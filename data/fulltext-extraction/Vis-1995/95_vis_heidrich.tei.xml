<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Interactive Maximum Projection Volume Rendering</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Wolfgang</forename><surname>Heidrich</surname></persName>
							<email>wheidrich@cgl.uwaterloo.cammccoolqcgl.uwaterloo.ca</email>
							<affiliation key="aff0">
								<orgName type="laboratory">Computer Graphics Lab Computer Graphics Lab Playfair Neuroscience</orgName>
								<orgName type="institution">Unit University of Waterloo University of Waterloo Toronto Western Hospital</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Mccool</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Computer Graphics Lab Computer Graphics Lab Playfair Neuroscience</orgName>
								<orgName type="institution">Unit University of Waterloo University of Waterloo Toronto Western Hospital</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">John</forename><surname>Stevens</surname></persName>
							<affiliation key="aff0">
								<orgName type="laboratory">Computer Graphics Lab Computer Graphics Lab Playfair Neuroscience</orgName>
								<orgName type="institution">Unit University of Waterloo University of Waterloo Toronto Western Hospital</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Interactive Maximum Projection Volume Rendering</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>Maximum projection is a volume rendering technique that, for each pixel, finds the maximum intensity along a projector. For certain important classes of data, this is an approximation to summation rendering which produces superior visualizations. In this paper we will show how maximum projection rendering with additional depth cues can be implemented using simple afine transformations in object space. This technique can be used together with 30 graphics libraries and standard graphics hardware,thus allowing interactive manipulations of the volume data. The algorithm presented in this paper allows for a wide range of tradeoffs between interactivity and image quality. 1.1 Direct Volume Rendering Direct volume rendering [6, 8, 111 integrates the value of a continuous volume function along a given projector. This continuous volume function usually has to be reconstructed from discrete sampling points. &gt; z=d Screen Volume</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The existing approaches to volume visualization can be classified into two categories: direct volume rendering and model based techniques. While these two techniques have often been portrayed as competitors, we think they should actually be seen as being complementary.</p><p>The method described in this paper uses geometric models to implement a discrete version of a well known direct rendering algorithm.</p><p>These models allow for the efficient use of widely available computer graphics hardware.</p><p>In the following we briefly review some aspects of direct volume rendering before presenting our discrete technique. Typically, the function computed along a projector is an absorption/emission integral. This integral is based upon the physical metaphor of emissive particles suspended in an absorptive medium. Along a single projector, the integral can be written as <ref type="bibr">[</ref> </p><p>Here we parameterize every projector linearly and define the function f [z] = f (x0 + zF) with Id = 1 along each projector, where z = 0 at some background plane beyond the volume of interest and z = d at the imaging plane. This notation is adopted so that the direction of light along the projector towards the pixel corresponds to positive increments in the parameter z. The situation is shown in <ref type="figure" target="#fig_0">Figure 1</ref>. The value ch[dl is the flux density reaching the imaging plane, and @[O] defines a background image. ~(2) denotes the linear absorption coefficient of the medium, and the flux density towards the imaging (See color plates, page CP-3) plane per unit length, emitted by suspended particles, is given by $(?). These values need to be derived somehow from the original volume data, which is typically not in this form (otherwise we could just look at it directly). All these values may have a wavelength dependency as well, allowing color images to be produced.</p><p>By manipulating the way in which the values of the original volume data are interpreted as absorptive ~(2) and emissive #J(Z) properties, various effects can be achieved, including isosurfaces <ref type="bibr">[lo, ll]</ref> and apparently opaque objects.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Summation Rendering</head><p>The integral in (1) is nonlinear and therefore the number of simplifications that can be applied to it are limited. An important subclass of volumes for which this integral becomes linear is the class of purely emissive volumes.</p><p>A purely emissive volume is defined by setting the absorption coefficient ~(2) = 0 for all 3, resulting in a totally transparent volume. The rendering integral (1) reduces to W I = 1" 44 dz + W I, 0 which is linear with respect to c$[.z]. This integral mimics the image formation process of the gamma camera <ref type="bibr">[l]</ref>. In this paper this method will be referred to as summation rendering.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">Maximum Rendering</head><p>Maximum rendering finds the maximum emission along a projector and assigns this value to the projected point on the image plane. Unlike summation rendering, this is a nonlinear operation.</p><p>However, we will show how widely available computer graphics hardware can be used to implement this maximum operator in an efficient way.</p><p>Maximum projection rendering is particularly useful for any application in which a strong signal is produced over a small volume, and might be obscured by low-level background noise produced over a much larger volume. In this case, maximum rendering is an improvement over summation rendering because the nonlinearity removes the "fog" that might obscure the small bright signal.</p><p>Maximum rendering can be characterized by the following equation:</p><p>The scale factor C converts the flux density per unit length 4[z] to a flux density a. In the discrete case $[,z] might be sampled at some interval AZ, which would lead to C = AZ.</p><p>This maximum operation, when given two equallybright points on a projector, should choose the one with the largest z value, that is, the one closest to the image plane. This will become important once we consider intensity depth cueing in Section 2.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4">Discrete Maximum Rendering</head><p>A discrete version of maximum rendering can easily be derived by making a transition from a continuous emission function 4(s) to a set of discrete emission levels {c#J~,&amp;, . . . , &amp;}.</p><p>These levels can be seen as thresholds which define a number of nested volumes or "shells" [ 171.</p><p>The maximum rendering algorithm can then be implemented by intersecting each projector with the volumes defined by the emission thresholds. The image intensity at the projector is the emission of the brightest volume that, the projector intersects.</p><p>Similarly a discrete version of summation rendering can be implemented by summing up the differential intensities of the intersected volumes, weighted by length of the projector segment that lies within the volume.</p><p>The intersection of the projector with the volumes can be computed with the help of isosurfaces. The more volumes (and therefore isosurfaces) used, the closer the rendering can approach direct volume rendering. By using multiple surfaces and suitable blending techniques, the perception of solid objects with definite boundaries is softened. Analysis capabilities offered by the discrete approach remain, although now statistics are presented for multiple volumes. This is an advantage, however, since it allows the user to analyze the sensitivity of the statistics to the segmentation threshold.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Use of Graphics Acceleration</head><p>Hardware While maximum rendering can be directly translated into a ray casting scheme, it is somewhat harder to come up with a rendering method which makes use of graphics acceleration hardware.</p><p>Today's 3D graphics boards provide hardware support for drawing several hundred thousand Gouraud shaded polygons per second. The hidden surface removal algorithm used on these boards is almost always depth-buffer (z-buffer) based.</p><p>On first thought, one might think that maximum rendering and summation rendering in such an environment can simply be implemented by drawing the isosurfaces with a transparency which accounts for the emission of the corresponding volume. Unfortunately the z-buffer algorithm only produces correct results for transparency if the polygons are sorted by z <ref type="bibr">[13]</ref>. Resorting all polygons for every rotation of the volume, however, is computationally expensive even for relatively small volumes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Geometric Transformations for Maximum Rendering</head><p>Maximum rendering as discussed in Section 1.3 first finds the maximum emission along a projector, and then projects this value onto the image plane. The order of operations can be reversed, so that first the whole volume is projected onto the image plane, and then for each pixel the brightest value is computed.</p><p>This corresponds to an orthographic or perspective transformation followed by a maximum operation. Such a maximum operation is already provided by the z-buffer algorithm during hidden surface removal. We would like to use this z-buffer for our maximum operation on intensities as well. Therefore we have to come up with a geometric transformation which reorganizes the geometry so that brighter points are closer to the image plane than darker points.</p><p>A simple way to accomplish this, if the z-axis is perpendicular to the image plane, is to set the z component of each point to its emission after the projective transformation.</p><p>The transformation matrix which does this is where q&amp; is the emission of the isosurface to which the point belongs. This transformation can be implemented as a scaling by factor 0 in z direction followed by a translation by &amp;. The result of this transformation is shown in <ref type="figure" target="#fig_1">Figure 2</ref>.</p><p>Note that if a perspective transformation is used, the above transformation has to be executed after the perspective is done. Otherwise perspective foreshortening will change the proportions of the geometry: since brighter surfaces are moved closer to the eye, the perspective transformation will make them appear bigger than dark ones. in some graphics environments it is not possible to specify additional affine transformations after the perspective. In this case it is still possible to use an orthographic projection instead of perspective, because the orthographic projection preserves proportions (it is affine), and therefore it can take place after the z adjustment.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Depth Cueing</head><p>It is often useful to add additional depth cues to the image in order to improve the 3D impression of the image. One of the simplest depth cues to implement is an intensity ramp that dims parts of the volume farther from the eye. A linear ramp along a projector can be described by with PO 2 0 and pm &gt; 0. The value /%J is the attenuation at the background image, and pm is the rate of change of this attenuation per unit length along the projector.</p><p>In the case of maximum rendering this ramp should be pre-multiplied onto the flux density before the maximum operation is performed.</p><p>This way the maximum operator will take depth cueing into account, and will always select the brightest point. Otherwise the point with the highest emission would be selected, even if it was very far away from the image plane, and therefore relatively dark. This anomalous reversal situation is depicted in <ref type="figure" target="#fig_2">Figure 3</ref>. For the discrete case (3) can be simplified to account only for the intersection points with the isosurfaces. Let zi be the intersection of the projector with isosurface i. If the projector has multiple intersections with the same isosurface, we select the one which is closest to the image plane. Since we defined the maximum operator to choose the closest point in cases where two or more points are equally bright, we can write the above equation as</p><formula xml:id="formula_1">@V,l = maxlm~x(Cp[z;l4;),Po9[01)<label>(4)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Transformations for Depth Cueing</head><p>In an implementation with depth cueing we would like to be able to control the two degrees of freedom which a linear ramp provides. We can do that by directly adjusting the parameters pc and ,&amp; of the linear ramp, or by fixing these parameters and applying a linear function to the z component of each point instead.</p><p>For reasons that will become clear later, we choose the latter approach, and apply the depth cue to a shifted and scaled z: = axi + b. If we assume that the background is darker than the brightest point along a projector, Equation (4) reduces to @ 'cd = WO +Pm&amp;4; = &lt;(PO +Pn(w -t-b))4~</p><p>This can be rearranged into</p><formula xml:id="formula_2">@[d]=&lt;P, &amp;azi+qk(b+F) ( &gt; . m</formula><p>In other words, the transformation to control the linear ramp can be pushed into the transformation we do before the maximum operation, and only a single maximum comparison is needed on the combined m transform. (2) can therefore be redefined as <ref type="figure" target="#fig_3">Figure 4</ref> demonstrates the effect of this transformation. Instead of drawing each isosurface with a color corresponding to its emission, like in Section 2.1, now we simply transform each isosurface with the appropriate matrix, and then draw it in full brightness. The hardware depth cueing of the graphics system we use will take care that surfaces with higher emission will appear brighter on the screen than ones with lower emission. On systems without hardware depth cueing the linear ramp can be applied as a post processing step by reading the z value from the depth buffer and modifying the brightness appropriately.</p><p>We now have parameters PO, a and b to customize the rendering algorithm.</p><p>If we set a = 0, b = 1, and the brightness of the background image 00 = 0, we have exactly the algorithm described in Section 2.1, without any depth cueing. By varying b, we can adjust the contrast between isosurfaces of different bright-</p><p>The parameter a controls the amount of depth cueing added to the image. It will actually be the ratio of a and b that will give the full tradeoff of depth cueing to intensity. Increasing /?c will increase the overall brightness of the image.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.4">Approximate Summation Rendering</head><p>As noted in Section 1.4, the discrete version of the summation rendering algorithm has to compute the sum of intensities of the volumes that a projector intersects, weighted by the length of the projector segment that lies within the volume.</p><p>Unfortunately there is no simple geometric transformation (affine or projective) which would allow us to correctly compute the total length of projector segments, and therefore the weights. However, if all isosurfaces have roughly the same topological properties, summation rendering can be approximated by setting all weights to the same value, for example l/n, where n is the number of isosurfaces. Unfortunately, the approximation might be very coarse if only a small number of isosurfaces are used.</p><p>On graphics systems which support accumdation buglers, this approximation of summation rendering can be implemented easily. Accumulation buffers provide hardware support for creating a weighted sum of different images. For summation rendering this means that each isosurface has to be drawn into a separate image, using transformations and depth cueing as described above. Then the accumulation buffers are used to add the images together.</p><p>3 Implement at ion A volume visualization program for regularly gridded data has been implemented using the methods described in this paper. The program uses the 3D graphics library OpenGL [2] to exploit the graphics hardware of different platforms in a portable way. It has been tested on workstations from Silicon Graphics (SGI) and Digital Equipment (DEC).</p><p>OpenGL supports both z-buffers and accumulation buffers, and the linear depth cue described in Section 2.2 can be implemented using the linear fog facility which OpenGL provides. OpenGL will apply the linear ramp in software if the graphics hardware does not directly support fog. In addition to the transformations given in this paper, another scaling was introduced in order to normalize the resulting z components to values between 0 and 1. This is the interval on which the OpenGL z-buffer operates.</p><p>The user interface allows for three different rendering modes: maximum rendering, approximate summation rendering, and the usual lighted rendering of iso-surfaces. In the latter mode only the outermost shell will be visible, of course. Three scrollbars provide the user with full control over the rendering parameters ,!&amp;, a and b.</p><p>The program also allows the user to interactively add or delete isosurfaces, or to temporarily disable individual surfaces. For the creation of the isosurfaces a simple marching cubes algorithm [12] is used.</p><p>The resulting volume model can be interactively rotated on the screen, where the performance depends on the complexity of the volume data, the number of isosurfaces, and the graphics hardware.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Results</head><p>Several tests with different data sets were made in order to measure the performance on different graphics platforms.</p><p>For the first measurement we chose the 64 x 64 x 64 data set HIPIP from the Chapel Hill Volume Rendering Test Date Sets (CHVRTD), and created 11 isosurfaces with 44846 polygons. A second measurement was done with the same data, but with only 6 isosurfaces and 14844 polygons.</p><p>Another data set (SAT) contains a 21 x 21 x 51 grid of saturation values from a groundwater simulation of oil contamination <ref type="bibr">[15]</ref>. From this data 20 isosurfaces with a total of 16846 polygons were created.</p><p>Finally, an MR angiogram of a human brain was used. This data, which can be obtained from the UMDS Image Processing Group, consists of a 256 x 256 x 124 grid, from which 12 isosurfaces with 177594 polygons have been created. Maximum rendering is especially useful for angiograms, because they contain a lot of localized detail which would be obscured by other rendering methods. <ref type="figure">Figure 5</ref> shows the MR angiogram data set rendered with different parameter settings. <ref type="table">Table 1</ref> gives an overview of the performances measured on different platforms.</p><p>The figures shown for the Silicon Graphics Onyx with VTX graphics are somewhat inaccurate, because for these high frame rates the time spent synchronizing with the CRT refresh signal is significant. Since the refresh frequency of the CRT was set to 60Hz, and frame rates slightly above 20 have been measured, the rendering of one image takes between 2 and 3 refresh cycles, which corresponds to a frame rate of 20 -30 frames per second.</p><p>The results for all platforms show that reasonable frame rates can be achieved for maximum rendering, even on relatively low-end graphics acceleration boards. On the other hand the figures also show that approximate summation rendering should only be used on platforms which provide significant hardware support for accumulation buffers. Otherwise the computation of the weighted sum of images dominates the rendering time, and the number of isosurfaces becomes the limiting factor for performance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Conclusions</head><p>In this paper we have presented two interactive volume rendering techniques, maximum rendering and approximate summation rendering. We have shown how discrete versions of these methods that exploit graphics hardware can be implemented using isosurfaces. The number of isosurfaces can be adjusted to provide a wide range of tradeoffs between performance and image quality.</p><p>Simple geometric transformations can be used to combine depth cueing with discrete versions of the maximum rendering and summation rendering algorithms. Affine transformations and polygonal models make the use of standard graphics hardware possible, thus allowing for interactive manipulation of viewport and depth cueing parameters.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Acknowledgments</head><p>We would like to thank Andre Unger and Nathan P. Konrad, University of Waterloo for providing the SAT data set.</p><p>The data set HIPIP originates from a simulation done by Louis Noodleman and David Case, Scripps Clinic, La Jolla, California, and can be obtained from the CHVRTD test suite at omicron. cs . unc . edu.</p><p>The MR angiogram data set is available from the United Medical and Dental Schools (UMDS) Image Processing Group in London, and can be found at http://www-ipg.umds.ac.uk/archive/heads.html.</p><p>An earlier implementation of this algorithm was created under ICAR at the Playfair Neuroscience Institute at the Toronto Western Hospital. ICAR is a neurobiological version of CAMRA, a real-time volume visualization system produced by ISG Technologies.</p><p>OpenGL is a trademark of Silicon Graphics Inc.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>The path along a projector is parameterized by the value Z. Each projector starts at a background image and extends to an imaging plane.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>The result of the geometric transformation for maximum rendering: the z component of each point is set to the emission of the isosurface it belongs to Unfortunately</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>What can happen when the maximum operation is performed before depth cueing: an inversion. Below is shown the function along the diagrammed projector, the second graph showing the effect of depth cueing. To the right are corresponding graphs of the value of @[dl for all projectors. This problem can be avoided by applying the maximum operation after depth cueing, as described in the text.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>The result of the geometric transformation including depth cueing: the geometry is scaled and translated so that brighter points are closer to the im-</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)1070-2385/95 $10.00 © 1995 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)</note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">OpenGL Architecture Review Board. OpenGL Reference Manual: The Oficial Reference Document for OpenGL</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Harrison</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">William</forename><surname>Barrett</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Swindell</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1981" />
			<publisher>Addison-Wesley</publisher>
			<biblScope unit="volume">1</biblScope>
		</imprint>
	</monogr>
	<note>Radiological Imaging</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Surface shading in the cuberille environment</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lih-Shyang</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Gabor</forename><forename type="middle">T</forename><surname>Herman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">Anthony</forename><surname>Reynolds</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Jayaram</forename><forename type="middle">K</forename><surname>Udupa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="33" to="43" />
			<date type="published" when="1985" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Conversion of complex contour line definitions into polygonal element mosaics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">N</forename><surname>Christiansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">W</forename><surname>Sederberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics (ACM SIGGRAPH &apos;78 Proceedings)</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="187" to="192" />
			<date type="published" when="1978-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">3D reconstruction of the brain from magnetic resonance images using a connectivity algorithm. Magnetic Resonance Imaging</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">L</forename><surname>Dumoulin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">R</forename><surname>Hart</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Ludke</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1987" />
			<biblScope unit="page" from="5" to="345" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Volume rendering</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Robert</forename><forename type="middle">A</forename><surname>Drebin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Loren</forename><surname>Carpenter</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Pat</forename><surname>Hanrahan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics (ACM SIGGRAPH &apos;88 Proceedings)</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="65" to="74" />
			<date type="published" when="1988-08" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Backto-front display of voxel-based objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Frieder</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Reynolds</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="52" to="59" />
			<date type="published" when="1985-01" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Ray tracing volume densities</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kajiya</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Computer Graphics (ACM SIGGRAPH &apos;84 Proceedings)</title>
		<imprint>
			<biblScope unit="volume">18</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="165" to="174" />
			<date type="published" when="1984-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Rendering fur with three dimensional textures</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">T</forename><surname>Kajiya</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">L</forename><surname>Kay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics (ACM SIGGRAPH &apos;89 Proceedings)</title>
		<imprint>
			<date type="published" when="1989-07" />
			<biblScope unit="volume">23</biblScope>
			<biblScope unit="page" from="271" to="280" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Display of surfaces from volume data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="29" to="37" />
			<date type="published" when="1988-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Display of Surfaces from Volume Data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Marc</forename><surname>Levoy</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989-05" />
		</imprint>
		<respStmt>
			<orgName>University of North Carolina at Chapel Hill, Department of Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">PhD thesis</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Marching cubes: A high resolution 3D surface construction algorithm</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">E</forename><surname>Lorensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">E</forename><surname>Cline</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Computer Graphics (ACM SIG-GRAPH &apos;87 Proceedings)</title>
		<imprint>
			<date type="published" when="1987-07" />
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="page" from="163" to="189" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Transparency and antialiasing algorithms implemented with the virtual pixel maps technique</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Abraham</forename><surname>Mammen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="43" to="55" />
			<date type="published" when="1989-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Compact data structures for volume visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Mccool</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
		</imprint>
		<respStmt>
			<orgName>University of Toronto, Department of Computer Science</orgName>
		</respStmt>
	</monogr>
	<note>Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J A</forename><surname>Unger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">A</forename><surname>Sudicky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Forsyth</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Surface and volume rendering in 3D imaging: a comparison</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Upda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Chuang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Digital Imaging</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="159" to="168" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Shell rendering: Fast volume rendering and analysis of fuzzy surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Upda</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Odhner</surname></persName>
		</author>
		<idno>1070-2385/95 $10.00</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 6th IEEE Visualization Conference (VISUALIZATION &apos;95)</title>
		<meeting>the 6th IEEE Visualization Conference (VISUALIZATION &apos;95)</meeting>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">0</biblScope>
		</imprint>
	</monogr>
	<note>IEEE Max. rendering. Contrast: lOO%, Depth Cue</note>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rendering</surname></persName>
		</author>
		<title level="m">Contrast: 66%, Depth Cue</title>
		<imprint>
			<biblScope unit="page">33</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rendering</surname></persName>
		</author>
		<title level="m">Contrast: 33%, Depth Cue: 66% Max. rendering, Contrast: O%, Depth Cue</title>
		<imprint>
			<biblScope unit="page">100</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">rendering: Contrast: lOO%, Depth Cue: lOO? r, Figure 1: Different settings of the rendering parameters</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Max</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Rendering</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Contrast: lOO%, Depth Cue: 100% Sum</title>
		<imprint/>
	</monogr>
	<note>Depth cueing improves the understanding of the 3-dimensional structure, while the contrast reveals fine detail in the data set</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
