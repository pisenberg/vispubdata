<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Space Walking</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Andrew</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Indiana University</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Hui</forename><surname>Ma</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Indiana University</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Space Walking</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
				<p>We propose an interactive method for exploring topological spaces based on the natural local geometry of the space. Examples of spaces appropriate for this visualization approach occur in abundance in mathematical visualization, surface and volume visualization problems, and scientific applications such as general relativity. Our approach is based on using a controller to choose a direction in which to &quot;ulalh&quot; a manifold along a local geodesic path. The method automata&apos;cally generates orientation changes that produce a ma&apos;mal viewable region with each step of the walk. The proposed interaction framework has many natural properties to help the user develop a useful cognitive map of a space and is well-suited to haptic interfaces that may be incorporated into desktop virtual reality systems.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>In this article, we describe an interactive approach to visualizing topological manifolds. The interface can be realized in terms of standard mouse or joystick controllers as well as haptic interfaces. Properties of surfaces with high complexity due to strong curvature or self-intersections can be explored dynamically and pieced together mentally by the user in a manner difficult to achieve with standard graphical representations alone.</p><p>This work originates philosophically in our attempts to develop increasingly deeper conceptualizations of the properties of complex geometric objects (for a general overview, see <ref type="bibr">Hanson,</ref><ref type="bibr">Munzner,</ref><ref type="bibr">and Francis [14]</ref>). E xamples of other work in this area are the Geomview system and its auxiliary modules <ref type="bibr">[16,</ref><ref type="bibr">71,</ref><ref type="bibr">and Bryson'</ref>s system for visualizing geodesics in gravitational spacetime metrics <ref type="bibr">[l]</ref>. However, highly tuned interaction with objects represented by multiple coordinate patches in three, four, or more dimensions requires additional special tools: our own MeshView system <ref type="bibr">[15]</ref> was developed precisely to enable enhanced 4D interaction, flexible 4D depth cues, and especially to display the relationship between a point on an ab-(a) (b)</p><p>Figure 1: (a) A 2D curve with interest point P as it might intersect a 1D display. (b) The curve rotated so the tangent vector at the interest point is aligned with the screen, giving a maximal projection.</p><p>stract parameter mesh and its mapping onto a selfintersecting surface in a computer graphics image. 4D lighting methods can also supply additional cues <ref type="bibr">[13]</ref>.</p><p>Long experience viewing and manipulating manifolds such as projective planes, everting spheres, and Riemann surfaces (see, e.g., Carter [2], <ref type="bibr">Francis [5]</ref>, and <ref type="bibr">Hanson [S]</ref>) suggests the need for additional intuitive tools for exploring such spaces. The techniques described here comprise another powerful, interactionbased approach for developing mental models of such structures (see, e.g., <ref type="bibr">Tversky [19]</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Walking a Curve</head><p>In this section, we introduce the reader to space walking using the traversal of a space curve, a simple example that exposes the richness of the approach.</p><p>Assume that we have a closed 2D+space curve along with a particular point of interest P on that curve as shown in <ref type="figure">Figure 1</ref>. Now imagine projecting that curve to a single scanline of a CRT screen. To traverse or "walk" the curve, we must determine both a display strategy that represents the current interest point P in a natural manner, and we must specify how to rigidly transform the full curve to make a transition from I? to a neighboring interest point P'. In this simple case, the controller can be thought of as a slider, 1D mouse,  As shown in <ref type="figure">Figure la</ref>, it does not+ make sense to let the 2D projection of the curve at P have an arbitrary oblique orientation with respect to the screen face; our first assumption, which we will maintain throughout, is that we should always attempt to orient the tangent to the curve parallel to the screen face at the interest point $, as indicated in <ref type="figure">Figure lb</ref>. We will call this choice the maximal projection.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Positioning</head><p>the curve. Now let d; be the interactive controller input, which is interpreted-to mean "move alo,"g the curve in the direction dx by arc length lldxll." Th e resulting action changes the interest point from @ to p' as we slide along the curve as shown in <ref type="figure" target="#fig_1">Figure 2a</ref>,b. Suppose for simplicity that the curve is represented a: disc_rete line segments, as shown in <ref type="figure" target="#fig_1">Figure 2c</ref>. If P + dx does not reach the edge vertex sedge, the simplest motion is to translate by d; in the screen tangent direction. Otherwise, we take d = sedge -P, /7 = P' -Gedge, set Ild&gt;ll = ]]S]] + ]]$I], translate sedge to the origin, rotate by cos0 = da fi/]]G]) I]@]], and make a final translation by ]]a]] to place F' at the screen center, where it becomes the new interest point I?. One obvious strategy for smoothing this transition is to do the rotation in finite time using 6(t) = te with t increasing from zero to one.</p><p>Remark: Self-intersecting curves are treated naturally in this framework by requiring local continuity of the tangent vector. A natural source of interesting self-intersecting curves is the class of non-self-intersecting 3D curves that possess a self-intersecting 2D projection.</p><p>Accordingly, we next examine 3D space curves, and find that they introduce new interesting issues and intrinsic properties that generalize easily to ND space curves. 3D subspaces turn out to play a special role in walking curves. Later, we will see that 4D subspaces play a similar special role in the analysis of surface walking.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Extension</head><p>to 3D space curves.</p><p>First suppose we have a 3D space curve, but are still restricted to a 1D display screen, and have chosen a 2D projection. When we restrict the tangent to the interest point of the curve's 2D projection to lie in the 1D screen face, we see that the 3D curve will be tangent to the plane perpendicular to the line of sight through the interest point, but may make an oblique angle to the 1D screen line drawn in this plane. We then have the following choices for positioning the 3D curve:</p><formula xml:id="formula_0">2D tangent.</formula><p>Ignore 3D altogether, make the 2D projection tangent to the 1D screen's center at the interest point @ and walk the 2D projection only, as in <ref type="figure" target="#fig_1">Figure 2</ref>. If the 3D curve's tangent at @ ' does not lie in the projection plane, first align it with the projection plane as shown in <ref type="figure" target="#fig_3">Figure 3a</ref>,b. Then rotate the result in the projection plane to produce the maximal projection at P" as shown in <ref type="figure" target="#fig_3">Figure 3c</ref>.</p><formula xml:id="formula_1">3D tangent, 3D adjustment.</formula><p>Alternatively, ignore the 2D+projection altogether, translate directly from P to g', and rotate the entire 3D curve so that the tangent at 3' aligns with the 1D screen line. The only change is that now @ ' is a 3D vector and the rotation is in the 3D plane defined by the three (assumed non-collinear) points ($7 @edge, g'). The angle of rotation corresponds to the 3D dot product, with the geometry as in <ref type="figure" target="#fig_1">Figure 2c</ref>. At this point, there is an arbitrary rotational degree of freedom about the curve's new tangent vector, the screen line; we have the choice of leaving the orientation where it falls after aligning the tangent, which is quite arbitrary, or choosing a geometrically motivated orientation. Provided the curve's second derivative does not vanish, we can choose an intrinsic orientation based on the Frenet frame [4, 61, 2(s) fYs) = Ilx"(S)ll A natural ch$ce is-to fo:ce the tangent circle spanned by T and N at P to lie entirely in the 2D projection plane.</p><p>N dimensions.</p><p>In higher dimensions, we note the remarkable fact that the local characteristics of the curve that concern us lie within a 3D subspace: the points (20, x'r , x"z, 2s) defining the tangents to the sequence of interest points as indicated in <ref type="figure" target="#fig_3">Figure 3</ref> define a tetrahedron, a 3-simplex, regardless of the dimension of the four N-dimensional vectors describing the endpoints of the three edges. Thus we may rephrase the alignment of the Frenet curve normal fi with the 2D projection plane for arbitrary dimension as follows:</p><p>(1) define the plane containing the screen vector and the gaze vector to be aligned with the edges containing ($0, x'r,x'z). The desired new orientation has the tangent at @' parallel to the screen vector; furthermore, we want the plane containing the screen vector and the gaze vector to be aligned with the plane of the edges (Zr,x'z, ~?a). Since this transformation is strictly in a 3D subspace, one has several choices: (1) align 3' with the screen direction first and then rotate about the line containing 6' to place the line containing $ back in the projection plane; (2) rotate about the line containing I? until the line containing 3' is in the projection plane, then rotate in that plane until 3' is in the screen tangent direction; (3) better yet, one can perform a geodesic quaternion interpolation between the two frames within the 3D subspace <ref type="bibr">[18]</ref>.</p><p>The strategies that align the 3D tangent instead of the simpler 2D projected tangent have the effect of "pulling the curve through a tube" surrounding the 1D screen line. Also note that in these algorithms the curve may rotate rapidly about the 1D screen line if the maximal projection aligning the curve's Frenet normal with the 2D projection plane is always enforced.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Walking in Space</head><p>We next outline the extension of the basic concepts of curve walking to surfaces and higher dimensional manifolds. From this point on, we will assume that we have a 2D screen space with a well-defined normal gaze direction, and that surface patches are projected from a 3D graphics space, the "projection volume," onto this 2D screen. Higher dimensional objects will typically first be transformed to the 3D projection volume in a manner analogous to the projection of a 3D curve to a 2D projection plane noted earlier. We begin by examining surfaces (2-manifolds) with vertex coordinates in 3D Euclidean space. We assume that a surface is defined by a collection of vertices {5&amp;} with a data structure such as a winged edge data structure that allows one to determine the faces adjoining each edge and each vertex.</p><p>Paths on a surface in 3D.</p><p>First, we consider a surface represented by triangular facets in ordinary 3D space. Our basic hypothesis of maximal projection then requires that the facet of interest lies completely in the screen plane.</p><p>Next, as illustrated in <ref type="figure" target="#fig_5">Figure 4</ref>, we choose a point of interest @ in the facet and give an algorithm for transforming the display as we move to a new interest point e'. Assuming a 2D controller motion d&gt;, we proceed as follows:</p><p>Clip.</p><p>First, we clip the vector @ + d&gt; to the triangle containing 3. That is, working within the   If @' lies in the current face,+simply translate that point to the screen center. If P' lies in the adjacent face, rotate as prescribed below and then translate $' to the screen center. If I? crosses the clipping boundary of the adjacent face, repeat the clipping and rotation procedure until it lies within a face. This procedure amounts to flattening the neighboring facets as shown in <ref type="figure" target="#fig_6">Figure 5</ref> to find the destination interest point 6' in the local 2D coordinate system of the final face.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Rotating between facets.</head><p>In the facet model, vertices are points of vanishing measure that in fact carry the Gaussian curvature in their angular deficits. For now, we assume we never actually pass through a vertex; all paths will be across edges from one face to another; smoothing models can in principle distribute the curvature across the faces and permit direct traversal of vertices.</p><p>We now compute the transition across a given edge, assuming we know the unit vectors A and B perpendicular to the transition edge, as indicated schemati- <ref type="figure">Figure 6</ref>: 3D facet rotation. tally in <ref type="figure">Figure 6</ref>. We want to translate the origin to the point Pedge and rotate by the angle cos 8 = A. B in the plane containing A and B so that 8' now lies in the screen plane and is identical to the original A.</p><p>We use a Gram-Schmidt procedure to derive the norm-preserving rotation using the orthonormal basis vectors A and e = (B -J% cos e)/ sin 8. (If A and B are paralle$no rotation takes place and we translate directly to P' in the plane of the original facet.) Every vertex q in the entire data structure undergoes the following rotation: </p><formula xml:id="formula_2">5'=q-&amp;&amp;(&amp;q)-</formula><p>where we may vary t slowly between zero and one to avoid sudden jumps in the orientation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Surfaces in N dimensions.</head><p>The equations presented so far in fact extend trivially to arbitrary dimensions for the vertex coordinates. The only essential difference is that the vector B may have a component in some direction 8 outside the projection volume spanned by (k:, f, a), and the procedure given so far rotates only the projection of the face of the new interest point @' into the screen plane. That projection may be slightly tilted and therefore not maximal unless we make an additional rotation in the Z-W plane to line it up and eliminate the $ir component; we may use Gram-Schmidt to define 61r in any dimension as follows:</p><formula xml:id="formula_4">I3 -k(jz: * 8) Iti' = (1 -(f,i))2)1/2</formula><p>Tessellated surfaces in arbitrary dimensions N &gt; 3 can therefore be handled in a manner similar to our <ref type="figure">Figure 7</ref>: Aligning surface facets with a 3D subspace in dimensions 4 or greater exploits 5 vertices that define 3 neighboring triangles, 2 overlapping tetrahedra (3simplexes) whose sixth edges are the dotted lines, and one nondegenerate 4-simplex. discussion for curves in dimensions N &gt; 2. The essence of the argument, represented in <ref type="figure">Figure 7</ref>, is that the two triangles and four vertices of a winged edge in any dimension define a 3D subspace that we can require to be aligned with the 3D volume that eventually projects to the 2D screen. When making a transition to a new interest point P', we introduce a new 3D subspace+that shares the x-y plane with the facet containing P and has a new component in the B direction. If B has components only in the (x,3,2) subspace, we are done.</p><p>If not, we rotate the entire object and generate a maximal projection that not only has P'% face lying in the screen z-y plane, but also has the tetrahedron containing P and 3' contained completely in the 3D projection volume. This is the analog for surfaces of computing the Frenet frame curve normal and readjusting the curve normal to lie in the plane normal to the screen.</p><p>As in the space curve treatment, we have three alternatives: (1) Apply the analog of Eq. (1) to rotate B in the z-w plane so that it has no G component, then perform the standard 3D facet transition to align the new B with the original A. (2) First align the new B with the original A, then apply Eq. (1) in the z-20 plane to eliminate the C component.</p><p>(3) Identify the 4D subspace (the 4-simplex) generated by the 5 vertices shown in <ref type="figure">Figure 7</ref>, compute the 4D frame with normal ti to the S-simplex defined by the "old" winged edge faces, compute the distinct 4D frame with normal C relative to the 3-simplex d+efined by the "new" winged edge faces containing P and I?", then perform a geodesic rotation between the two 4D frames. Details of the required methods may be found in <ref type="bibr">Hanson [lo,</ref><ref type="bibr">111.</ref> Remark: Earlier, we showed how the Frenet-frame treatment of space curves is essentially exhausted in 3D. The method just described shows how a wingededge treatment of arbitrary surfaces naturally leads to 4D subspaces, and that no further complexities arise in developing an analogous treatment of surface geometry in higher dimensions. Extending this treatment to winged faces for walking three-manifolds intrinsically requires 5D subspaces; K-manifolds whose tessellated geometry is described by winged (K-1)-planes will require (K + 2)-dimensional subspaces to treat the most general maximal projection requirements in arbitrary dimensions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Facet-based vs Smoothly Interpolated Control</head><p>Our approach so far has treated manifolds as locally planar segments in the manner of flat-shaded polyhedral computer graphics models and the Regge calculus [17] treatment of Riemannian geometry. Thus all transitions between facets across winged edges are indistinguishable from walking on flat space; all the curvature is contained in the 'Langular deficits," the difference between 2n and the actual sum of facet angles at each vertex. For relatively dense manifold triangulations, the angular deficit at each vertex is very small, and navigation of the manifold appears fairly smooth (see the examples in <ref type="figure">Figures 8,9, and 10)</ref>. However, just as we may wish to approximate the appearance of smooth shaded surfaces starting from an underlying discrete tessellation, we may wish to extend the walker application with an interpolation scheme that makes the manifold appear to be smooth. For example, we see in <ref type="figure" target="#fig_3">Figure 3</ref> that we really want a curve's segment-based Frenet normal and tangent-aligned in the screen projection plane at x"i , not at P, which should already be interpolating between the orientations at x'r and x's; a similar observation holds for surface walking as well.</p><p>The first step in generating a smoothly-varying manifold walk is to produce a local tangent line at each vertex of a curve, a local tangent plane at each vertex of a surface, and so on. The second, and more problematic, task is to produce a compelling interpolation procedure that connects these tangent frames continuously to one another over the entire manifold. In 3D, for example, the standard interpolated shading algorithm that computes a vertex normal by averaging the normals to the surrounding faces is a good start; this normal defines the 3D tangent plane at the vertex. Just as bilinear interpolation of the vertex normals generates face-interior normals for local Phong shading calculations, we can produce interpolated tangent planes perpendicular to these local normals. However, we have one additional complexity not present in the smooth shading algorithm: the relative orientations of the planes perpendicular to the normals determine the facet orientation in the maximal projection. Thus we must choose an entire coordinate frame, not just a normal, at each vertex; if we can choose frames that fit with their neighbors in an appealing way, we can proceed using standard quaternion spherical interpolations <ref type="bibr">[18]</ref>.</p><p>In dimensions higher than three, this procedure is additionally complicated by the fact that there is no longer a normal vector to a surface, but a normal subspace of dimension IV -2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Interactive Interfaces</head><p>User alignment with maximal projection.</p><p>The plane in which the maximal projection is enforced can be oriented arbitrarily in the 3D graphics coordinates of the projection volume. This plane is exactly analogous to the tube y2 + z2 = r2 through which a space curve is forced to pass to align it with the x-axis of a 1D screen; the flat facets of a surface are effectively drawn through a hypertube z2 + w2 = r2 in 4D and thus forced into the z-y plane. But this z-y plane can be oriented with the screen coordinate system, in which case we are "walking" on the surface with gravity pulling us in the gaze direction, or it could be oriented with the floor, in which case the maximal projection is aligned with the gaze direction and we get the impression of walking on a treadmill oriented to the gravitational pull of the outside world as we sit at the computer console.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Extension</head><p>to haptic interfaces.</p><p>Given any 3D haptic interface, we can make the surface, in either screen or treadmill orientation, an impenetrable barrier or a cage constraining our motion to 2D. In static mode, one could keep the object fixed with the center maximally projected and allow the user to feel a limited continuous neighborhood of the center point, thus getting a tactile sense of the surface shape. In dynamic mode, one can assign a velocity and direction to the disp(lacement of the tactile probe from the center, thus empowering the user effectively to drive around the manifold while feeling the changes in shape and slope a short distance away from the central maximal projection point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Direct manipulation</head><p>characteristics.</p><p>The interface we have described is a generalization of a contextfree, direct-manipulation 3D rolling-ball orientation controller (see, e.g., <ref type="bibr">[9]</ref>) to arbitrary manifolds and dimensions. Properties such as non-commutativity of paths between points that are observed in this style of orientation control are transformed into the rich geometric properties and symmetry transformations of arbitrary topological spaces. In addition, just as a scene controlled by a rolling ball can move either in the same direction as the controller motion or in the opposite direction, we can traverse a manifold either way: walking forward to a new position on the manifold, or pushing the manifold in the controller direction.</p><p>Extension to three-manifolds and wands. The approach can be naturally extended to threemanifolds with winged faces, and so on. In contrast to the Maniview [7] approach, which uses an "insider's" view emphasizing discrete symmetry groups and face identifications by producing repeated copies of the manifold sewn to itself in the 3D viewing space, we would navigate specific embeddings of 3-manifolds in four or more dimensions. This approach would fit well with applications treating 3D scalar fields as 4D terrain elevation maps <ref type="bibr">[12]</ref>, and would be ideally adapted to 4D orientation control using three-degreeof-freedom control devices such as a wand <ref type="bibr">[3,</ref><ref type="bibr">11]</ref>. Natural applications of this technique occur not only in topology and volume visualization, but also in the Regge calculus approach to general relativity <ref type="bibr">[17]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Examples</head><p>We conclude with several visual examples. In practice, the concepts presented are strongly dependent on motion cues and the sense of direct manipulation, and so are difficult to represent with static images. l In <ref type="figure">Figure 8</ref>, we show a family of geodesic paths that would be taken by a walker exploring an ordinary 3D torus. a We display in <ref type="figure">Figure 9</ref> selected geodesic paths resulting from walking on the spun trefoil knotted sphere embedded in 4D, projected to 3D. Note how the paths follow the continuous surface in 4D despite the presence of self-intersecting surfaces in the 3D projection. The color coding on the 3D surface denotes the 4D depth from which it was projected, with blue near and red far in 4D.</p><p>l <ref type="figure">Figure 10</ref> shows a family of walker trajectories on the one-sided projective plane embedded in 4D and projected to 3D. The chosen projec;tion results in a surface that it is part way between a crosscap and Steiner's Roman surface.</p><p>Here 4D</p><p>depth is also denoted by color. One-sided surfaces present interesting logistical problems for pathtracing strategies, but the paths themselves are straightforward.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>GUNN,</head><p>C.</p><p>Discrete groups and visualization of three-dimensional manifolds. In Computer</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>In this paper, we have introduced a method for visualizing topological data structures by "walking" their geometry in a way that we feel has much potential for enhancing users' cognitive maps of a space. It is uniquely adapted to exploring high-dimensional mathematical data structures because of its ability to continuously flatten out the local neighborhood into the user's viewing space while maintaining a global context. For surfaces that appear self-intersecting in a particular projection, the method's locally-continuous traversal of the surface provides information interactively that is hidden even in a stereographic display. One can imagine many other applications, such as relational databases, 2D scalar fields, 3D scalar fields, and lattice models of general relativity. Furthermore, the method is ideally adaptable for newly-available haptic technologies, since it relies on local continuity that embodies an intrinsic model for force-feedback and tactile navigation. <ref type="figure">Figure 8</ref>: (a) Families of geodesic paths followed by the space walker algorithm on an ordinary torus in 3D. (b) The 3D paths on the torus with the surface removed. <ref type="figure">Figure 9</ref>: (a) Selected geodesic paths resulting from walking on the spun trefoil knotted sphere embedded in 4D. Note how the paths follow the continuous surface in 4D despite the presence of self-intersecting surfaces in this 3D projection. (b) The 3D paths with the surface removed. <ref type="figure">Figure 10</ref>: (a) Families of geodesic paths on a projective plane embedded in 4D and projected to 3D so that it is part way between a crosscap and Steiner's Roman surface. (b) The 3D paths on the projective plane with the surface removed.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>(</head><label></label><figDesc>See color plates, page </figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>(a) Controller motion d&gt; initiating transition from interest point 6 to the next interest point 5'. (b) Rolling the curve to present a maximal projection at the new interest point. (c) Detail of the geometry involved in the transition using a discrete curve tessellation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>One possible approach to maintaining maximal projection of a 3D space curve during the transition between facets, (a) Maximal projection of a tessellated section of a 3D space curve is aligned so that the triangle(&amp;, x'r , &amp;)  lies in the plane defined by the screen and the gaze direction. (b) Rocking @' into the screen plane by rotating around x'z -21. (c) Rotate in screen plane to achieve maximal projection of the segment containing 5'. S'(s) x Z"(S) B(s) = llx"(S) x ft'(s)II lqs) = 6(s) x r?(s) .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Facet</head><label></label><figDesc></figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Surface facet with interest point @ maximally projected onto a 2D screen from an implicit 3D graphics space behind the screen.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 5 :</head><label>5</label><figDesc>Flattened facet-to-facet transition. 2D screen coordinate system with triangle coordinates (Zu,~r,&amp;), compute each normal riur = (-(yrya), (zr -x0)), etc., and each t = risr .(&amp;-P)/iisr.dG, etc.; if all positive t's are greater than one, $' = P+&amp; lies in the face; otherwi:e the minjmum+positive t gives the intersection point Pedge = P + tdx.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">lo'i'o-x%5/95 $4.00 0 1995 IEEE Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)1070-2385/95 $10.00 © 1995 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)1070-2385/95 $10.00 © 1995 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>This work was supported in part by NSF grant IRI-91-06389; addition equipment support was provided by NSF grants CDA-92-23008 and CDA 93-03189. We thank Jiping Sha for several informative conversations.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Bryson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Spacetime</surname></persName>
		</author>
		<title level="m">Proceedings of Visualization &apos;9</title>
		<meeting>Visualization &apos;9</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page" from="291" to="298" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carter</forename></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">S</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">How Surfaces Intersect in Space. World Scientific</title>
		<imprint>
			<date type="published" when="1993" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Virtual reality performance for virtual geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">A</forename><surname>Cross</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;94</title>
		<meeting>Visualization &apos;94</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="156" to="163" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">A Treatise on the Differential Geometry of Curves and Surfaces</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">P</forename><surname>Eisenhart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1960" />
			<publisher>Dover</publisher>
			<biblScope unit="page">1909</biblScope>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">K</forename><surname>Francis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Picturebook</surname></persName>
		</author>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m">GRAY, A. Modern Differential Geometry of</title>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Surfaces</forename><surname>Curves</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1993" />
			<publisher>CRC Press, Inc</publisher>
			<pubPlace>Boca Raton, FL</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH 1993; Annual Conference Series</title>
		<meeting>SIGGRAPH 1993; Annual Conference Series</meeting>
		<imprint>
			<publisher>ACM</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="255" to="262" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">A construction for computer visualization of certain complex curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Notices of the Amer.Math.Soc</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="page" from="1156" to="1163" />
			<date type="published" when="1994-12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">The rolling ball</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Gems</title>
		<editor>D. Kirk</editor>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="volume">111</biblScope>
			<biblScope unit="page" from="51" to="60" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Geometry for n-dimensional graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Gems IV, P. Heckbert</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="149" to="170" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Rotations for n-dimensional graphics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Graphics Gems V, A. Paeth</title>
		<meeting><address><addrLine>Cambridge, MA</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="55" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Fourdimensional views of 3d scalar fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Heng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Visualization &apos;92</title>
		<meeting>Visualization &apos;92</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="84" to="91" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Illuminating the fourth dimension</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Heng</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics and Applications</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="54" to="62" />
			<date type="published" when="1992-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Interactive methods for visualizable geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">J</forename><surname>Hanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">K</forename><surname>Francis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="73" to="83" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">A portable 4D geometry viewer written in OpenGL/Motif, available by anonymous ftp from geom</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Hanson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Meshview</surname></persName>
		</author>
		<imprint/>
	</monogr>
	<note>umn.edu</note>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Geomview: An interactive geometry viewer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Phillips</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Levy</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Munzner</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Notices of the Amer. Math. Society</title>
		<imprint>
			<biblScope unit="volume">40</biblScope>
			<biblScope unit="page" from="985" to="988" />
			<date type="published" when="1993-10" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">General relativity without coordinates</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Regge</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nuovo Cimento</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="558" to="571" />
			<date type="published" when="1961" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Animating rotation with quaternion curves</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Shoemake</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of SIGGRAPH</title>
		<meeting>SIGGRAPH</meeting>
		<imprint>
			<date type="published" when="1985" />
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="page" from="245" to="254" />
		</imprint>
	</monogr>
	<note>Computer Graphics</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">Spatial mental models. The Psychology of Learning and Motivation</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Tversky</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1991" />
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="page" from="109" to="145" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
