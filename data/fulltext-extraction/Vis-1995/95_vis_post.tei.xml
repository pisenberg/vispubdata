<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /home/pisenberg/grobid/grobid-0.6.1/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Iconic Techniques for Feature Visualization</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frank</forename><forename type="middle">J</forename><surname>Post</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theo</forename><surname>Van Walsum</surname></persName>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frits</forename><forename type="middle">H</forename><surname>Post</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">Delft University of Technology</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Deborah Silver</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Iconic Techniques for Feature Visualization</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.6.1" ident="GROBID" when="2021-02-19T20:32+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>scientific visualization</term>
					<term>feature extraction</term>
					<term>iconic visualization</term>
					<term>attribute calculation</term>
				</keywords>
			</textClass>
			<abstract>
				<p>This paper presents a conceptual framework and a process model forfeature extraction and iconic visualization. Feature extraction is viewed as a process of data abstraction, which can proceed in multiple stages and corresponding data abstraction levels. The features are represented by attribute sets, which play a key role in the visualization process. Icons are symbolic parametric objects, designed as visual representations of features. The attributes are mapped to the parameters (or degrees of freedom) of an icon. We describe some generic techniques to generate attribute sets, such as volume integrals and medial axis transforms. A simple butpowerjul modeling language was developed to create icons, and to link the attributes to the icon parameters. We present illustrativeexamples of iconic visualization created with the techniques described, showing the effectiveness of this approach.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Visualization techniques provide tools for obtaining information from data, ranging from simple presentation techniques, that just display the data, to sophisticated techniques that extract and display the information automatically. In this paper, we present a visualization approach to create abstract visualizations of data sets. This approach entails the extraction of features and the use of icons for data visualization.</p><p>An icon as we use it, is a geometric object with parametric geometry and visual attributes that can be arbitrarily *Faculty of Technical Mathematics and lnformatics, Julianalaan 132, 2628 BL Delft, The Netherlands **Dept. of Electrical and Computer Engineering, Laboratory for Visiometrics and Modeling, P.O. Box 1390, Piscataway, NJ 088551390, USA linked to dam quantities. The function of an icon is to act as a symbolic representation, which shows essential characteristics or features of a data domain to which the icon refers. Reduction to essentials is the main purpose of the use of icons: to replace the original data by a symbolic representation that is more clear, compact, and meaningful, and which is related to the physical concepts of an application [ 151.</p><p>Icons have been studied extensively in many fields, such as in logic, the theory of signs or semiotics <ref type="bibr" target="#b8">[9]</ref>, and in pictorial information systems <ref type="bibr">[5]</ref>. An attempt to relate the meaning of icons for visualization to classical sign theory has recently been made by <ref type="bibr">Hesselink and Delmarcelle [ 131.</ref> In scientific visualization, the icon concept is related to the Abstract Visualization Objects [ 121, and Parametric Graphic Objects used for computational steering <ref type="bibr">[24]</ref>. The term 'glyph' has also been frequently used <ref type="bibr">[16]</ref>, which is roughly comparable to the term icon as it is used here.</p><p>Early applications of iconic visualization can be found in statistical data visualization, such as Kleiner-Hartigan trees <ref type="bibr">[4]</ref> and <ref type="bibr">Chemoff faces [6]</ref>. These techniques are used for high-dimensional data that are defined in an abstract data space, and not in Euclidean physical space.</p><p>Examples of iconic representations in scientific visualization are glyphs used by <ref type="bibr">Globus et al.</ref> [ 1 l] to indicate location and type of critical points in a vector field, and cylindrical objects to visualize vortex tubes extracted from flow fields <ref type="bibr">[2,</ref><ref type="bibr">22]</ref>. Ellipsoids have also been used as icons for feature visualization <ref type="bibr">[17,</ref><ref type="bibr">19,</ref><ref type="bibr">251</ref>. Our purpose in this paper is to demonstrate the generation and use of macroscopic icons for visualization of features and feature attributes. Features can be represented by attribute sets. Icons provide a natural way for their visualization, by linking the attributes to their parameters.</p><p>We discuss iconic representations in Section 2. Then we discuss how a visualization process model can be adapted for feature extraction and iconic visualization, and how feature extraction can be represented as a multi-level process of data abstraction (Section 3). Then we show in Sec-(See color plates, page CP-34 tion 4 some examples of feature attribute calculation. In Section 5, a simple icon specification and attribute mapping technique is described, and in Section 6 the use of these techniques is demonstrated with some applications of iconic feature visualization. In Section 7, we present conclusions and directions for further research.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Iconic representation</head><p>The general meaning of the term 'icon' is a conventional pictorial representation, or a sign sharing a property with the thing it represents. We will not formally define the concept here, but use a simple definition that suits our purpose, and briefly review some aspects of iconic representations and the role icons can play in scientific visualization, especially in feature visualization.</p><p>A first important aspect is the number of degrees of freedom, or parameters, that can be varied for the icon, and separately bound to data quantities. The parameters can be divided into three groups: spatial parameters (position and orientation), geometric parameters which control the shape of the object, and descriptive parameters such as color, texture, transparency, or sound.</p><p>If the number of parameters is indefinite, this means that the icon is a (quasi-)continuous geometric object: a curve, surface, or solid. For example, a streamline represents a large, indeterminate number of sample points in a velocity field. By contrast, an arrow icon in a 3D vector field has only six spatial and geometric parameters: position, direction, and length. Examples of geometric objects are iso-surfaces, streamlines, stream surfaces, tensor field lines or hyper-streamlines <ref type="bibr">[13]</ref>, skeletons <ref type="bibr">[20]</ref>, and vortex tubes r2,m</p><p>The reference domain is the spatio-temporal area for which the attribute set has been calculated, and that is represented by a single icon. Local means a point and its infinitesimal environment, as represented by gradients. Intermediate is the level of a sub-volume, at a scale between local and global, which can apply to features or selections <ref type="bibr">[23]</ref>. An icon that can be used at different levels is the ellipsoid. This object can be used for visualization of the eigenvalues and eigenvector directions of second order tensors <ref type="bibr">[lo]</ref>. It has been applied to visualize stress tensors [ 121, but it can also be used for fitting an object to an irregular-shaped area. The spatial distribution of an area is characterized by the tensor of second moments, which is visualized by an ellipsoid. The icon then shows a simplified representation of the shape of the area <ref type="bibr">[ 191,</ref> The display domain is the space in which the iconic objects exist, which is not the display screen, but the graphical object space. Time-dependent attribute bindings are considered as a separate dimension, shown by animation of changing shape or other attributes reflecting parameter variations.</p><p>The dhppluy scale refers to relative size. Micro-icons are discrete, but not quite individual objects; they can only exist in large quantities, as elements of dot or line patterns or texture elements; meaning emerges from them only in large numbers. <ref type="bibr">'</ref> A last aspect is the use of icons for interaction. A passive icon is used for display purposes only. Position and appearance are dictated by the data. An icon that can be interactively positioned at a chosen reference point can be used as a probe <ref type="bibr">[14]</ref>. If the data binding is in two directions,, icons may be used to control model parameters in interactive steering of simulations <ref type="bibr">[24]</ref>. 3 A process model for multilevel iconic feature visualization</p><p>For the: iconic visualization process, a process model, based on lthe visualization pipeline <ref type="bibr">[12]</ref>, can be used (see <ref type="figure" target="#fig_0">Figure 1</ref>). The goal of the iconic representation is to get a 'summarized' visualization, therefore the first step in the iconic visualization process is to find items in the dataset that need to be represented in the summary, i.e. data that are important or relevant in some respect (features). Simultaneously, or in the next processing step, characteristic parameter values of the features (attributes) are calculated. This is what we call feature extraction and attribute calculation. The result of this feature extraction is a set of attribute values that characterize the feature. This is called an attribute set; each characteristic value is an attribute of the feature. As the attribute set represents the data at another, higher level, this is a process of data-abstraction.</p><p>The feature extraction and attribute calculation stage can be implemented in different ways. Special algorithms can be developed to extract specific features from data and calculate the attribute sets <ref type="bibr">[2,</ref><ref type="bibr">22]</ref>. An alternative approach is to use general selection and segmentation techniques to identify features in the data <ref type="bibr">[ 19,</ref><ref type="bibr">20,</ref><ref type="bibr">231</ref>. Attributes can be calculated with volume integrals over the selected region, or image processing techniques such as skeleton extraction.</p><p>In the iconic mapping stage, the attributes are mapped onto the parameters of icons. The purpose of this mapping is to visualize features by objects, that display the characteristics of a feature in a clear and understandable way: there should be some similarity relation between the features and their iconic representations. The way the attributes are mapped onto the icon's parameters determines the appearance of the icon.</p><p>One important consequence of this process is a vast data reduction. The original data field is replaced by a usually small number of attribute sets, visualized by simple geometric objects. The reduction is caused by the data selection and abstraction, and is necessary for understanding the information inherent in very large data sets.</p><p>The size of a,typical CFD data set will be in the order of lo-100 Mbytes per time step. For 100 features of 20 data items, the feature/attribute dataset will be in the order of 10 Kbytes. This attribute set represents one specific view of the data set, which may for its purpose replace the original data set, and thus means a reduction by a factor of at least 1000. An icon will be in the order of 100s of polygons, so the total visualization may be about lo4 to lo5 polygons, which can be displayed by a graphics workstation in real time.</p><p>The size of the intermediate attribute data set is very small, and this provides an excellent opportunity for distributed processing. The computationally and data intensive first part of the process can be executed on a remote highperformance computer, and the results can be easily transferred to the visualization workstation by a low-bandwidth link.</p><p>The abstraction process can be applied recursively, resulting in a series of attribute sets, each representing the data at a different level of abstraction. The data at each level of abstraction can be visualized by an icon. The level of abstraction of the symbolic representation increases if the level of abstraction of the data increases: a more abstract data representation gives a more abstract visual representa- tion. Also, the semantics of an attribute set can be enriched in the process of abstraction. This is depicted in <ref type="figure" target="#fig_1">Figure 2</ref>. The upper line shows the multilevel abstraction process, of which data reduction is an important side-effect. At each abstraction level, the attribute sets can be mapped onto symbolic representations (icons), yielding an iconic visualization of the data. Visualization mapping without a distinct abstraction is called direct mapping (e.g. arrow plot, isosurface). Mappings with one or more levels of abstraction are called indirect mappings. The lower pictures show examples of visualizations that correspond to the data abstraction process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Attributes</head><p>The set of characteristic values (the attribute set) can consist of a combination of scalars, vectors, and tensors. Attributescan be classified by type of information they contain. Geometric/morphological attributes, such as width, height, volume, centroid, and shape, describe the spatial properties of a feature. Data attributes, such as minima and maxima, describe the properties of the data over a feature. Combined morphological/data attributes, such as center of gravity in a density field, describe both spatial and data properties of a feature.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Attribute calculation</head><p>The number of techniques to generate attribute sets is unlimited. In this description of attribute calculation we restrict ourselves to three generic techniques: integration, medial axis transform and interpolation.</p><p>A feature in a dataset may be larger than a single grid position or cell. We can use a selection technique <ref type="bibr">[23]</ref> or a special algorithm to extract a region from the dataset that 'contains' the feature. In that case, relevant attributes such as volume, center, mean velocity and moments can be calculated using volume integrals. These volume integrals are calculated with standard quadrature techniques. We have implemented algorithms to calculate volume integrals of selected sub-volumes of grid cells. Examples of the volume attributes calculated are centroid, volume and second-order moments of spatial distribution.</p><p>Skeletal representations of objects are fundamental to the field of mathematical morphology [ 181. These representations depict the object as a line segment in two or three dimensions (a low-order approximation) equivalent to using a stick figure to represent a person. They are useful for feature time tracking [22], depicting movement and overall shape change. Furthermore, these approximations can help in reduced model formation.</p><p>Therefore, medial axis transform is a relevant method to generate attribute sets for selected regions in the data. The attribute sets then contain data on the medial axis. Because the field is continuous, both geometric (utilizing boundary information) and numeric methods can be used to generate a skeleton. Geometric techniques generally are thinning operations <ref type="bibr">[18]</ref>, while numeric methods use tracing techniques <ref type="bibr">[2,</ref><ref type="bibr">22]</ref>. Path lines and vector directions can be used to guide the 'medial axis' search.</p><p>Interpolation can also be considered as a method to extract attributes. For a given point in the dataset, the data value is interpolated. Differential properties at that location can be calculated as well, such as the velocity gradient tensor in a velocity field. The resulting attribute set represents local data values, and can be used if the feature to be visualized is restricted to a position in a dataset, such as a critical point.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Further abstraction of attribute sets</head><p>In the previous sections techniques have been described to extract attribute sets from datasets. It is possible, however, to make further abstractions of attribute sets in order to reduce the size or enrich the semantics of the attribute sets. We illustrate this with an ellipse fitting technique.</p><p>The ellipse or ellipsoid is a shape generic to almost all simulations. Furthermore, elliptical boundaries are an exact solution for a class of 2D incompressible flows, and they can be easily tracked over time. These regions can be well approximated by physical-space moments (which can be used to classify shapes, as well as visualize them). For example, by isolating regions of the field and then computing the second moments, essential information at a first level of quantification is obtained. The second moments define a tensor, which can be associated with an oriented ellipsoid. Even when the topology of the features is inadequately represented by ellipsoids, the fitted ellipsoid still provides a sense of position, orientation, and relative weight to the region <ref type="bibr">[19]</ref>. Higher-order moments can determine the 'goodness' of the fit for classification and are also useful in pattern recognition. In addition, they can define additional parameters with which to 'deform' the ellipse to a better fitting icon.</p><p>If the centroid and a covariance matrix have been generated as a representation of the shape of an area, an ellipsoid can be directly constructed from these values, but the construction may be easier if the eigenvalues and eigenvectors of the covariance matrix are given. The same holds for the covariance matrix that results if a vector field is integrated over a volume. The matrix can be diagonalized, and the variances can be transformed to standard deviations. The standard deviation can then be mapped onto the length of the corresponding ellipsoid axis, and the directions of the ellipsoid axes are determined by the diagonalization matrix. These values are easier to interpret than a covariance matrix. Abstractions like these can be performed in a number of ways. These operations can be simple linear functions, but can also be an iterative diagonalization process such as the 'Cyclic Jacobi' algorithm, or tensor transformations.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Modeling of icons</head><p>The number of different types of icons that can be used for feature visualization is unlimited. Therefore, for iconic visualization, we needs either a large set of icons, sufficient for the visualization of features for a specific application area, or an icon design system, with which researchers can develop their own iconic representation of features.</p><p>The development of a sophisticated interactive icon design system is beyond the scope of our work. Also, we did not generate a large set of icons for a specific application area. However, in order to facilitate the construction of icons, we 'developed a simple but powerful icon modeling language, ,with which we were able to generate a set of very different icons. With this language, geometrical primitives can be defined and the parameters of these primitives can be bound to the attribute set. The geometric primitives are constructed with this language in three steps: 1. A 2D contour in the 2-y plane is designed and colors or color-maps are bound to this contour. This contour can consist of line-segments or parametric functions. The c:oordinates of the line-segments, the constants of the parametric functions and the colors or color-maps can be bound to the attribute set.    2. This contour is extended to a 3D object by performing a rotation sweep around the x or y axis, performing a translation sweep by moving the contour along an axis over a given length, or performing a general sweep along a arbitrary 3D trajectory <ref type="bibr">[3]</ref>. The parameters of the function that defines the 3D trajectory can also be bound to the attribute set.</p><p>3. This 3D object is scaled, translated, rotated or deformed. In this way the objects can be placed at a specific location in the dataset or at their relative location in a composite object. The values defining the rotation, translation, scaling or deformation are also bound to the attribute set.</p><p>For each step in the construction of an icon, the language provides a set of commands. All bindings to the attribute set are in fact arbitrary parametric functions, including step functions. As all geometric and descriptive parameters of the icons can be bound to the attributes in this way, a wide range of icons can be generated with this description language. <ref type="figure" target="#fig_2">Figure 3</ref> shows how an arrow is constructed. The parameters of the arrow are the base position in space (pn,pY,pZ), the length I, and two angles (a, ,f3). First a contour is drawn in the t-y plane. The base of the arrow is drawn at (0, 0), the tip at (l,O). This contour is rotationswept around the x-axis, scaled by 1 in the 2 direction, rotated around the y-axis by a, rotated around the z-axis by /3 and finally translated over <ref type="bibr">(p, , p, , pZ)</ref> .</p><p>A collection of icons, constructed with our modeling language is shown in <ref type="figure" target="#fig_3">Figure 4</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Implementation and examples</head><p>The techniques described in Section 4 and 5 have been implemented as modules in AVS [ 11. There are modules to calculate attribute sets, by integration over a volume or interpolation, and there are modules for further abstraction of the attribute sets, e.g. by ellipsoid fitting or interpolation between attribute sets. The iconic mapping is implemented in one module, that contains all icons that we designed. Most visualizations in this section are created using these modules. <ref type="figure" target="#fig_4">Figure 5</ref> is a 643 subdomain of a 5123 turbulence simulation. The variable being visualized is vorticity magnitude. The isosurfaces at the left are segmentations resulting from a threshold of 26% of the maximum. Each region is partitioned and an ellipsoid is fitted about the region by cakulating the second moments (see Section 4.1). In the left image, the isosurfaces are shown. The right image shows the ellipsoids. The ellipsoids demonstrate a reduction in complexity   as compared to the isosurfaces in addition to providing meaningful information in a simple format. Note that the aspect ratio of the ellipsoids are clearly evident, enabling the scientist to identify flat or 'sheet-like' structures.</p><p>In <ref type="figure" target="#fig_5">Figure 6</ref>, a spiraling flow in a backward facing step geometry is visualized. In order to create this visualization, we selected regions with a high normalized helicity density, and calculated streamlines through these regions. The regions with the high normalized helicity density are visualized with ellipsoid icons fitted around these regions. For the streamline visualization, a series of tube-like icons is used. Each tube-like icon represents two positions and two directions of the stream line. In order to reduce the number of icons for display, the number of positions along the streamline have been reduced, prior to mapping the positions to icons. It appeared that, although many positions along the streamline must be generated in the streamline integration process, only a small number is necessary to adequately visualize the streamline. The radius of the stream tubes is inversely proportional to the square root of the velocity magnitude. In this way, an approximation of a constantflux stream tube is generated, and the velocity magnitude can be derived from the tube diameter. The tube is colored with the value of the pressure. The combined visualization of the regions of helicity density and the stream tubes gives a summarized image of this flow.</p><p>In <ref type="figure" target="#fig_6">Figure 7</ref>, an atmospheric flow is visualized. The data comes from a large-eddy simulation of a chemical reaction in an atmospheric flow. The goal of the visualization is to show the average velocity in areas where the reaction speed is high. In these areas, NO2 is formed, and the researchers wanted to know whether NO2 would flow downwards to the earth, or move upwards and disperse in the atmosphere. Therefore, we selected the regions with a high reaction speed (the colored crosses), and visualized the average velocity and the velocity distribution for each region. The average velocity is visualized with a large arrow. The variance/covariance matrix of the velocity (velocity distribution) over each region is visualized with an ellipsoid. From the image, it is clear that the average velocity is upward in those regions where the reaction speed is high. Additionally, ellipsoids were used to visualize the areas with high reaction speed (grey ellipsoid icon at the base of each arrow). This example clearly shows the advantage of using icons to visualize aggregate attributes over a region.</p><p>In <ref type="figure" target="#fig_7">Figure 8</ref>, we show another iconic visualization example. In this case, we have modeled a complex icon [ 141 to visualize velocity and velocity gradients along a streamline in a fluid flow around a blunt fin. The creation of such a complex icon appeared to be relatively easy with our icon modeling language.</p><p>The last example is shown in <ref type="figure" target="#fig_8">Figure 9</ref>. The image is a zoomed-in part of a vorticity dataset (252x60~60). Two isosurfaces of vorticity magnitude are shown (the transparent tube-like structures). The skeletons are found using a predictor-corrector scheme <ref type="bibr">[2]</ref>. The direction of the skeleton is determined by the vorticity vector field, and the pressure is used as the 'corrector' variable. A purely geometric skeleton can be generated by erosion of a 3D region, using medial axis algorithms from computer vision [ 181. As datasets become larger and more complex, feature extraction and iconic representations enable the scientist to quickly focus on important regions and cogently assimilate the immense amount of information. Many different types of iconification techniques already exist in the literature.</p><p>In this paper, we have presented a framework to classify existing iconification techniques and provided building blocks for creating new levels of icons and abstractions. We showed how volume integrals and other techniques can be used to calculate attribute sets for features, and how attribute sets themselves can be the subject of additional feature extraction techniques. These techniques, combined with an icon modeling language and a mapping mechanism to map attributes on icon parameters, appeared to be very appropriate to visualize features with icons. The data abstraction also results in a vast data reduction, with good opportunities for distributed processing.</p><p>The area of feature extraction and iconic visualization is still young and full of interesting research opportunities. Our research in this area will be directed towards new feature extraction criteria and algorithms, use of icons in interactive exploration, new icon designs, and interactive facilities for icon design. An interesting open issue remains the similarity relation between icon shape and the physical features, which is based on the cognitive process of attaching meaning to symbolic objects.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Iconic visualization pipeline.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Multilevel feature extraction.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Construction of 3D arrow: 2D contour, 3D object and parts of the code that implement this icon.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 :</head><label>4</label><figDesc>Example icons: four ellipsoid icons, an average velocity arrow with velocity distribution ellipsoid, an interpolated tube through five positions, a velocity gradient probe, and an 18 parameter 3D Chemoff face.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 :</head><label>5</label><figDesc>Ellipsoid fitting around regions of large vorticity magnitude.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 :</head><label>6</label><figDesc>Stream tubes through regions with high normalized helicity density.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 7 :</head><label>7</label><figDesc>Average velocity (arrow icon) and velocity distribution (ellipsoid icon) for regions with high reaction speed.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 8 :</head><label>8</label><figDesc>Flow probes [ 141 along a streamline in a blunt fin dataset.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 9 :</head><label>9</label><figDesc>Vortex cores reduced to a skeleton representation 7 Conclusions and research directions</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)1070-2385/95 $10.00 © 1995 IEEE</note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot">Proceedings of the 6th IEEE Visualization Conference(VISUALIZATION '95)</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>The flow dataset of the backward facing step ( <ref type="figure">Figure 6</ref>) is provided by Guus Segal (Department of Technical Mathematics, Delft University of Technology) and the atmospheric flow dataset <ref type="figure">(Figure 7)</ref> by Ivo Bouwmans and John Meeder (Department of Fluid Dynamics, Faculty of Mechanical Engineering, Delft University of Technology).</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Advanced Visual Systems Inc. AVS User&apos;s Guide, Release 4</title>
		<imprint>
			<date type="published" when="1992-05" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Vortex tubes in turbulent flows</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Banks</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Singer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Ksualization &apos;94</title>
		<editor>R. D. Bergeron and A. E. Kaufman</editor>
		<meeting>Ksualization &apos;94<address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="132" to="139" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Display of profiled sweep objects</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">F</forename><surname>Bronsvoort</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">R</forename><surname>Van Nieuwenhuizen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Visual Computer</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="147" to="157" />
			<date type="published" when="1989-06" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Graphical Methodsfor Data Analysis</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">M</forename><surname>Chambers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">S</forename><surname>Cleveland</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">A</forename><surname>Tukey</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
		</imprint>
		<respStmt>
			<orgName>Wadsworth International Group, Wadsworth International Group</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Principles of Pictoral Information Systems Design</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S.-K</forename><surname>Chang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1989" />
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Using faces to represent points in kdimensional space graphically</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Chemoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the American Statistical Association</title>
		<imprint>
			<biblScope unit="volume">68</biblScope>
			<biblScope unit="issue">342</biblScope>
			<biblScope unit="page" from="366" to="368" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Visualization of injection molding</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Ellson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Cox</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Simulation</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="18" to="188" />
			<date type="published" when="1988" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Issues in the development of 3D icons</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Erbacher</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grinstein</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Visualization in Scienttfic Computing</title>
		<editor>M. Gobel, H. Mtiller, and B. Urban</editor>
		<meeting><address><addrLine>Wien</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1995" />
			<biblScope unit="page" from="109" to="123" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">An introduction to the Philosophy of Charles S Pierce</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Feibleman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969" />
			<publisher>MIT Press</publisher>
			<pubPlace>Cambridge</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Foundations of Solid Mechanics</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><forename type="middle">C</forename><surname>Fung</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1965" />
			<publisher>Prentice-Hall</publisher>
			<pubPlace>Englewood Cliffs</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A tool for visualizing the topology of three-dimensional vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Globus</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Levit</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>La&amp;ski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization &apos;91</title>
		<editor>G. M. Nielson and L. Rosenblum</editor>
		<meeting>Visualization &apos;91<address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="33" to="40" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Visualization idioms: A conceptual model for scientific visualization systems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Haber</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">A</forename><surname>Mcnabb</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scientzfk Wualization: advances and challenges</title>
		<editor>L. Rosenblum et al.</editor>
		<meeting><address><addrLine>Los Alamitos, California; London</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1990" />
			<biblScope unit="page" from="419" to="433" />
		</imprint>
	</monogr>
	<note>Ksualization in Scient@c Computing</note>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">A probe for local flow field visualization</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">C</forename><surname>De Leeuw</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Ksualization &apos;93</title>
		<editor>G. M. Nielson and D. Bergeron</editor>
		<meeting>Ksualization &apos;93<address><addrLine>Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1993" />
			<biblScope unit="page" from="39" to="45" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Visual representation of vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ScientiJk Visualization: advances and challenges</title>
		<editor>L. Rosenblum et al.</editor>
		<meeting><address><addrLine>London</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1994" />
			<biblScope unit="page" from="367" to="390" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Glyphmaker creating customized visualizations of complex data</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ribarsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Ayers</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Eble</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Mukherja</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="57" to="64" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Visualizing fe,atures and tracking their evolution</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Cao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Computer</title>
		<imprint>
			<biblScope unit="volume">27</biblScope>
			<biblScope unit="issue">7</biblScope>
			<biblScope unit="page" from="20" to="27" />
			<date type="published" when="1994-07" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
		<title level="m" type="main">Image Analysis and Mathematical Morphology</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Senra</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1988" />
			<publisher>Academic Press</publisher>
			<pubPlace>New York</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Ellipsoidal quantification of evolving phenomena</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Zabusky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><surname>Femandez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Samtaney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Scienhjic Ksualization of Natural Phenomena</title>
		<editor>N. M. Patrikalakis</editor>
		<meeting><address><addrLine>Tokyo</addrLine></address></meeting>
		<imprint>
			<publisher>Springer Verlag</publisher>
			<date type="published" when="1991" />
			<biblScope unit="page" from="573" to="588" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Quantifying visualizations for reduced modeling in nonlinear science: Extracting strnctnres from data sets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Silver</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">J</forename><surname>Zabusky</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Communication and Image Representation</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="46" to="61" />
			<date type="published" when="1993-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Interactive data exploration with a supercomputer</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Grinstein</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">D</forename><surname>Bergeron</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings Visualization &apos;91</title>
		<editor>G. M. Nielson and L. Rosenblum</editor>
		<meeting>Visualization &apos;91</meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">An algorithm for space recognition and time tracking of vorticity tubes in turbulence</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Villasenor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Vincent</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CVGIP: Image Understanding</title>
		<imprint>
			<biblScope unit="volume">55</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="27" to="35" />
			<date type="published" when="1992-03" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Selective visualization of vector fields</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Van Walsum</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><forename type="middle">H</forename><surname>Post</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer Graphics Forum</title>
		<imprint>
			<biblScope unit="volume">13</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="112" to="128" />
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Case study: Visualizing classical problems in CFD</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">J</forename><surname>Van Wijk</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Van Liere</surname></persName>
		</author>
		<idno>no. CS-R9448</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings Ksualization &apos;92</title>
		<editor>A. E. Kaufman and G. M. Nielson</editor>
		<meeting>Ksualization &apos;92<address><addrLine>Amsterdam; Los Alamitos</addrLine></address></meeting>
		<imprint>
			<publisher>IEEE Computer Society Press</publisher>
			<date type="published" when="1992" />
			<biblScope unit="page" from="436" to="440" />
		</imprint>
		<respStmt>
			<orgName>Centre for Mathematics and Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report Report</note>
	<note>An environment for computational steering</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
